{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2","program":"/Users/william/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","indexmap","/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"serde\"","--cfg","feature=\"serde-1\"","-C","metadata=503a0013bd190544","-C","extra-filename=-503a0013bd190544","--out-dir","/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/deps","-L","dependency=/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/deps","--extern","serde=/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/deps/libserde-785a125045059d57.rmeta","--cap-lints","allow","--cfg","has_std","--error-format=json","--sysroot","/Users/william/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/deps/libindexmap-503a0013bd190544.rmeta"},"prelude":{"crate_id":{"name":"indexmap","disambiguator":[16414611579245089625,9983166136408059375]},"crate_root":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src","external_crates":[{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9606925100264359032,12531971508192552739]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17187672715010298091,8744209918715530773]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15887813922859449425,14244592339943736272]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6807992320260993406,9894278173044996986]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17858480672457447890,14967053264370168355]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1320274826319993033,12580344779796895143]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5371179889215182298,2673167689761608764]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3578723082929147264,11802062942665263000]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[12064590987128239469,16657797211233097221]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[9585105124653066898,10355053755662228341]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[168442059660610991,16640229565854074068]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13744766486950275495,4356178648036430150]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4695427281829409190,666464352563047434]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[825342386373460966,7285997970727292365]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/serde.rs","num":15,"id":{"name":"serde","disambiguator":[18106992499485846046,12455420591627982638]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/serde.rs","num":16,"id":{"name":"serde_derive","disambiguator":[912133203969685612,5297759319372082410]}}],"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":0,"byte_end":4467,"line_start":1,"line_end":164,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":24},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":15574,"byte_end":15585,"line_start":9,"line_end":9,"column_start":23,"column_end":34},"alias_span":null,"name":"MutableKeys","value":"","parent":{"krate":0,"index":148}},{"kind":"Use","ref_id":{"krate":0,"index":10},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":2894,"byte_end":2904,"line_start":90,"line_end":90,"column_start":21,"column_end":31},"alias_span":null,"name":"Equivalent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1150},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":2919,"byte_end":2927,"line_start":91,"line_end":91,"column_start":14,"column_end":22},"alias_span":null,"name":"IndexMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1221},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":2942,"byte_end":2950,"line_start":92,"line_end":92,"column_start":14,"column_end":22},"alias_span":null,"name":"IndexSet","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":0,"byte_end":4467,"line_start":1,"line_end":164,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":8},{"krate":0,"index":17},{"krate":0,"index":43},{"krate":0,"index":137},{"krate":0,"index":148},{"krate":0,"index":731},{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1251},{"krate":0,"index":1256},{"krate":0,"index":1254},{"krate":0,"index":1115},{"krate":0,"index":1117},{"krate":0,"index":1119},{"krate":0,"index":1257},{"krate":0,"index":1271},{"krate":0,"index":1267},{"krate":0,"index":1263},{"krate":0,"index":1121},{"krate":0,"index":1132}],"decl_id":null,"docs":" [`IndexMap`] is a hash table where the iteration order of the key-value\n pairs is independent of the hash values of the keys.","sig":null,"attributes":[{"value":"deny(unsafe_code)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":0,"byte_end":21,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"! [`IndexMap`] is a hash table where the iteration order of the key-value","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":113,"byte_end":188,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"! pairs is independent of the hash values of the keys.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":189,"byte_end":245,"line_start":6,"line_end":6,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":246,"byte_end":249,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! [`IndexSet`] is a corresponding hash set using the same implementation and","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":250,"byte_end":328,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"! with similar properties.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":329,"byte_end":357,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":358,"byte_end":361,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! [`IndexMap`]: map/struct.IndexMap.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":362,"byte_end":404,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"! [`IndexSet`]: set/struct.IndexSet.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":405,"byte_end":447,"line_start":12,"line_end":12,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":448,"byte_end":451,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":452,"byte_end":455,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! ### Feature Highlights","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":456,"byte_end":482,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":483,"byte_end":486,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! [`IndexMap`] and [`IndexSet`] are drop-in compatible with the std `HashMap`","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":487,"byte_end":566,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"! and `HashSet`, but they also have some features of note:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":567,"byte_end":627,"line_start":18,"line_end":18,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":628,"byte_end":631,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! - The ordering semantics (see their documentation for details)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":632,"byte_end":698,"line_start":20,"line_end":20,"column_start":1,"column_end":67}},{"value":"! - Sorting methods and the [`.pop()`][IndexMap::pop] methods.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":699,"byte_end":763,"line_start":21,"line_end":21,"column_start":1,"column_end":65}},{"value":"! - The [`Equivalent`] trait, which offers more flexible equality definitions","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":764,"byte_end":843,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"!   between borrowed and owned versions of keys.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":844,"byte_end":894,"line_start":23,"line_end":23,"column_start":1,"column_end":51}},{"value":"! - The [`MutableKeys`][map::MutableKeys] trait, which gives opt-in mutable","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":895,"byte_end":972,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"!   access to hash map keys.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":973,"byte_end":1003,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1004,"byte_end":1007,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! ### Rust Version","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1008,"byte_end":1028,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1029,"byte_end":1032,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! This version of indexmap requires Rust 1.18 or later, or 1.30+ for","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1033,"byte_end":1103,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"! development builds, and Rust 1.36+ for using with `alloc` (without `std`),","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1104,"byte_end":1182,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"! see below.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1183,"byte_end":1197,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1198,"byte_end":1201,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! The indexmap 1.x release series will use a carefully considered version","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1202,"byte_end":1277,"line_start":33,"line_end":33,"column_start":1,"column_end":76}},{"value":"! upgrade policy, where in a later 1.x version, we will raise the minimum","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1278,"byte_end":1353,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"! required Rust version.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1354,"byte_end":1380,"line_start":35,"line_end":35,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1381,"byte_end":1384,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! ## No Standard Library Targets","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1385,"byte_end":1419,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1420,"byte_end":1423,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! From Rust 1.36, this crate supports being built without `std`, requiring","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1424,"byte_end":1500,"line_start":39,"line_end":39,"column_start":1,"column_end":77}},{"value":"! `alloc` instead. This is enabled automatically when it is detected that","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1501,"byte_end":1576,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"! `std` is not available. There is no crate feature to enable/disable to","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1577,"byte_end":1651,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"! trigger this. It can be tested by building for a std-less target.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1652,"byte_end":1721,"line_start":42,"line_end":42,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1722,"byte_end":1725,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! - Creating maps and sets using [`new`][IndexMap::new] and","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1726,"byte_end":1787,"line_start":44,"line_end":44,"column_start":1,"column_end":62}},{"value":"! [`with_capacity`][IndexMap::with_capacity] is unavailable without `std`.  ","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1788,"byte_end":1866,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"!   Use methods [`IndexMap::default`][def],","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1867,"byte_end":1912,"line_start":46,"line_end":46,"column_start":1,"column_end":46}},{"value":"!   [`with_hasher`][IndexMap::with_hasher],","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1913,"byte_end":1958,"line_start":47,"line_end":47,"column_start":1,"column_end":46}},{"value":"!   [`with_capacity_and_hasher`][IndexMap::with_capacity_and_hasher] instead.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1959,"byte_end":2038,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"!   A no-std compatible hasher will be needed as well, for example","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":2039,"byte_end":2107,"line_start":49,"line_end":49,"column_start":1,"column_end":69}},{"value":"!   from the crate `twox-hash`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":2108,"byte_end":2141,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"! - Macros [`indexmap!`] and [`indexset!`] are unavailable without `std`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":2142,"byte_end":2217,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":2218,"byte_end":2221,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"! [def]: map/struct.IndexMap.html#impl-Default","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":2222,"byte_end":2270,"line_start":53,"line_end":53,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":10},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/equivalent.rs","byte_start":8154,"byte_end":8164,"line_start":13,"line_end":13,"column_start":11,"column_end":21},"name":"Equivalent","qualname":"::equivalent::Equivalent","value":"Equivalent<K: ?Sized>","parent":null,"children":[{"krate":0,"index":12}],"decl_id":null,"docs":" Key equivalence trait.","sig":null,"attributes":[{"value":"/ Key equivalence trait.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/equivalent.rs","byte_start":7764,"byte_end":7790,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/equivalent.rs","byte_start":7791,"byte_end":7794,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This trait allows hash table lookup to be customized.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/equivalent.rs","byte_start":7795,"byte_end":7852,"line_start":5,"line_end":5,"column_start":1,"column_end":58}},{"value":"/ It has one blanket implementation that uses the regular `Borrow` solution,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/equivalent.rs","byte_start":7853,"byte_end":7931,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ just like `HashMap` and `BTreeMap` do, so that you can pass `&str` to lookup","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/equivalent.rs","byte_start":7932,"byte_end":8012,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ into a map with `String` keys and so on.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/equivalent.rs","byte_start":8013,"byte_end":8057,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/equivalent.rs","byte_start":8058,"byte_end":8061,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Contract","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/equivalent.rs","byte_start":8062,"byte_end":8076,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/equivalent.rs","byte_start":8077,"byte_end":8080,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The implementor **must** hash like `K`, if it is hashable.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/equivalent.rs","byte_start":8081,"byte_end":8143,"line_start":12,"line_end":12,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/equivalent.rs","byte_start":8252,"byte_end":8262,"line_start":15,"line_end":15,"column_start":8,"column_end":18},"name":"equivalent","qualname":"::equivalent::Equivalent::equivalent","value":"fn (&self, key: &K) -> bool","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Compare self to `key` and return `true` if they are equal.\n","sig":null,"attributes":[{"value":"/ Compare self to `key` and return `true` if they are equal.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/equivalent.rs","byte_start":8182,"byte_end":8244,"line_start":14,"line_end":14,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":23},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":8570,"byte_end":8583,"line_start":6,"line_end":6,"column_start":12,"column_end":25},"name":"PrivateMarker","qualname":"::mutable_keys::PrivateMarker","value":"PrivateMarker {  }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":24},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9131,"byte_end":9142,"line_start":20,"line_end":20,"column_start":11,"column_end":22},"name":"MutableKeys","qualname":"::mutable_keys::MutableKeys","value":"MutableKeys","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":31}],"decl_id":null,"docs":" Opt-in mutable access to keys.","sig":null,"attributes":[{"value":"/ Opt-in mutable access to keys.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":8588,"byte_end":8622,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":8623,"byte_end":8626,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ These methods expose `&mut K`, mutable references to the key as it is stored","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":8627,"byte_end":8707,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ in the map.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":8708,"byte_end":8723,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/ You are allowed to modify the keys in the hashmap **if the modifcation","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":8724,"byte_end":8798,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ does not change the key’s hash and equality**.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":8799,"byte_end":8851,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":8852,"byte_end":8855,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ If keys are modified erronously, you can no longer look them up.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":8856,"byte_end":8924,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ This is sound (memory safe) but a logical error hazard (just like","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":8925,"byte_end":8994,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/ implementing PartialEq, Eq, or Hash incorrectly would be).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":8995,"byte_end":9057,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9058,"byte_end":9061,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ `use` this trait to enable its methods for `IndexMap`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9062,"byte_end":9120,"line_start":19,"line_end":19,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":25},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9154,"byte_end":9157,"line_start":21,"line_end":21,"column_start":10,"column_end":13},"name":"Key","qualname":"::mutable_keys::MutableKeys::Key","value":"type Key;","parent":{"krate":0,"index":24},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":26},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9168,"byte_end":9173,"line_start":22,"line_end":22,"column_start":10,"column_end":15},"name":"Value","qualname":"::mutable_keys::MutableKeys::Value","value":"type Value;","parent":{"krate":0,"index":24},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9245,"byte_end":9258,"line_start":25,"line_end":25,"column_start":8,"column_end":21},"name":"get_full_mut2","qualname":"::mutable_keys::MutableKeys::get_full_mut2","value":"fn <Q> (&mut self, key: &Q) -> Option<(usize, &mut Self::Key, &mut Self::Value)>","parent":{"krate":0,"index":24},"children":[],"decl_id":null,"docs":" Return item index, mutable reference to key and value\n","sig":null,"attributes":[{"value":"/ Return item index, mutable reference to key and value","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9180,"byte_end":9237,"line_start":24,"line_end":24,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9694,"byte_end":9701,"line_start":39,"line_end":39,"column_start":8,"column_end":15},"name":"retain2","qualname":"::mutable_keys::MutableKeys::retain2","value":"fn <F> (&mut self, keep: F) -> ()","parent":{"krate":0,"index":24},"children":[],"decl_id":null,"docs":" Scan through each key-value pair in the map and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[{"value":"/ Scan through each key-value pair in the map and keep those where the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9422,"byte_end":9494,"line_start":32,"line_end":32,"column_start":5,"column_end":77}},{"value":"/ closure `keep` returns `true`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9499,"byte_end":9533,"line_start":33,"line_end":33,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9538,"byte_end":9541,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The elements are visited in order, and remaining elements keep their","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9546,"byte_end":9618,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9623,"byte_end":9633,"line_start":36,"line_end":36,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9638,"byte_end":9641,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9646,"byte_end":9686,"line_start":38,"line_end":38,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9993,"byte_end":10009,"line_start":46,"line_end":46,"column_start":8,"column_end":24},"name":"__private_marker","qualname":"::mutable_keys::MutableKeys::__private_marker","value":"fn (&self) -> PrivateMarker","parent":{"krate":0,"index":24},"children":[],"decl_id":null,"docs":" This method is not useful in itself – it is there to “seal” the trait\n for external implementation, so that we can add methods without\n causing breaking changes.\n","sig":null,"attributes":[{"value":"/ This method is not useful in itself – it is there to “seal” the trait","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9800,"byte_end":9879,"line_start":43,"line_end":43,"column_start":5,"column_end":78}},{"value":"/ for external implementation, so that we can add methods without","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9884,"byte_end":9951,"line_start":44,"line_end":44,"column_start":5,"column_end":72}},{"value":"/ causing breaking changes.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9956,"byte_end":9985,"line_start":45,"line_end":45,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":148},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"map","qualname":"::map","value":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":167},{"krate":0,"index":171},{"krate":0,"index":1139},{"krate":0,"index":1144},{"krate":0,"index":174},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":1147},{"krate":0,"index":1149},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":195},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":214},{"krate":0,"index":1150},{"krate":0,"index":1156},{"krate":0,"index":1161},{"krate":0,"index":1167},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":241},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":254},{"krate":0,"index":266},{"krate":0,"index":271},{"krate":0,"index":275},{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":290},{"krate":0,"index":302},{"krate":0,"index":307},{"krate":0,"index":315},{"krate":0,"index":332},{"krate":0,"index":337},{"krate":0,"index":345},{"krate":0,"index":355},{"krate":0,"index":360},{"krate":0,"index":423},{"krate":0,"index":426},{"krate":0,"index":436},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":492},{"krate":0,"index":497},{"krate":0,"index":502},{"krate":0,"index":507},{"krate":0,"index":512},{"krate":0,"index":517},{"krate":0,"index":522},{"krate":0,"index":527},{"krate":0,"index":532},{"krate":0,"index":537},{"krate":0,"index":542},{"krate":0,"index":547},{"krate":0,"index":552},{"krate":0,"index":557},{"krate":0,"index":562},{"krate":0,"index":567},{"krate":0,"index":572},{"krate":0,"index":577},{"krate":0,"index":582},{"krate":0,"index":587},{"krate":0,"index":592},{"krate":0,"index":597},{"krate":0,"index":602},{"krate":0,"index":607},{"krate":0,"index":612},{"krate":0,"index":617},{"krate":0,"index":621},{"krate":0,"index":625},{"krate":0,"index":630},{"krate":0,"index":634},{"krate":0,"index":638},{"krate":0,"index":643},{"krate":0,"index":648},{"krate":0,"index":652},{"krate":0,"index":660},{"krate":0,"index":668},{"krate":0,"index":675},{"krate":0,"index":678},{"krate":0,"index":686},{"krate":0,"index":693},{"krate":0,"index":699},{"krate":0,"index":705},{"krate":0,"index":713},{"krate":0,"index":718},{"krate":0,"index":727}],"decl_id":null,"docs":" `IndexMap` is a hash table where the iteration order of the key-value\n pairs is independent of the hash values of the keys.\n","sig":null,"attributes":[{"value":"! `IndexMap` is a hash table where the iteration order of the key-value","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":15335,"byte_end":15408,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"! pairs is independent of the hash values of the keys.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":15409,"byte_end":15465,"line_start":2,"line_end":2,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1150},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":23138,"byte_end":23146,"line_start":297,"line_end":297,"column_start":12,"column_end":20},"name":"IndexMap","qualname":"::map::IndexMap","value":"IndexMap {  }","parent":null,"children":[{"krate":0,"index":1154},{"krate":0,"index":1155}],"decl_id":null,"docs":" A hash table where the iteration order of the key-value pairs is independent\n of the hash values of the keys.","sig":null,"attributes":[{"value":"/ A hash table where the iteration order of the key-value pairs is independent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":21685,"byte_end":21765,"line_start":254,"line_end":254,"column_start":1,"column_end":81}},{"value":"/ of the hash values of the keys.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":21766,"byte_end":21801,"line_start":255,"line_end":255,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":21802,"byte_end":21805,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ The interface is closely compatible with the standard `HashMap`, but also","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":21806,"byte_end":21883,"line_start":257,"line_end":257,"column_start":1,"column_end":78}},{"value":"/ has additional features.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":21884,"byte_end":21912,"line_start":258,"line_end":258,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":21913,"byte_end":21916,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ # Order","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":21917,"byte_end":21928,"line_start":260,"line_end":260,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":21929,"byte_end":21932,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ The key-value pairs have a consistent order that is determined by","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":21933,"byte_end":22002,"line_start":262,"line_end":262,"column_start":1,"column_end":70}},{"value":"/ the sequence of insertion and removal calls on the map. The order does","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22003,"byte_end":22077,"line_start":263,"line_end":263,"column_start":1,"column_end":75}},{"value":"/ not depend on the keys or the hash function at all.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22078,"byte_end":22133,"line_start":264,"line_end":264,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22134,"byte_end":22137,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ All iterators traverse the map in *the order*.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22138,"byte_end":22188,"line_start":266,"line_end":266,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22189,"byte_end":22192,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ The insertion order is preserved, with **notable exceptions** like the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22193,"byte_end":22267,"line_start":268,"line_end":268,"column_start":1,"column_end":75}},{"value":"/ `.remove()` or `.swap_remove()` methods. Methods such as `.sort_by()` of","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22268,"byte_end":22344,"line_start":269,"line_end":269,"column_start":1,"column_end":77}},{"value":"/ course result in a new order, depending on the sorting order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22345,"byte_end":22410,"line_start":270,"line_end":270,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22411,"byte_end":22414,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ # Indices","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22415,"byte_end":22428,"line_start":272,"line_end":272,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22429,"byte_end":22432,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ The key-value pairs are indexed in a compact range without holes in the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22433,"byte_end":22508,"line_start":274,"line_end":274,"column_start":1,"column_end":76}},{"value":"/ range `0..self.len()`. For example, the method `.get_full` looks up the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22509,"byte_end":22584,"line_start":275,"line_end":275,"column_start":1,"column_end":76}},{"value":"/ index for a key, and the method `.get_index` looks up the key-value pair by","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22585,"byte_end":22664,"line_start":276,"line_end":276,"column_start":1,"column_end":80}},{"value":"/ index.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22665,"byte_end":22675,"line_start":277,"line_end":277,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22676,"byte_end":22679,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22680,"byte_end":22694,"line_start":279,"line_end":279,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22695,"byte_end":22698,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22699,"byte_end":22706,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ use indexmap::IndexMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22707,"byte_end":22734,"line_start":282,"line_end":282,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22735,"byte_end":22738,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ // count the frequency of each letter in a sentence.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22739,"byte_end":22795,"line_start":284,"line_end":284,"column_start":1,"column_end":57}},{"value":"/ let mut letters = IndexMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22796,"byte_end":22834,"line_start":285,"line_end":285,"column_start":1,"column_end":39}},{"value":"/ for ch in \"a short treatise on fungi\".chars() {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22835,"byte_end":22886,"line_start":286,"line_end":286,"column_start":1,"column_end":52}},{"value":"/     *letters.entry(ch).or_insert(0) += 1;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22887,"byte_end":22932,"line_start":287,"line_end":287,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22933,"byte_end":22938,"line_start":288,"line_end":288,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22939,"byte_end":22942,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(letters[&'s'], 2);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22943,"byte_end":22976,"line_start":290,"line_end":290,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(letters[&'t'], 3);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22977,"byte_end":23010,"line_start":291,"line_end":291,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(letters[&'u'], 1);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":23011,"byte_end":23044,"line_start":292,"line_end":292,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(letters.get(&'y'), None);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":23045,"byte_end":23085,"line_start":293,"line_end":293,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":23086,"byte_end":23093,"line_start":294,"line_end":294,"column_start":1,"column_end":8}},{"value":"cfg(has_std)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":23111,"byte_end":23126,"line_start":296,"line_end":296,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":26461,"byte_end":26464,"line_start":426,"line_end":426,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexMap<K, V>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map. (Does not allocate.)\n","sig":null,"attributes":[{"value":"/ Create a new map. (Does not allocate.)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":26407,"byte_end":26449,"line_start":425,"line_end":425,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":26677,"byte_end":26690,"line_start":434,"line_end":434,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<IndexMap<K, V>>::with_capacity","value":"fn (n: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with capacity for `n` key-value pairs. (Does not\n allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new map with capacity for `n` key-value pairs. (Does not","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":26519,"byte_end":26588,"line_start":430,"line_end":430,"column_start":5,"column_end":74}},{"value":"/ allocate if `n` is zero.)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":26593,"byte_end":26622,"line_start":431,"line_end":431,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":26627,"byte_end":26630,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":26635,"byte_end":26665,"line_start":433,"line_end":433,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":26974,"byte_end":26998,"line_start":444,"line_end":444,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<IndexMap<K, V, S>>::with_capacity_and_hasher","value":"fn (n: usize, hash_builder: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with capacity for `n` key-value pairs. (Does not\n allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new map with capacity for `n` key-value pairs. (Does not","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":26816,"byte_end":26885,"line_start":440,"line_end":440,"column_start":5,"column_end":74}},{"value":"/ allocate if `n` is zero.)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":26890,"byte_end":26919,"line_start":441,"line_end":441,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":26924,"byte_end":26927,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":26932,"byte_end":26962,"line_start":443,"line_end":443,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":27901,"byte_end":27904,"line_start":474,"line_end":474,"column_start":12,"column_end":15},"name":"len","qualname":"<IndexMap<K, V, S>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of key-value pairs in the map.","sig":null,"attributes":[{"value":"/ Return the number of key-value pairs in the map.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":27794,"byte_end":27846,"line_start":471,"line_end":471,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":27851,"byte_end":27854,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":27859,"byte_end":27889,"line_start":473,"line_end":473,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":28062,"byte_end":28070,"line_start":481,"line_end":481,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IndexMap<K, V, S>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the map contains no elements.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":27958,"byte_end":28007,"line_start":478,"line_end":478,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":28012,"byte_end":28015,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":28020,"byte_end":28050,"line_start":480,"line_end":480,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":28175,"byte_end":28186,"line_start":486,"line_end":486,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<IndexMap<K, V, S>>::with_hasher","value":"fn (hash_builder: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with `hash_builder`\n","sig":null,"attributes":[{"value":"/ Create a new map with `hash_builder`","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":28123,"byte_end":28163,"line_start":485,"line_end":485,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":28381,"byte_end":28387,"line_start":494,"line_end":494,"column_start":12,"column_end":18},"name":"hasher","qualname":"<IndexMap<K, V, S>>::hasher","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the map's `BuildHasher`.\n","sig":null,"attributes":[{"value":"/ Return a reference to the map's `BuildHasher`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":28319,"byte_end":28369,"line_start":493,"line_end":493,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":28521,"byte_end":28529,"line_start":502,"line_end":502,"column_start":12,"column_end":20},"name":"capacity","qualname":"<IndexMap<K, V, S>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.\n","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":28479,"byte_end":28509,"line_start":501,"line_end":501,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":284},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":31117,"byte_end":31125,"line_start":597,"line_end":597,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry<'a, K, V>)","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":" Existing slot with equivalent key.\n","sig":null,"attributes":[{"value":"/ Existing slot with equivalent key.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":31074,"byte_end":31112,"line_start":596,"line_end":596,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":287},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":31208,"byte_end":31214,"line_start":599,"line_end":599,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::Entry::Vacant","value":"Entry::Vacant(VacantEntry<'a, K, V>)","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":" Vacant slot (no equivalent key in the map).\n","sig":null,"attributes":[{"value":"/ Vacant slot (no equivalent key in the map).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":31156,"byte_end":31203,"line_start":598,"line_end":598,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":280},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":31044,"byte_end":31049,"line_start":595,"line_end":595,"column_start":10,"column_end":15},"name":"Entry","qualname":"::map::Entry","value":"Entry::{Occupied, Vacant}","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":287}],"decl_id":null,"docs":" Entry for an existing key-value pair or a vacant location to\n insert one.\n","sig":null,"attributes":[{"value":"/ Entry for an existing key-value pair or a vacant location to","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":30954,"byte_end":31018,"line_start":593,"line_end":593,"column_start":1,"column_end":65}},{"value":"/ insert one.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":31019,"byte_end":31034,"line_start":594,"line_end":594,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":31341,"byte_end":31350,"line_start":604,"line_end":604,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"fn (self, default: V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time (amortized average).\n","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":31279,"byte_end":31329,"line_start":603,"line_end":603,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":31603,"byte_end":31617,"line_start":612,"line_end":612,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"fn <F> (self, call: F) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time (amortized average).\n","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":31541,"byte_end":31591,"line_start":611,"line_end":611,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":31854,"byte_end":31857,"line_start":622,"line_end":622,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":32109,"byte_end":32114,"line_start":630,"line_end":630,"column_start":12,"column_end":17},"name":"index","qualname":"<Entry>::index","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index where the key-value pair exists or will be inserted.\n","sig":null,"attributes":[{"value":"/ Return the index where the key-value pair exists or will be inserted.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":32024,"byte_end":32097,"line_start":629,"line_end":629,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":32341,"byte_end":32351,"line_start":638,"line_end":638,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<Entry>::and_modify","value":"fn <F> (self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Modifies the entry if it is occupied.\n","sig":null,"attributes":[{"value":"/ Modifies the entry if it is occupied.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":32288,"byte_end":32329,"line_start":637,"line_end":637,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":32863,"byte_end":32873,"line_start":655,"line_end":655,"column_start":12,"column_end":22},"name":"or_default","qualname":"<Entry>::or_default","value":"fn (self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Inserts a default-constructed value in the entry if it is vacant and returns a mutable\n reference to it. Otherwise a mutable reference to an already existent value is returned.","sig":null,"attributes":[{"value":"/ Inserts a default-constructed value in the entry if it is vacant and returns a mutable","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":32601,"byte_end":32691,"line_start":651,"line_end":651,"column_start":5,"column_end":95}},{"value":"/ reference to it. Otherwise a mutable reference to an already existent value is returned.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":32696,"byte_end":32788,"line_start":652,"line_end":652,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":32793,"byte_end":32796,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":32801,"byte_end":32851,"line_start":654,"line_end":654,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":307},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":33584,"byte_end":33597,"line_start":679,"line_end":679,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::map::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314}],"decl_id":null,"docs":" A view into an occupied entry in a `IndexMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `IndexMap`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":33449,"byte_end":33499,"line_start":675,"line_end":675,"column_start":1,"column_end":51}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":33500,"byte_end":33537,"line_start":676,"line_end":676,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":33538,"byte_end":33541,"line_start":677,"line_end":677,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":33542,"byte_end":33572,"line_start":678,"line_end":678,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":33758,"byte_end":33761,"line_start":687,"line_end":687,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":33812,"byte_end":33815,"line_start":690,"line_end":690,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"fn (&self) -> &V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":33892,"byte_end":33899,"line_start":693,"line_end":693,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"fn (&mut self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":34239,"byte_end":34244,"line_start":704,"line_end":704,"column_start":12,"column_end":17},"name":"index","qualname":"<OccupiedEntry>::index","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index of the key-value pair\n","sig":null,"attributes":[{"value":"/ Return the index of the key-value pair","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":34185,"byte_end":34227,"line_start":703,"line_end":703,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":34299,"byte_end":34307,"line_start":707,"line_end":707,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"fn (self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":34478,"byte_end":34484,"line_start":712,"line_end":712,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"fn (&mut self, value: V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry to `value`, and returns the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry to `value`, and returns the entry's old value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":34388,"byte_end":34466,"line_start":711,"line_end":711,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":34727,"byte_end":34733,"line_start":719,"line_end":719,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"fn (self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Remove the key, value pair stored in the map for this entry, and return the value.","sig":null,"attributes":[{"value":"/ Remove the key, value pair stored in the map for this entry, and return the value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":34563,"byte_end":34649,"line_start":716,"line_end":716,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":34654,"byte_end":34657,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove()`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":34662,"byte_end":34715,"line_start":718,"line_end":718,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":35148,"byte_end":35159,"line_start":730,"line_end":730,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<OccupiedEntry>::swap_remove","value":"fn (self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Remove the key, value pair stored in the map for this entry, and return the value.","sig":null,"attributes":[{"value":"/ Remove the key, value pair stored in the map for this entry, and return the value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":34785,"byte_end":34871,"line_start":723,"line_end":723,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":34876,"byte_end":34879,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":34884,"byte_end":34956,"line_start":725,"line_end":725,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":34961,"byte_end":35024,"line_start":726,"line_end":726,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":35029,"byte_end":35083,"line_start":727,"line_end":727,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":35088,"byte_end":35091,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":35096,"byte_end":35136,"line_start":729,"line_end":729,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":35577,"byte_end":35589,"line_start":741,"line_end":741,"column_start":12,"column_end":24},"name":"shift_remove","qualname":"<OccupiedEntry>::shift_remove","value":"fn (self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Remove the key, value pair stored in the map for this entry, and return the value.","sig":null,"attributes":[{"value":"/ Remove the key, value pair stored in the map for this entry, and return the value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":35219,"byte_end":35305,"line_start":734,"line_end":734,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":35310,"byte_end":35313,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":35318,"byte_end":35384,"line_start":736,"line_end":736,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":35389,"byte_end":35450,"line_start":737,"line_end":737,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":35455,"byte_end":35512,"line_start":738,"line_end":738,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":35517,"byte_end":35520,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":35525,"byte_end":35565,"line_start":740,"line_end":740,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":35808,"byte_end":35820,"line_start":748,"line_end":748,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"fn (self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key, value pair stored in the map for this entry","sig":null,"attributes":[{"value":"/ Remove and return the key, value pair stored in the map for this entry","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":35650,"byte_end":35724,"line_start":745,"line_end":745,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":35729,"byte_end":35732,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove_entry()`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":35737,"byte_end":35796,"line_start":747,"line_end":747,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":36234,"byte_end":36251,"line_start":759,"line_end":759,"column_start":12,"column_end":29},"name":"swap_remove_entry","qualname":"<OccupiedEntry>::swap_remove_entry","value":"fn (self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key, value pair stored in the map for this entry","sig":null,"attributes":[{"value":"/ Remove and return the key, value pair stored in the map for this entry","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":35883,"byte_end":35957,"line_start":752,"line_end":752,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":35962,"byte_end":35965,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":35970,"byte_end":36042,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":36047,"byte_end":36110,"line_start":755,"line_end":755,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":36115,"byte_end":36169,"line_start":756,"line_end":756,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":36174,"byte_end":36177,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":36182,"byte_end":36222,"line_start":758,"line_end":758,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":36686,"byte_end":36704,"line_start":770,"line_end":770,"column_start":12,"column_end":30},"name":"shift_remove_entry","qualname":"<OccupiedEntry>::shift_remove_entry","value":"fn (self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key, value pair stored in the map for this entry","sig":null,"attributes":[{"value":"/ Remove and return the key, value pair stored in the map for this entry","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":36340,"byte_end":36414,"line_start":763,"line_end":763,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":36419,"byte_end":36422,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":36427,"byte_end":36493,"line_start":765,"line_end":765,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":36498,"byte_end":36559,"line_start":766,"line_end":766,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":36564,"byte_end":36621,"line_start":767,"line_end":767,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":36626,"byte_end":36629,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":36634,"byte_end":36674,"line_start":769,"line_end":769,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":337},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":37232,"byte_end":37243,"line_start":788,"line_end":788,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::map::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344}],"decl_id":null,"docs":" A view into a vacant entry in a `IndexMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `IndexMap`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":37100,"byte_end":37147,"line_start":784,"line_end":784,"column_start":1,"column_end":48}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":37148,"byte_end":37185,"line_start":785,"line_end":785,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":37186,"byte_end":37189,"line_start":786,"line_end":786,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":37190,"byte_end":37220,"line_start":787,"line_end":787,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":37405,"byte_end":37408,"line_start":796,"line_end":796,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":37459,"byte_end":37467,"line_start":799,"line_end":799,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"fn (self) -> K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":37583,"byte_end":37588,"line_start":803,"line_end":803,"column_start":12,"column_end":17},"name":"index","qualname":"<VacantEntry>::index","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index where the key-value pair will be inserted.\n","sig":null,"attributes":[{"value":"/ Return the index where the key-value pair will be inserted.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":37508,"byte_end":37571,"line_start":802,"line_end":802,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":37647,"byte_end":37653,"line_start":806,"line_end":806,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"fn (self, value: V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":39002,"byte_end":39007,"line_start":855,"line_end":855,"column_start":12,"column_end":17},"name":"clear","qualname":"<IndexMap<K, V, S>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove all key-value pairs in the map, while preserving its capacity.","sig":null,"attributes":[{"value":"/ Remove all key-value pairs in the map, while preserving its capacity.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":38874,"byte_end":38947,"line_start":852,"line_end":852,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":38952,"byte_end":38955,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":38960,"byte_end":38990,"line_start":854,"line_end":854,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":39179,"byte_end":39186,"line_start":862,"line_end":862,"column_start":12,"column_end":19},"name":"reserve","qualname":"<IndexMap<K, V, S>>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserve capacity for `additional` more key-value pairs.","sig":null,"attributes":[{"value":"/ Reserve capacity for `additional` more key-value pairs.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":39059,"byte_end":39118,"line_start":859,"line_end":859,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":39123,"byte_end":39126,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ FIXME Not implemented fully yet.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":39131,"byte_end":39167,"line_start":861,"line_end":861,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":40763,"byte_end":40769,"line_start":906,"line_end":906,"column_start":12,"column_end":18},"name":"insert","qualname":"<IndexMap<K, V, S>>::insert","value":"fn (&mut self, key: K, value: V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-value pair in the map.","sig":null,"attributes":[{"value":"/ Insert a key-value pair in the map.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":40111,"byte_end":40150,"line_start":893,"line_end":893,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":40155,"byte_end":40158,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ If an equivalent key already exists in the map: the key remains and","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":40163,"byte_end":40234,"line_start":895,"line_end":895,"column_start":5,"column_end":76}},{"value":"/ retains in its place in the order, its corresponding value is updated","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":40239,"byte_end":40312,"line_start":896,"line_end":896,"column_start":5,"column_end":78}},{"value":"/ with `value` and the older value is returned inside `Some(_)`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":40317,"byte_end":40383,"line_start":897,"line_end":897,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":40388,"byte_end":40391,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ If no equivalent key existed in the map: the new key-value pair is","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":40396,"byte_end":40466,"line_start":899,"line_end":899,"column_start":5,"column_end":75}},{"value":"/ inserted, last in order, and `None` is returned.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":40471,"byte_end":40523,"line_start":900,"line_end":900,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":40528,"byte_end":40531,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":40536,"byte_end":40586,"line_start":902,"line_end":902,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":40591,"byte_end":40594,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ See also [`entry`](#method.entry) if you you want to insert *or* modify","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":40599,"byte_end":40674,"line_start":904,"line_end":904,"column_start":5,"column_end":80}},{"value":"/ or if you need to get the index of the corresponding key-value pair.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":40679,"byte_end":40751,"line_start":905,"line_end":905,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":42321,"byte_end":42332,"line_start":942,"line_end":942,"column_start":12,"column_end":23},"name":"insert_full","qualname":"<IndexMap<K, V, S>>::insert_full","value":"fn (&mut self, key: K, value: V) -> (usize, Option<V>)","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-value pair in the map, and get their index.","sig":null,"attributes":[{"value":"/ Insert a key-value pair in the map, and get their index.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":41630,"byte_end":41690,"line_start":929,"line_end":929,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":41695,"byte_end":41698,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ If an equivalent key already exists in the map: the key remains and","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":41703,"byte_end":41774,"line_start":931,"line_end":931,"column_start":5,"column_end":76}},{"value":"/ retains in its place in the order, its corresponding value is updated","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":41779,"byte_end":41852,"line_start":932,"line_end":932,"column_start":5,"column_end":78}},{"value":"/ with `value` and the older value is returned inside `(index, Some(_))`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":41857,"byte_end":41932,"line_start":933,"line_end":933,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":41937,"byte_end":41940,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ If no equivalent key existed in the map: the new key-value pair is","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":41945,"byte_end":42015,"line_start":935,"line_end":935,"column_start":5,"column_end":75}},{"value":"/ inserted, last in order, and `(index, None)` is returned.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":42020,"byte_end":42081,"line_start":936,"line_end":936,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":42086,"byte_end":42089,"line_start":937,"line_end":937,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":42094,"byte_end":42144,"line_start":938,"line_end":938,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":42149,"byte_end":42152,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ See also [`entry`](#method.entry) if you you want to insert *or* modify","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":42157,"byte_end":42232,"line_start":940,"line_end":940,"column_start":5,"column_end":80}},{"value":"/ or if you need to get the index of the corresponding key-value pair.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":42237,"byte_end":42309,"line_start":941,"line_end":941,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":42882,"byte_end":42887,"line_start":959,"line_end":959,"column_start":12,"column_end":17},"name":"entry","qualname":"<IndexMap<K, V, S>>::entry","value":"fn (&mut self, key: K) -> Entry<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Get the given key’s corresponding entry in the map for insertion and/or\n in-place manipulation.","sig":null,"attributes":[{"value":"/ Get the given key’s corresponding entry in the map for insertion and/or","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":42699,"byte_end":42776,"line_start":955,"line_end":955,"column_start":5,"column_end":80}},{"value":"/ in-place manipulation.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":42781,"byte_end":42807,"line_start":956,"line_end":956,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":42812,"byte_end":42815,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":42820,"byte_end":42870,"line_start":958,"line_end":958,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":43101,"byte_end":43105,"line_start":965,"line_end":965,"column_start":12,"column_end":16},"name":"iter","qualname":"<IndexMap<K, V, S>>::iter","value":"fn (&self) -> Iter<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the key-value pairs of the map, in their order","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":43015,"byte_end":43089,"line_start":964,"line_end":964,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":43295,"byte_end":43303,"line_start":972,"line_end":972,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<IndexMap<K, V, S>>::iter_mut","value":"fn (&mut self) -> IterMut<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the key-value pairs of the map, in their order","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":43209,"byte_end":43283,"line_start":971,"line_end":971,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":43496,"byte_end":43500,"line_start":979,"line_end":979,"column_start":12,"column_end":16},"name":"keys","qualname":"<IndexMap<K, V, S>>::keys","value":"fn (&self) -> Keys<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the keys of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the keys of the map, in their order","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":43421,"byte_end":43484,"line_start":978,"line_end":978,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":43681,"byte_end":43687,"line_start":986,"line_end":986,"column_start":12,"column_end":18},"name":"values","qualname":"<IndexMap<K, V, S>>::values","value":"fn (&self) -> Values<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the values of the map, in their order","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":43604,"byte_end":43669,"line_start":985,"line_end":985,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":43906,"byte_end":43916,"line_start":994,"line_end":994,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<IndexMap<K, V, S>>::values_mut","value":"fn (&mut self) -> ValuesMut<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over mutable references to the the values of the map,\n in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over mutable references to the the values of the map,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":43795,"byte_end":43871,"line_start":992,"line_end":992,"column_start":5,"column_end":81}},{"value":"/ in their order","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":43876,"byte_end":43894,"line_start":993,"line_end":993,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":44165,"byte_end":44177,"line_start":1003,"line_end":1003,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<IndexMap<K, V, S>>::contains_key","value":"fn <Q> (&self, key: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if an equivalent to `key` exists in the map.","sig":null,"attributes":[{"value":"/ Return `true` if an equivalent to `key` exists in the map.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":44038,"byte_end":44100,"line_start":1000,"line_end":1000,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":44105,"byte_end":44108,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":44113,"byte_end":44153,"line_start":1002,"line_end":1002,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":44463,"byte_end":44466,"line_start":1014,"line_end":1014,"column_start":12,"column_end":15},"name":"get","qualname":"<IndexMap<K, V, S>>::get","value":"fn <Q> (&self, key: &Q) -> Option<&V>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value stored for `key`, if it is present,\n else `None`.","sig":null,"attributes":[{"value":"/ Return a reference to the value stored for `key`, if it is present,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":44306,"byte_end":44377,"line_start":1010,"line_end":1010,"column_start":5,"column_end":76}},{"value":"/ else `None`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":44382,"byte_end":44398,"line_start":1011,"line_end":1011,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":44403,"byte_end":44406,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":44411,"byte_end":44451,"line_start":1013,"line_end":1013,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":44654,"byte_end":44662,"line_start":1022,"line_end":1022,"column_start":12,"column_end":20},"name":"get_full","qualname":"<IndexMap<K, V, S>>::get_full","value":"fn <Q> (&self, key: &Q) -> Option<(usize, &K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Return item index, key and value\n","sig":null,"attributes":[{"value":"/ Return item index, key and value","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":44606,"byte_end":44642,"line_start":1021,"line_end":1021,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":44982,"byte_end":44989,"line_start":1034,"line_end":1034,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<IndexMap<K, V, S>>::get_mut","value":"fn <Q> (&mut self, key: &Q) -> Option<&mut V>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":45148,"byte_end":45160,"line_start":1041,"line_end":1041,"column_start":12,"column_end":24},"name":"get_full_mut","qualname":"<IndexMap<K, V, S>>::get_full_mut","value":"fn <Q> (&mut self, key: &Q) -> Option<(usize, &K, &mut V)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46460,"byte_end":46466,"line_start":1084,"line_end":1084,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexMap<K, V, S>>::remove","value":"fn <Q> (&mut self, key: &Q) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return\n its value.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46139,"byte_end":46199,"line_start":1076,"line_end":1076,"column_start":5,"column_end":65}},{"value":"/ its value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46204,"byte_end":46218,"line_start":1077,"line_end":1077,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46223,"byte_end":46226,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove(key)`, if you need to","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46231,"byte_end":46302,"line_start":1079,"line_end":1079,"column_start":5,"column_end":76}},{"value":"/ preserve the order of the keys in the map, use `.shift_remove(key)`","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46307,"byte_end":46378,"line_start":1080,"line_end":1080,"column_start":5,"column_end":76}},{"value":"/ instead.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46383,"byte_end":46395,"line_start":1081,"line_end":1081,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46400,"byte_end":46403,"line_start":1082,"line_end":1082,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46408,"byte_end":46448,"line_start":1083,"line_end":1083,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":47011,"byte_end":47022,"line_start":1101,"line_end":1101,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<IndexMap<K, V, S>>::swap_remove","value":"fn <Q> (&mut self, key: &Q) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return\n its value.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46601,"byte_end":46661,"line_start":1091,"line_end":1091,"column_start":5,"column_end":65}},{"value":"/ its value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46666,"byte_end":46680,"line_start":1092,"line_end":1092,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46685,"byte_end":46688,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46693,"byte_end":46765,"line_start":1094,"line_end":1094,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46770,"byte_end":46833,"line_start":1095,"line_end":1095,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46838,"byte_end":46892,"line_start":1096,"line_end":1096,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46897,"byte_end":46900,"line_start":1097,"line_end":1097,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46905,"byte_end":46946,"line_start":1098,"line_end":1098,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46951,"byte_end":46954,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46959,"byte_end":46999,"line_start":1100,"line_end":1100,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":47597,"byte_end":47613,"line_start":1118,"line_end":1118,"column_start":12,"column_end":28},"name":"swap_remove_full","qualname":"<IndexMap<K, V, S>>::swap_remove_full","value":"fn <Q> (&mut self, key: &Q) -> Option<(usize, K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return it and\n the index it had.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return it and","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":47173,"byte_end":47240,"line_start":1108,"line_end":1108,"column_start":5,"column_end":72}},{"value":"/ the index it had.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":47245,"byte_end":47266,"line_start":1109,"line_end":1109,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":47271,"byte_end":47274,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":47279,"byte_end":47351,"line_start":1111,"line_end":1111,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":47356,"byte_end":47419,"line_start":1112,"line_end":1112,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":47424,"byte_end":47478,"line_start":1113,"line_end":1113,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":47483,"byte_end":47486,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":47491,"byte_end":47532,"line_start":1115,"line_end":1115,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":47537,"byte_end":47540,"line_start":1116,"line_end":1116,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":47545,"byte_end":47585,"line_start":1117,"line_end":1117,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48349,"byte_end":48361,"line_start":1140,"line_end":1140,"column_start":12,"column_end":24},"name":"shift_remove","qualname":"<IndexMap<K, V, S>>::shift_remove","value":"fn <Q> (&mut self, key: &Q) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return\n its value.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":47944,"byte_end":48004,"line_start":1130,"line_end":1130,"column_start":5,"column_end":65}},{"value":"/ its value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48009,"byte_end":48023,"line_start":1131,"line_end":1131,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48028,"byte_end":48031,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48036,"byte_end":48102,"line_start":1133,"line_end":1133,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48107,"byte_end":48168,"line_start":1134,"line_end":1134,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48173,"byte_end":48230,"line_start":1135,"line_end":1135,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48235,"byte_end":48238,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48243,"byte_end":48284,"line_start":1137,"line_end":1137,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48289,"byte_end":48292,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48297,"byte_end":48337,"line_start":1139,"line_end":1139,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48932,"byte_end":48949,"line_start":1157,"line_end":1157,"column_start":12,"column_end":29},"name":"shift_remove_full","qualname":"<IndexMap<K, V, S>>::shift_remove_full","value":"fn <Q> (&mut self, key: &Q) -> Option<(usize, K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return it and\n the index it had.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return it and","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48513,"byte_end":48580,"line_start":1147,"line_end":1147,"column_start":5,"column_end":72}},{"value":"/ the index it had.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48585,"byte_end":48606,"line_start":1148,"line_end":1148,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48611,"byte_end":48614,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48619,"byte_end":48685,"line_start":1150,"line_end":1150,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48690,"byte_end":48751,"line_start":1151,"line_end":1151,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48756,"byte_end":48813,"line_start":1152,"line_end":1152,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48818,"byte_end":48821,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48826,"byte_end":48867,"line_start":1154,"line_end":1154,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48872,"byte_end":48875,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48880,"byte_end":48920,"line_start":1156,"line_end":1156,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":49380,"byte_end":49383,"line_start":1172,"line_end":1172,"column_start":12,"column_end":15},"name":"pop","qualname":"<IndexMap<K, V, S>>::pop","value":"fn (&mut self) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the last key-value pair","sig":null,"attributes":[{"value":"/ Remove the last key-value pair","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":49281,"byte_end":49315,"line_start":1169,"line_end":1169,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":49320,"byte_end":49323,"line_start":1170,"line_end":1170,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":49328,"byte_end":49368,"line_start":1171,"line_end":1171,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":49731,"byte_end":49737,"line_start":1183,"line_end":1183,"column_start":12,"column_end":18},"name":"retain","qualname":"<IndexMap<K, V, S>>::retain","value":"fn <F> (&mut self, mut keep: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Scan through each key-value pair in the map and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[{"value":"/ Scan through each key-value pair in the map and keep those where the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":49455,"byte_end":49527,"line_start":1176,"line_end":1176,"column_start":5,"column_end":77}},{"value":"/ closure `keep` returns `true`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":49532,"byte_end":49566,"line_start":1177,"line_end":1177,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":49571,"byte_end":49574,"line_start":1178,"line_end":1178,"column_start":5,"column_end":8}},{"value":"/ The elements are visited in order, and remaining elements keep their","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":49579,"byte_end":49651,"line_start":1179,"line_end":1179,"column_start":5,"column_end":77}},{"value":"/ order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":49656,"byte_end":49666,"line_start":1180,"line_end":1180,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":49671,"byte_end":49674,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":49679,"byte_end":49719,"line_start":1182,"line_end":1182,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":50369,"byte_end":50378,"line_start":1208,"line_end":1208,"column_start":12,"column_end":21},"name":"sort_keys","qualname":"<IndexMap<K, V, S>>::sort_keys","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sort the map’s key-value pairs by the default ordering of the keys.","sig":null,"attributes":[{"value":"/ Sort the map’s key-value pairs by the default ordering of the keys.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":50241,"byte_end":50314,"line_start":1205,"line_end":1205,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":50319,"byte_end":50322,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ See `sort_by` for details.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":50327,"byte_end":50357,"line_start":1207,"line_end":1207,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":50887,"byte_end":50894,"line_start":1223,"line_end":1223,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<IndexMap<K, V, S>>::sort_by","value":"fn <F> (&mut self, compare: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sort the map’s key-value pairs in place using the comparison\n function `compare`.","sig":null,"attributes":[{"value":"/ Sort the map’s key-value pairs in place using the comparison","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":50468,"byte_end":50534,"line_start":1215,"line_end":1215,"column_start":5,"column_end":69}},{"value":"/ function `compare`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":50539,"byte_end":50562,"line_start":1216,"line_end":1216,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":50567,"byte_end":50570,"line_start":1217,"line_end":1217,"column_start":5,"column_end":8}},{"value":"/ The comparison function receives two key and value pairs to compare (you","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":50575,"byte_end":50651,"line_start":1218,"line_end":1218,"column_start":5,"column_end":81}},{"value":"/ can sort by keys or values or their combination as needed).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":50656,"byte_end":50719,"line_start":1219,"line_end":1219,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":50724,"byte_end":50727,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n log n + c)** time and **O(n)** space where *n* is","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":50732,"byte_end":50803,"line_start":1221,"line_end":1221,"column_start":5,"column_end":76}},{"value":"/ the length of the map and *c* the capacity. The sort is stable.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":50808,"byte_end":50875,"line_start":1222,"line_end":1222,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":51195,"byte_end":51204,"line_start":1234,"line_end":1234,"column_start":12,"column_end":21},"name":"sorted_by","qualname":"<IndexMap<K, V, S>>::sorted_by","value":"fn <F> (mut self, mut cmp: F) -> IntoIter<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Sort the key-value pairs of the map and return a by value iterator of\n the key-value pairs with the result.","sig":null,"attributes":[{"value":"/ Sort the key-value pairs of the map and return a by value iterator of","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":51029,"byte_end":51102,"line_start":1230,"line_end":1230,"column_start":5,"column_end":78}},{"value":"/ the key-value pairs with the result.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":51107,"byte_end":51147,"line_start":1231,"line_end":1231,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":51152,"byte_end":51155,"line_start":1232,"line_end":1232,"column_start":5,"column_end":8}},{"value":"/ The sort is stable.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":51160,"byte_end":51183,"line_start":1233,"line_end":1233,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":51595,"byte_end":51600,"line_start":1246,"line_end":1246,"column_start":12,"column_end":17},"name":"drain","qualname":"<IndexMap<K, V, S>>::drain","value":"fn (&mut self, range: RangeFull) -> Drain<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Clears the `IndexMap`, returning all key-value pairs as a drain iterator.\n Keeps the allocated memory for reuse.\n","sig":null,"attributes":[{"value":"/ Clears the `IndexMap`, returning all key-value pairs as a drain iterator.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":51460,"byte_end":51537,"line_start":1244,"line_end":1244,"column_start":5,"column_end":82}},{"value":"/ Keeps the allocated memory for reuse.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":51542,"byte_end":51583,"line_start":1245,"line_end":1245,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":52061,"byte_end":52070,"line_start":1268,"line_end":1268,"column_start":12,"column_end":21},"name":"get_index","qualname":"<IndexMap<K, V, S>>::get_index","value":"fn (&self, index: usize) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Get a key-value pair by index","sig":null,"attributes":[{"value":"/ Get a key-value pair by index","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":51913,"byte_end":51946,"line_start":1263,"line_end":1263,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":51951,"byte_end":51954,"line_start":1264,"line_end":1264,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":51959,"byte_end":52006,"line_start":1265,"line_end":1265,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":52011,"byte_end":52014,"line_start":1266,"line_end":1266,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":52019,"byte_end":52049,"line_start":1267,"line_end":1267,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":52328,"byte_end":52341,"line_start":1277,"line_end":1277,"column_start":12,"column_end":25},"name":"get_index_mut","qualname":"<IndexMap<K, V, S>>::get_index_mut","value":"fn (&mut self, index: usize) -> Option<(&mut K, &mut V)>","parent":null,"children":[],"decl_id":null,"docs":" Get a key-value pair by index","sig":null,"attributes":[{"value":"/ Get a key-value pair by index","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":52180,"byte_end":52213,"line_start":1272,"line_end":1272,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":52218,"byte_end":52221,"line_start":1273,"line_end":1273,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":52226,"byte_end":52273,"line_start":1274,"line_end":1274,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":52278,"byte_end":52281,"line_start":1275,"line_end":1275,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":52286,"byte_end":52316,"line_start":1276,"line_end":1276,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":52842,"byte_end":52859,"line_start":1290,"line_end":1290,"column_start":12,"column_end":29},"name":"swap_remove_index","qualname":"<IndexMap<K, V, S>>::swap_remove_index","value":"fn (&mut self, index: usize) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[{"value":"/ Remove the key-value pair by index","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":52467,"byte_end":52505,"line_start":1281,"line_end":1281,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":52510,"byte_end":52513,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":52518,"byte_end":52565,"line_start":1283,"line_end":1283,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":52570,"byte_end":52573,"line_start":1284,"line_end":1284,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":52578,"byte_end":52650,"line_start":1285,"line_end":1285,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":52655,"byte_end":52718,"line_start":1286,"line_end":1286,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":52723,"byte_end":52777,"line_start":1287,"line_end":1287,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":52782,"byte_end":52785,"line_start":1288,"line_end":1288,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":52790,"byte_end":52830,"line_start":1289,"line_end":1289,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":53580,"byte_end":53598,"line_start":1312,"line_end":1312,"column_start":12,"column_end":30},"name":"shift_remove_index","qualname":"<IndexMap<K, V, S>>::shift_remove_index","value":"fn (&mut self, index: usize) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[{"value":"/ Remove the key-value pair by index","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":53210,"byte_end":53248,"line_start":1303,"line_end":1303,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":53253,"byte_end":53256,"line_start":1304,"line_end":1304,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":53261,"byte_end":53308,"line_start":1305,"line_end":1305,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":53313,"byte_end":53316,"line_start":1306,"line_end":1306,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":53321,"byte_end":53387,"line_start":1307,"line_end":1307,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":53392,"byte_end":53453,"line_start":1308,"line_end":1308,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":53458,"byte_end":53515,"line_start":1309,"line_end":1309,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":53520,"byte_end":53523,"line_start":1310,"line_end":1310,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":53528,"byte_end":53568,"line_start":1311,"line_end":1311,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":487},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":72073,"byte_end":72077,"line_start":1818,"line_end":1818,"column_start":12,"column_end":16},"name":"Keys","qualname":"::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":491}],"decl_id":null,"docs":" An iterator over the keys of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An iterator over the keys of a `IndexMap`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":71816,"byte_end":71862,"line_start":1811,"line_end":1811,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":71863,"byte_end":71866,"line_start":1812,"line_end":1812,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`keys`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":71867,"byte_end":71943,"line_start":1813,"line_end":1813,"column_start":1,"column_end":77}},{"value":"/ documentation for more.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":71944,"byte_end":71971,"line_start":1814,"line_end":1814,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":71972,"byte_end":71975,"line_start":1815,"line_end":1815,"column_start":1,"column_end":4}},{"value":"/ [`keys`]: struct.IndexMap.html#method.keys","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":71976,"byte_end":72022,"line_start":1816,"line_end":1816,"column_start":1,"column_end":47}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":72023,"byte_end":72061,"line_start":1817,"line_end":1817,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":517},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":73196,"byte_end":73202,"line_start":1862,"line_end":1862,"column_start":12,"column_end":18},"name":"Values","qualname":"::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":521}],"decl_id":null,"docs":" An iterator over the values of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An iterator over the values of a `IndexMap`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":72931,"byte_end":72979,"line_start":1855,"line_end":1855,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":72980,"byte_end":72983,"line_start":1856,"line_end":1856,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":72984,"byte_end":73062,"line_start":1857,"line_end":1857,"column_start":1,"column_end":79}},{"value":"/ documentation for more.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":73063,"byte_end":73090,"line_start":1858,"line_end":1858,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":73091,"byte_end":73094,"line_start":1859,"line_end":1859,"column_start":1,"column_end":4}},{"value":"/ [`values`]: struct.IndexMap.html#method.values","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":73095,"byte_end":73145,"line_start":1860,"line_end":1860,"column_start":1,"column_end":51}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":73146,"byte_end":73184,"line_start":1861,"line_end":1861,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":547},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":74352,"byte_end":74361,"line_start":1906,"line_end":1906,"column_start":12,"column_end":21},"name":"ValuesMut","qualname":"::map::ValuesMut","value":"ValuesMut {  }","parent":null,"children":[{"krate":0,"index":551}],"decl_id":null,"docs":" A mutable iterator over the values of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the values of a `IndexMap`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":74068,"byte_end":74123,"line_start":1899,"line_end":1899,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":74124,"byte_end":74127,"line_start":1900,"line_end":1900,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values_mut`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":74128,"byte_end":74210,"line_start":1901,"line_end":1901,"column_start":1,"column_end":83}},{"value":"/ documentation for more.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":74211,"byte_end":74238,"line_start":1902,"line_end":1902,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":74239,"byte_end":74242,"line_start":1903,"line_end":1903,"column_start":1,"column_end":4}},{"value":"/ [`values_mut`]: struct.IndexMap.html#method.values_mut","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":74243,"byte_end":74301,"line_start":1904,"line_end":1904,"column_start":1,"column_end":59}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":74302,"byte_end":74340,"line_start":1905,"line_end":1905,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":567},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":75106,"byte_end":75110,"line_start":1935,"line_end":1935,"column_start":12,"column_end":16},"name":"Iter","qualname":"::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":571}],"decl_id":null,"docs":" An iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An iterator over the entries of a `IndexMap`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":74846,"byte_end":74895,"line_start":1928,"line_end":1928,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":74896,"byte_end":74899,"line_start":1929,"line_end":1929,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":74900,"byte_end":74976,"line_start":1930,"line_end":1930,"column_start":1,"column_end":77}},{"value":"/ documentation for more.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":74977,"byte_end":75004,"line_start":1931,"line_end":1931,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":75005,"byte_end":75008,"line_start":1932,"line_end":1932,"column_start":1,"column_end":4}},{"value":"/ [`iter`]: struct.IndexMap.html#method.iter","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":75009,"byte_end":75055,"line_start":1933,"line_end":1933,"column_start":1,"column_end":47}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":75056,"byte_end":75094,"line_start":1934,"line_end":1934,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":597},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":76252,"byte_end":76259,"line_start":1979,"line_end":1979,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":601}],"decl_id":null,"docs":" A mutable iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the entries of a `IndexMap`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":75973,"byte_end":76029,"line_start":1972,"line_end":1972,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":76030,"byte_end":76033,"line_start":1973,"line_end":1973,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter_mut`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":76034,"byte_end":76114,"line_start":1974,"line_end":1974,"column_start":1,"column_end":81}},{"value":"/ documentation for more.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":76115,"byte_end":76142,"line_start":1975,"line_end":1975,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":76143,"byte_end":76146,"line_start":1976,"line_end":1976,"column_start":1,"column_end":4}},{"value":"/ [`iter_mut`]: struct.IndexMap.html#method.iter_mut","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":76147,"byte_end":76201,"line_start":1977,"line_end":1977,"column_start":1,"column_end":55}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":76202,"byte_end":76240,"line_start":1978,"line_end":1978,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":617},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":77064,"byte_end":77072,"line_start":2008,"line_end":2008,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":620}],"decl_id":null,"docs":" An owning iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An owning iterator over the entries of a `IndexMap`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":76743,"byte_end":76799,"line_start":2001,"line_end":2001,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":76800,"byte_end":76803,"line_start":2002,"line_end":2002,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`IndexMap`]","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":76804,"byte_end":76876,"line_start":2003,"line_end":2003,"column_start":1,"column_end":73}},{"value":"/ (provided by the `IntoIterator` trait). See its documentation for more.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":76877,"byte_end":76952,"line_start":2004,"line_end":2004,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":76953,"byte_end":76956,"line_start":2005,"line_end":2005,"column_start":1,"column_end":4}},{"value":"/ [`into_iter`]: struct.IndexMap.html#method.into_iter","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":76957,"byte_end":77013,"line_start":2006,"line_end":2006,"column_start":1,"column_end":57}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":77014,"byte_end":77052,"line_start":2007,"line_end":2007,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":638},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":78043,"byte_end":78048,"line_start":2044,"line_end":2044,"column_start":12,"column_end":17},"name":"Drain","qualname":"::map::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":642}],"decl_id":null,"docs":" A draining iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A draining iterator over the entries of a `IndexMap`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":77772,"byte_end":77829,"line_start":2037,"line_end":2037,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":77830,"byte_end":77833,"line_start":2038,"line_end":2038,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":77834,"byte_end":77911,"line_start":2039,"line_end":2039,"column_start":1,"column_end":78}},{"value":"/ documentation for more.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":77912,"byte_end":77939,"line_start":2040,"line_end":2040,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":77940,"byte_end":77943,"line_start":2041,"line_end":2041,"column_start":1,"column_end":4}},{"value":"/ [`drain`]: struct.IndexMap.html#method.drain","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":77944,"byte_end":77992,"line_start":2042,"line_end":2042,"column_start":1,"column_end":49}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":77993,"byte_end":78031,"line_start":2043,"line_end":2043,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":731},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"set","qualname":"::set","value":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","parent":null,"children":[{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":738},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":753},{"krate":0,"index":1221},{"krate":0,"index":1225},{"krate":0,"index":755},{"krate":0,"index":764},{"krate":0,"index":768},{"krate":0,"index":772},{"krate":0,"index":781},{"krate":0,"index":845},{"krate":0,"index":854},{"krate":0,"index":857},{"krate":0,"index":860},{"krate":0,"index":863},{"krate":0,"index":866},{"krate":0,"index":869},{"krate":0,"index":873},{"krate":0,"index":877},{"krate":0,"index":881},{"krate":0,"index":885},{"krate":0,"index":889},{"krate":0,"index":893},{"krate":0,"index":897},{"krate":0,"index":901},{"krate":0,"index":904},{"krate":0,"index":911},{"krate":0,"index":917},{"krate":0,"index":923},{"krate":0,"index":929},{"krate":0,"index":935},{"krate":0,"index":939},{"krate":0,"index":944},{"krate":0,"index":947},{"krate":0,"index":959},{"krate":0,"index":965},{"krate":0,"index":972},{"krate":0,"index":977},{"krate":0,"index":982},{"krate":0,"index":987},{"krate":0,"index":993},{"krate":0,"index":1000},{"krate":0,"index":1005},{"krate":0,"index":1010},{"krate":0,"index":1015},{"krate":0,"index":1021},{"krate":0,"index":1032},{"krate":0,"index":1038},{"krate":0,"index":1044},{"krate":0,"index":1050},{"krate":0,"index":1055},{"krate":0,"index":1065},{"krate":0,"index":1070},{"krate":0,"index":1075},{"krate":0,"index":1080},{"krate":0,"index":1088},{"krate":0,"index":1096},{"krate":0,"index":1104}],"decl_id":null,"docs":" A hash set implemented using `IndexMap`\n","sig":null,"attributes":[{"value":"! A hash set implemented using `IndexMap`","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":92195,"byte_end":92238,"line_start":1,"line_end":1,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1221},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":94319,"byte_end":94327,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"IndexSet","qualname":"::set::IndexSet","value":"IndexSet {  }","parent":null,"children":[{"krate":0,"index":1224}],"decl_id":null,"docs":" A hash set where the iteration order of the values is independent of their\n hash values.","sig":null,"attributes":[{"value":"/ A hash set where the iteration order of the values is independent of their","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":92696,"byte_end":92774,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ hash values.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":92775,"byte_end":92791,"line_start":26,"line_end":26,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":92792,"byte_end":92795,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ The interface is closely compatible with the standard `HashSet`, but also","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":92796,"byte_end":92873,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ has additional features.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":92874,"byte_end":92902,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":92903,"byte_end":92906,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Order","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":92907,"byte_end":92918,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":92919,"byte_end":92922,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The values have a consistent order that is determined by the sequence of","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":92923,"byte_end":92999,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ insertion and removal calls on the set. The order does not depend on the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93000,"byte_end":93076,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ values or the hash function at all. Note that insertion order and value","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93077,"byte_end":93152,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/ are not affected if a re-insertion is attempted once an element is","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93153,"byte_end":93223,"line_start":36,"line_end":36,"column_start":1,"column_end":71}},{"value":"/ already present.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93224,"byte_end":93244,"line_start":37,"line_end":37,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93245,"byte_end":93248,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ All iterators traverse the set *in order*.  Set operation iterators like","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93249,"byte_end":93325,"line_start":39,"line_end":39,"column_start":1,"column_end":77}},{"value":"/ `union` produce a concatenated order, as do their matching \"bitwise\"","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93326,"byte_end":93398,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/ operators.  See their documentation for specifics.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93399,"byte_end":93453,"line_start":41,"line_end":41,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93454,"byte_end":93457,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The insertion order is preserved, with **notable exceptions** like the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93458,"byte_end":93532,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"/ `.remove()` or `.swap_remove()` methods. Methods such as `.sort_by()` of","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93533,"byte_end":93609,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/ course result in a new order, depending on the sorting order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93610,"byte_end":93675,"line_start":45,"line_end":45,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93676,"byte_end":93679,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Indices","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93680,"byte_end":93693,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93694,"byte_end":93697,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The values are indexed in a compact range without holes in the range","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93698,"byte_end":93770,"line_start":49,"line_end":49,"column_start":1,"column_end":73}},{"value":"/ `0..self.len()`. For example, the method `.get_full` looks up the index for","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93771,"byte_end":93850,"line_start":50,"line_end":50,"column_start":1,"column_end":80}},{"value":"/ a value, and the method `.get_index` looks up the value by index.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93851,"byte_end":93920,"line_start":51,"line_end":51,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93921,"byte_end":93924,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93925,"byte_end":93939,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93940,"byte_end":93943,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93944,"byte_end":93951,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use indexmap::IndexSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93952,"byte_end":93979,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93980,"byte_end":93983,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ // Collects which letters appear in a sentence.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93984,"byte_end":94035,"line_start":58,"line_end":58,"column_start":1,"column_end":52}},{"value":"/ let letters: IndexSet<_> = \"a short treatise on fungi\".chars().collect();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":94036,"byte_end":94113,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":94114,"byte_end":94117,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ assert!(letters.contains(&'s'));","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":94118,"byte_end":94154,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ assert!(letters.contains(&'t'));","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":94155,"byte_end":94191,"line_start":62,"line_end":62,"column_start":1,"column_end":37}},{"value":"/ assert!(letters.contains(&'u'));","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":94192,"byte_end":94228,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"/ assert!(!letters.contains(&'y'));","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":94229,"byte_end":94266,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":94267,"byte_end":94274,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"cfg(has_std)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":94292,"byte_end":94307,"line_start":67,"line_end":67,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":95484,"byte_end":95487,"line_start":118,"line_end":118,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexSet<T>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set. (Does not allocate.)\n","sig":null,"attributes":[{"value":"/ Create a new set. (Does not allocate.)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":95430,"byte_end":95472,"line_start":117,"line_end":117,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":95725,"byte_end":95738,"line_start":128,"line_end":128,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<IndexSet<T>>::with_capacity","value":"fn (n: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with capacity for `n` elements.\n (Does not allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new set with capacity for `n` elements.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":95574,"byte_end":95626,"line_start":124,"line_end":124,"column_start":5,"column_end":57}},{"value":"/ (Does not allocate if `n` is zero.)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":95631,"byte_end":95670,"line_start":125,"line_end":125,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":95675,"byte_end":95678,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":95683,"byte_end":95713,"line_start":127,"line_end":127,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":96025,"byte_end":96049,"line_start":140,"line_end":140,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<IndexSet<T, S>>::with_capacity_and_hasher","value":"fn (n: usize, hash_builder: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with capacity for `n` elements.\n (Does not allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new set with capacity for `n` elements.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":95874,"byte_end":95926,"line_start":136,"line_end":136,"column_start":5,"column_end":57}},{"value":"/ (Does not allocate if `n` is zero.)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":95931,"byte_end":95970,"line_start":137,"line_end":137,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":95975,"byte_end":95978,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":95983,"byte_end":96013,"line_start":139,"line_end":139,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":96335,"byte_end":96338,"line_start":152,"line_end":152,"column_start":12,"column_end":15},"name":"len","qualname":"<IndexSet<T, S>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of elements in the set.","sig":null,"attributes":[{"value":"/ Return the number of elements in the set.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":96235,"byte_end":96280,"line_start":149,"line_end":149,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":96285,"byte_end":96288,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":96293,"byte_end":96323,"line_start":151,"line_end":151,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":96495,"byte_end":96503,"line_start":159,"line_end":159,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IndexSet<T, S>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the set contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the set contains no elements.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":96391,"byte_end":96440,"line_start":156,"line_end":156,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":96445,"byte_end":96448,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":96453,"byte_end":96483,"line_start":158,"line_end":158,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":96612,"byte_end":96623,"line_start":164,"line_end":164,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<IndexSet<T, S>>::with_hasher","value":"fn (hash_builder: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with `hash_builder`\n","sig":null,"attributes":[{"value":"/ Create a new set with `hash_builder`","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":96560,"byte_end":96600,"line_start":163,"line_end":163,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":96845,"byte_end":96851,"line_start":174,"line_end":174,"column_start":12,"column_end":18},"name":"hasher","qualname":"<IndexSet<T, S>>::hasher","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the set's `BuildHasher`.\n","sig":null,"attributes":[{"value":"/ Return a reference to the set's `BuildHasher`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":96783,"byte_end":96833,"line_start":173,"line_end":173,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":96984,"byte_end":96992,"line_start":182,"line_end":182,"column_start":12,"column_end":20},"name":"capacity","qualname":"<IndexSet<T, S>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.\n","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":96942,"byte_end":96972,"line_start":181,"line_end":181,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":97245,"byte_end":97250,"line_start":195,"line_end":195,"column_start":12,"column_end":17},"name":"clear","qualname":"<IndexSet<T, S>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove all elements in the set, while preserving its capacity.","sig":null,"attributes":[{"value":"/ Remove all elements in the set, while preserving its capacity.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":97124,"byte_end":97190,"line_start":192,"line_end":192,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":97195,"byte_end":97198,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":97203,"byte_end":97233,"line_start":194,"line_end":194,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":97348,"byte_end":97355,"line_start":200,"line_end":200,"column_start":12,"column_end":19},"name":"reserve","qualname":"<IndexSet<T, S>>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" FIXME Not implemented fully yet\n","sig":null,"attributes":[{"value":"/ FIXME Not implemented fully yet","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":97301,"byte_end":97336,"line_start":199,"line_end":199,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":97789,"byte_end":97795,"line_start":212,"line_end":212,"column_start":12,"column_end":18},"name":"insert","qualname":"<IndexSet<T, S>>::insert","value":"fn (&mut self, value: T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the set.","sig":null,"attributes":[{"value":"/ Insert the value into the set.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":97437,"byte_end":97471,"line_start":204,"line_end":204,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":97476,"byte_end":97479,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ If an equivalent item already exists in the set, it returns","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":97484,"byte_end":97547,"line_start":206,"line_end":206,"column_start":5,"column_end":68}},{"value":"/ `false` leaving the original value in the set and without","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":97552,"byte_end":97613,"line_start":207,"line_end":207,"column_start":5,"column_end":66}},{"value":"/ altering its insertion order. Otherwise, it inserts the new","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":97618,"byte_end":97681,"line_start":208,"line_end":208,"column_start":5,"column_end":68}},{"value":"/ item and returns `true`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":97686,"byte_end":97714,"line_start":209,"line_end":209,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":97719,"byte_end":97722,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":97727,"byte_end":97777,"line_start":211,"line_end":211,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":98333,"byte_end":98344,"line_start":225,"line_end":225,"column_start":12,"column_end":23},"name":"insert_full","qualname":"<IndexSet<T, S>>::insert_full","value":"fn (&mut self, value: T) -> (usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the set, and get its index.","sig":null,"attributes":[{"value":"/ Insert the value into the set, and get its index.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":97883,"byte_end":97936,"line_start":216,"line_end":216,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":97941,"byte_end":97944,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ If an equivalent item already exists in the set, it returns","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":97949,"byte_end":98012,"line_start":218,"line_end":218,"column_start":5,"column_end":68}},{"value":"/ the index of the existing item and `false`, leaving the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":98017,"byte_end":98076,"line_start":219,"line_end":219,"column_start":5,"column_end":64}},{"value":"/ original value in the set and without altering its insertion","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":98081,"byte_end":98145,"line_start":220,"line_end":220,"column_start":5,"column_end":69}},{"value":"/ order. Otherwise, it inserts the new item and returns the index","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":98150,"byte_end":98217,"line_start":221,"line_end":221,"column_start":5,"column_end":72}},{"value":"/ of the inserted item and `true`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":98222,"byte_end":98258,"line_start":222,"line_end":222,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":98263,"byte_end":98266,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":98271,"byte_end":98321,"line_start":224,"line_end":224,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":98743,"byte_end":98747,"line_start":239,"line_end":239,"column_start":12,"column_end":16},"name":"iter","qualname":"<IndexSet<T, S>>::iter","value":"fn (&self) -> Iter<T>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the set, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the values of the set, in their order","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":98666,"byte_end":98731,"line_start":238,"line_end":238,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":99012,"byte_end":99022,"line_start":248,"line_end":248,"column_start":12,"column_end":22},"name":"difference","qualname":"<IndexSet<T, S>>::difference","value":"fn <'a, S2> (&'a self, other: &'a IndexSet<T, S2>) -> Difference<'a, T, S2>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in `self` but not `other`.","sig":null,"attributes":[{"value":"/ Return an iterator over the values that are in `self` but not `other`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":98844,"byte_end":98918,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":98923,"byte_end":98926,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ Values are produced in the same order that they appear in `self`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":98931,"byte_end":99000,"line_start":247,"line_end":247,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":99471,"byte_end":99491,"line_start":263,"line_end":263,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<IndexSet<T, S>>::symmetric_difference","value":"fn <'a, S2> (&'a self, other: &'a IndexSet<T, S2>) -> SymmetricDifference<'a, T, S, S2>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in `self` or `other`,\n but not in both.","sig":null,"attributes":[{"value":"/ Return an iterator over the values that are in `self` or `other`,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":99227,"byte_end":99296,"line_start":258,"line_end":258,"column_start":5,"column_end":74}},{"value":"/ but not in both.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":99301,"byte_end":99321,"line_start":259,"line_end":259,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":99326,"byte_end":99329,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ Values from `self` are produced in their original order, followed by","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":99334,"byte_end":99406,"line_start":261,"line_end":261,"column_start":5,"column_end":77}},{"value":"/ values from `other` in their original order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":99411,"byte_end":99459,"line_start":262,"line_end":262,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":99931,"byte_end":99943,"line_start":278,"line_end":278,"column_start":12,"column_end":24},"name":"intersection","qualname":"<IndexSet<T, S>>::intersection","value":"fn <'a, S2> (&'a self, other: &'a IndexSet<T, S2>) -> Intersection<'a, T, S2>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in both `self` and `other`.","sig":null,"attributes":[{"value":"/ Return an iterator over the values that are in both `self` and `other`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":99762,"byte_end":99837,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":99842,"byte_end":99845,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ Values are produced in the same order that they appear in `self`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":99850,"byte_end":99919,"line_start":277,"line_end":277,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":100385,"byte_end":100390,"line_start":292,"line_end":292,"column_start":12,"column_end":17},"name":"union","qualname":"<IndexSet<T, S>>::union","value":"fn <'a, S2> (&'a self, other: &'a IndexSet<T, S2>) -> Union<'a, T, S>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over all values that are in `self` or `other`.","sig":null,"attributes":[{"value":"/ Return an iterator over all values that are in `self` or `other`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":100152,"byte_end":100221,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":100226,"byte_end":100229,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ Values from `self` are produced in their original order, followed by","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":100234,"byte_end":100306,"line_start":290,"line_end":290,"column_start":5,"column_end":77}},{"value":"/ values that are unique to `other` in their original order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":100311,"byte_end":100373,"line_start":291,"line_end":291,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":100724,"byte_end":100732,"line_start":304,"line_end":304,"column_start":12,"column_end":20},"name":"contains","qualname":"<IndexSet<T, S>>::contains","value":"fn <Q> (&self, value: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if an equivalent to `value` exists in the set.","sig":null,"attributes":[{"value":"/ Return `true` if an equivalent to `value` exists in the set.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":100595,"byte_end":100659,"line_start":301,"line_end":301,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":100664,"byte_end":100667,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":100672,"byte_end":100712,"line_start":303,"line_end":303,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":101025,"byte_end":101028,"line_start":315,"line_end":315,"column_start":12,"column_end":15},"name":"get","qualname":"<IndexSet<T, S>>::get","value":"fn <Q> (&self, value: &Q) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value stored in the set, if it is present,\n else `None`.","sig":null,"attributes":[{"value":"/ Return a reference to the value stored in the set, if it is present,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":100867,"byte_end":100939,"line_start":311,"line_end":311,"column_start":5,"column_end":77}},{"value":"/ else `None`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":100944,"byte_end":100960,"line_start":312,"line_end":312,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":100965,"byte_end":100968,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":100973,"byte_end":101013,"line_start":314,"line_end":314,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":101229,"byte_end":101237,"line_start":323,"line_end":323,"column_start":12,"column_end":20},"name":"get_full","qualname":"<IndexSet<T, S>>::get_full","value":"fn <Q> (&self, value: &Q) -> Option<(usize, &T)>","parent":null,"children":[],"decl_id":null,"docs":" Return item index and value\n","sig":null,"attributes":[{"value":"/ Return item index and value","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":101186,"byte_end":101217,"line_start":322,"line_end":322,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":101608,"byte_end":101615,"line_start":334,"line_end":334,"column_start":12,"column_end":19},"name":"replace","qualname":"<IndexSet<T, S>>::replace","value":"fn (&mut self, value: T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set, replacing the existing value, if any, that is\n equal to the given one. Returns the replaced value.","sig":null,"attributes":[{"value":"/ Adds a value to the set, replacing the existing value, if any, that is","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":101409,"byte_end":101483,"line_start":330,"line_end":330,"column_start":5,"column_end":79}},{"value":"/ equal to the given one. Returns the replaced value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":101488,"byte_end":101543,"line_start":331,"line_end":331,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":101548,"byte_end":101551,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":101556,"byte_end":101596,"line_start":333,"line_end":333,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102191,"byte_end":102197,"line_start":352,"line_end":352,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexSet<T, S>>::remove","value":"fn <Q> (&mut self, value: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set, and return `true` if it was present.","sig":null,"attributes":[{"value":"/ Remove the value from the set, and return `true` if it was present.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":101888,"byte_end":101959,"line_start":346,"line_end":346,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":101964,"byte_end":101967,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove(value)`, if you want","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":101972,"byte_end":102042,"line_start":348,"line_end":348,"column_start":5,"column_end":75}},{"value":"/ to preserve the order of the values in the set, use `.shift_remove(value)`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102047,"byte_end":102126,"line_start":349,"line_end":349,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102131,"byte_end":102134,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102139,"byte_end":102179,"line_start":351,"line_end":351,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102742,"byte_end":102753,"line_start":368,"line_end":368,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<IndexSet<T, S>>::swap_remove","value":"fn <Q> (&mut self, value: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set, and return `true` if it was present.","sig":null,"attributes":[{"value":"/ Remove the value from the set, and return `true` if it was present.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102331,"byte_end":102402,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102407,"byte_end":102410,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102415,"byte_end":102488,"line_start":361,"line_end":361,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102493,"byte_end":102556,"line_start":362,"line_end":362,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102561,"byte_end":102615,"line_start":363,"line_end":363,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102620,"byte_end":102623,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ Return `false` if `value` was not in the set.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102628,"byte_end":102677,"line_start":365,"line_end":365,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102682,"byte_end":102685,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102690,"byte_end":102730,"line_start":367,"line_end":367,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":103307,"byte_end":103319,"line_start":384,"line_end":384,"column_start":12,"column_end":24},"name":"shift_remove","qualname":"<IndexSet<T, S>>::shift_remove","value":"fn <Q> (&mut self, value: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set, and return `true` if it was present.","sig":null,"attributes":[{"value":"/ Remove the value from the set, and return `true` if it was present.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102901,"byte_end":102972,"line_start":375,"line_end":375,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102977,"byte_end":102980,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102985,"byte_end":103052,"line_start":377,"line_end":377,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":103057,"byte_end":103118,"line_start":378,"line_end":378,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":103123,"byte_end":103180,"line_start":379,"line_end":379,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":103185,"byte_end":103188,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Return `false` if `value` was not in the set.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":103193,"byte_end":103242,"line_start":381,"line_end":381,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":103247,"byte_end":103250,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":103255,"byte_end":103295,"line_start":383,"line_end":383,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":103805,"byte_end":103809,"line_start":399,"line_end":399,"column_start":12,"column_end":16},"name":"take","qualname":"<IndexSet<T, S>>::take","value":"fn <Q> (&mut self, value: &Q) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the\n given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":103468,"byte_end":103542,"line_start":391,"line_end":391,"column_start":5,"column_end":79}},{"value":"/ given one.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":103547,"byte_end":103561,"line_start":392,"line_end":392,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":103566,"byte_end":103569,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_take(value)`, if you need to","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":103574,"byte_end":103645,"line_start":394,"line_end":394,"column_start":5,"column_end":76}},{"value":"/ preserve the order of the values in the set, use `.shift_take(value)`","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":103650,"byte_end":103723,"line_start":395,"line_end":395,"column_start":5,"column_end":78}},{"value":"/ instead.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":103728,"byte_end":103740,"line_start":396,"line_end":396,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":103745,"byte_end":103748,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":103753,"byte_end":103793,"line_start":398,"line_end":398,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104378,"byte_end":104387,"line_start":416,"line_end":416,"column_start":12,"column_end":21},"name":"swap_take","qualname":"<IndexSet<T, S>>::swap_take","value":"fn <Q> (&mut self, value: &Q) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the\n given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":103946,"byte_end":104020,"line_start":406,"line_end":406,"column_start":5,"column_end":79}},{"value":"/ given one.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104025,"byte_end":104039,"line_start":407,"line_end":407,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104044,"byte_end":104047,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104052,"byte_end":104125,"line_start":409,"line_end":409,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104130,"byte_end":104193,"line_start":410,"line_end":410,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104198,"byte_end":104252,"line_start":411,"line_end":411,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104257,"byte_end":104260,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104265,"byte_end":104313,"line_start":413,"line_end":413,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104318,"byte_end":104321,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104326,"byte_end":104366,"line_start":415,"line_end":415,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104982,"byte_end":104992,"line_start":433,"line_end":433,"column_start":12,"column_end":22},"name":"shift_take","qualname":"<IndexSet<T, S>>::shift_take","value":"fn <Q> (&mut self, value: &Q) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the\n given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104555,"byte_end":104629,"line_start":423,"line_end":423,"column_start":5,"column_end":79}},{"value":"/ given one.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104634,"byte_end":104648,"line_start":424,"line_end":424,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104653,"byte_end":104656,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104661,"byte_end":104728,"line_start":426,"line_end":426,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104733,"byte_end":104794,"line_start":427,"line_end":427,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104799,"byte_end":104856,"line_start":428,"line_end":428,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104861,"byte_end":104864,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104869,"byte_end":104917,"line_start":430,"line_end":430,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104922,"byte_end":104925,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104930,"byte_end":104970,"line_start":432,"line_end":432,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":105512,"byte_end":105528,"line_start":447,"line_end":447,"column_start":12,"column_end":28},"name":"swap_remove_full","qualname":"<IndexSet<T, S>>::swap_remove_full","value":"fn <Q> (&mut self, value: &Q) -> Option<(usize, T)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set return it and the index it had.","sig":null,"attributes":[{"value":"/ Remove the value from the set return it and the index it had.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":105161,"byte_end":105226,"line_start":440,"line_end":440,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":105231,"byte_end":105234,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":105239,"byte_end":105312,"line_start":442,"line_end":442,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":105317,"byte_end":105380,"line_start":443,"line_end":443,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":105385,"byte_end":105439,"line_start":444,"line_end":444,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":105444,"byte_end":105447,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":105452,"byte_end":105500,"line_start":446,"line_end":446,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106056,"byte_end":106073,"line_start":461,"line_end":461,"column_start":12,"column_end":29},"name":"shift_remove_full","qualname":"<IndexSet<T, S>>::shift_remove_full","value":"fn <Q> (&mut self, value: &Q) -> Option<(usize, T)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set return it and the index it had.","sig":null,"attributes":[{"value":"/ Remove the value from the set return it and the index it had.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":105710,"byte_end":105775,"line_start":454,"line_end":454,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":105780,"byte_end":105783,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":105788,"byte_end":105855,"line_start":456,"line_end":456,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":105860,"byte_end":105921,"line_start":457,"line_end":457,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":105926,"byte_end":105983,"line_start":458,"line_end":458,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":105988,"byte_end":105991,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":105996,"byte_end":106044,"line_start":460,"line_end":460,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106346,"byte_end":106349,"line_start":471,"line_end":471,"column_start":12,"column_end":15},"name":"pop","qualname":"<IndexSet<T, S>>::pop","value":"fn (&mut self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the last value","sig":null,"attributes":[{"value":"/ Remove the last value","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106256,"byte_end":106281,"line_start":468,"line_end":468,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106286,"byte_end":106289,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106294,"byte_end":106334,"line_start":470,"line_end":470,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106694,"byte_end":106700,"line_start":482,"line_end":482,"column_start":12,"column_end":18},"name":"retain","qualname":"<IndexSet<T, S>>::retain","value":"fn <F> (&mut self, mut keep: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Scan through each value in the set and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[{"value":"/ Scan through each value in the set and keep those where the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106427,"byte_end":106490,"line_start":475,"line_end":475,"column_start":5,"column_end":68}},{"value":"/ closure `keep` returns `true`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106495,"byte_end":106529,"line_start":476,"line_end":476,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106534,"byte_end":106537,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ The elements are visited in order, and remaining elements keep their","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106542,"byte_end":106614,"line_start":478,"line_end":478,"column_start":5,"column_end":77}},{"value":"/ order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106619,"byte_end":106629,"line_start":479,"line_end":479,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106634,"byte_end":106637,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106642,"byte_end":106682,"line_start":481,"line_end":481,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106945,"byte_end":106949,"line_start":492,"line_end":492,"column_start":12,"column_end":16},"name":"sort","qualname":"<IndexSet<T, S>>::sort","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sort the set’s values by their default ordering.","sig":null,"attributes":[{"value":"/ Sort the set’s values by their default ordering.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106836,"byte_end":106890,"line_start":489,"line_end":489,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106895,"byte_end":106898,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ See `sort_by` for details.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106903,"byte_end":106933,"line_start":491,"line_end":491,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":107210,"byte_end":107217,"line_start":502,"line_end":502,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<IndexSet<T, S>>::sort_by","value":"fn <F> (&mut self, mut compare: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sort the set’s values in place using the comparison function `compare`.","sig":null,"attributes":[{"value":"/ Sort the set’s values in place using the comparison function `compare`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":107033,"byte_end":107110,"line_start":499,"line_end":499,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":107115,"byte_end":107118,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n log n)** time and **O(n)** space. The sort is stable.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":107123,"byte_end":107198,"line_start":501,"line_end":501,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":107520,"byte_end":107529,"line_start":513,"line_end":513,"column_start":12,"column_end":21},"name":"sorted_by","qualname":"<IndexSet<T, S>>::sorted_by","value":"fn <F> (self, mut cmp: F) -> IntoIter<T>","parent":null,"children":[],"decl_id":null,"docs":" Sort the values of the set and return a by value iterator of\n the values with the result.","sig":null,"attributes":[{"value":"/ Sort the values of the set and return a by value iterator of","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":107372,"byte_end":107436,"line_start":509,"line_end":509,"column_start":5,"column_end":69}},{"value":"/ the values with the result.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":107441,"byte_end":107472,"line_start":510,"line_end":510,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":107477,"byte_end":107480,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ The sort is stable.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":107485,"byte_end":107508,"line_start":512,"line_end":512,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":107862,"byte_end":107867,"line_start":524,"line_end":524,"column_start":12,"column_end":17},"name":"drain","qualname":"<IndexSet<T, S>>::drain","value":"fn (&mut self, range: RangeFull) -> Drain<T>","parent":null,"children":[],"decl_id":null,"docs":" Clears the `IndexSet`, returning all values as a drain iterator.\n Keeps the allocated memory for reuse.\n","sig":null,"attributes":[{"value":"/ Clears the `IndexSet`, returning all values as a drain iterator.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":107736,"byte_end":107804,"line_start":522,"line_end":522,"column_start":5,"column_end":73}},{"value":"/ Keeps the allocated memory for reuse.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":107809,"byte_end":107850,"line_start":523,"line_end":523,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":108163,"byte_end":108172,"line_start":537,"line_end":537,"column_start":12,"column_end":21},"name":"get_index","qualname":"<IndexSet<T, S>>::get_index","value":"fn (&self, index: usize) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a value by index","sig":null,"attributes":[{"value":"/ Get a value by index","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":108024,"byte_end":108048,"line_start":532,"line_end":532,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":108053,"byte_end":108056,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":108061,"byte_end":108108,"line_start":534,"line_end":534,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":108113,"byte_end":108116,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":108121,"byte_end":108151,"line_start":536,"line_end":536,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":108649,"byte_end":108666,"line_start":550,"line_end":550,"column_start":12,"column_end":29},"name":"swap_remove_index","qualname":"<IndexSet<T, S>>::swap_remove_index","value":"fn (&mut self, index: usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[{"value":"/ Remove the key-value pair by index","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":108273,"byte_end":108311,"line_start":541,"line_end":541,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":108316,"byte_end":108319,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":108324,"byte_end":108371,"line_start":543,"line_end":543,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":108376,"byte_end":108379,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":108384,"byte_end":108457,"line_start":545,"line_end":545,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":108462,"byte_end":108525,"line_start":546,"line_end":546,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":108530,"byte_end":108584,"line_start":547,"line_end":547,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":108589,"byte_end":108592,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":108597,"byte_end":108637,"line_start":549,"line_end":549,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":109148,"byte_end":109166,"line_start":563,"line_end":563,"column_start":12,"column_end":30},"name":"shift_remove_index","qualname":"<IndexSet<T, S>>::shift_remove_index","value":"fn (&mut self, index: usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[{"value":"/ Remove the key-value pair by index","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":108777,"byte_end":108815,"line_start":554,"line_end":554,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":108820,"byte_end":108823,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":108828,"byte_end":108875,"line_start":556,"line_end":556,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":108880,"byte_end":108883,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":108888,"byte_end":108955,"line_start":558,"line_end":558,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":108960,"byte_end":109021,"line_start":559,"line_end":559,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":109026,"byte_end":109083,"line_start":560,"line_end":560,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":109088,"byte_end":109091,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":109096,"byte_end":109136,"line_start":562,"line_end":562,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":854},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":109595,"byte_end":109603,"line_start":575,"line_end":575,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":856}],"decl_id":null,"docs":" An owning iterator over the items of a `IndexSet`.","sig":null,"attributes":[{"value":"/ An owning iterator over the items of a `IndexSet`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":109276,"byte_end":109330,"line_start":568,"line_end":568,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":109331,"byte_end":109334,"line_start":569,"line_end":569,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`IndexSet`]","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":109335,"byte_end":109407,"line_start":570,"line_end":570,"column_start":1,"column_end":73}},{"value":"/ (provided by the `IntoIterator` trait). See its documentation for more.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":109408,"byte_end":109483,"line_start":571,"line_end":571,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":109484,"byte_end":109487,"line_start":572,"line_end":572,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":109488,"byte_end":109526,"line_start":573,"line_end":573,"column_start":1,"column_end":39}},{"value":"/ [`into_iter`]: struct.IndexSet.html#method.into_iter","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":109527,"byte_end":109583,"line_start":574,"line_end":574,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":869},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":110492,"byte_end":110496,"line_start":611,"line_end":611,"column_start":12,"column_end":16},"name":"Iter","qualname":"::set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":872}],"decl_id":null,"docs":" An iterator over the items of a `IndexSet`.","sig":null,"attributes":[{"value":"/ An iterator over the items of a `IndexSet`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":110234,"byte_end":110281,"line_start":604,"line_end":604,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":110282,"byte_end":110285,"line_start":605,"line_end":605,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`IndexSet`].","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":110286,"byte_end":110354,"line_start":606,"line_end":606,"column_start":1,"column_end":69}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":110355,"byte_end":110390,"line_start":607,"line_end":607,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":110391,"byte_end":110394,"line_start":608,"line_end":608,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":110395,"byte_end":110433,"line_start":609,"line_end":609,"column_start":1,"column_end":39}},{"value":"/ [`iter`]: struct.IndexSet.html#method.iter","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":110434,"byte_end":110480,"line_start":610,"line_end":610,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":893},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":111510,"byte_end":111515,"line_start":654,"line_end":654,"column_start":12,"column_end":17},"name":"Drain","qualname":"::set::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":896}],"decl_id":null,"docs":" A draining iterator over the items of a `IndexSet`.","sig":null,"attributes":[{"value":"/ A draining iterator over the items of a `IndexSet`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":111241,"byte_end":111296,"line_start":647,"line_end":647,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":111297,"byte_end":111300,"line_start":648,"line_end":648,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`IndexSet`].","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":111301,"byte_end":111370,"line_start":649,"line_end":649,"column_start":1,"column_end":70}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":111371,"byte_end":111406,"line_start":650,"line_end":650,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":111407,"byte_end":111410,"line_start":651,"line_end":651,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":111411,"byte_end":111449,"line_start":652,"line_end":652,"column_start":1,"column_end":39}},{"value":"/ [`drain`]: struct.IndexSet.html#method.drain","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":111450,"byte_end":111498,"line_start":653,"line_end":653,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":113827,"byte_end":113838,"line_start":767,"line_end":767,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<IndexSet<T, S>>::is_disjoint","value":"fn <S2> (&self, other: &IndexSet<T, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` has no elements in common with `other`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":113747,"byte_end":113815,"line_start":766,"line_end":766,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":114213,"byte_end":114222,"line_start":779,"line_end":779,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<IndexSet<T, S>>::is_subset","value":"fn <S2> (&self, other: &IndexSet<T, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all elements of `self` are contained in `other`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all elements of `self` are contained in `other`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":114131,"byte_end":114201,"line_start":778,"line_end":778,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":957},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":114490,"byte_end":114501,"line_start":787,"line_end":787,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<IndexSet<T, S>>::is_superset","value":"fn <S2> (&self, other: &IndexSet<T, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all elements of `other` are contained in `self`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all elements of `other` are contained in `self`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":114408,"byte_end":114478,"line_start":786,"line_end":786,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":959},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":114927,"byte_end":114937,"line_start":802,"line_end":802,"column_start":12,"column_end":22},"name":"Difference","qualname":"::set::Difference","value":"Difference {  }","parent":null,"children":[{"krate":0,"index":963},{"krate":0,"index":964}],"decl_id":null,"docs":" A lazy iterator producing elements in the difference of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the difference of `IndexSet`s.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":114626,"byte_end":114698,"line_start":795,"line_end":795,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":114699,"byte_end":114702,"line_start":796,"line_end":796,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`difference`] method on [`IndexSet`].","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":114703,"byte_end":114777,"line_start":797,"line_end":797,"column_start":1,"column_end":75}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":114778,"byte_end":114813,"line_start":798,"line_end":798,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":114814,"byte_end":114817,"line_start":799,"line_end":799,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":114818,"byte_end":114856,"line_start":800,"line_end":800,"column_start":1,"column_end":39}},{"value":"/ [`difference`]: struct.IndexSet.html#method.difference","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":114857,"byte_end":114915,"line_start":801,"line_end":801,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":987},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":116506,"byte_end":116518,"line_start":869,"line_end":869,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::set::Intersection","value":"Intersection {  }","parent":null,"children":[{"krate":0,"index":991},{"krate":0,"index":992}],"decl_id":null,"docs":" A lazy iterator producing elements in the intersection of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the intersection of `IndexSet`s.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":116197,"byte_end":116271,"line_start":862,"line_end":862,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":116272,"byte_end":116275,"line_start":863,"line_end":863,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`intersection`] method on [`IndexSet`].","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":116276,"byte_end":116352,"line_start":864,"line_end":864,"column_start":1,"column_end":77}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":116353,"byte_end":116388,"line_start":865,"line_end":865,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":116389,"byte_end":116392,"line_start":866,"line_end":866,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":116393,"byte_end":116431,"line_start":867,"line_end":867,"column_start":1,"column_end":39}},{"value":"/ [`intersection`]: struct.IndexSet.html#method.intersection","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":116432,"byte_end":116494,"line_start":868,"line_end":868,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1015},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":118127,"byte_end":118146,"line_start":936,"line_end":936,"column_start":12,"column_end":31},"name":"SymmetricDifference","qualname":"::set::SymmetricDifference","value":"SymmetricDifference {  }","parent":null,"children":[{"krate":0,"index":1020}],"decl_id":null,"docs":" A lazy iterator producing elements in the symmetric difference of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the symmetric difference of `IndexSet`s.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":117786,"byte_end":117868,"line_start":929,"line_end":929,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":117869,"byte_end":117872,"line_start":930,"line_end":930,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`symmetric_difference`] method on","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":117873,"byte_end":117943,"line_start":931,"line_end":931,"column_start":1,"column_end":71}},{"value":"/ [`IndexSet`]. See its documentation for more.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":117944,"byte_end":117993,"line_start":932,"line_end":932,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":117994,"byte_end":117997,"line_start":933,"line_end":933,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":117998,"byte_end":118036,"line_start":934,"line_end":934,"column_start":1,"column_end":39}},{"value":"/ [`symmetric_difference`]: struct.IndexSet.html#method.symmetric_difference","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":118037,"byte_end":118115,"line_start":935,"line_end":935,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":1050},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":119684,"byte_end":119689,"line_start":1001,"line_end":1001,"column_start":12,"column_end":17},"name":"Union","qualname":"::set::Union","value":"Union {  }","parent":null,"children":[{"krate":0,"index":1054}],"decl_id":null,"docs":" A lazy iterator producing elements in the union of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the union of `IndexSet`s.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":119403,"byte_end":119470,"line_start":994,"line_end":994,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":119471,"byte_end":119474,"line_start":995,"line_end":995,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`union`] method on [`IndexSet`].","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":119475,"byte_end":119544,"line_start":996,"line_end":996,"column_start":1,"column_end":70}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":119545,"byte_end":119580,"line_start":997,"line_end":997,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":119581,"byte_end":119584,"line_start":998,"line_end":998,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":119585,"byte_end":119623,"line_start":999,"line_end":999,"column_start":1,"column_end":39}},{"value":"/ [`union`]: struct.IndexSet.html#method.union","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":119624,"byte_end":119672,"line_start":1000,"line_end":1000,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1133},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":4223,"byte_end":4228,"line_start":157,"line_end":157,"column_start":10,"column_end":15},"name":"Entry","qualname":"::Entries::Entry","value":"type Entry;","parent":{"krate":0,"index":1132},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/equivalent.rs","byte_start":8336,"byte_end":8337,"line_start":18,"line_end":18,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":16}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":10177,"byte_end":10185,"line_start":52,"line_end":52,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/serde.rs","byte_start":11132,"byte_end":11140,"line_start":16,"line_end":16,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/serde.rs","byte_start":11646,"byte_end":11661,"line_start":36,"line_end":36,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/serde.rs","byte_start":12366,"byte_end":12374,"line_start":64,"line_end":64,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/serde.rs","byte_start":12722,"byte_end":12730,"line_start":78,"line_end":78,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/serde.rs","byte_start":13134,"byte_end":13142,"line_start":95,"line_end":95,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/serde.rs","byte_start":13613,"byte_end":13628,"line_start":114,"line_end":114,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/serde.rs","byte_start":14289,"byte_end":14297,"line_start":141,"line_end":141,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/serde.rs","byte_start":14614,"byte_end":14622,"line_start":154,"line_end":154,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":16334,"byte_end":16343,"line_start":43,"line_end":43,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":16660,"byte_end":16669,"line_start":54,"line_end":54,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":16696,"byte_end":16705,"line_start":55,"line_end":55,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":16802,"byte_end":16811,"line_start":62,"line_end":62,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":17039,"byte_end":17048,"line_start":71,"line_end":71,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":17312,"byte_end":17321,"line_start":84,"line_end":84,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18231,"byte_end":18234,"line_start":111,"line_end":111,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18332,"byte_end":18335,"line_start":118,"line_end":118,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18559,"byte_end":18562,"line_start":127,"line_end":127,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":201},{"krate":0,"index":203},{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":21207,"byte_end":21221,"line_start":235,"line_end":235,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":23811,"byte_end":23819,"line_start":323,"line_end":323,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":24735,"byte_end":24743,"line_start":360,"line_end":360,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":26386,"byte_end":26394,"line_start":424,"line_end":424,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":26792,"byte_end":26800,"line_start":439,"line_end":439,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":28802,"byte_end":28814,"line_start":517,"line_end":517,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":31257,"byte_end":31262,"line_start":602,"line_end":602,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":33153,"byte_end":33158,"line_start":666,"line_end":666,"column_start":65,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":33721,"byte_end":33734,"line_start":686,"line_end":686,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":36856,"byte_end":36869,"line_start":775,"line_end":775,"column_start":65,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":37370,"byte_end":37381,"line_start":795,"line_end":795,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":38334,"byte_end":38345,"line_start":830,"line_end":830,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":38540,"byte_end":38548,"line_start":838,"line_end":838,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":383},{"krate":0,"index":385},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":392},{"krate":0,"index":394},{"krate":0,"index":397},{"krate":0,"index":399},{"krate":0,"index":401},{"krate":0,"index":403},{"krate":0,"index":405},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":411},{"krate":0,"index":413},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":419},{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":51889,"byte_end":51897,"line_start":1262,"line_end":1262,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":54223,"byte_end":54235,"line_start":1332,"line_end":1332,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":453},{"krate":0,"index":455},{"krate":0,"index":457},{"krate":0,"index":459},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":474},{"krate":0,"index":477},{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":72179,"byte_end":72183,"line_start":1822,"line_end":1822,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":72302,"byte_end":72306,"line_start":1828,"line_end":1828,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":72463,"byte_end":72467,"line_start":1834,"line_end":1834,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":72622,"byte_end":72626,"line_start":1841,"line_end":1841,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":72792,"byte_end":72796,"line_start":1849,"line_end":1849,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":73293,"byte_end":73299,"line_start":1866,"line_end":1866,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":526},{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":73420,"byte_end":73426,"line_start":1872,"line_end":1872,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":73590,"byte_end":73596,"line_start":1878,"line_end":1878,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":73751,"byte_end":73757,"line_start":1885,"line_end":1885,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":73927,"byte_end":73933,"line_start":1893,"line_end":1893,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":74455,"byte_end":74464,"line_start":1910,"line_end":1910,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":74589,"byte_end":74598,"line_start":1916,"line_end":1916,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":74762,"byte_end":74771,"line_start":1922,"line_end":1922,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":75201,"byte_end":75205,"line_start":1939,"line_end":1939,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":576},{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1197}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":75330,"byte_end":75334,"line_start":1945,"line_end":1945,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":75493,"byte_end":75497,"line_start":1951,"line_end":1951,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":75652,"byte_end":75656,"line_start":1958,"line_end":1958,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":75834,"byte_end":75838,"line_start":1966,"line_end":1966,"column_start":55,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":76353,"byte_end":76360,"line_start":1983,"line_end":1983,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":1199},{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1204}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":76492,"byte_end":76499,"line_start":1989,"line_end":1989,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":76661,"byte_end":76668,"line_start":1995,"line_end":1995,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":77156,"byte_end":77164,"line_start":2012,"line_end":2012,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":77282,"byte_end":77290,"line_start":2018,"line_end":2018,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":77446,"byte_end":77454,"line_start":2024,"line_end":2024,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":77575,"byte_end":77583,"line_start":2030,"line_end":2030,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":78178,"byte_end":78183,"line_start":2052,"line_end":2052,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":78305,"byte_end":78310,"line_start":2058,"line_end":2058,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":78913,"byte_end":78921,"line_start":2086,"line_end":2086,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":79247,"byte_end":79255,"line_start":2102,"line_end":2102,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":684},{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":79826,"byte_end":79834,"line_start":2124,"line_end":2124,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":80208,"byte_end":80216,"line_start":2140,"line_end":2140,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":80800,"byte_end":80808,"line_start":2159,"line_end":2159,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":81541,"byte_end":81549,"line_start":2180,"line_end":2180,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":81945,"byte_end":81953,"line_start":2194,"line_end":2194,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":82187,"byte_end":82195,"line_start":2204,"line_end":2204,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":82560,"byte_end":82568,"line_start":2221,"line_end":2221,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":94502,"byte_end":94510,"line_start":77,"line_end":77,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":94979,"byte_end":94987,"line_start":100,"line_end":100,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":767}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":95412,"byte_end":95420,"line_start":116,"line_end":116,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":770},{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":95853,"byte_end":95861,"line_start":135,"line_end":135,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":97059,"byte_end":97067,"line_start":187,"line_end":187,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":793},{"krate":0,"index":796},{"krate":0,"index":799},{"krate":0,"index":802},{"krate":0,"index":804},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":812},{"krate":0,"index":814},{"krate":0,"index":816},{"krate":0,"index":818},{"krate":0,"index":820},{"krate":0,"index":823},{"krate":0,"index":826},{"krate":0,"index":829},{"krate":0,"index":832},{"krate":0,"index":834},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":841},{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":108003,"byte_end":108011,"line_start":531,"line_end":531,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":850},{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":109669,"byte_end":109677,"line_start":579,"line_end":579,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":859},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":109774,"byte_end":109782,"line_start":585,"line_end":585,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":109926,"byte_end":109934,"line_start":591,"line_end":591,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":110037,"byte_end":110045,"line_start":597,"line_end":597,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":110576,"byte_end":110580,"line_start":615,"line_end":615,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":876},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1241}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":110693,"byte_end":110697,"line_start":621,"line_end":621,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":110853,"byte_end":110857,"line_start":627,"line_end":627,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":110951,"byte_end":110955,"line_start":633,"line_end":633,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":111105,"byte_end":111109,"line_start":641,"line_end":641,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":111594,"byte_end":111599,"line_start":658,"line_end":658,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":900},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":111704,"byte_end":111709,"line_start":664,"line_end":664,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1250}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":112025,"byte_end":112033,"line_start":681,"line_end":681,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":112296,"byte_end":112304,"line_start":696,"line_end":696,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":112599,"byte_end":112607,"line_start":709,"line_end":709,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":112858,"byte_end":112866,"line_start":720,"line_end":720,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":113147,"byte_end":113155,"line_start":731,"line_end":731,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":938}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":113385,"byte_end":113393,"line_start":743,"line_end":743,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":943}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":113607,"byte_end":113615,"line_start":754,"line_end":754,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":113682,"byte_end":113690,"line_start":761,"line_end":761,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":950},{"krate":0,"index":954},{"krate":0,"index":957}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":115043,"byte_end":115053,"line_start":807,"line_end":807,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":115491,"byte_end":115501,"line_start":828,"line_end":828,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":976}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":115815,"byte_end":115825,"line_start":843,"line_end":843,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":115995,"byte_end":116005,"line_start":852,"line_end":852,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":116624,"byte_end":116636,"line_start":874,"line_end":874,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":117073,"byte_end":117085,"line_start":895,"line_end":895,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":117398,"byte_end":117410,"line_start":910,"line_end":910,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":117582,"byte_end":117594,"line_start":919,"line_end":919,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":118275,"byte_end":118294,"line_start":940,"line_end":940,"column_start":34,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":118753,"byte_end":118772,"line_start":964,"line_end":964,"column_start":45,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1037}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":118977,"byte_end":118996,"line_start":975,"line_end":975,"column_start":31,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1043}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":119165,"byte_end":119184,"line_start":983,"line_end":983,"column_start":36,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":119793,"byte_end":119798,"line_start":1005,"line_end":1005,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":120225,"byte_end":120230,"line_start":1028,"line_end":1028,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1069}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":120403,"byte_end":120408,"line_start":1038,"line_end":1038,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1074}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":120553,"byte_end":120558,"line_start":1046,"line_end":1046,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1079}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":3147,"byte_end":3156,"line_start":101,"line_end":101,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":3248,"byte_end":3257,"line_start":108,"line_end":108,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1118}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":3345,"byte_end":3354,"line_start":114,"line_end":114,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":3556,"byte_end":3562,"line_start":128,"line_end":128,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":2703,"byte_end":2706,"line_start":82,"line_end":82,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":148}},{"kind":"Mod","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":2716,"byte_end":2719,"line_start":83,"line_end":83,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":731}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/equivalent.rs","byte_start":8336,"byte_end":8337,"line_start":18,"line_end":18,"column_start":46,"column_end":47},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":14},"to":{"krate":0,"index":10}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":10177,"byte_end":10185,"line_start":52,"line_end":52,"column_start":31,"column_end":39},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1150},"to":{"krate":0,"index":24}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/serde.rs","byte_start":11132,"byte_end":11140,"line_start":16,"line_end":16,"column_start":29,"column_end":37},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1150},"to":{"krate":15,"index":1705}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/serde.rs","byte_start":11646,"byte_end":11661,"line_start":36,"line_end":36,"column_start":37,"column_end":52},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":75},"to":{"krate":15,"index":1293}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/serde.rs","byte_start":12366,"byte_end":12374,"line_start":64,"line_end":64,"column_start":41,"column_end":49},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1150},"to":{"krate":15,"index":1209}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/serde.rs","byte_start":12722,"byte_end":12730,"line_start":78,"line_end":78,"column_start":52,"column_end":60},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1150},"to":{"krate":15,"index":1425}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/serde.rs","byte_start":13134,"byte_end":13142,"line_start":95,"line_end":95,"column_start":26,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1221},"to":{"krate":15,"index":1705}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/serde.rs","byte_start":13613,"byte_end":13628,"line_start":114,"line_end":114,"column_start":34,"column_end":49},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":111},"to":{"krate":15,"index":1293}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/serde.rs","byte_start":14289,"byte_end":14297,"line_start":141,"line_end":141,"column_start":38,"column_end":46},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1221},"to":{"krate":15,"index":1209}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/serde.rs","byte_start":14614,"byte_end":14622,"line_start":154,"line_end":154,"column_start":49,"column_end":57},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1221},"to":{"krate":15,"index":1425}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":16334,"byte_end":16343,"line_start":43,"line_end":43,"column_start":10,"column_end":19},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":16660,"byte_end":16669,"line_start":54,"line_end":54,"column_start":19,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1139},"to":{"krate":2,"index":1862}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":16696,"byte_end":16705,"line_start":55,"line_end":55,"column_start":20,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1139},"to":{"krate":2,"index":1562}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":16802,"byte_end":16811,"line_start":62,"line_end":62,"column_start":24,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1139},"to":{"krate":2,"index":1588}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":17039,"byte_end":17048,"line_start":71,"line_end":71,"column_start":35,"column_end":44},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1139},"to":{"krate":2,"index":1588}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":17312,"byte_end":17321,"line_start":84,"line_end":84,"column_start":34,"column_end":43},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1251},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18231,"byte_end":18234,"line_start":111,"line_end":111,"column_start":16,"column_end":19},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1147},"to":{"krate":2,"index":1562}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18332,"byte_end":18335,"line_start":118,"line_end":118,"column_start":21,"column_end":24},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1147},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18559,"byte_end":18562,"line_start":127,"line_end":127,"column_start":6,"column_end":9},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":21207,"byte_end":21221,"line_start":235,"line_end":235,"column_start":10,"column_end":24},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":23811,"byte_end":23819,"line_start":323,"line_end":323,"column_start":27,"column_end":35},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1150},"to":{"krate":0,"index":1132}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":24735,"byte_end":24743,"line_start":360,"line_end":360,"column_start":30,"column_end":38},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1150},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":26386,"byte_end":26394,"line_start":424,"line_end":424,"column_start":12,"column_end":20},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":26792,"byte_end":26800,"line_start":439,"line_end":439,"column_start":15,"column_end":23},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":28802,"byte_end":28814,"line_start":517,"line_end":517,"column_start":12,"column_end":24},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":31257,"byte_end":31262,"line_start":602,"line_end":602,"column_start":16,"column_end":21},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":33153,"byte_end":33158,"line_start":666,"line_end":666,"column_start":65,"column_end":70},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":280},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":33721,"byte_end":33734,"line_start":686,"line_end":686,"column_start":16,"column_end":29},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":36856,"byte_end":36869,"line_start":775,"line_end":775,"column_start":65,"column_end":78},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":307},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":37370,"byte_end":37381,"line_start":795,"line_end":795,"column_start":16,"column_end":27},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":38334,"byte_end":38345,"line_start":830,"line_end":830,"column_start":52,"column_end":63},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":337},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":38540,"byte_end":38548,"line_start":838,"line_end":838,"column_start":15,"column_end":23},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":51889,"byte_end":51897,"line_start":1262,"line_end":1262,"column_start":15,"column_end":23},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":54223,"byte_end":54235,"line_start":1332,"line_end":1332,"column_start":12,"column_end":24},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":72179,"byte_end":72183,"line_start":1822,"line_end":1822,"column_start":29,"column_end":33},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":72302,"byte_end":72306,"line_start":1828,"line_end":1828,"column_start":40,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":4643}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":72463,"byte_end":72467,"line_start":1834,"line_end":1834,"column_start":38,"column_end":42},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":4672}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":72622,"byte_end":72626,"line_start":1841,"line_end":1841,"column_start":26,"column_end":30},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":1562}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":72792,"byte_end":72796,"line_start":1849,"line_end":1849,"column_start":43,"column_end":47},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":73293,"byte_end":73299,"line_start":1866,"line_end":1866,"column_start":29,"column_end":35},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":517},"to":{"krate":2,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":73420,"byte_end":73426,"line_start":1872,"line_end":1872,"column_start":40,"column_end":46},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":517},"to":{"krate":2,"index":4643}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":73590,"byte_end":73596,"line_start":1878,"line_end":1878,"column_start":38,"column_end":44},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":517},"to":{"krate":2,"index":4672}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":73751,"byte_end":73757,"line_start":1885,"line_end":1885,"column_start":26,"column_end":32},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":517},"to":{"krate":2,"index":1562}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":73927,"byte_end":73933,"line_start":1893,"line_end":1893,"column_start":43,"column_end":49},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":517},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":74455,"byte_end":74464,"line_start":1910,"line_end":1910,"column_start":29,"column_end":38},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":74589,"byte_end":74598,"line_start":1916,"line_end":1916,"column_start":40,"column_end":49},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":4643}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":74762,"byte_end":74771,"line_start":1922,"line_end":1922,"column_start":38,"column_end":47},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":4672}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":75201,"byte_end":75205,"line_start":1939,"line_end":1939,"column_start":29,"column_end":33},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":567},"to":{"krate":2,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":75330,"byte_end":75334,"line_start":1945,"line_end":1945,"column_start":40,"column_end":44},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":567},"to":{"krate":2,"index":4643}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":75493,"byte_end":75497,"line_start":1951,"line_end":1951,"column_start":38,"column_end":42},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":567},"to":{"krate":2,"index":4672}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":75652,"byte_end":75656,"line_start":1958,"line_end":1958,"column_start":26,"column_end":30},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":567},"to":{"krate":2,"index":1562}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":75834,"byte_end":75838,"line_start":1966,"line_end":1966,"column_start":55,"column_end":59},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":567},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":76353,"byte_end":76360,"line_start":1983,"line_end":1983,"column_start":29,"column_end":36},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":597},"to":{"krate":2,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":76492,"byte_end":76499,"line_start":1989,"line_end":1989,"column_start":40,"column_end":47},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":597},"to":{"krate":2,"index":4643}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":76661,"byte_end":76668,"line_start":1995,"line_end":1995,"column_start":38,"column_end":45},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":597},"to":{"krate":2,"index":4672}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":77156,"byte_end":77164,"line_start":2012,"line_end":2012,"column_start":25,"column_end":33},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":617},"to":{"krate":2,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":77282,"byte_end":77290,"line_start":2018,"line_end":2018,"column_start":40,"column_end":48},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":617},"to":{"krate":2,"index":4643}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":77446,"byte_end":77454,"line_start":2024,"line_end":2024,"column_start":34,"column_end":42},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":617},"to":{"krate":2,"index":4672}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":77575,"byte_end":77583,"line_start":2030,"line_end":2030,"column_start":51,"column_end":59},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":617},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":78178,"byte_end":78183,"line_start":2052,"line_end":2052,"column_start":29,"column_end":34},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":638},"to":{"krate":2,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":78305,"byte_end":78310,"line_start":2058,"line_end":2058,"column_start":40,"column_end":45},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":638},"to":{"krate":2,"index":4643}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":78913,"byte_end":78921,"line_start":2086,"line_end":2086,"column_start":32,"column_end":40},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1150},"to":{"krate":2,"index":4624}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":79247,"byte_end":79255,"line_start":2102,"line_end":2102,"column_start":47,"column_end":55},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1150},"to":{"krate":2,"index":2099}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":79826,"byte_end":79834,"line_start":2124,"line_end":2124,"column_start":50,"column_end":58},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1150},"to":{"krate":2,"index":2103}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":80208,"byte_end":80216,"line_start":2140,"line_end":2140,"column_start":40,"column_end":48},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1150},"to":{"krate":2,"index":4620}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":80800,"byte_end":80808,"line_start":2159,"line_end":2159,"column_start":34,"column_end":42},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1150},"to":{"krate":2,"index":4633}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":81541,"byte_end":81549,"line_start":2180,"line_end":2180,"column_start":46,"column_end":54},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1150},"to":{"krate":2,"index":4633}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":81945,"byte_end":81953,"line_start":2194,"line_end":2194,"column_start":27,"column_end":35},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1150},"to":{"krate":2,"index":1843}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":82187,"byte_end":82195,"line_start":2204,"line_end":2204,"column_start":60,"column_end":68},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1150},"to":{"krate":2,"index":1588}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":82560,"byte_end":82568,"line_start":2221,"line_end":2221,"column_start":22,"column_end":30},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1150},"to":{"krate":2,"index":1593}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":94502,"byte_end":94510,"line_start":77,"line_end":77,"column_start":24,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1221},"to":{"krate":0,"index":1132}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":94979,"byte_end":94987,"line_start":100,"line_end":100,"column_start":27,"column_end":35},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1221},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":95412,"byte_end":95420,"line_start":116,"line_end":116,"column_start":9,"column_end":17},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":95853,"byte_end":95861,"line_start":135,"line_end":135,"column_start":12,"column_end":20},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":97059,"byte_end":97067,"line_start":187,"line_end":187,"column_start":12,"column_end":20},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":108003,"byte_end":108011,"line_start":531,"line_end":531,"column_start":12,"column_end":20},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":109669,"byte_end":109677,"line_start":579,"line_end":579,"column_start":22,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":854},"to":{"krate":2,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":109774,"byte_end":109782,"line_start":585,"line_end":585,"column_start":33,"column_end":41},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":854},"to":{"krate":2,"index":4643}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":109926,"byte_end":109934,"line_start":591,"line_end":591,"column_start":31,"column_end":39},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":854},"to":{"krate":2,"index":4672}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":110037,"byte_end":110045,"line_start":597,"line_end":597,"column_start":36,"column_end":44},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":854},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":110576,"byte_end":110580,"line_start":615,"line_end":615,"column_start":26,"column_end":30},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":869},"to":{"krate":2,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":110693,"byte_end":110697,"line_start":621,"line_end":621,"column_start":37,"column_end":41},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":869},"to":{"krate":2,"index":4643}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":110853,"byte_end":110857,"line_start":627,"line_end":627,"column_start":35,"column_end":39},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":869},"to":{"krate":2,"index":4672}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":110951,"byte_end":110955,"line_start":633,"line_end":633,"column_start":23,"column_end":27},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":869},"to":{"krate":2,"index":1562}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":111105,"byte_end":111109,"line_start":641,"line_end":641,"column_start":40,"column_end":44},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":869},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":111594,"byte_end":111599,"line_start":658,"line_end":658,"column_start":26,"column_end":31},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":893},"to":{"krate":2,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":111704,"byte_end":111709,"line_start":664,"line_end":664,"column_start":37,"column_end":42},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":893},"to":{"krate":2,"index":4643}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":112025,"byte_end":112033,"line_start":681,"line_end":681,"column_start":29,"column_end":37},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1221},"to":{"krate":2,"index":4624}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":112296,"byte_end":112304,"line_start":696,"line_end":696,"column_start":32,"column_end":40},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1221},"to":{"krate":2,"index":4620}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":112599,"byte_end":112607,"line_start":709,"line_end":709,"column_start":26,"column_end":34},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1221},"to":{"krate":2,"index":4633}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":112858,"byte_end":112866,"line_start":720,"line_end":720,"column_start":34,"column_end":42},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1221},"to":{"krate":2,"index":4633}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":113147,"byte_end":113155,"line_start":731,"line_end":731,"column_start":24,"column_end":32},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1221},"to":{"krate":2,"index":1843}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":113385,"byte_end":113393,"line_start":743,"line_end":743,"column_start":48,"column_end":56},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1221},"to":{"krate":2,"index":1588}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":113607,"byte_end":113615,"line_start":754,"line_end":754,"column_start":19,"column_end":27},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1221},"to":{"krate":2,"index":1593}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":113682,"byte_end":113690,"line_start":761,"line_end":761,"column_start":12,"column_end":20},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":115043,"byte_end":115053,"line_start":807,"line_end":807,"column_start":29,"column_end":39},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":959},"to":{"krate":2,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":115491,"byte_end":115501,"line_start":828,"line_end":828,"column_start":40,"column_end":50},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":959},"to":{"krate":2,"index":4643}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":115815,"byte_end":115825,"line_start":843,"line_end":843,"column_start":26,"column_end":36},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":959},"to":{"krate":2,"index":1562}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":115995,"byte_end":116005,"line_start":852,"line_end":852,"column_start":31,"column_end":41},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":959},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":116624,"byte_end":116636,"line_start":874,"line_end":874,"column_start":29,"column_end":41},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":987},"to":{"krate":2,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":117073,"byte_end":117085,"line_start":895,"line_end":895,"column_start":40,"column_end":52},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":987},"to":{"krate":2,"index":4643}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":117398,"byte_end":117410,"line_start":910,"line_end":910,"column_start":26,"column_end":38},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":987},"to":{"krate":2,"index":1562}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":117582,"byte_end":117594,"line_start":919,"line_end":919,"column_start":31,"column_end":43},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":987},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":118275,"byte_end":118294,"line_start":940,"line_end":940,"column_start":34,"column_end":53},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1015},"to":{"krate":2,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":118753,"byte_end":118772,"line_start":964,"line_end":964,"column_start":45,"column_end":64},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1015},"to":{"krate":2,"index":4643}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":118977,"byte_end":118996,"line_start":975,"line_end":975,"column_start":31,"column_end":50},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1015},"to":{"krate":2,"index":1562}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":119165,"byte_end":119184,"line_start":983,"line_end":983,"column_start":36,"column_end":55},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1015},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":119793,"byte_end":119798,"line_start":1005,"line_end":1005,"column_start":29,"column_end":34},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1050},"to":{"krate":2,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":120225,"byte_end":120230,"line_start":1028,"line_end":1028,"column_start":40,"column_end":45},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1050},"to":{"krate":2,"index":4643}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":120403,"byte_end":120408,"line_start":1038,"line_end":1038,"column_start":26,"column_end":31},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1050},"to":{"krate":2,"index":1562}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":120553,"byte_end":120558,"line_start":1046,"line_end":1046,"column_start":31,"column_end":36},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1050},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":3147,"byte_end":3156,"line_start":101,"line_end":101,"column_start":6,"column_end":15},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":3248,"byte_end":3257,"line_start":108,"line_end":108,"column_start":16,"column_end":25},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1251},"to":{"krate":2,"index":1562}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":3345,"byte_end":3354,"line_start":114,"line_end":114,"column_start":20,"column_end":29},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1251},"to":{"krate":2,"index":1588}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":3556,"byte_end":3562,"line_start":128,"line_end":128,"column_start":12,"column_end":18},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1257},"to":{"krate":4294967295,"index":4294967295}}]}