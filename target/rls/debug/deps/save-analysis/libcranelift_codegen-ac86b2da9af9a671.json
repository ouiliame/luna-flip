{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0","program":"/Users/william/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","cranelift_codegen","--edition=2018","/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"gimli\"","--cfg","feature=\"std\"","--cfg","feature=\"unwind\"","-C","metadata=ac86b2da9af9a671","-C","extra-filename=-ac86b2da9af9a671","--out-dir","/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/deps","-L","dependency=/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/deps","--extern","byteorder=/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/deps/libbyteorder-9d5a3cedb2974e1e.rmeta","--extern","cranelift_bforest=/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/deps/libcranelift_bforest-2af3195742c967c5.rmeta","--extern","cranelift_codegen_shared=/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/deps/libcranelift_codegen_shared-16ec925c7fbe7fc1.rmeta","--extern","cranelift_entity=/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/deps/libcranelift_entity-282c296b86dc5b64.rmeta","--extern","gimli=/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/deps/libgimli-ee3dc967fb61dc49.rmeta","--extern","log=/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/deps/liblog-8c2d5fb978a9641b.rmeta","--extern","smallvec=/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/deps/libsmallvec-29c74c4ca4795703.rmeta","--extern","target_lexicon=/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/deps/libtarget_lexicon-7d1e5dc480ae84a9.rmeta","--extern","thiserror=/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/deps/libthiserror-122eb9f06dcd0b0c.rmeta","--cap-lints","allow","--cfg","feature=\"x86\"","--error-format=json","--sysroot","/Users/william/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/deps/libcranelift_codegen-ac86b2da9af9a671.rmeta"},"prelude":{"crate_id":{"name":"cranelift_codegen","disambiguator":[15803962973427958901,12797182639073045659]},"crate_root":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src","external_crates":[{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[17187672715010298091,8744209918715530773]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[15887813922859449425,14244592339943736272]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[6807992320260993406,9894278173044996986]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[17858480672457447890,14967053264370168355]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[9606925100264359032,12531971508192552739]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1320274826319993033,12580344779796895143]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5371179889215182298,2673167689761608764]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3578723082929147264,11802062942665263000]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[12064590987128239469,16657797211233097221]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[9585105124653066898,10355053755662228341]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[168442059660610991,16640229565854074068]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13744766486950275495,4356178648036430150]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4695427281829409190,666464352563047434]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[825342386373460966,7285997970727292365]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","num":15,"id":{"name":"cranelift_bforest","disambiguator":[18165411075301845574,7967677396212725835]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","num":16,"id":{"name":"cranelift_entity","disambiguator":[16335963194649898172,12579206655679378575]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/relaxation.rs","num":17,"id":{"name":"log","disambiguator":[16869437812774876011,6221816467677339912]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/relaxation.rs","num":18,"id":{"name":"cfg_if","disambiguator":[11229901903850725548,355329447717717977]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","num":19,"id":{"name":"cranelift_codegen_shared","disambiguator":[13424346789050426673,10094734438626549044]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","num":20,"id":{"name":"target_lexicon","disambiguator":[880857998537503145,13675234810388894638]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","num":21,"id":{"name":"thiserror","disambiguator":[6880462184355756863,9926774651463935531]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","num":22,"id":{"name":"thiserror_impl","disambiguator":[17769128096221768531,15740058249968343609]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/x86/fde.rs","num":23,"id":{"name":"gimli","disambiguator":[14912496846709401374,11333080385898314613]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/x86/unwind.rs","num":24,"id":{"name":"byteorder","disambiguator":[15359304162881561515,14783260849627217053]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/x86/fde.rs","num":25,"id":{"name":"indexmap","disambiguator":[16414611579245089625,9983166136408059375]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/x86/fde.rs","num":26,"id":{"name":"serde","disambiguator":[18106992499485846046,12455420591627982638]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/x86/fde.rs","num":27,"id":{"name":"serde_derive","disambiguator":[912133203969685612,5297759319372082410]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/legalizer/split.rs","num":28,"id":{"name":"smallvec","disambiguator":[5409347226537927483,15859824338364976238]}}],"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":0,"byte_end":3089,"line_start":1,"line_end":110,"column_start":1,"column_end":53}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":3115},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":1987,"byte_end":1994,"line_start":56,"line_end":56,"column_start":25,"column_end":32},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3445},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":2022,"byte_end":2039,"line_start":57,"line_end":57,"column_start":27,"column_end":44},"alias_span":null,"name":"legalize_function","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4941},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":2070,"byte_end":2087,"line_start":58,"line_end":58,"column_start":30,"column_end":47},"alias_span":null,"name":"ValueLabelsRanges","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8934},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":2089,"byte_end":2102,"line_start":58,"line_end":58,"column_start":49,"column_end":62},"alias_span":null,"name":"ValueLocRange","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2886},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":2130,"byte_end":2145,"line_start":59,"line_end":59,"column_start":26,"column_end":41},"alias_span":null,"name":"verify_function","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2992},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":2169,"byte_end":2183,"line_start":60,"line_end":60,"column_start":23,"column_end":37},"alias_span":null,"name":"write_function","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":0},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":2194,"byte_end":2211,"line_start":62,"line_end":62,"column_start":9,"column_end":26},"alias_span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":2215,"byte_end":2222,"line_start":62,"line_end":62,"column_start":30,"column_end":37},"name":"bforest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":0},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":2232,"byte_end":2248,"line_start":63,"line_end":63,"column_start":9,"column_end":25},"alias_span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":2252,"byte_end":2258,"line_start":63,"line_end":63,"column_start":29,"column_end":35},"name":"entity","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":38},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":3346,"byte_end":3360,"line_start":12,"line_end":12,"column_start":5,"column_end":19},"alias_span":null,"name":"MemoryCodeSink","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":76},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":3362,"byte_end":3375,"line_start":12,"line_end":12,"column_start":21,"column_end":34},"alias_span":null,"name":"NullRelocSink","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":87},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":3377,"byte_end":3393,"line_start":12,"line_end":12,"column_start":36,"column_end":52},"alias_span":null,"name":"NullStackmapSink","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":82},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":3395,"byte_end":3407,"line_start":12,"line_end":12,"column_start":54,"column_end":66},"alias_span":null,"name":"NullTrapSink","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":49},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":3409,"byte_end":3418,"line_start":12,"line_end":12,"column_start":68,"column_end":77},"alias_span":null,"name":"RelocSink","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":85},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":3420,"byte_end":3432,"line_start":12,"line_end":12,"column_start":79,"column_end":91},"alias_span":null,"name":"StackmapSink","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":54},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":3438,"byte_end":3446,"line_start":13,"line_end":13,"column_start":5,"column_end":13},"alias_span":null,"name":"TrapSink","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":116},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":3477,"byte_end":3491,"line_start":15,"line_end":15,"column_start":27,"column_end":41},"alias_span":null,"name":"relax_branches","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":131},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":3515,"byte_end":3534,"line_start":16,"line_end":16,"column_start":23,"column_end":42},"alias_span":null,"name":"shrink_instructions","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":4967},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":3560,"byte_end":3568,"line_start":17,"line_end":17,"column_start":25,"column_end":33},"alias_span":null,"name":"Stackmap","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":8806},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":3749,"byte_end":3762,"line_start":21,"line_end":21,"column_start":26,"column_end":39},"alias_span":null,"name":"RegDiversions","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":483},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":118816,"byte_end":118829,"line_start":31,"line_end":31,"column_start":5,"column_end":18},"alias_span":null,"name":"InsertBuilder","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":5090},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":118831,"byte_end":118842,"line_start":31,"line_end":31,"column_start":20,"column_end":31},"alias_span":null,"name":"InstBuilder","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":469},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":118844,"byte_end":118859,"line_start":31,"line_end":31,"column_start":33,"column_end":48},"alias_span":null,"name":"InstBuilderBase","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":477},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":118861,"byte_end":118877,"line_start":31,"line_end":31,"column_start":50,"column_end":66},"alias_span":null,"name":"InstInserterBase","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":516},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":118879,"byte_end":118893,"line_start":31,"line_end":31,"column_start":68,"column_end":82},"alias_span":null,"name":"ReplaceBuilder","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":5469},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":118928,"byte_end":118940,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"alias_span":null,"name":"ConstantData","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":568},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":118942,"byte_end":118956,"line_start":33,"line_end":33,"column_start":45,"column_end":59},"alias_span":null,"name":"ConstantOffset","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":5493},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":118958,"byte_end":118970,"line_start":33,"line_end":33,"column_start":61,"column_end":73},"alias_span":null,"name":"ConstantPool","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":5498},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":118998,"byte_end":119011,"line_start":34,"line_end":34,"column_start":26,"column_end":39},"alias_span":null,"name":"DataFlowGraph","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":5512},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119013,"byte_end":119021,"line_start":34,"line_end":34,"column_start":41,"column_end":49},"alias_span":null,"name":"ValueDef","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":5553},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119059,"byte_end":119064,"line_start":36,"line_end":36,"column_start":5,"column_end":10},"alias_span":null,"name":"Block","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":5733},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119066,"byte_end":119074,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"alias_span":null,"name":"Constant","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":5841},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119076,"byte_end":119083,"line_start":36,"line_end":36,"column_start":22,"column_end":29},"alias_span":null,"name":"FuncRef","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":5697},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119085,"byte_end":119096,"line_start":36,"line_end":36,"column_start":31,"column_end":42},"alias_span":null,"name":"GlobalValue","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":5913},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119098,"byte_end":119102,"line_start":36,"line_end":36,"column_start":44,"column_end":48},"alias_span":null,"name":"Heap","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":5769},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119104,"byte_end":119113,"line_start":36,"line_end":36,"column_start":50,"column_end":59},"alias_span":null,"name":"Immediate","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":5625},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119115,"byte_end":119119,"line_start":36,"line_end":36,"column_start":61,"column_end":65},"alias_span":null,"name":"Inst","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":5805},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119121,"byte_end":119130,"line_start":36,"line_end":36,"column_start":67,"column_end":76},"alias_span":null,"name":"JumpTable","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":5877},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119132,"byte_end":119138,"line_start":36,"line_end":36,"column_start":78,"column_end":84},"alias_span":null,"name":"SigRef","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":5661},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119140,"byte_end":119149,"line_start":36,"line_end":36,"column_start":86,"column_end":95},"alias_span":null,"name":"StackSlot","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":5949},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119155,"byte_end":119160,"line_start":37,"line_end":37,"column_start":5,"column_end":10},"alias_span":null,"name":"Table","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":5589},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119162,"byte_end":119167,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":6057},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119206,"byte_end":119214,"line_start":40,"line_end":40,"column_start":5,"column_end":13},"alias_span":null,"name":"AbiParam","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":6077},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119216,"byte_end":119233,"line_start":40,"line_end":40,"column_start":15,"column_end":32},"alias_span":null,"name":"ArgumentExtension","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":6098},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119235,"byte_end":119250,"line_start":40,"line_end":40,"column_start":34,"column_end":49},"alias_span":null,"name":"ArgumentPurpose","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":6129},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119252,"byte_end":119263,"line_start":40,"line_end":40,"column_start":51,"column_end":62},"alias_span":null,"name":"ExtFuncData","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":6039},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119265,"byte_end":119274,"line_start":40,"line_end":40,"column_start":64,"column_end":73},"alias_span":null,"name":"Signature","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":6137},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119307,"byte_end":119319,"line_start":42,"line_end":42,"column_start":29,"column_end":41},"alias_span":null,"name":"ExternalName","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":6188},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119354,"byte_end":119365,"line_start":43,"line_end":43,"column_start":34,"column_end":45},"alias_span":null,"name":"FrameLayout","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":6160},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119367,"byte_end":119384,"line_start":43,"line_end":43,"column_start":47,"column_end":64},"alias_span":null,"name":"FrameLayoutChange","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":882},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119386,"byte_end":119404,"line_start":43,"line_end":43,"column_start":66,"column_end":84},"alias_span":null,"name":"FrameLayoutChanges","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":6216},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119437,"byte_end":119463,"line_start":44,"line_end":44,"column_start":31,"column_end":57},"alias_span":null,"name":"DisplayFunctionAnnotations","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":6195},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119465,"byte_end":119473,"line_start":44,"line_end":44,"column_start":59,"column_end":67},"alias_span":null,"name":"Function","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":6223},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119508,"byte_end":119523,"line_start":45,"line_end":45,"column_start":33,"column_end":48},"alias_span":null,"name":"GlobalValueData","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":6241},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119551,"byte_end":119559,"line_start":46,"line_end":46,"column_start":27,"column_end":35},"alias_span":null,"name":"HeapData","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":6249},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119561,"byte_end":119570,"line_start":46,"line_end":46,"column_start":37,"column_end":46},"alias_span":null,"name":"HeapStyle","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":6535},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119612,"byte_end":119627,"line_start":48,"line_end":48,"column_start":5,"column_end":20},"alias_span":null,"name":"InstructionData","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":6751},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119629,"byte_end":119635,"line_start":48,"line_end":48,"column_start":22,"column_end":28},"alias_span":null,"name":"Opcode","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":1164},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119637,"byte_end":119646,"line_start":48,"line_end":48,"column_start":30,"column_end":39},"alias_span":null,"name":"ValueList","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":1165},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119648,"byte_end":119661,"line_start":48,"line_end":48,"column_start":41,"column_end":54},"alias_span":null,"name":"ValueListPool","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":7211},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119663,"byte_end":119675,"line_start":48,"line_end":48,"column_start":56,"column_end":68},"alias_span":null,"name":"VariableArgs","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":7262},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119710,"byte_end":119723,"line_start":50,"line_end":50,"column_start":31,"column_end":44},"alias_span":null,"name":"JumpTableData","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":7266},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119752,"byte_end":119758,"line_start":51,"line_end":51,"column_start":28,"column_end":34},"alias_span":null,"name":"Layout","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":1413},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119789,"byte_end":119811,"line_start":52,"line_end":52,"column_start":30,"column_end":52},"alias_span":null,"name":"get_probestack_funcref","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":7296},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119813,"byte_end":119820,"line_start":52,"line_end":52,"column_start":54,"column_end":61},"alias_span":null,"name":"LibCall","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":7335},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119852,"byte_end":119860,"line_start":53,"line_end":53,"column_start":30,"column_end":38},"alias_span":null,"name":"MemFlags","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":7365},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119893,"byte_end":119913,"line_start":54,"line_end":54,"column_start":32,"column_end":52},"alias_span":null,"name":"ExpandedProgramPoint","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":1478},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119915,"byte_end":119927,"line_start":54,"line_end":54,"column_start":54,"column_end":66},"alias_span":null,"name":"ProgramOrder","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":7352},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119929,"byte_end":119941,"line_start":54,"line_end":54,"column_start":68,"column_end":80},"alias_span":null,"name":"ProgramPoint","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":7382},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":119974,"byte_end":119983,"line_start":55,"line_end":55,"column_start":31,"column_end":40},"alias_span":null,"name":"SourceLoc","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":7436},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":120016,"byte_end":120031,"line_start":56,"line_end":56,"column_start":32,"column_end":47},"alias_span":null,"name":"StackLayoutInfo","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":7421},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":120033,"byte_end":120046,"line_start":56,"line_end":56,"column_start":49,"column_end":62},"alias_span":null,"name":"StackSlotData","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":7397},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":120048,"byte_end":120061,"line_start":56,"line_end":56,"column_start":64,"column_end":77},"alias_span":null,"name":"StackSlotKind","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":7451},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":120063,"byte_end":120073,"line_start":56,"line_end":56,"column_start":79,"column_end":89},"alias_span":null,"name":"StackSlots","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":7467},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":120102,"byte_end":120111,"line_start":57,"line_end":57,"column_start":27,"column_end":36},"alias_span":null,"name":"TableData","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":7475},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":120142,"byte_end":120150,"line_start":58,"line_end":58,"column_start":30,"column_end":38},"alias_span":null,"name":"TrapCode","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":7516},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":120178,"byte_end":120182,"line_start":59,"line_end":59,"column_start":27,"column_end":31},"alias_span":null,"name":"Type","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":7611},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":120214,"byte_end":120225,"line_start":60,"line_end":60,"column_start":31,"column_end":42},"alias_span":null,"name":"ArgumentLoc","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":7590},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":120227,"byte_end":120235,"line_start":60,"line_end":60,"column_start":44,"column_end":52},"alias_span":null,"name":"ValueLoc","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":19,"index":3},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":120272,"byte_end":120281,"line_start":61,"line_end":61,"column_start":35,"column_end":44},"alias_span":null,"name":"condcodes","value":"","parent":{"krate":0,"index":456}},{"kind":"Use","ref_id":{"krate":0,"index":8011},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427729,"byte_end":427737,"line_start":47,"line_end":47,"column_start":32,"column_end":40},"alias_span":null,"name":"CallConv","value":"","parent":{"krate":0,"index":1747}},{"kind":"Use","ref_id":{"krate":0,"index":8088},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427778,"byte_end":427789,"line_start":49,"line_end":49,"column_start":5,"column_end":16},"alias_span":null,"name":"BranchRange","value":"","parent":{"krate":0,"index":1747}},{"kind":"Use","ref_id":{"krate":0,"index":8049},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427791,"byte_end":427805,"line_start":49,"line_end":49,"column_start":18,"column_end":32},"alias_span":null,"name":"ConstraintKind","value":"","parent":{"krate":0,"index":1747}},{"kind":"Use","ref_id":{"krate":0,"index":8040},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427807,"byte_end":427824,"line_start":49,"line_end":49,"column_start":34,"column_end":51},"alias_span":null,"name":"OperandConstraint","value":"","parent":{"krate":0,"index":1747}},{"kind":"Use","ref_id":{"krate":0,"index":8075},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427826,"byte_end":427843,"line_start":49,"line_end":49,"column_start":53,"column_end":70},"alias_span":null,"name":"RecipeConstraints","value":"","parent":{"krate":0,"index":1747}},{"kind":"Use","ref_id":{"krate":0,"index":2337},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427879,"byte_end":427888,"line_start":51,"line_end":51,"column_start":32,"column_end":41},"alias_span":null,"name":"base_size","value":"","parent":{"krate":0,"index":1747}},{"kind":"Use","ref_id":{"krate":0,"index":8111},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427890,"byte_end":427897,"line_start":51,"line_end":51,"column_start":43,"column_end":50},"alias_span":null,"name":"EncInfo","value":"","parent":{"krate":0,"index":1747}},{"kind":"Use","ref_id":{"krate":0,"index":8096},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427899,"byte_end":427907,"line_start":51,"line_end":51,"column_start":52,"column_end":60},"alias_span":null,"name":"Encoding","value":"","parent":{"krate":0,"index":1747}},{"kind":"Use","ref_id":{"krate":0,"index":2407},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427942,"byte_end":427954,"line_start":52,"line_end":52,"column_start":33,"column_end":45},"alias_span":null,"name":"regs_overlap","value":"","parent":{"krate":0,"index":1747}},{"kind":"Use","ref_id":{"krate":0,"index":2371},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427956,"byte_end":427964,"line_start":52,"line_end":52,"column_start":47,"column_end":55},"alias_span":null,"name":"RegClass","value":"","parent":{"krate":0,"index":1747}},{"kind":"Use","ref_id":{"krate":0,"index":8117},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427966,"byte_end":427979,"line_start":52,"line_end":52,"column_start":57,"column_end":70},"alias_span":null,"name":"RegClassIndex","value":"","parent":{"krate":0,"index":1747}},{"kind":"Use","ref_id":{"krate":0,"index":8132},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427981,"byte_end":427988,"line_start":52,"line_end":52,"column_start":72,"column_end":79},"alias_span":null,"name":"RegInfo","value":"","parent":{"krate":0,"index":1747}},{"kind":"Use","ref_id":{"krate":0,"index":2352},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427990,"byte_end":427997,"line_start":52,"line_end":52,"column_start":81,"column_end":88},"alias_span":null,"name":"RegUnit","value":"","parent":{"krate":0,"index":1747}},{"kind":"Use","ref_id":{"krate":0,"index":8145},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":428028,"byte_end":428037,"line_start":53,"line_end":53,"column_start":29,"column_end":38},"alias_span":null,"name":"StackBase","value":"","parent":{"krate":0,"index":1747}},{"kind":"Use","ref_id":{"krate":0,"index":8166},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":428039,"byte_end":428052,"line_start":53,"line_end":53,"column_start":40,"column_end":53},"alias_span":null,"name":"StackBaseMask","value":"","parent":{"krate":0,"index":1747}},{"kind":"Use","ref_id":{"krate":0,"index":8137},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":428054,"byte_end":428062,"line_start":53,"line_end":53,"column_start":55,"column_end":63},"alias_span":null,"name":"StackRef","value":"","parent":{"krate":0,"index":1747}},{"kind":"Use","ref_id":{"krate":0,"index":2677},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":655839,"byte_end":655853,"line_start":7,"line_end":7,"column_start":25,"column_end":39},"alias_span":null,"name":"add_to_current","value":"","parent":{"krate":0,"index":2630}},{"kind":"Use","ref_id":{"krate":0,"index":2675},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":655855,"byte_end":655867,"line_start":7,"line_end":7,"column_start":41,"column_end":53},"alias_span":null,"name":"take_current","value":"","parent":{"krate":0,"index":2630}},{"kind":"Use","ref_id":{"krate":0,"index":2660},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":655869,"byte_end":655878,"line_start":7,"line_end":7,"column_start":55,"column_end":64},"alias_span":null,"name":"PassTimes","value":"","parent":{"krate":0,"index":2630}},{"kind":"Use","ref_id":{"krate":0,"index":2656},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":655880,"byte_end":655891,"line_start":7,"line_end":7,"column_start":66,"column_end":77},"alias_span":null,"name":"TimingToken","value":"","parent":{"krate":0,"index":2630}},{"kind":"Use","ref_id":{"krate":0,"index":2751},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":667661,"byte_end":667672,"line_start":84,"line_end":84,"column_start":21,"column_end":32},"alias_span":null,"name":"verify_cssa","value":"","parent":{"krate":0,"index":2679}},{"kind":"Use","ref_id":{"krate":0,"index":2811},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":667698,"byte_end":667713,"line_start":85,"line_end":85,"column_start":25,"column_end":40},"alias_span":null,"name":"verify_liveness","value":"","parent":{"krate":0,"index":2679}},{"kind":"Use","ref_id":{"krate":0,"index":2833},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":667740,"byte_end":667756,"line_start":86,"line_end":86,"column_start":26,"column_end":42},"alias_span":null,"name":"verify_locations","value":"","parent":{"krate":0,"index":2679}},{"kind":"Use","ref_id":{"krate":16,"index":10},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":2532,"byte_end":2545,"line_start":80,"line_end":80,"column_start":24,"column_end":37},"alias_span":null,"name":"packed_option","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8806},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/mod.rs","byte_start":1048834,"byte_end":1048847,"line_start":24,"line_end":24,"column_start":47,"column_end":60},"alias_span":null,"name":"RegDiversions","value":"","parent":{"krate":0,"index":3705}},{"kind":"Use","ref_id":{"krate":0,"index":8865},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":2972,"byte_end":2984,"line_start":107,"line_end":107,"column_start":25,"column_end":37},"alias_span":null,"name":"CodegenError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4715},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":2986,"byte_end":2999,"line_start":107,"line_end":107,"column_start":39,"column_end":52},"alias_span":null,"name":"CodegenResult","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":0,"byte_end":3089,"line_start":1,"line_end":110,"column_start":1,"column_end":53},"name":"","qualname":"::","value":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":203},{"krate":0,"index":232},{"krate":0,"index":326},{"krate":0,"index":338},{"krate":0,"index":415},{"krate":0,"index":456},{"krate":0,"index":1747},{"krate":0,"index":2482},{"krate":0,"index":2521},{"krate":0,"index":2565},{"krate":0,"index":2630},{"krate":0,"index":2679},{"krate":0,"index":2955},{"krate":0,"index":3024},{"krate":0,"index":3025},{"krate":0,"index":3046},{"krate":0,"index":3064},{"krate":0,"index":3073},{"krate":0,"index":3162},{"krate":0,"index":3180},{"krate":0,"index":3185},{"krate":0,"index":3220},{"krate":0,"index":3235},{"krate":0,"index":3464},{"krate":0,"index":3503},{"krate":0,"index":3527},{"krate":0,"index":3532},{"krate":0,"index":3586},{"krate":0,"index":3609},{"krate":0,"index":3705},{"krate":0,"index":4712},{"krate":0,"index":4717},{"krate":0,"index":4774},{"krate":0,"index":4811},{"krate":0,"index":4879},{"krate":0,"index":4894},{"krate":0,"index":4912},{"krate":0,"index":4922},{"krate":0,"index":4963},{"krate":0,"index":4966}],"decl_id":null,"docs":" Cranelift code generation library.\n","sig":null,"attributes":[{"value":"! Cranelift code generation library.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":0,"byte_end":38,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"deny(missing_docs, trivial_numeric_casts, unused_extern_crates)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":40,"byte_end":107,"line_start":3,"line_end":3,"column_start":1,"column_end":68}},{"value":"warn(unused_import_braces)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":108,"byte_end":138,"line_start":4,"line_end":4,"column_start":1,"column_end":31}},{"value":"deny(unstable_features)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":168,"byte_end":191,"line_start":5,"line_end":5,"column_start":30,"column_end":53}},{"value":"no_std","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":1646,"byte_end":1656,"line_start":41,"line_end":41,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":19},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"binemit","qualname":"::binemit","value":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":90},{"krate":0,"index":124},{"krate":0,"index":134},{"krate":0,"index":147},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":4974},{"krate":0,"index":5005},{"krate":0,"index":5003},{"krate":0,"index":5001},{"krate":0,"index":4998},{"krate":0,"index":4999},{"krate":0,"index":4995},{"krate":0,"index":4996},{"krate":0,"index":172},{"krate":0,"index":5006},{"krate":0,"index":5011},{"krate":0,"index":5012},{"krate":0,"index":174},{"krate":0,"index":177},{"krate":0,"index":5015},{"krate":0,"index":5029},{"krate":0,"index":5028},{"krate":0,"index":5026},{"krate":0,"index":5023},{"krate":0,"index":5024},{"krate":0,"index":5020},{"krate":0,"index":5021},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":199},{"krate":0,"index":200}],"decl_id":null,"docs":" Binary machine code emission.","sig":null,"attributes":[{"value":"! Binary machine code emission.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":3091,"byte_end":3124,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":3125,"byte_end":3128,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The `binemit` module contains code for translating Cranelift's intermediate representation into","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":3129,"byte_end":3228,"line_start":3,"line_end":3,"column_start":1,"column_end":100}},{"value":"! binary machine code.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":3229,"byte_end":3253,"line_start":4,"line_end":4,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":38},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":12818,"byte_end":12832,"line_start":34,"line_end":34,"column_start":12,"column_end":26},"name":"MemoryCodeSink","qualname":"::binemit::memorysink::MemoryCodeSink","value":"MemoryCodeSink { info }","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45}],"decl_id":null,"docs":" A `CodeSink` that writes binary machine code directly into memory.","sig":null,"attributes":[{"value":"/ A `CodeSink` that writes binary machine code directly into memory.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":12147,"byte_end":12217,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":12218,"byte_end":12221,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ A `MemoryCodeSink` object should be used when emitting a Cranelift IR function into executable","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":12222,"byte_end":12320,"line_start":25,"line_end":25,"column_start":1,"column_end":99}},{"value":"/ memory. It writes machine code directly to a raw pointer without any bounds checking, so make","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":12321,"byte_end":12418,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ sure to allocate enough memory for the whole function. The number of bytes required is returned","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":12419,"byte_end":12518,"line_start":27,"line_end":27,"column_start":1,"column_end":100}},{"value":"/ by the `Context::compile()` function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":12519,"byte_end":12560,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":12561,"byte_end":12564,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Any relocations in the function are forwarded to the `RelocSink` trait object.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":12565,"byte_end":12647,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":12648,"byte_end":12651,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Note that `MemoryCodeSink` writes multi-byte values in the native byte order of the host. This","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":12652,"byte_end":12750,"line_start":32,"line_end":32,"column_start":1,"column_end":99}},{"value":"/ is not the right thing to do for cross compilation.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":12751,"byte_end":12806,"line_start":33,"line_end":33,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":45},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":13189,"byte_end":13193,"line_start":43,"line_end":43,"column_start":9,"column_end":13},"name":"info","qualname":"::binemit::memorysink::MemoryCodeSink::info","value":"binemit::CodeInfo","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Information about the generated code and read-only data.\n","sig":null,"attributes":[{"value":"/ Information about the generated code and read-only data.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":13120,"byte_end":13180,"line_start":42,"line_end":42,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":13561,"byte_end":13564,"line_start":53,"line_end":53,"column_start":19,"column_end":22},"name":"new","qualname":"<MemoryCodeSink>::new","value":"fn (data: *mut u8, relocs: &'a mut dyn RelocSink, traps: &'a mut dyn TrapSink, stackmaps: &'a mut dyn StackmapSink) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new memory code sink that writes a function to the memory pointed to by `data`.","sig":null,"attributes":[{"value":"/ Create a new memory code sink that writes a function to the memory pointed to by `data`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":13242,"byte_end":13334,"line_start":47,"line_end":47,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":13339,"byte_end":13342,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":13347,"byte_end":13359,"line_start":49,"line_end":49,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":13364,"byte_end":13367,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe since `MemoryCodeSink` does not perform bounds checking on the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":13372,"byte_end":13462,"line_start":51,"line_end":51,"column_start":5,"column_end":95}},{"value":"/ memory buffer, and it can't guarantee that the `data` pointer is valid.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":13467,"byte_end":13542,"line_start":52,"line_end":52,"column_start":5,"column_end":80}}]},{"kind":"Trait","id":{"krate":0,"index":49},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":14131,"byte_end":14140,"line_start":76,"line_end":76,"column_start":11,"column_end":20},"name":"RelocSink","qualname":"::binemit::memorysink::RelocSink","value":"RelocSink","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53}],"decl_id":null,"docs":" A trait for receiving relocations for code that is emitted directly into memory.\n","sig":null,"attributes":[{"value":"/ A trait for receiving relocations for code that is emitted directly into memory.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":14036,"byte_end":14120,"line_start":75,"line_end":75,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":14219,"byte_end":14230,"line_start":78,"line_end":78,"column_start":8,"column_end":19},"name":"reloc_block","qualname":"::binemit::memorysink::RelocSink::reloc_block","value":"fn (&mut self, _: CodeOffset, _: Reloc, _: CodeOffset) -> ()","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Add a relocation referencing an block at the current offset.\n","sig":null,"attributes":[{"value":"/ Add a relocation referencing an block at the current offset.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":14147,"byte_end":14211,"line_start":77,"line_end":77,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":14370,"byte_end":14384,"line_start":81,"line_end":81,"column_start":8,"column_end":22},"name":"reloc_external","qualname":"::binemit::memorysink::RelocSink::reloc_external","value":"fn (&mut self, _: CodeOffset, _: Reloc, _: &ExternalName, _: Addend) -> ()","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Add a relocation referencing an external symbol at the current offset.\n","sig":null,"attributes":[{"value":"/ Add a relocation referencing an external symbol at the current offset.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":14288,"byte_end":14362,"line_start":80,"line_end":80,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":14508,"byte_end":14522,"line_start":84,"line_end":84,"column_start":8,"column_end":22},"name":"reloc_constant","qualname":"::binemit::memorysink::RelocSink::reloc_constant","value":"fn (&mut self, _: CodeOffset, _: Reloc, _: ConstantOffset) -> ()","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Add a relocation referencing a constant.\n","sig":null,"attributes":[{"value":"/ Add a relocation referencing a constant.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":14456,"byte_end":14500,"line_start":83,"line_end":83,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":14638,"byte_end":14646,"line_start":87,"line_end":87,"column_start":8,"column_end":16},"name":"reloc_jt","qualname":"::binemit::memorysink::RelocSink::reloc_jt","value":"fn (&mut self, _: CodeOffset, _: Reloc, _: JumpTable) -> ()","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Add a relocation referencing a jump table.\n","sig":null,"attributes":[{"value":"/ Add a relocation referencing a jump table.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":14584,"byte_end":14630,"line_start":86,"line_end":86,"column_start":5,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":54},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":14888,"byte_end":14896,"line_start":94,"line_end":94,"column_start":11,"column_end":19},"name":"TrapSink","qualname":"::binemit::memorysink::TrapSink","value":"TrapSink","parent":null,"children":[{"krate":0,"index":55}],"decl_id":null,"docs":" A trait for receiving trap codes and offsets.","sig":null,"attributes":[{"value":"/ A trait for receiving trap codes and offsets.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":14701,"byte_end":14750,"line_start":90,"line_end":90,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":14751,"byte_end":14754,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ If you don't need information about possible traps, you can use the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":14755,"byte_end":14826,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ [`NullTrapSink`](NullTrapSink) implementation.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":14827,"byte_end":14877,"line_start":93,"line_end":93,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":14958,"byte_end":14962,"line_start":96,"line_end":96,"column_start":8,"column_end":12},"name":"trap","qualname":"::binemit::memorysink::TrapSink::trap","value":"fn (&mut self, _: CodeOffset, _: SourceLoc, _: TrapCode) -> ()","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Add trap information for a specific offset.\n","sig":null,"attributes":[{"value":"/ Add trap information for a specific offset.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":14903,"byte_end":14950,"line_start":95,"line_end":95,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":76},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":17311,"byte_end":17324,"line_start":177,"line_end":177,"column_start":12,"column_end":25},"name":"NullRelocSink","qualname":"::binemit::memorysink::NullRelocSink","value":"NullRelocSink {  }","parent":null,"children":[],"decl_id":null,"docs":" A `RelocSink` implementation that does nothing, which is convenient when\n compiling code that does not relocate anything.\n","sig":null,"attributes":[{"value":"/ A `RelocSink` implementation that does nothing, which is convenient when","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":17171,"byte_end":17247,"line_start":175,"line_end":175,"column_start":1,"column_end":77}},{"value":"/ compiling code that does not relocate anything.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":17248,"byte_end":17299,"line_start":176,"line_end":176,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":82},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":17796,"byte_end":17808,"line_start":188,"line_end":188,"column_start":12,"column_end":24},"name":"NullTrapSink","qualname":"::binemit::memorysink::NullTrapSink","value":"NullTrapSink {  }","parent":null,"children":[],"decl_id":null,"docs":" A `TrapSink` implementation that does nothing, which is convenient when\n compiling code that does not rely on trapping semantics.\n","sig":null,"attributes":[{"value":"/ A `TrapSink` implementation that does nothing, which is convenient when","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":17648,"byte_end":17723,"line_start":186,"line_end":186,"column_start":1,"column_end":76}},{"value":"/ compiling code that does not rely on trapping semantics.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":17724,"byte_end":17784,"line_start":187,"line_end":187,"column_start":1,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":85},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":17979,"byte_end":17991,"line_start":195,"line_end":195,"column_start":11,"column_end":23},"name":"StackmapSink","qualname":"::binemit::memorysink::StackmapSink","value":"StackmapSink","parent":null,"children":[{"krate":0,"index":86}],"decl_id":null,"docs":" A trait for emitting stackmaps.\n","sig":null,"attributes":[{"value":"/ A trait for emitting stackmaps.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":17933,"byte_end":17968,"line_start":194,"line_end":194,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":18101,"byte_end":18113,"line_start":197,"line_end":197,"column_start":8,"column_end":20},"name":"add_stackmap","qualname":"::binemit::memorysink::StackmapSink::add_stackmap","value":"fn (&mut self, _: CodeOffset, _: Stackmap) -> ()","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Output a bitmap of the stack representing the live reference variables at this code offset.\n","sig":null,"attributes":[{"value":"/ Output a bitmap of the stack representing the live reference variables at this code offset.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":17998,"byte_end":18093,"line_start":196,"line_end":196,"column_start":5,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":87},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":18216,"byte_end":18232,"line_start":201,"line_end":201,"column_start":12,"column_end":28},"name":"NullStackmapSink","qualname":"::binemit::memorysink::NullStackmapSink","value":"NullStackmapSink {  }","parent":null,"children":[],"decl_id":null,"docs":" Placeholder StackmapSink that does nothing.\n","sig":null,"attributes":[{"value":"/ Placeholder StackmapSink that does nothing.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":18157,"byte_end":18204,"line_start":200,"line_end":200,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":116},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/relaxation.rs","byte_start":19854,"byte_end":19868,"line_start":46,"line_end":46,"column_start":8,"column_end":22},"name":"relax_branches","qualname":"::binemit::relaxation::relax_branches","value":"fn (func: &mut Function, _cfg: &mut ControlFlowGraph, _domtree: &mut DominatorTree, isa: &dyn TargetIsa) -> CodegenResult<CodeInfo>","parent":null,"children":[],"decl_id":null,"docs":" Relax branches and compute the final layout of block headers in `func`.","sig":null,"attributes":[{"value":"/ Relax branches and compute the final layout of block headers in `func`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/relaxation.rs","byte_start":19684,"byte_end":19759,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/relaxation.rs","byte_start":19760,"byte_end":19763,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Fill in the `func.offsets` table so the function is ready for binary emission.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/relaxation.rs","byte_start":19764,"byte_end":19846,"line_start":45,"line_end":45,"column_start":1,"column_end":83}}]},{"kind":"Function","id":{"krate":0,"index":131},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/shrink.rs","byte_start":34071,"byte_end":34090,"line_start":16,"line_end":16,"column_start":8,"column_end":27},"name":"shrink_instructions","qualname":"::binemit::shrink::shrink_instructions","value":"fn (func: &mut Function, isa: &dyn TargetIsa) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Pick the smallest valid encodings for instructions.\n","sig":null,"attributes":[{"value":"/ Pick the smallest valid encodings for instructions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/shrink.rs","byte_start":34008,"byte_end":34063,"line_start":15,"line_end":15,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":4967},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/stackmap.rs","byte_start":37348,"byte_end":37356,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"Stackmap","qualname":"::binemit::stackmap::Stackmap","value":"Stackmap {  }","parent":null,"children":[{"krate":0,"index":4968},{"krate":0,"index":4969}],"decl_id":null,"docs":" A stack map is a bitmap with one bit per machine word on the stack. Stack\n maps are created at `safepoint` instructions and record all live reference\n values that are on the stack. All slot kinds, except `OutgoingArg` are\n captured in a stack map. The `OutgoingArg`'s will be captured in the callee\n function as `IncomingArg`'s.","sig":null,"attributes":[{"value":"/ A stack map is a bitmap with one bit per machine word on the stack. Stack","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/stackmap.rs","byte_start":36729,"byte_end":36806,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ maps are created at `safepoint` instructions and record all live reference","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/stackmap.rs","byte_start":36807,"byte_end":36885,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ values that are on the stack. All slot kinds, except `OutgoingArg` are","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/stackmap.rs","byte_start":36886,"byte_end":36960,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ captured in a stack map. The `OutgoingArg`'s will be captured in the callee","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/stackmap.rs","byte_start":36961,"byte_end":37040,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ function as `IncomingArg`'s.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/stackmap.rs","byte_start":37041,"byte_end":37073,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/stackmap.rs","byte_start":37074,"byte_end":37077,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The first value in the bitmap is of the lowest addressed slot on the stack.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/stackmap.rs","byte_start":37078,"byte_end":37157,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ As all stacks in Isa's supported by Cranelift grow down, this means that","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/stackmap.rs","byte_start":37158,"byte_end":37234,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ first value is of the top of the stack and values proceed down the stack.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/stackmap.rs","byte_start":37235,"byte_end":37312,"line_start":17,"line_end":17,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/stackmap.rs","byte_start":37529,"byte_end":37540,"line_start":26,"line_end":26,"column_start":12,"column_end":23},"name":"from_values","qualname":"<Stackmap>::from_values","value":"fn (args: &[ir::entities::Value], func: &ir::Function, isa: &dyn TargetIsa) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a stackmap based on where references are located on a function's stack.\n","sig":null,"attributes":[{"value":"/ Create a stackmap based on where references are located on a function's stack.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/stackmap.rs","byte_start":37435,"byte_end":37517,"line_start":25,"line_end":25,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/stackmap.rs","byte_start":39517,"byte_end":39527,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<Stackmap>::from_slice","value":"fn (vec: &[bool]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a vec of Bitsets from a slice of bools.\n","sig":null,"attributes":[{"value":"/ Create a vec of Bitsets from a slice of bools.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/stackmap.rs","byte_start":39455,"byte_end":39505,"line_start":75,"line_end":75,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/stackmap.rs","byte_start":40134,"byte_end":40141,"line_start":97,"line_end":97,"column_start":12,"column_end":19},"name":"get_bit","qualname":"<Stackmap>::get_bit","value":"fn (&self, bit_index: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns a specified bit.\n","sig":null,"attributes":[{"value":"/ Returns a specified bit.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/stackmap.rs","byte_start":40094,"byte_end":40122,"line_start":96,"line_end":96,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/stackmap.rs","byte_start":40474,"byte_end":40482,"line_start":105,"line_end":105,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Stackmap>::as_slice","value":"fn (&self) -> &[BitSet<u32>]","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw bitmap that represents this stack map.\n","sig":null,"attributes":[{"value":"/ Returns the raw bitmap that represents this stack map.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/stackmap.rs","byte_start":40404,"byte_end":40462,"line_start":104,"line_end":104,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/stackmap.rs","byte_start":40616,"byte_end":40628,"line_start":110,"line_end":110,"column_start":12,"column_end":24},"name":"mapped_words","qualname":"<Stackmap>::mapped_words","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of words represented by this stack map.\n","sig":null,"attributes":[{"value":"/ Returns the number of words represented by this stack map.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/stackmap.rs","byte_start":40542,"byte_end":40604,"line_start":109,"line_end":109,"column_start":5,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":170},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":4079,"byte_end":4089,"line_start":30,"line_end":30,"column_start":10,"column_end":20},"name":"CodeOffset","qualname":"::binemit::CodeOffset","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Offset in bytes from the beginning of the function.","sig":null,"attributes":[{"value":"/ Offset in bytes from the beginning of the function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":3850,"byte_end":3905,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":3906,"byte_end":3909,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Cranelift can be used as a cross compiler, so we don't want to use a type like `usize` which","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":3910,"byte_end":4006,"line_start":28,"line_end":28,"column_start":1,"column_end":97}},{"value":"/ depends on the *host* platform, not the *target* platform.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":4007,"byte_end":4069,"line_start":29,"line_end":29,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":171},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":4146,"byte_end":4152,"line_start":33,"line_end":33,"column_start":10,"column_end":16},"name":"Addend","qualname":"::binemit::Addend","value":"i64","parent":null,"children":[],"decl_id":null,"docs":" Addend to add to the symbol value.\n","sig":null,"attributes":[{"value":"/ Addend to add to the symbol value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":4098,"byte_end":4136,"line_start":32,"line_end":32,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4975},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":4356,"byte_end":4360,"line_start":40,"line_end":40,"column_start":5,"column_end":9},"name":"Abs4","qualname":"::binemit::Reloc::Abs4","value":"Reloc::Abs4","parent":{"krate":0,"index":4974},"children":[],"decl_id":null,"docs":" absolute 4-byte\n","sig":null,"attributes":[{"value":"/ absolute 4-byte","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":4332,"byte_end":4351,"line_start":39,"line_end":39,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4977},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":4390,"byte_end":4394,"line_start":42,"line_end":42,"column_start":5,"column_end":9},"name":"Abs8","qualname":"::binemit::Reloc::Abs8","value":"Reloc::Abs8","parent":{"krate":0,"index":4974},"children":[],"decl_id":null,"docs":" absolute 8-byte\n","sig":null,"attributes":[{"value":"/ absolute 8-byte","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":4366,"byte_end":4385,"line_start":41,"line_end":41,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4979},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":4431,"byte_end":4440,"line_start":44,"line_end":44,"column_start":5,"column_end":14},"name":"X86PCRel4","qualname":"::binemit::Reloc::X86PCRel4","value":"Reloc::X86PCRel4","parent":{"krate":0,"index":4974},"children":[],"decl_id":null,"docs":" x86 PC-relative 4-byte\n","sig":null,"attributes":[{"value":"/ x86 PC-relative 4-byte","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":4400,"byte_end":4426,"line_start":43,"line_end":43,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4981},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":4503,"byte_end":4518,"line_start":46,"line_end":46,"column_start":5,"column_end":20},"name":"X86PCRelRodata4","qualname":"::binemit::Reloc::X86PCRelRodata4","value":"Reloc::X86PCRelRodata4","parent":{"krate":0,"index":4974},"children":[],"decl_id":null,"docs":" x86 PC-relative 4-byte offset to trailing rodata\n","sig":null,"attributes":[{"value":"/ x86 PC-relative 4-byte offset to trailing rodata","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":4446,"byte_end":4498,"line_start":45,"line_end":45,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4983},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":4563,"byte_end":4576,"line_start":48,"line_end":48,"column_start":5,"column_end":18},"name":"X86CallPCRel4","qualname":"::binemit::Reloc::X86CallPCRel4","value":"Reloc::X86CallPCRel4","parent":{"krate":0,"index":4974},"children":[],"decl_id":null,"docs":" x86 call to PC-relative 4-byte\n","sig":null,"attributes":[{"value":"/ x86 call to PC-relative 4-byte","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":4524,"byte_end":4558,"line_start":47,"line_end":47,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4985},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":4622,"byte_end":4636,"line_start":50,"line_end":50,"column_start":5,"column_end":19},"name":"X86CallPLTRel4","qualname":"::binemit::Reloc::X86CallPLTRel4","value":"Reloc::X86CallPLTRel4","parent":{"krate":0,"index":4974},"children":[],"decl_id":null,"docs":" x86 call to PLT-relative 4-byte\n","sig":null,"attributes":[{"value":"/ x86 call to PLT-relative 4-byte","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":4582,"byte_end":4617,"line_start":49,"line_end":49,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4987},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":4677,"byte_end":4689,"line_start":52,"line_end":52,"column_start":5,"column_end":17},"name":"X86GOTPCRel4","qualname":"::binemit::Reloc::X86GOTPCRel4","value":"Reloc::X86GOTPCRel4","parent":{"krate":0,"index":4974},"children":[],"decl_id":null,"docs":" x86 GOT PC-relative 4-byte\n","sig":null,"attributes":[{"value":"/ x86 GOT PC-relative 4-byte","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":4642,"byte_end":4672,"line_start":51,"line_end":51,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4989},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":4721,"byte_end":4730,"line_start":54,"line_end":54,"column_start":5,"column_end":14},"name":"Arm32Call","qualname":"::binemit::Reloc::Arm32Call","value":"Reloc::Arm32Call","parent":{"krate":0,"index":4974},"children":[],"decl_id":null,"docs":" Arm32 call target\n","sig":null,"attributes":[{"value":"/ Arm32 call target","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":4695,"byte_end":4716,"line_start":53,"line_end":53,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4991},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":4762,"byte_end":4771,"line_start":56,"line_end":56,"column_start":5,"column_end":14},"name":"Arm64Call","qualname":"::binemit::Reloc::Arm64Call","value":"Reloc::Arm64Call","parent":{"krate":0,"index":4974},"children":[],"decl_id":null,"docs":" Arm64 call target\n","sig":null,"attributes":[{"value":"/ Arm64 call target","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":4736,"byte_end":4757,"line_start":55,"line_end":55,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4993},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":4804,"byte_end":4813,"line_start":58,"line_end":58,"column_start":5,"column_end":14},"name":"RiscvCall","qualname":"::binemit::Reloc::RiscvCall","value":"Reloc::RiscvCall","parent":{"krate":0,"index":4974},"children":[],"decl_id":null,"docs":" RISC-V call target\n","sig":null,"attributes":[{"value":"/ RISC-V call target","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":4777,"byte_end":4799,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Enum","id":{"krate":0,"index":4974},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":4320,"byte_end":4325,"line_start":38,"line_end":38,"column_start":10,"column_end":15},"name":"Reloc","qualname":"::binemit::Reloc","value":"Reloc::{Abs4, Abs8, X86PCRel4, X86PCRelRodata4, X86CallPCRel4, X86CallPLTRel4, X86GOTPCRel4, Arm32Call, Arm64Call, RiscvCall}","parent":null,"children":[{"krate":0,"index":4975},{"krate":0,"index":4977},{"krate":0,"index":4979},{"krate":0,"index":4981},{"krate":0,"index":4983},{"krate":0,"index":4985},{"krate":0,"index":4987},{"krate":0,"index":4989},{"krate":0,"index":4991},{"krate":0,"index":4993}],"decl_id":null,"docs":" Relocation kinds for every ISA\n","sig":null,"attributes":[{"value":"/ Relocation kinds for every ISA","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":4161,"byte_end":4195,"line_start":35,"line_end":35,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5006},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":5992,"byte_end":6000,"line_start":84,"line_end":84,"column_start":12,"column_end":20},"name":"CodeInfo","qualname":"::binemit::CodeInfo","value":"CodeInfo { code_size, jumptables_size, rodata_size, total_size }","parent":null,"children":[{"krate":0,"index":5007},{"krate":0,"index":5008},{"krate":0,"index":5009},{"krate":0,"index":5010}],"decl_id":null,"docs":" Container for information about a vector of compiled code and its supporting read-only data.","sig":null,"attributes":[{"value":"/ Container for information about a vector of compiled code and its supporting read-only data.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":5614,"byte_end":5710,"line_start":78,"line_end":78,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":5711,"byte_end":5714,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ The code starts at offset 0 and is followed optionally by relocatable jump tables and copyable","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":5715,"byte_end":5813,"line_start":80,"line_end":80,"column_start":1,"column_end":99}},{"value":"/ (raw binary) read-only data.  Any padding between sections is always part of the section that","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":5814,"byte_end":5911,"line_start":81,"line_end":81,"column_start":1,"column_end":98}},{"value":"/ precedes the boundary between the sections.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":5912,"byte_end":5959,"line_start":82,"line_end":82,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":5007},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":6082,"byte_end":6091,"line_start":86,"line_end":86,"column_start":9,"column_end":18},"name":"code_size","qualname":"::binemit::CodeInfo::code_size","value":"u32","parent":{"krate":0,"index":5006},"children":[],"decl_id":null,"docs":" Number of bytes of machine code (the code starts at offset 0).\n","sig":null,"attributes":[{"value":"/ Number of bytes of machine code (the code starts at offset 0).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":6007,"byte_end":6073,"line_start":85,"line_end":85,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":5008},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":6153,"byte_end":6168,"line_start":89,"line_end":89,"column_start":9,"column_end":24},"name":"jumptables_size","qualname":"::binemit::CodeInfo::jumptables_size","value":"u32","parent":{"krate":0,"index":5006},"children":[],"decl_id":null,"docs":" Number of bytes of jumptables.\n","sig":null,"attributes":[{"value":"/ Number of bytes of jumptables.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":6110,"byte_end":6144,"line_start":88,"line_end":88,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":5009},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":6226,"byte_end":6237,"line_start":92,"line_end":92,"column_start":9,"column_end":20},"name":"rodata_size","qualname":"::binemit::CodeInfo::rodata_size","value":"u32","parent":{"krate":0,"index":5006},"children":[],"decl_id":null,"docs":" Number of bytes of rodata.\n","sig":null,"attributes":[{"value":"/ Number of bytes of rodata.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":6187,"byte_end":6217,"line_start":91,"line_end":91,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":5010},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":6294,"byte_end":6304,"line_start":95,"line_end":95,"column_start":9,"column_end":19},"name":"total_size","qualname":"::binemit::CodeInfo::total_size","value":"u32","parent":{"krate":0,"index":5006},"children":[],"decl_id":null,"docs":" Number of bytes in total.\n","sig":null,"attributes":[{"value":"/ Number of bytes in total.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":6256,"byte_end":6285,"line_start":94,"line_end":94,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":6443,"byte_end":6453,"line_start":100,"line_end":100,"column_start":12,"column_end":22},"name":"jumptables","qualname":"<CodeInfo>::jumptables","value":"fn (&self) -> CodeOffset","parent":null,"children":[],"decl_id":null,"docs":" Offset of any relocatable jump tables, or equal to rodata if there are no jump tables.\n","sig":null,"attributes":[{"value":"/ Offset of any relocatable jump tables, or equal to rodata if there are no jump tables.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":6341,"byte_end":6431,"line_start":99,"line_end":99,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":6612,"byte_end":6618,"line_start":105,"line_end":105,"column_start":12,"column_end":18},"name":"rodata","qualname":"<CodeInfo>::rodata","value":"fn (&self) -> CodeOffset","parent":null,"children":[],"decl_id":null,"docs":" Offset of any copyable read-only data, or equal to total_size if there are no rodata.\n","sig":null,"attributes":[{"value":"/ Offset of any copyable read-only data, or equal to total_size if there are no rodata.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":6511,"byte_end":6600,"line_start":104,"line_end":104,"column_start":5,"column_end":94}}]},{"kind":"Trait","id":{"krate":0,"index":177},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":6953,"byte_end":6961,"line_start":114,"line_end":114,"column_start":11,"column_end":19},"name":"CodeSink","qualname":"::binemit::CodeSink","value":"CodeSink","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191}],"decl_id":null,"docs":" Abstract interface for adding bytes to the code segment.","sig":null,"attributes":[{"value":"/ Abstract interface for adding bytes to the code segment.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":6697,"byte_end":6757,"line_start":110,"line_end":110,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":6758,"byte_end":6761,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ A `CodeSink` will receive all of the machine code for a function. It also accepts relocations","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":6762,"byte_end":6859,"line_start":112,"line_end":112,"column_start":1,"column_end":98}},{"value":"/ which are locations in the code section that need to be fixed up when linking.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":6860,"byte_end":6942,"line_start":113,"line_end":113,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":7005,"byte_end":7011,"line_start":116,"line_end":116,"column_start":8,"column_end":14},"name":"offset","qualname":"::binemit::CodeSink::offset","value":"fn (&self) -> CodeOffset","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Get the current position.\n","sig":null,"attributes":[{"value":"/ Get the current position.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":6968,"byte_end":6997,"line_start":115,"line_end":115,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":7082,"byte_end":7086,"line_start":119,"line_end":119,"column_start":8,"column_end":12},"name":"put1","qualname":"::binemit::CodeSink::put1","value":"fn (&mut self, _: u8) -> ()","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Add 1 byte to the code section.\n","sig":null,"attributes":[{"value":"/ Add 1 byte to the code section.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":7039,"byte_end":7074,"line_start":118,"line_end":118,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":7155,"byte_end":7159,"line_start":122,"line_end":122,"column_start":8,"column_end":12},"name":"put2","qualname":"::binemit::CodeSink::put2","value":"fn (&mut self, _: u16) -> ()","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Add 2 bytes to the code section.\n","sig":null,"attributes":[{"value":"/ Add 2 bytes to the code section.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":7111,"byte_end":7147,"line_start":121,"line_end":121,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":7229,"byte_end":7233,"line_start":125,"line_end":125,"column_start":8,"column_end":12},"name":"put4","qualname":"::binemit::CodeSink::put4","value":"fn (&mut self, _: u32) -> ()","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Add 4 bytes to the code section.\n","sig":null,"attributes":[{"value":"/ Add 4 bytes to the code section.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":7185,"byte_end":7221,"line_start":124,"line_end":124,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":7303,"byte_end":7307,"line_start":128,"line_end":128,"column_start":8,"column_end":12},"name":"put8","qualname":"::binemit::CodeSink::put8","value":"fn (&mut self, _: u64) -> ()","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Add 8 bytes to the code section.\n","sig":null,"attributes":[{"value":"/ Add 8 bytes to the code section.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":7259,"byte_end":7295,"line_start":127,"line_end":127,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":7405,"byte_end":7416,"line_start":131,"line_end":131,"column_start":8,"column_end":19},"name":"reloc_block","qualname":"::binemit::CodeSink::reloc_block","value":"fn (&mut self, _: Reloc, _: CodeOffset) -> ()","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Add a relocation referencing an block at the current offset.\n","sig":null,"attributes":[{"value":"/ Add a relocation referencing an block at the current offset.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":7333,"byte_end":7397,"line_start":130,"line_end":130,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":7557,"byte_end":7571,"line_start":134,"line_end":134,"column_start":8,"column_end":22},"name":"reloc_external","qualname":"::binemit::CodeSink::reloc_external","value":"fn (&mut self, _: Reloc, _: &ExternalName, _: Addend) -> ()","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Add a relocation referencing an external symbol plus the addend at the current offset.\n","sig":null,"attributes":[{"value":"/ Add a relocation referencing an external symbol plus the addend at the current offset.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":7459,"byte_end":7549,"line_start":133,"line_end":133,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":7680,"byte_end":7694,"line_start":137,"line_end":137,"column_start":8,"column_end":22},"name":"reloc_constant","qualname":"::binemit::CodeSink::reloc_constant","value":"fn (&mut self, _: Reloc, _: ConstantOffset) -> ()","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Add a relocation referencing a constant.\n","sig":null,"attributes":[{"value":"/ Add a relocation referencing a constant.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":7628,"byte_end":7672,"line_start":136,"line_end":136,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":7795,"byte_end":7803,"line_start":140,"line_end":140,"column_start":8,"column_end":16},"name":"reloc_jt","qualname":"::binemit::CodeSink::reloc_jt","value":"fn (&mut self, _: Reloc, _: JumpTable) -> ()","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Add a relocation referencing a jump table.\n","sig":null,"attributes":[{"value":"/ Add a relocation referencing a jump table.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":7741,"byte_end":7787,"line_start":139,"line_end":139,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":7901,"byte_end":7905,"line_start":143,"line_end":143,"column_start":8,"column_end":12},"name":"trap","qualname":"::binemit::CodeSink::trap","value":"fn (&mut self, _: TrapCode, _: SourceLoc) -> ()","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Add trap information for the current offset.\n","sig":null,"attributes":[{"value":"/ Add trap information for the current offset.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":7845,"byte_end":7893,"line_start":142,"line_end":142,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":8022,"byte_end":8038,"line_start":146,"line_end":146,"column_start":8,"column_end":24},"name":"begin_jumptables","qualname":"::binemit::CodeSink::begin_jumptables","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Machine code output is complete, jump table data may follow.\n","sig":null,"attributes":[{"value":"/ Machine code output is complete, jump table data may follow.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":7950,"byte_end":8014,"line_start":145,"line_end":145,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":8129,"byte_end":8141,"line_start":149,"line_end":149,"column_start":8,"column_end":20},"name":"begin_rodata","qualname":"::binemit::CodeSink::begin_rodata","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Jump table output is complete, raw read-only data may follow.\n","sig":null,"attributes":[{"value":"/ Jump table output is complete, raw read-only data may follow.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":8056,"byte_end":8121,"line_start":148,"line_end":148,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":8217,"byte_end":8228,"line_start":152,"line_end":152,"column_start":8,"column_end":19},"name":"end_codegen","qualname":"::binemit::CodeSink::end_codegen","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Read-only data output is complete, we're done.\n","sig":null,"attributes":[{"value":"/ Read-only data output is complete, we're done.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":8159,"byte_end":8209,"line_start":151,"line_end":151,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":8300,"byte_end":8312,"line_start":155,"line_end":155,"column_start":8,"column_end":20},"name":"add_stackmap","qualname":"::binemit::CodeSink::add_stackmap","value":"fn (&mut self, _: &[Value], _: &Function, _: &dyn TargetIsa) -> ()","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Add a stackmap at the current code offset.\n","sig":null,"attributes":[{"value":"/ Add a stackmap at the current code offset.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":8246,"byte_end":8292,"line_start":154,"line_end":154,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5016},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":8543,"byte_end":8551,"line_start":162,"line_end":162,"column_start":5,"column_end":13},"name":"Fastcall","qualname":"::binemit::FrameUnwindKind::Fastcall","value":"FrameUnwindKind::Fastcall","parent":{"krate":0,"index":5015},"children":[],"decl_id":null,"docs":" Windows fastcall unwinding (as in .pdata).\n","sig":null,"attributes":[{"value":"/ Windows fastcall unwinding (as in .pdata).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":8492,"byte_end":8538,"line_start":161,"line_end":161,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5018},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":8620,"byte_end":8629,"line_start":164,"line_end":164,"column_start":5,"column_end":14},"name":"Libunwind","qualname":"::binemit::FrameUnwindKind::Libunwind","value":"FrameUnwindKind::Libunwind","parent":{"krate":0,"index":5015},"children":[],"decl_id":null,"docs":" FDE entry for libunwind (similar to .eh_frame format).\n","sig":null,"attributes":[{"value":"/ FDE entry for libunwind (similar to .eh_frame format).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":8557,"byte_end":8615,"line_start":163,"line_end":163,"column_start":5,"column_end":63}}]},{"kind":"Enum","id":{"krate":0,"index":5015},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":8470,"byte_end":8485,"line_start":160,"line_end":160,"column_start":10,"column_end":25},"name":"FrameUnwindKind","qualname":"::binemit::FrameUnwindKind","value":"FrameUnwindKind::{Fastcall, Libunwind}","parent":null,"children":[{"krate":0,"index":5016},{"krate":0,"index":5018}],"decl_id":null,"docs":" Type of the frame unwind information.\n","sig":null,"attributes":[{"value":"/ Type of the frame unwind information.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":8374,"byte_end":8415,"line_start":158,"line_end":158,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":192},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":8690,"byte_end":8707,"line_start":168,"line_end":168,"column_start":10,"column_end":27},"name":"FrameUnwindOffset","qualname":"::binemit::FrameUnwindOffset","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Offset in frame unwind information buffer.\n","sig":null,"attributes":[{"value":"/ Offset in frame unwind information buffer.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":8634,"byte_end":8680,"line_start":167,"line_end":167,"column_start":1,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":193},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":8767,"byte_end":8782,"line_start":171,"line_end":171,"column_start":11,"column_end":26},"name":"FrameUnwindSink","qualname":"::binemit::FrameUnwindSink","value":"FrameUnwindSink","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198}],"decl_id":null,"docs":" Sink for frame unwind information.\n","sig":null,"attributes":[{"value":"/ Sink for frame unwind information.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":8718,"byte_end":8756,"line_start":170,"line_end":170,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":8826,"byte_end":8829,"line_start":173,"line_end":173,"column_start":8,"column_end":11},"name":"len","qualname":"::binemit::FrameUnwindSink::len","value":"fn (&self) -> FrameUnwindOffset","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Get the current position.\n","sig":null,"attributes":[{"value":"/ Get the current position.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":8789,"byte_end":8818,"line_start":172,"line_end":172,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":8906,"byte_end":8911,"line_start":176,"line_end":176,"column_start":8,"column_end":13},"name":"bytes","qualname":"::binemit::FrameUnwindSink::bytes","value":"fn (&mut self, _: &[u8]) -> ()","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Add bytes to the code section.\n","sig":null,"attributes":[{"value":"/ Add bytes to the code section.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":8864,"byte_end":8898,"line_start":175,"line_end":175,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":8980,"byte_end":8987,"line_start":179,"line_end":179,"column_start":8,"column_end":15},"name":"reserve","qualname":"::binemit::FrameUnwindSink::reserve","value":"fn (&mut self, _len: usize) -> ()","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Reserves bytes in the buffer.\n","sig":null,"attributes":[{"value":"/ Reserves bytes in the buffer.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":8939,"byte_end":8972,"line_start":178,"line_end":178,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":9055,"byte_end":9060,"line_start":182,"line_end":182,"column_start":8,"column_end":13},"name":"reloc","qualname":"::binemit::FrameUnwindSink::reloc","value":"fn (&mut self, _: Reloc, _: FrameUnwindOffset) -> ()","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Add a relocation entry.\n","sig":null,"attributes":[{"value":"/ Add a relocation entry.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":9020,"byte_end":9047,"line_start":181,"line_end":181,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":9157,"byte_end":9173,"line_start":185,"line_end":185,"column_start":8,"column_end":24},"name":"set_entry_offset","qualname":"::binemit::FrameUnwindSink::set_entry_offset","value":"fn (&mut self, _: FrameUnwindOffset) -> ()","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Specified offset to main structure.\n","sig":null,"attributes":[{"value":"/ Specified offset to main structure.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":9110,"byte_end":9149,"line_start":184,"line_end":184,"column_start":5,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":199},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":9259,"byte_end":9271,"line_start":190,"line_end":190,"column_start":8,"column_end":20},"name":"bad_encoding","qualname":"::binemit::bad_encoding","value":"fn (func: &Function, inst: Inst) -> !","parent":null,"children":[],"decl_id":null,"docs":" Report a bad encoding error.\n","sig":null,"attributes":[{"value":"/ Report a bad encoding error.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":9211,"byte_end":9243,"line_start":188,"line_end":188,"column_start":1,"column_end":33}},{"value":"cold","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":9244,"byte_end":9251,"line_start":189,"line_end":189,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":200},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":9645,"byte_end":9658,"line_start":202,"line_end":202,"column_start":8,"column_end":21},"name":"emit_function","qualname":"::binemit::emit_function","value":"fn <CS, EI> (func: &Function, emit_inst: EI, sink: &mut CS, isa: &dyn TargetIsa) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Emit a function to `sink`, given an instruction emitter function.","sig":null,"attributes":[{"value":"/ Emit a function to `sink`, given an instruction emitter function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":9436,"byte_end":9505,"line_start":198,"line_end":198,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":9506,"byte_end":9509,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ This function is called from the `TargetIsa::emit_function()` implementations with the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":9510,"byte_end":9600,"line_start":200,"line_end":200,"column_start":1,"column_end":91}},{"value":"/ appropriate instruction emitter.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":9601,"byte_end":9637,"line_start":201,"line_end":201,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":203},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cfg_printer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cfg_printer","qualname":"::cfg_printer","value":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cfg_printer.rs","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":218},{"krate":0,"index":222},{"krate":0,"index":229}],"decl_id":null,"docs":" The `CFGPrinter` utility.\n","sig":null,"attributes":[{"value":"! The `CFGPrinter` utility.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cfg_printer.rs","byte_start":41558,"byte_end":41587,"line_start":1,"line_end":1,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":218},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cfg_printer.rs","byte_start":41897,"byte_end":41907,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"CFGPrinter","qualname":"::cfg_printer::CFGPrinter","value":"CFGPrinter {  }","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":221}],"decl_id":null,"docs":" A utility for pretty-printing the CFG of a `Function`.\n","sig":null,"attributes":[{"value":"/ A utility for pretty-printing the CFG of a `Function`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cfg_printer.rs","byte_start":41827,"byte_end":41885,"line_start":11,"line_end":11,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cfg_printer.rs","byte_start":42097,"byte_end":42100,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<CFGPrinter>::new","value":"fn (func: &'a Function) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new CFGPrinter.\n","sig":null,"attributes":[{"value":"/ Create a new CFGPrinter.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cfg_printer.rs","byte_start":42057,"byte_end":42085,"line_start":19,"line_end":19,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cfg_printer.rs","byte_start":42296,"byte_end":42301,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"write","qualname":"<CFGPrinter>::write","value":"fn (&self, w: &mut dyn Write) -> Result","parent":null,"children":[],"decl_id":null,"docs":" Write the CFG for this function to `w`.\n","sig":null,"attributes":[{"value":"/ Write the CFG for this function to `w`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cfg_printer.rs","byte_start":42241,"byte_end":42284,"line_start":27,"line_end":27,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":232},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cursor","qualname":"::cursor","value":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":5031},{"krate":0,"index":5053},{"krate":0,"index":5052},{"krate":0,"index":5048},{"krate":0,"index":5049},{"krate":0,"index":5045},{"krate":0,"index":5046},{"krate":0,"index":5043},{"krate":0,"index":235},{"krate":0,"index":274},{"krate":0,"index":279},{"krate":0,"index":284},{"krate":0,"index":292},{"krate":0,"index":298},{"krate":0,"index":305},{"krate":0,"index":312},{"krate":0,"index":320}],"decl_id":null,"docs":" Cursor library.","sig":null,"attributes":[{"value":"! Cursor library.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":44097,"byte_end":44116,"line_start":1,"line_end":1,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":44117,"byte_end":44120,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module defines cursor data types that can be used for inserting instructions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":44121,"byte_end":44207,"line_start":3,"line_end":3,"column_start":1,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5032},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":44441,"byte_end":44448,"line_start":12,"line_end":12,"column_start":5,"column_end":12},"name":"Nowhere","qualname":"::cursor::CursorPosition::Nowhere","value":"CursorPosition::Nowhere","parent":{"krate":0,"index":5031},"children":[],"decl_id":null,"docs":" Cursor is not pointing anywhere. No instructions can be inserted.\n","sig":null,"attributes":[{"value":"/ Cursor is not pointing anywhere. No instructions can be inserted.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":44367,"byte_end":44436,"line_start":11,"line_end":11,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5034},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":44585,"byte_end":44587,"line_start":15,"line_end":15,"column_start":5,"column_end":7},"name":"At","qualname":"::cursor::CursorPosition::At","value":"CursorPosition::At(ir::Inst)","parent":{"krate":0,"index":5031},"children":[],"decl_id":null,"docs":" Cursor is pointing at an existing instruction.\n New instructions will be inserted *before* the current instruction.\n","sig":null,"attributes":[{"value":"/ Cursor is pointing at an existing instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":44454,"byte_end":44504,"line_start":13,"line_end":13,"column_start":5,"column_end":55}},{"value":"/ New instructions will be inserted *before* the current instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":44509,"byte_end":44580,"line_start":14,"line_end":14,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5037},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":44767,"byte_end":44773,"line_start":18,"line_end":18,"column_start":5,"column_end":11},"name":"Before","qualname":"::cursor::CursorPosition::Before","value":"CursorPosition::Before(ir::Block)","parent":{"krate":0,"index":5031},"children":[],"decl_id":null,"docs":" Cursor is before the beginning of an block. No instructions can be inserted. Calling\n `next_inst()` will move to the first instruction in the block.\n","sig":null,"attributes":[{"value":"/ Cursor is before the beginning of an block. No instructions can be inserted. Calling","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":44603,"byte_end":44691,"line_start":16,"line_end":16,"column_start":5,"column_end":93}},{"value":"/ `next_inst()` will move to the first instruction in the block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":44696,"byte_end":44762,"line_start":17,"line_end":17,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5040},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":44900,"byte_end":44905,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"name":"After","qualname":"::cursor::CursorPosition::After","value":"CursorPosition::After(ir::Block)","parent":{"krate":0,"index":5031},"children":[],"decl_id":null,"docs":" Cursor is pointing after the end of an block.\n New instructions will be appended to the block.\n","sig":null,"attributes":[{"value":"/ Cursor is pointing after the end of an block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":44790,"byte_end":44839,"line_start":19,"line_end":19,"column_start":5,"column_end":54}},{"value":"/ New instructions will be appended to the block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":44844,"byte_end":44895,"line_start":20,"line_end":20,"column_start":5,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":5031},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":44346,"byte_end":44360,"line_start":10,"line_end":10,"column_start":10,"column_end":24},"name":"CursorPosition","qualname":"::cursor::CursorPosition","value":"CursorPosition::{Nowhere, At, Before, After}","parent":null,"children":[{"krate":0,"index":5032},{"krate":0,"index":5034},{"krate":0,"index":5037},{"krate":0,"index":5040}],"decl_id":null,"docs":" The possible positions of a cursor.\n","sig":null,"attributes":[{"value":"/ The possible positions of a cursor.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":44252,"byte_end":44291,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":235},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":45020,"byte_end":45026,"line_start":25,"line_end":25,"column_start":11,"column_end":17},"name":"Cursor","qualname":"::cursor::Cursor","value":"Cursor","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":268},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272}],"decl_id":null,"docs":" All cursor types implement the `Cursor` which provides common navigation operations.\n","sig":null,"attributes":[{"value":"/ All cursor types implement the `Cursor` which provides common navigation operations.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":44921,"byte_end":45009,"line_start":24,"line_end":24,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":45077,"byte_end":45085,"line_start":27,"line_end":27,"column_start":8,"column_end":16},"name":"position","qualname":"::cursor::Cursor::position","value":"fn (&self) -> CursorPosition","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Get the current cursor position.\n","sig":null,"attributes":[{"value":"/ Get the current cursor position.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":45033,"byte_end":45069,"line_start":26,"line_end":26,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":45154,"byte_end":45166,"line_start":30,"line_end":30,"column_start":8,"column_end":20},"name":"set_position","qualname":"::cursor::Cursor::set_position","value":"fn (&mut self, pos: CursorPosition) -> ()","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Set the current position.\n","sig":null,"attributes":[{"value":"/ Set the current position.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":45117,"byte_end":45146,"line_start":29,"line_end":29,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":45285,"byte_end":45291,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"srcloc","qualname":"::cursor::Cursor::srcloc","value":"fn (&self) -> ir::SourceLoc","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Get the source location that should be assigned to new instructions.\n","sig":null,"attributes":[{"value":"/ Get the source location that should be assigned to new instructions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":45205,"byte_end":45277,"line_start":32,"line_end":32,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":45402,"byte_end":45412,"line_start":36,"line_end":36,"column_start":8,"column_end":18},"name":"set_srcloc","qualname":"::cursor::Cursor::set_srcloc","value":"fn (&mut self, srcloc: ir::SourceLoc) -> ()","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Set the source location that should be assigned to new instructions.\n","sig":null,"attributes":[{"value":"/ Set the source location that should be assigned to new instructions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":45322,"byte_end":45394,"line_start":35,"line_end":35,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":45538,"byte_end":45544,"line_start":39,"line_end":39,"column_start":8,"column_end":14},"name":"layout","qualname":"::cursor::Cursor::layout","value":"fn (&self) -> &ir::Layout","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Borrow a reference to the function layout that this cursor is navigating.\n","sig":null,"attributes":[{"value":"/ Borrow a reference to the function layout that this cursor is navigating.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":45453,"byte_end":45530,"line_start":38,"line_end":38,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":45666,"byte_end":45676,"line_start":42,"line_end":42,"column_start":8,"column_end":18},"name":"layout_mut","qualname":"::cursor::Cursor::layout_mut","value":"fn (&mut self) -> &mut ir::Layout","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Borrow a mutable reference to the function layout that this cursor is navigating.\n","sig":null,"attributes":[{"value":"/ Borrow a mutable reference to the function layout that this cursor is navigating.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":45573,"byte_end":45658,"line_start":41,"line_end":41,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":46186,"byte_end":46197,"line_start":57,"line_end":57,"column_start":8,"column_end":19},"name":"with_srcloc","qualname":"::cursor::Cursor::with_srcloc","value":"fn (mut self, srcloc: ir::SourceLoc) -> Self","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Exchange this cursor for one with a set source location.","sig":null,"attributes":[{"value":"/ Exchange this cursor for one with a set source location.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":45713,"byte_end":45773,"line_start":44,"line_end":44,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":45778,"byte_end":45781,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This is intended to be used as a builder method:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":45786,"byte_end":45838,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":45843,"byte_end":45846,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":45851,"byte_end":45858,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/ # use cranelift_codegen::ir::{Function, Block, SourceLoc};","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":45863,"byte_end":45925,"line_start":49,"line_end":49,"column_start":5,"column_end":67}},{"value":"/ # use cranelift_codegen::cursor::{Cursor, FuncCursor};","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":45930,"byte_end":45988,"line_start":50,"line_end":50,"column_start":5,"column_end":63}},{"value":"/ fn edit_func(func: &mut Function, srcloc: SourceLoc) {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":45993,"byte_end":46051,"line_start":51,"line_end":51,"column_start":5,"column_end":63}},{"value":"/     let mut pos = FuncCursor::new(func).with_srcloc(srcloc);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":46056,"byte_end":46120,"line_start":52,"line_end":52,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":46125,"byte_end":46128,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/     // Use `pos`...","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":46133,"byte_end":46156,"line_start":54,"line_end":54,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":46161,"byte_end":46166,"line_start":55,"line_end":55,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":46171,"byte_end":46178,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":46385,"byte_end":46396,"line_start":66,"line_end":66,"column_start":8,"column_end":19},"name":"at_position","qualname":"::cursor::Cursor::at_position","value":"fn (mut self, pos: CursorPosition) -> Self","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Rebuild this cursor positioned at `pos`.\n","sig":null,"attributes":[{"value":"/ Rebuild this cursor positioned at `pos`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":46333,"byte_end":46377,"line_start":65,"line_end":65,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":46969,"byte_end":46976,"line_start":87,"line_end":87,"column_start":8,"column_end":15},"name":"at_inst","qualname":"::cursor::Cursor::at_inst","value":"fn (mut self, inst: ir::Inst) -> Self","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Rebuild this cursor positioned at `inst`.","sig":null,"attributes":[{"value":"/ Rebuild this cursor positioned at `inst`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":46529,"byte_end":46574,"line_start":74,"line_end":74,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":46579,"byte_end":46582,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ This is intended to be used as a builder method:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":46587,"byte_end":46639,"line_start":76,"line_end":76,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":46644,"byte_end":46647,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":46652,"byte_end":46659,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ # use cranelift_codegen::ir::{Function, Block, Inst};","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":46664,"byte_end":46721,"line_start":79,"line_end":79,"column_start":5,"column_end":62}},{"value":"/ # use cranelift_codegen::cursor::{Cursor, FuncCursor};","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":46726,"byte_end":46784,"line_start":80,"line_end":80,"column_start":5,"column_end":63}},{"value":"/ fn edit_func(func: &mut Function, inst: Inst) {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":46789,"byte_end":46840,"line_start":81,"line_end":81,"column_start":5,"column_end":56}},{"value":"/     let mut pos = FuncCursor::new(func).at_inst(inst);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":46845,"byte_end":46903,"line_start":82,"line_end":82,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":46908,"byte_end":46911,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/     // Use `pos`...","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":46916,"byte_end":46939,"line_start":84,"line_end":84,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":46944,"byte_end":46949,"line_start":85,"line_end":85,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":46954,"byte_end":46961,"line_start":86,"line_end":86,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":47728,"byte_end":47752,"line_start":110,"line_end":110,"column_start":8,"column_end":32},"name":"at_first_insertion_point","qualname":"::cursor::Cursor::at_first_insertion_point","value":"fn (mut self, block: ir::Block) -> Self","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Rebuild this cursor positioned at the first insertion point for `block`.\n This differs from `at_first_inst` in that it doesn't assume that any\n instructions have been inserted into `block` yet.","sig":null,"attributes":[{"value":"/ Rebuild this cursor positioned at the first insertion point for `block`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":47102,"byte_end":47178,"line_start":95,"line_end":95,"column_start":5,"column_end":81}},{"value":"/ This differs from `at_first_inst` in that it doesn't assume that any","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":47183,"byte_end":47255,"line_start":96,"line_end":96,"column_start":5,"column_end":77}},{"value":"/ instructions have been inserted into `block` yet.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":47260,"byte_end":47313,"line_start":97,"line_end":97,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":47318,"byte_end":47321,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This is intended to be used as a builder method:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":47326,"byte_end":47378,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":47383,"byte_end":47386,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":47391,"byte_end":47398,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ # use cranelift_codegen::ir::{Function, Block, Inst};","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":47403,"byte_end":47460,"line_start":102,"line_end":102,"column_start":5,"column_end":62}},{"value":"/ # use cranelift_codegen::cursor::{Cursor, FuncCursor};","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":47465,"byte_end":47523,"line_start":103,"line_end":103,"column_start":5,"column_end":63}},{"value":"/ fn edit_func(func: &mut Function, block: Block) {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":47528,"byte_end":47581,"line_start":104,"line_end":104,"column_start":5,"column_end":58}},{"value":"/     let mut pos = FuncCursor::new(func).at_first_insertion_point(block);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":47586,"byte_end":47662,"line_start":105,"line_end":105,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":47667,"byte_end":47670,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/     // Use `pos`...","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":47675,"byte_end":47698,"line_start":107,"line_end":107,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":47703,"byte_end":47708,"line_start":108,"line_end":108,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":47713,"byte_end":47720,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":48373,"byte_end":48386,"line_start":131,"line_end":131,"column_start":8,"column_end":21},"name":"at_first_inst","qualname":"::cursor::Cursor::at_first_inst","value":"fn (mut self, block: ir::Block) -> Self","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Rebuild this cursor positioned at the first instruction in `block`.","sig":null,"attributes":[{"value":"/ Rebuild this cursor positioned at the first instruction in `block`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":47898,"byte_end":47969,"line_start":118,"line_end":118,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":47974,"byte_end":47977,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This is intended to be used as a builder method:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":47982,"byte_end":48034,"line_start":120,"line_end":120,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":48039,"byte_end":48042,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":48047,"byte_end":48054,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ # use cranelift_codegen::ir::{Function, Block, Inst};","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":48059,"byte_end":48116,"line_start":123,"line_end":123,"column_start":5,"column_end":62}},{"value":"/ # use cranelift_codegen::cursor::{Cursor, FuncCursor};","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":48121,"byte_end":48179,"line_start":124,"line_end":124,"column_start":5,"column_end":63}},{"value":"/ fn edit_func(func: &mut Function, block: Block) {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":48184,"byte_end":48237,"line_start":125,"line_end":125,"column_start":5,"column_end":58}},{"value":"/     let mut pos = FuncCursor::new(func).at_first_inst(block);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":48242,"byte_end":48307,"line_start":126,"line_end":126,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":48312,"byte_end":48315,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/     // Use `pos`...","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":48320,"byte_end":48343,"line_start":128,"line_end":128,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":48348,"byte_end":48353,"line_start":129,"line_end":129,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":48358,"byte_end":48365,"line_start":130,"line_end":130,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":48994,"byte_end":49006,"line_start":152,"line_end":152,"column_start":8,"column_end":20},"name":"at_last_inst","qualname":"::cursor::Cursor::at_last_inst","value":"fn (mut self, block: ir::Block) -> Self","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Rebuild this cursor positioned at the last instruction in `block`.","sig":null,"attributes":[{"value":"/ Rebuild this cursor positioned at the last instruction in `block`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":48521,"byte_end":48591,"line_start":139,"line_end":139,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":48596,"byte_end":48599,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ This is intended to be used as a builder method:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":48604,"byte_end":48656,"line_start":141,"line_end":141,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":48661,"byte_end":48664,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":48669,"byte_end":48676,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/ # use cranelift_codegen::ir::{Function, Block, Inst};","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":48681,"byte_end":48738,"line_start":144,"line_end":144,"column_start":5,"column_end":62}},{"value":"/ # use cranelift_codegen::cursor::{Cursor, FuncCursor};","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":48743,"byte_end":48801,"line_start":145,"line_end":145,"column_start":5,"column_end":63}},{"value":"/ fn edit_func(func: &mut Function, block: Block) {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":48806,"byte_end":48859,"line_start":146,"line_end":146,"column_start":5,"column_end":58}},{"value":"/     let mut pos = FuncCursor::new(func).at_last_inst(block);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":48864,"byte_end":48928,"line_start":147,"line_end":147,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":48933,"byte_end":48936,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/     // Use `pos`...","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":48941,"byte_end":48964,"line_start":149,"line_end":149,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":48969,"byte_end":48974,"line_start":150,"line_end":150,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":48979,"byte_end":48986,"line_start":151,"line_end":151,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":49586,"byte_end":49596,"line_start":173,"line_end":173,"column_start":8,"column_end":18},"name":"after_inst","qualname":"::cursor::Cursor::after_inst","value":"fn (mut self, inst: ir::Inst) -> Self","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Rebuild this cursor positioned after `inst`.","sig":null,"attributes":[{"value":"/ Rebuild this cursor positioned after `inst`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":49140,"byte_end":49188,"line_start":160,"line_end":160,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":49193,"byte_end":49196,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ This is intended to be used as a builder method:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":49201,"byte_end":49253,"line_start":162,"line_end":162,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":49258,"byte_end":49261,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":49266,"byte_end":49273,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ # use cranelift_codegen::ir::{Function, Block, Inst};","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":49278,"byte_end":49335,"line_start":165,"line_end":165,"column_start":5,"column_end":62}},{"value":"/ # use cranelift_codegen::cursor::{Cursor, FuncCursor};","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":49340,"byte_end":49398,"line_start":166,"line_end":166,"column_start":5,"column_end":63}},{"value":"/ fn edit_func(func: &mut Function, inst: Inst) {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":49403,"byte_end":49454,"line_start":167,"line_end":167,"column_start":5,"column_end":56}},{"value":"/     let mut pos = FuncCursor::new(func).after_inst(inst);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":49459,"byte_end":49520,"line_start":168,"line_end":168,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":49525,"byte_end":49528,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/     // Use `pos`...","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":49533,"byte_end":49556,"line_start":170,"line_end":170,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":49561,"byte_end":49566,"line_start":171,"line_end":171,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":49571,"byte_end":49578,"line_start":172,"line_end":172,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":50182,"byte_end":50188,"line_start":194,"line_end":194,"column_start":8,"column_end":14},"name":"at_top","qualname":"::cursor::Cursor::at_top","value":"fn (mut self, block: ir::Block) -> Self","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Rebuild this cursor positioned at the top of `block`.","sig":null,"attributes":[{"value":"/ Rebuild this cursor positioned at the top of `block`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":49728,"byte_end":49785,"line_start":181,"line_end":181,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":49790,"byte_end":49793,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ This is intended to be used as a builder method:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":49798,"byte_end":49850,"line_start":183,"line_end":183,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":49855,"byte_end":49858,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":49863,"byte_end":49870,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/ # use cranelift_codegen::ir::{Function, Block, Inst};","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":49875,"byte_end":49932,"line_start":186,"line_end":186,"column_start":5,"column_end":62}},{"value":"/ # use cranelift_codegen::cursor::{Cursor, FuncCursor};","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":49937,"byte_end":49995,"line_start":187,"line_end":187,"column_start":5,"column_end":63}},{"value":"/ fn edit_func(func: &mut Function, block: Block) {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":50000,"byte_end":50053,"line_start":188,"line_end":188,"column_start":5,"column_end":58}},{"value":"/     let mut pos = FuncCursor::new(func).at_top(block);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":50058,"byte_end":50116,"line_start":189,"line_end":189,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":50121,"byte_end":50124,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/     // Use `pos`...","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":50129,"byte_end":50152,"line_start":191,"line_end":191,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":50157,"byte_end":50162,"line_start":192,"line_end":192,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":50167,"byte_end":50174,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":50776,"byte_end":50785,"line_start":215,"line_end":215,"column_start":8,"column_end":17},"name":"at_bottom","qualname":"::cursor::Cursor::at_bottom","value":"fn (mut self, block: ir::Block) -> Self","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Rebuild this cursor positioned at the bottom of `block`.","sig":null,"attributes":[{"value":"/ Rebuild this cursor positioned at the bottom of `block`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":50316,"byte_end":50376,"line_start":202,"line_end":202,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":50381,"byte_end":50384,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ This is intended to be used as a builder method:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":50389,"byte_end":50441,"line_start":204,"line_end":204,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":50446,"byte_end":50449,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":50454,"byte_end":50461,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ # use cranelift_codegen::ir::{Function, Block, Inst};","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":50466,"byte_end":50523,"line_start":207,"line_end":207,"column_start":5,"column_end":62}},{"value":"/ # use cranelift_codegen::cursor::{Cursor, FuncCursor};","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":50528,"byte_end":50586,"line_start":208,"line_end":208,"column_start":5,"column_end":63}},{"value":"/ fn edit_func(func: &mut Function, block: Block) {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":50591,"byte_end":50644,"line_start":209,"line_end":209,"column_start":5,"column_end":58}},{"value":"/     let mut pos = FuncCursor::new(func).at_bottom(block);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":50649,"byte_end":50710,"line_start":210,"line_end":210,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":50715,"byte_end":50718,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/     // Use `pos`...","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":50723,"byte_end":50746,"line_start":212,"line_end":212,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":50751,"byte_end":50756,"line_start":213,"line_end":213,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":50761,"byte_end":50768,"line_start":214,"line_end":214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":50980,"byte_end":50993,"line_start":224,"line_end":224,"column_start":8,"column_end":21},"name":"current_block","qualname":"::cursor::Cursor::current_block","value":"fn (&self) -> Option<ir::Block>","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Get the block corresponding to the current position.\n","sig":null,"attributes":[{"value":"/ Get the block corresponding to the current position.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":50916,"byte_end":50972,"line_start":223,"line_end":223,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":51334,"byte_end":51346,"line_start":234,"line_end":234,"column_start":8,"column_end":20},"name":"current_inst","qualname":"::cursor::Cursor::current_inst","value":"fn (&self) -> Option<ir::Inst>","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Get the instruction corresponding to the current position, if any.\n","sig":null,"attributes":[{"value":"/ Get the instruction corresponding to the current position, if any.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":51256,"byte_end":51326,"line_start":233,"line_end":233,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":51679,"byte_end":51694,"line_start":244,"line_end":244,"column_start":8,"column_end":23},"name":"goto_after_inst","qualname":"::cursor::Cursor::goto_after_inst","value":"fn (&mut self, inst: ir::Inst) -> ()","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Go to the position after a specific instruction, which must be inserted\n in the layout. New instructions will be inserted after `inst`.\n","sig":null,"attributes":[{"value":"/ Go to the position after a specific instruction, which must be inserted","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":51525,"byte_end":51600,"line_start":242,"line_end":242,"column_start":5,"column_end":80}},{"value":"/ in the layout. New instructions will be inserted after `inst`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":51605,"byte_end":51671,"line_start":243,"line_end":243,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":52288,"byte_end":52297,"line_start":260,"line_end":260,"column_start":8,"column_end":17},"name":"goto_inst","qualname":"::cursor::Cursor::goto_inst","value":"fn (&mut self, inst: ir::Inst) -> ()","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Go to a specific instruction which must be inserted in the layout.\n New instructions will be inserted before `inst`.\n","sig":null,"attributes":[{"value":"/ Go to a specific instruction which must be inserted in the layout.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":52153,"byte_end":52223,"line_start":258,"line_end":258,"column_start":5,"column_end":75}},{"value":"/ New instructions will be inserted before `inst`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":52228,"byte_end":52280,"line_start":259,"line_end":259,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":52663,"byte_end":52689,"line_start":268,"line_end":268,"column_start":8,"column_end":34},"name":"goto_first_insertion_point","qualname":"::cursor::Cursor::goto_first_insertion_point","value":"fn (&mut self, block: ir::Block) -> ()","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Go to the position for inserting instructions at the beginning of `block`,\n which unlike `goto_first_inst` doesn't assume that any instructions have\n been inserted into `block` yet.\n","sig":null,"attributes":[{"value":"/ Go to the position for inserting instructions at the beginning of `block`,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":52456,"byte_end":52534,"line_start":265,"line_end":265,"column_start":5,"column_end":83}},{"value":"/ which unlike `goto_first_inst` doesn't assume that any instructions have","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":52539,"byte_end":52615,"line_start":266,"line_end":266,"column_start":5,"column_end":81}},{"value":"/ been inserted into `block` yet.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":52620,"byte_end":52655,"line_start":267,"line_end":267,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":52943,"byte_end":52958,"line_start":277,"line_end":277,"column_start":8,"column_end":23},"name":"goto_first_inst","qualname":"::cursor::Cursor::goto_first_inst","value":"fn (&mut self, block: ir::Block) -> ()","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Go to the first instruction in `block`.\n","sig":null,"attributes":[{"value":"/ Go to the first instruction in `block`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":52892,"byte_end":52935,"line_start":276,"line_end":276,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":53155,"byte_end":53169,"line_start":283,"line_end":283,"column_start":8,"column_end":22},"name":"goto_last_inst","qualname":"::cursor::Cursor::goto_last_inst","value":"fn (&mut self, block: ir::Block) -> ()","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Go to the last instruction in `block`.\n","sig":null,"attributes":[{"value":"/ Go to the last instruction in `block`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":53105,"byte_end":53147,"line_start":282,"line_end":282,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":53523,"byte_end":53531,"line_start":291,"line_end":291,"column_start":8,"column_end":16},"name":"goto_top","qualname":"::cursor::Cursor::goto_top","value":"fn (&mut self, block: ir::Block) -> ()","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Go to the top of `block` which must be inserted into the layout.\n At this position, instructions cannot be inserted, but `next_inst()` will move to the first\n instruction in `block`.\n","sig":null,"attributes":[{"value":"/ Go to the top of `block` which must be inserted into the layout.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":53315,"byte_end":53383,"line_start":288,"line_end":288,"column_start":5,"column_end":73}},{"value":"/ At this position, instructions cannot be inserted, but `next_inst()` will move to the first","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":53388,"byte_end":53483,"line_start":289,"line_end":289,"column_start":5,"column_end":100}},{"value":"/ instruction in `block`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":53488,"byte_end":53515,"line_start":290,"line_end":290,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":53851,"byte_end":53862,"line_start":298,"line_end":298,"column_start":8,"column_end":19},"name":"goto_bottom","qualname":"::cursor::Cursor::goto_bottom","value":"fn (&mut self, block: ir::Block) -> ()","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Go to the bottom of `block` which must be inserted into the layout.\n At this position, inserted instructions will be appended to `block`.\n","sig":null,"attributes":[{"value":"/ Go to the bottom of `block` which must be inserted into the layout.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":53695,"byte_end":53766,"line_start":296,"line_end":296,"column_start":5,"column_end":76}},{"value":"/ At this position, inserted instructions will be appended to `block`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":53771,"byte_end":53843,"line_start":297,"line_end":297,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":54803,"byte_end":54813,"line_start":323,"line_end":323,"column_start":8,"column_end":18},"name":"next_block","qualname":"::cursor::Cursor::next_block","value":"fn (&mut self) -> Option<ir::Block>","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Go to the top of the next block in layout order and return it.","sig":null,"attributes":[{"value":"/ Go to the top of the next block in layout order and return it.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":54025,"byte_end":54091,"line_start":303,"line_end":303,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":54096,"byte_end":54099,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ - If the cursor wasn't pointing at anything, go to the top of the first block in the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":54104,"byte_end":54192,"line_start":305,"line_end":305,"column_start":5,"column_end":93}},{"value":"/   function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":54197,"byte_end":54212,"line_start":306,"line_end":306,"column_start":5,"column_end":20}},{"value":"/ - If there are no more blocks, leave the cursor pointing at nothing and return `None`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":54217,"byte_end":54307,"line_start":307,"line_end":307,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":54312,"byte_end":54315,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":54320,"byte_end":54334,"line_start":309,"line_end":309,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":54339,"byte_end":54342,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ The `next_block()` method is intended for iterating over the blocks in layout order:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":54347,"byte_end":54435,"line_start":311,"line_end":311,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":54440,"byte_end":54443,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":54448,"byte_end":54455,"line_start":313,"line_end":313,"column_start":5,"column_end":12}},{"value":"/ # use cranelift_codegen::ir::{Function, Block};","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":54460,"byte_end":54511,"line_start":314,"line_end":314,"column_start":5,"column_end":56}},{"value":"/ # use cranelift_codegen::cursor::{Cursor, FuncCursor};","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":54516,"byte_end":54574,"line_start":315,"line_end":315,"column_start":5,"column_end":63}},{"value":"/ fn edit_func(func: &mut Function) {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":54579,"byte_end":54618,"line_start":316,"line_end":316,"column_start":5,"column_end":44}},{"value":"/     let mut cursor = FuncCursor::new(func);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":54623,"byte_end":54670,"line_start":317,"line_end":317,"column_start":5,"column_end":52}},{"value":"/     while let Some(block) = cursor.next_block() {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":54675,"byte_end":54728,"line_start":318,"line_end":318,"column_start":5,"column_end":58}},{"value":"/         // Edit block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":54733,"byte_end":54759,"line_start":319,"line_end":319,"column_start":5,"column_end":31}},{"value":"/     }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":54764,"byte_end":54773,"line_start":320,"line_end":320,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":54778,"byte_end":54783,"line_start":321,"line_end":321,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":54788,"byte_end":54795,"line_start":322,"line_end":322,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":55998,"byte_end":56008,"line_start":356,"line_end":356,"column_start":8,"column_end":18},"name":"prev_block","qualname":"::cursor::Cursor::prev_block","value":"fn (&mut self) -> Option<ir::Block>","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Go to the bottom of the previous block in layout order and return it.","sig":null,"attributes":[{"value":"/ Go to the bottom of the previous block in layout order and return it.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":55201,"byte_end":55274,"line_start":336,"line_end":336,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":55279,"byte_end":55282,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ - If the cursor wasn't pointing at anything, go to the bottom of the last block in the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":55287,"byte_end":55377,"line_start":338,"line_end":338,"column_start":5,"column_end":95}},{"value":"/   function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":55382,"byte_end":55397,"line_start":339,"line_end":339,"column_start":5,"column_end":20}},{"value":"/ - If there are no more blocks, leave the cursor pointing at nothing and return `None`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":55402,"byte_end":55492,"line_start":340,"line_end":340,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":55497,"byte_end":55500,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":55505,"byte_end":55519,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":55524,"byte_end":55527,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ The `prev_block()` method is intended for iterating over the blocks in backwards layout order:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":55532,"byte_end":55630,"line_start":344,"line_end":344,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":55635,"byte_end":55638,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":55643,"byte_end":55650,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/ # use cranelift_codegen::ir::{Function, Block};","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":55655,"byte_end":55706,"line_start":347,"line_end":347,"column_start":5,"column_end":56}},{"value":"/ # use cranelift_codegen::cursor::{Cursor, FuncCursor};","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":55711,"byte_end":55769,"line_start":348,"line_end":348,"column_start":5,"column_end":63}},{"value":"/ fn edit_func(func: &mut Function) {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":55774,"byte_end":55813,"line_start":349,"line_end":349,"column_start":5,"column_end":44}},{"value":"/     let mut cursor = FuncCursor::new(func);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":55818,"byte_end":55865,"line_start":350,"line_end":350,"column_start":5,"column_end":52}},{"value":"/     while let Some(block) = cursor.prev_block() {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":55870,"byte_end":55923,"line_start":351,"line_end":351,"column_start":5,"column_end":58}},{"value":"/         // Edit block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":55928,"byte_end":55954,"line_start":352,"line_end":352,"column_start":5,"column_end":31}},{"value":"/     }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":55959,"byte_end":55968,"line_start":353,"line_end":353,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":55973,"byte_end":55978,"line_start":354,"line_end":354,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":55983,"byte_end":55990,"line_start":355,"line_end":355,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":57989,"byte_end":57998,"line_start":409,"line_end":409,"column_start":8,"column_end":17},"name":"next_inst","qualname":"::cursor::Cursor::next_inst","value":"fn (&mut self) -> Option<ir::Inst>","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Move to the next instruction in the same block and return it.","sig":null,"attributes":[{"value":"/ Move to the next instruction in the same block and return it.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":56394,"byte_end":56459,"line_start":369,"line_end":369,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":56464,"byte_end":56467,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ - If the cursor was positioned before an block, go to the first instruction in that block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":56472,"byte_end":56566,"line_start":371,"line_end":371,"column_start":5,"column_end":99}},{"value":"/ - If there are no more instructions in the block, go to the `After(block)` position and return","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":56571,"byte_end":56669,"line_start":372,"line_end":372,"column_start":5,"column_end":103}},{"value":"/   `None`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":56674,"byte_end":56687,"line_start":373,"line_end":373,"column_start":5,"column_end":18}},{"value":"/ - If the cursor wasn't pointing anywhere, keep doing that.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":56692,"byte_end":56754,"line_start":374,"line_end":374,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":56759,"byte_end":56762,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ This method will never move the cursor to a different block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":56767,"byte_end":56831,"line_start":376,"line_end":376,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":56836,"byte_end":56839,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":56844,"byte_end":56858,"line_start":378,"line_end":378,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":56863,"byte_end":56866,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ The `next_inst()` method is intended for iterating over the instructions in an block like","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":56871,"byte_end":56964,"line_start":380,"line_end":380,"column_start":5,"column_end":98}},{"value":"/ this:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":56969,"byte_end":56978,"line_start":381,"line_end":381,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":56983,"byte_end":56986,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":56991,"byte_end":56998,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ # use cranelift_codegen::ir::{Function, Block};","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":57003,"byte_end":57054,"line_start":384,"line_end":384,"column_start":5,"column_end":56}},{"value":"/ # use cranelift_codegen::cursor::{Cursor, FuncCursor};","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":57059,"byte_end":57117,"line_start":385,"line_end":385,"column_start":5,"column_end":63}},{"value":"/ fn edit_block(func: &mut Function, block: Block) {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":57122,"byte_end":57176,"line_start":386,"line_end":386,"column_start":5,"column_end":59}},{"value":"/     let mut cursor = FuncCursor::new(func).at_top(block);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":57181,"byte_end":57242,"line_start":387,"line_end":387,"column_start":5,"column_end":66}},{"value":"/     while let Some(inst) = cursor.next_inst() {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":57247,"byte_end":57298,"line_start":388,"line_end":388,"column_start":5,"column_end":56}},{"value":"/         // Edit instructions...","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":57303,"byte_end":57338,"line_start":389,"line_end":389,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":57343,"byte_end":57352,"line_start":390,"line_end":390,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":57357,"byte_end":57362,"line_start":391,"line_end":391,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":57367,"byte_end":57374,"line_start":392,"line_end":392,"column_start":5,"column_end":12}},{"value":"/ The loop body can insert and remove instructions via the cursor.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":57379,"byte_end":57447,"line_start":393,"line_end":393,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":57452,"byte_end":57455,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ Iterating over all the instructions in a function looks like this:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":57460,"byte_end":57530,"line_start":395,"line_end":395,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":57535,"byte_end":57538,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":57543,"byte_end":57550,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/ # use cranelift_codegen::ir::{Function, Block};","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":57555,"byte_end":57606,"line_start":398,"line_end":398,"column_start":5,"column_end":56}},{"value":"/ # use cranelift_codegen::cursor::{Cursor, FuncCursor};","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":57611,"byte_end":57669,"line_start":399,"line_end":399,"column_start":5,"column_end":63}},{"value":"/ fn edit_func(func: &mut Function) {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":57674,"byte_end":57713,"line_start":400,"line_end":400,"column_start":5,"column_end":44}},{"value":"/     let mut cursor = FuncCursor::new(func);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":57718,"byte_end":57765,"line_start":401,"line_end":401,"column_start":5,"column_end":52}},{"value":"/     while let Some(block) = cursor.next_block() {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":57770,"byte_end":57823,"line_start":402,"line_end":402,"column_start":5,"column_end":58}},{"value":"/         while let Some(inst) = cursor.next_inst() {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":57828,"byte_end":57883,"line_start":403,"line_end":403,"column_start":5,"column_end":60}},{"value":"/             // Edit instructions...","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":57888,"byte_end":57927,"line_start":404,"line_end":404,"column_start":5,"column_end":44}},{"value":"/         }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":57932,"byte_end":57945,"line_start":405,"line_end":405,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":57950,"byte_end":57959,"line_start":406,"line_end":406,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":57964,"byte_end":57969,"line_start":407,"line_end":407,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":57974,"byte_end":57981,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":59996,"byte_end":60005,"line_start":463,"line_end":463,"column_start":8,"column_end":17},"name":"prev_inst","qualname":"::cursor::Cursor::prev_inst","value":"fn (&mut self) -> Option<ir::Inst>","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Move to the previous instruction in the same block and return it.","sig":null,"attributes":[{"value":"/ Move to the previous instruction in the same block and return it.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":58992,"byte_end":59061,"line_start":439,"line_end":439,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":59066,"byte_end":59069,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ - If the cursor was positioned after an block, go to the last instruction in that block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":59074,"byte_end":59166,"line_start":441,"line_end":441,"column_start":5,"column_end":97}},{"value":"/ - If there are no more instructions in the block, go to the `Before(block)` position and return","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":59171,"byte_end":59270,"line_start":442,"line_end":442,"column_start":5,"column_end":104}},{"value":"/   `None`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":59275,"byte_end":59288,"line_start":443,"line_end":443,"column_start":5,"column_end":18}},{"value":"/ - If the cursor wasn't pointing anywhere, keep doing that.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":59293,"byte_end":59355,"line_start":444,"line_end":444,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":59360,"byte_end":59363,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ This method will never move the cursor to a different block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":59368,"byte_end":59432,"line_start":446,"line_end":446,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":59437,"byte_end":59440,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":59445,"byte_end":59459,"line_start":448,"line_end":448,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":59464,"byte_end":59467,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ The `prev_inst()` method is intended for iterating backwards over the instructions in an","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":59472,"byte_end":59564,"line_start":450,"line_end":450,"column_start":5,"column_end":97}},{"value":"/ block like this:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":59569,"byte_end":59589,"line_start":451,"line_end":451,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":59594,"byte_end":59597,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":59602,"byte_end":59609,"line_start":453,"line_end":453,"column_start":5,"column_end":12}},{"value":"/ # use cranelift_codegen::ir::{Function, Block};","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":59614,"byte_end":59665,"line_start":454,"line_end":454,"column_start":5,"column_end":56}},{"value":"/ # use cranelift_codegen::cursor::{Cursor, FuncCursor};","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":59670,"byte_end":59728,"line_start":455,"line_end":455,"column_start":5,"column_end":63}},{"value":"/ fn edit_block(func: &mut Function, block: Block) {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":59733,"byte_end":59787,"line_start":456,"line_end":456,"column_start":5,"column_end":59}},{"value":"/     let mut cursor = FuncCursor::new(func).at_bottom(block);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":59792,"byte_end":59856,"line_start":457,"line_end":457,"column_start":5,"column_end":69}},{"value":"/     while let Some(inst) = cursor.prev_inst() {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":59861,"byte_end":59912,"line_start":458,"line_end":458,"column_start":5,"column_end":56}},{"value":"/         // Edit instructions...","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":59917,"byte_end":59952,"line_start":459,"line_end":459,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":59957,"byte_end":59966,"line_start":460,"line_end":460,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":59971,"byte_end":59976,"line_start":461,"line_end":461,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":59981,"byte_end":59988,"line_start":462,"line_end":462,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":61475,"byte_end":61486,"line_start":502,"line_end":502,"column_start":8,"column_end":19},"name":"insert_inst","qualname":"::cursor::Cursor::insert_inst","value":"fn (&mut self, inst: ir::Inst) -> ()","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Insert an instruction at the current position.","sig":null,"attributes":[{"value":"/ Insert an instruction at the current position.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":61000,"byte_end":61050,"line_start":493,"line_end":493,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":61055,"byte_end":61058,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ - If pointing at an instruction, the new instruction is inserted before the current","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":61063,"byte_end":61150,"line_start":495,"line_end":495,"column_start":5,"column_end":92}},{"value":"/   instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":61155,"byte_end":61173,"line_start":496,"line_end":496,"column_start":5,"column_end":23}},{"value":"/ - If pointing at the bottom of an block, the new instruction is appended to the block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":61178,"byte_end":61268,"line_start":497,"line_end":497,"column_start":5,"column_end":95}},{"value":"/ - Otherwise panic.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":61273,"byte_end":61295,"line_start":498,"line_end":498,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":61300,"byte_end":61303,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ In either case, the cursor is not moved, such that repeated calls to `insert_inst()` causes","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":61308,"byte_end":61403,"line_start":500,"line_end":500,"column_start":5,"column_end":100}},{"value":"/ instructions to appear in insertion order in the block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":61408,"byte_end":61467,"line_start":501,"line_end":501,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":62023,"byte_end":62034,"line_start":516,"line_end":516,"column_start":8,"column_end":19},"name":"remove_inst","qualname":"::cursor::Cursor::remove_inst","value":"fn (&mut self) -> ir::Inst","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Remove the instruction under the cursor.","sig":null,"attributes":[{"value":"/ Remove the instruction under the cursor.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":61819,"byte_end":61863,"line_start":511,"line_end":511,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":61868,"byte_end":61871,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ The cursor is left pointing at the position following the current instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":61876,"byte_end":61958,"line_start":513,"line_end":513,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":61963,"byte_end":61966,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ Return the instruction that was removed.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":61971,"byte_end":62015,"line_start":515,"line_end":515,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":62434,"byte_end":62459,"line_start":528,"line_end":528,"column_start":8,"column_end":33},"name":"remove_inst_and_step_back","qualname":"::cursor::Cursor::remove_inst_and_step_back","value":"fn (&mut self) -> ir::Inst","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Remove the instruction under the cursor.","sig":null,"attributes":[{"value":"/ Remove the instruction under the cursor.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":62230,"byte_end":62274,"line_start":523,"line_end":523,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":62279,"byte_end":62282,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ The cursor is left pointing at the position preceding the current instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":62287,"byte_end":62369,"line_start":525,"line_end":525,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":62374,"byte_end":62377,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ Return the instruction that was removed.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":62382,"byte_end":62426,"line_start":527,"line_end":527,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":63632,"byte_end":63644,"line_start":549,"line_end":549,"column_start":8,"column_end":20},"name":"insert_block","qualname":"::cursor::Cursor::insert_block","value":"fn (&mut self, new_block: ir::Block) -> ()","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Insert an block at the current position and switch to it.","sig":null,"attributes":[{"value":"/ Insert an block at the current position and switch to it.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":62655,"byte_end":62716,"line_start":535,"line_end":535,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":62721,"byte_end":62724,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ As far as possible, this method behaves as if the block header were an instruction inserted","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":62729,"byte_end":62824,"line_start":537,"line_end":537,"column_start":5,"column_end":100}},{"value":"/ at the current position.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":62829,"byte_end":62857,"line_start":538,"line_end":538,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":62862,"byte_end":62865,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ - If the cursor is pointing at an existing instruction, *the current block is split in two*","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":62870,"byte_end":62965,"line_start":540,"line_end":540,"column_start":5,"column_end":100}},{"value":"/   and the current instruction becomes the first instruction in the inserted block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":62970,"byte_end":63056,"line_start":541,"line_end":541,"column_start":5,"column_end":91}},{"value":"/ - If the cursor points at the bottom of an block, the new block is inserted after the current","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":63061,"byte_end":63158,"line_start":542,"line_end":542,"column_start":5,"column_end":102}},{"value":"/   one, and moved to the bottom of the new block where instructions can be appended.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":63163,"byte_end":63250,"line_start":543,"line_end":543,"column_start":5,"column_end":92}},{"value":"/ - If the cursor points to the top of an block, the new block is inserted above the current one.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":63255,"byte_end":63354,"line_start":544,"line_end":544,"column_start":5,"column_end":104}},{"value":"/ - If the cursor is not pointing at anything, the new block is placed last in the layout.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":63359,"byte_end":63451,"line_start":545,"line_end":545,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":63456,"byte_end":63459,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ This means that it is always valid to call this method, and it always leaves the cursor in","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":63464,"byte_end":63558,"line_start":547,"line_end":547,"column_start":5,"column_end":99}},{"value":"/ a state that will insert instructions into the new block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":63563,"byte_end":63624,"line_start":548,"line_end":548,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":274},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":64673,"byte_end":64683,"line_start":573,"line_end":573,"column_start":12,"column_end":22},"name":"FuncCursor","qualname":"::cursor::FuncCursor","value":"FuncCursor { func }","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278}],"decl_id":null,"docs":" Function cursor.","sig":null,"attributes":[{"value":"/ Function cursor.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":64348,"byte_end":64368,"line_start":566,"line_end":566,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":64369,"byte_end":64372,"line_start":567,"line_end":567,"column_start":1,"column_end":4}},{"value":"/ A `FuncCursor` holds a mutable reference to a whole `ir::Function` while keeping a position","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":64373,"byte_end":64468,"line_start":568,"line_end":568,"column_start":1,"column_end":96}},{"value":"/ too. The function can be re-borrowed by accessing the public `cur.func` member.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":64469,"byte_end":64552,"line_start":569,"line_end":569,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":64553,"byte_end":64556,"line_start":570,"line_end":570,"column_start":1,"column_end":4}},{"value":"/ This cursor is for use before legalization. The inserted instructions are not given an","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":64557,"byte_end":64647,"line_start":571,"line_end":571,"column_start":1,"column_end":91}},{"value":"/ encoding.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":64648,"byte_end":64661,"line_start":572,"line_end":572,"column_start":1,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":278},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":64784,"byte_end":64788,"line_start":578,"line_end":578,"column_start":9,"column_end":13},"name":"func","qualname":"::cursor::FuncCursor::func","value":"&'f mut ir::function::Function","parent":{"krate":0,"index":274},"children":[],"decl_id":null,"docs":" The referenced function.\n","sig":null,"attributes":[{"value":"/ The referenced function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":64747,"byte_end":64775,"line_start":577,"line_end":577,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":64904,"byte_end":64907,"line_start":583,"line_end":583,"column_start":12,"column_end":15},"name":"new","qualname":"<FuncCursor>::new","value":"fn (func: &'f mut ir::Function) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `FuncCursor` pointing nowhere.\n","sig":null,"attributes":[{"value":"/ Create a new `FuncCursor` pointing nowhere.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":64845,"byte_end":64892,"line_start":582,"line_end":582,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":65156,"byte_end":65166,"line_start":592,"line_end":592,"column_start":12,"column_end":22},"name":"use_srcloc","qualname":"<FuncCursor>::use_srcloc","value":"fn (&mut self, inst: ir::Inst) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Use the source location of `inst` for future instructions.\n","sig":null,"attributes":[{"value":"/ Use the source location of `inst` for future instructions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":65082,"byte_end":65144,"line_start":591,"line_end":591,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":65352,"byte_end":65355,"line_start":597,"line_end":597,"column_start":12,"column_end":15},"name":"ins","qualname":"<FuncCursor>::ins","value":"fn (&mut self) -> ir::InsertBuilder<&mut FuncCursor<'f>>","parent":null,"children":[],"decl_id":null,"docs":" Create an instruction builder that inserts an instruction at the current position.\n","sig":null,"attributes":[{"value":"/ Create an instruction builder that inserts an instruction at the current position.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":65254,"byte_end":65340,"line_start":596,"line_end":596,"column_start":5,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":298},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":67743,"byte_end":67752,"line_start":673,"line_end":673,"column_start":12,"column_end":21},"name":"EncCursor","qualname":"::cursor::EncCursor","value":"EncCursor { func, isa }","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304}],"decl_id":null,"docs":" Encoding cursor.","sig":null,"attributes":[{"value":"/ Encoding cursor.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":67483,"byte_end":67503,"line_start":668,"line_end":668,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":67504,"byte_end":67507,"line_start":669,"line_end":669,"column_start":1,"column_end":4}},{"value":"/ An `EncCursor` can be used to insert instructions that are immediately assigned an encoding.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":67508,"byte_end":67604,"line_start":670,"line_end":670,"column_start":1,"column_end":97}},{"value":"/ The cursor holds a mutable reference to the whole function which can be re-borrowed from the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":67605,"byte_end":67701,"line_start":671,"line_end":671,"column_start":1,"column_end":97}},{"value":"/ public `pos.func` member.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":67702,"byte_end":67731,"line_start":672,"line_end":672,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":303},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":67887,"byte_end":67891,"line_start":679,"line_end":679,"column_start":9,"column_end":13},"name":"func","qualname":"::cursor::EncCursor::func","value":"&'f mut ir::function::Function","parent":{"krate":0,"index":298},"children":[],"decl_id":null,"docs":" The referenced function.\n","sig":null,"attributes":[{"value":"/ The referenced function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":67850,"byte_end":67878,"line_start":678,"line_end":678,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":304},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":67989,"byte_end":67992,"line_start":682,"line_end":682,"column_start":9,"column_end":12},"name":"isa","qualname":"::cursor::EncCursor::isa","value":"&'f (dyn isa::TargetIsa + 'f)","parent":{"krate":0,"index":298},"children":[],"decl_id":null,"docs":" The target ISA that will be used to encode instructions.\n","sig":null,"attributes":[{"value":"/ The target ISA that will be used to encode instructions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":67920,"byte_end":67980,"line_start":681,"line_end":681,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":68103,"byte_end":68106,"line_start":687,"line_end":687,"column_start":12,"column_end":15},"name":"new","qualname":"<EncCursor>::new","value":"fn (func: &'f mut ir::Function, isa: &'f dyn TargetIsa) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `EncCursor` pointing nowhere.\n","sig":null,"attributes":[{"value":"/ Create a new `EncCursor` pointing nowhere.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":68045,"byte_end":68091,"line_start":686,"line_end":686,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":68426,"byte_end":68436,"line_start":698,"line_end":698,"column_start":12,"column_end":22},"name":"use_srcloc","qualname":"<EncCursor>::use_srcloc","value":"fn (&mut self, inst: ir::Inst) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Use the source location of `inst` for future instructions.\n","sig":null,"attributes":[{"value":"/ Use the source location of `inst` for future instructions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":68352,"byte_end":68414,"line_start":697,"line_end":697,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":68766,"byte_end":68769,"line_start":707,"line_end":707,"column_start":12,"column_end":15},"name":"ins","qualname":"<EncCursor>::ins","value":"fn (&mut self) -> ir::InsertBuilder<&mut EncCursor<'f>>","parent":null,"children":[],"decl_id":null,"docs":" Create an instruction builder that will insert an encoded instruction at the current\n position.","sig":null,"attributes":[{"value":"/ Create an instruction builder that will insert an encoded instruction at the current","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":68524,"byte_end":68612,"line_start":702,"line_end":702,"column_start":5,"column_end":93}},{"value":"/ position.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":68617,"byte_end":68630,"line_start":703,"line_end":703,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":68635,"byte_end":68638,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ The builder will panic if it is used to insert an instruction that can't be encoded for","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":68643,"byte_end":68734,"line_start":705,"line_end":705,"column_start":5,"column_end":96}},{"value":"/ `self.isa`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":68739,"byte_end":68754,"line_start":706,"line_end":706,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":69069,"byte_end":69079,"line_start":715,"line_end":715,"column_start":12,"column_end":22},"name":"built_inst","qualname":"<EncCursor>::built_inst","value":"fn (&self) -> ir::Inst","parent":null,"children":[],"decl_id":null,"docs":" Get the last built instruction.","sig":null,"attributes":[{"value":"/ Get the last built instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":68872,"byte_end":68907,"line_start":711,"line_end":711,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":68912,"byte_end":68915,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ This returns the last instruction that was built using the `ins()` method on this cursor.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":68920,"byte_end":69013,"line_start":713,"line_end":713,"column_start":5,"column_end":98}},{"value":"/ Panics if no instruction was built.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":69018,"byte_end":69057,"line_start":714,"line_end":714,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":69301,"byte_end":69313,"line_start":722,"line_end":722,"column_start":12,"column_end":24},"name":"display_inst","qualname":"<EncCursor>::display_inst","value":"fn (&self, inst: ir::Inst) -> ir::dfg::DisplayInst","parent":null,"children":[],"decl_id":null,"docs":" Return an object that can display `inst`.","sig":null,"attributes":[{"value":"/ Return an object that can display `inst`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":69174,"byte_end":69219,"line_start":719,"line_end":719,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":69224,"byte_end":69227,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ This is a convenience wrapper for the DFG equivalent.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":69232,"byte_end":69289,"line_start":721,"line_end":721,"column_start":5,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":326},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dbg.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dbg","qualname":"::dbg","value":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dbg.rs","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":334}],"decl_id":null,"docs":" Debug tracing helpers.\n","sig":null,"attributes":[{"value":"! Debug tracing helpers.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dbg.rs","byte_start":72053,"byte_end":72079,"line_start":1,"line_end":1,"column_start":1,"column_end":27}}]},{"kind":"Static","id":{"krate":0,"index":328},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dbg.rs","byte_start":72182,"byte_end":72201,"line_start":5,"line_end":5,"column_start":12,"column_end":31},"name":"LOG_FILENAME_PREFIX","qualname":"::dbg::LOG_FILENAME_PREFIX","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Prefix added to the log file names, just before the thread name or id.\n","sig":null,"attributes":[{"value":"/ Prefix added to the log file names, just before the thread name or id.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dbg.rs","byte_start":72096,"byte_end":72170,"line_start":4,"line_end":4,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":329},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dbg.rs","byte_start":72271,"byte_end":72282,"line_start":8,"line_end":8,"column_start":12,"column_end":23},"name":"DisplayList","qualname":"::dbg::DisplayList","value":"","parent":null,"children":[],"decl_id":null,"docs":" Helper for printing lists.\n","sig":null,"attributes":[{"value":"/ Helper for printing lists.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dbg.rs","byte_start":72229,"byte_end":72259,"line_start":7,"line_end":7,"column_start":1,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":338},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dominator_tree","qualname":"::dominator_tree","value":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":5055},{"krate":0,"index":5060},{"krate":0,"index":5058},{"krate":0,"index":361},{"krate":0,"index":366},{"krate":0,"index":380},{"krate":0,"index":392},{"krate":0,"index":5062},{"krate":0,"index":5069},{"krate":0,"index":5067},{"krate":0,"index":395},{"krate":0,"index":398},{"krate":0,"index":402},{"krate":0,"index":406}],"decl_id":null,"docs":" A Dominator Tree represented as mappings of Blocks to their immediate dominator.\n","sig":null,"attributes":[{"value":"! A Dominator Tree represented as mappings of Blocks to their immediate dominator.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":72787,"byte_end":72871,"line_start":1,"line_end":1,"column_start":1,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":361},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":74304,"byte_end":74317,"line_start":40,"line_end":40,"column_start":12,"column_end":25},"name":"DominatorTree","qualname":"::dominator_tree::DominatorTree","value":"DominatorTree {  }","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365}],"decl_id":null,"docs":" The dominator tree for a single function.\n","sig":null,"attributes":[{"value":"/ The dominator tree for a single function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":74247,"byte_end":74292,"line_start":39,"line_end":39,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":74664,"byte_end":74676,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"is_reachable","qualname":"<DominatorTree>::is_reachable","value":"fn (&self, block: Block) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is `block` reachable from the entry block?\n","sig":null,"attributes":[{"value":"/ Is `block` reachable from the entry block?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":74606,"byte_end":74652,"line_start":54,"line_end":54,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":75014,"byte_end":75027,"line_start":63,"line_end":63,"column_start":12,"column_end":25},"name":"cfg_postorder","qualname":"<DominatorTree>::cfg_postorder","value":"fn (&self) -> &[Block]","parent":null,"children":[],"decl_id":null,"docs":" Get the CFG post-order of blocks that was used to compute the dominator tree.","sig":null,"attributes":[{"value":"/ Get the CFG post-order of blocks that was used to compute the dominator tree.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":74761,"byte_end":74842,"line_start":59,"line_end":59,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":74847,"byte_end":74850,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that this post-order is not updated automatically when the CFG is modified. It is","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":74855,"byte_end":74945,"line_start":61,"line_end":61,"column_start":5,"column_end":95}},{"value":"/ computed from scratch and cached by `compute()`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":74950,"byte_end":75002,"line_start":62,"line_end":62,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":75873,"byte_end":75877,"line_start":82,"line_end":82,"column_start":12,"column_end":16},"name":"idom","qualname":"<DominatorTree>::idom","value":"fn (&self, block: Block) -> Option<Inst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the immediate dominator of `block`.","sig":null,"attributes":[{"value":"/ Returns the immediate dominator of `block`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":75124,"byte_end":75171,"line_start":68,"line_end":68,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":75176,"byte_end":75179,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The immediate dominator of a basic block is a basic block which we represent by","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":75184,"byte_end":75267,"line_start":70,"line_end":70,"column_start":5,"column_end":88}},{"value":"/ the branch or jump instruction at the end of the basic block. This does not have to be the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":75272,"byte_end":75366,"line_start":71,"line_end":71,"column_start":5,"column_end":99}},{"value":"/ terminator of its block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":75371,"byte_end":75399,"line_start":72,"line_end":72,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":75404,"byte_end":75407,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ A branch or jump is said to *dominate* `block` if all control flow paths from the function","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":75412,"byte_end":75506,"line_start":74,"line_end":74,"column_start":5,"column_end":99}},{"value":"/ entry to `block` must go through the branch.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":75511,"byte_end":75559,"line_start":75,"line_end":75,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":75564,"byte_end":75567,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The *immediate dominator* is the dominator that is closest to `block`. All other dominators","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":75572,"byte_end":75667,"line_start":77,"line_end":77,"column_start":5,"column_end":100}},{"value":"/ also dominate the immediate dominator.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":75672,"byte_end":75714,"line_start":78,"line_end":78,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":75719,"byte_end":75722,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This returns `None` if `block` is not reachable from the entry block, or if it is the entry block","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":75727,"byte_end":75828,"line_start":80,"line_end":80,"column_start":5,"column_end":106}},{"value":"/ which has no dominators.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":75833,"byte_end":75861,"line_start":81,"line_end":81,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":76461,"byte_end":76468,"line_start":97,"line_end":97,"column_start":12,"column_end":19},"name":"rpo_cmp","qualname":"<DominatorTree>::rpo_cmp","value":"fn <A, B> (&self, a: A, b: B, layout: &Layout) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Compare two program points relative to a reverse post-order traversal of the control-flow\n graph.","sig":null,"attributes":[{"value":"/ Compare two program points relative to a reverse post-order traversal of the control-flow","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":76162,"byte_end":76255,"line_start":91,"line_end":91,"column_start":5,"column_end":98}},{"value":"/ graph.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":76260,"byte_end":76270,"line_start":92,"line_end":92,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":76275,"byte_end":76278,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Return `Ordering::Less` if `a` comes before `b` in the RPO.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":76283,"byte_end":76346,"line_start":94,"line_end":94,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":76351,"byte_end":76354,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ If `a` and `b` belong to the same block, compare their relative position in the block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":76359,"byte_end":76449,"line_start":96,"line_end":96,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":77232,"byte_end":77241,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"dominates","qualname":"<DominatorTree>::dominates","value":"fn <A, B> (&self, a: A, b: B, layout: &Layout) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `a` dominates `b`.","sig":null,"attributes":[{"value":"/ Returns `true` if `a` dominates `b`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":76783,"byte_end":76823,"line_start":108,"line_end":108,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":76828,"byte_end":76831,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ This means that every control-flow path from the function entry to `b` must go through `a`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":76836,"byte_end":76931,"line_start":110,"line_end":110,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":76936,"byte_end":76939,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ Dominance is ill defined for unreachable blocks. This function can always determine","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":76944,"byte_end":77031,"line_start":112,"line_end":112,"column_start":5,"column_end":92}},{"value":"/ dominance for instructions in the same block, but otherwise returns `false` if either block","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":77036,"byte_end":77131,"line_start":113,"line_end":113,"column_start":5,"column_end":100}},{"value":"/ is unreachable.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":77136,"byte_end":77155,"line_start":114,"line_end":114,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":77160,"byte_end":77163,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ An instruction is considered to dominate itself.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":77168,"byte_end":77220,"line_start":116,"line_end":116,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":78152,"byte_end":78166,"line_start":142,"line_end":142,"column_start":12,"column_end":26},"name":"last_dominator","qualname":"<DominatorTree>::last_dominator","value":"fn <B> (&self, a: Block, b: B, layout: &Layout) -> Option<Inst>","parent":null,"children":[],"decl_id":null,"docs":" Find the last instruction in `a` that dominates `b`.\n If no instructions in `a` dominate `b`, return `None`.\n","sig":null,"attributes":[{"value":"/ Find the last instruction in `a` that dominates `b`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":78021,"byte_end":78077,"line_start":140,"line_end":140,"column_start":5,"column_end":61}},{"value":"/ If no instructions in `a` dominate `b`, return `None`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":78082,"byte_end":78140,"line_start":141,"line_end":141,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":79338,"byte_end":79354,"line_start":175,"line_end":175,"column_start":12,"column_end":28},"name":"common_dominator","qualname":"<DominatorTree>::common_dominator","value":"fn (&self, mut a: BlockPredecessor, mut b: BlockPredecessor, layout: &Layout) -> BlockPredecessor","parent":null,"children":[],"decl_id":null,"docs":" Compute the common dominator of two basic blocks.","sig":null,"attributes":[{"value":"/ Compute the common dominator of two basic blocks.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":79210,"byte_end":79263,"line_start":172,"line_end":172,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":79268,"byte_end":79271,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ Both basic blocks are assumed to be reachable.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":79276,"byte_end":79326,"line_start":174,"line_end":174,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":80912,"byte_end":80915,"line_start":220,"line_end":220,"column_start":12,"column_end":15},"name":"new","qualname":"<DominatorTree>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allocate a new blank dominator tree. Use `compute` to compute the dominator tree for a\n function.\n","sig":null,"attributes":[{"value":"/ Allocate a new blank dominator tree. Use `compute` to compute the dominator tree for a","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":80792,"byte_end":80882,"line_start":218,"line_end":218,"column_start":5,"column_end":95}},{"value":"/ function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":80887,"byte_end":80900,"line_start":219,"line_end":219,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":81150,"byte_end":81163,"line_start":230,"line_end":230,"column_start":12,"column_end":25},"name":"with_function","qualname":"<DominatorTree>::with_function","value":"fn (func: &Function, cfg: &ControlFlowGraph) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allocate and compute a dominator tree.\n","sig":null,"attributes":[{"value":"/ Allocate and compute a dominator tree.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":81096,"byte_end":81138,"line_start":229,"line_end":229,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":81631,"byte_end":81638,"line_start":243,"line_end":243,"column_start":12,"column_end":19},"name":"compute","qualname":"<DominatorTree>::compute","value":"fn (&mut self, func: &Function, cfg: &ControlFlowGraph) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reset and compute a CFG post-order and dominator tree.\n","sig":null,"attributes":[{"value":"/ Reset and compute a CFG post-order and dominator tree.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":81561,"byte_end":81619,"line_start":242,"line_end":242,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":82043,"byte_end":82048,"line_start":253,"line_end":253,"column_start":12,"column_end":17},"name":"clear","qualname":"<DominatorTree>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear the data structures used to represent the dominator tree. This will leave the tree in\n a state where `is_valid()` returns false.\n","sig":null,"attributes":[{"value":"/ Clear the data structures used to represent the dominator tree. This will leave the tree in","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":81886,"byte_end":81981,"line_start":251,"line_end":251,"column_start":5,"column_end":100}},{"value":"/ a state where `is_valid()` returns false.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":81986,"byte_end":82031,"line_start":252,"line_end":252,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":82518,"byte_end":82526,"line_start":265,"line_end":265,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<DominatorTree>::is_valid","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the dominator tree is in a valid state.","sig":null,"attributes":[{"value":"/ Check if the dominator tree is in a valid state.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":82207,"byte_end":82259,"line_start":260,"line_end":260,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":82264,"byte_end":82267,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ Note that this doesn't perform any kind of validity checks. It simply checks if the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":82272,"byte_end":82359,"line_start":262,"line_end":262,"column_start":5,"column_end":92}},{"value":"/ `compute()` method has been called since the last `clear()`. It does not check that the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":82364,"byte_end":82455,"line_start":263,"line_end":263,"column_start":5,"column_end":96}},{"value":"/ dominator tree is consistent with the CFG.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":82460,"byte_end":82506,"line_start":264,"line_end":264,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":392},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":91603,"byte_end":91624,"line_start":463,"line_end":463,"column_start":12,"column_end":33},"name":"DominatorTreePreorder","qualname":"::dominator_tree::DominatorTreePreorder","value":"DominatorTreePreorder {  }","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394}],"decl_id":null,"docs":" Optional pre-order information that can be computed for a dominator tree.","sig":null,"attributes":[{"value":"/ Optional pre-order information that can be computed for a dominator tree.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":91069,"byte_end":91146,"line_start":453,"line_end":453,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":91147,"byte_end":91150,"line_start":454,"line_end":454,"column_start":1,"column_end":4}},{"value":"/ This data structure is computed from a `DominatorTree` and provides:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":91151,"byte_end":91223,"line_start":455,"line_end":455,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":91224,"byte_end":91227,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/ - A forward traversable dominator tree through the `children()` iterator.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":91228,"byte_end":91305,"line_start":457,"line_end":457,"column_start":1,"column_end":78}},{"value":"/ - An ordering of blocks according to a dominator tree pre-order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":91306,"byte_end":91374,"line_start":458,"line_end":458,"column_start":1,"column_end":69}},{"value":"/ - Constant time dominance checks at the block granularity.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":91375,"byte_end":91437,"line_start":459,"line_end":459,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":91438,"byte_end":91441,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ The information in this auxiliary data structure is not easy to update when the control flow","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":91442,"byte_end":91538,"line_start":461,"line_end":461,"column_start":1,"column_end":97}},{"value":"/ graph changes, which is why it is kept separate.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":91539,"byte_end":91591,"line_start":462,"line_end":462,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":92479,"byte_end":92482,"line_start":490,"line_end":490,"column_start":12,"column_end":15},"name":"new","qualname":"<DominatorTreePreorder>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new blank `DominatorTreePreorder`.\n","sig":null,"attributes":[{"value":"/ Create a new blank `DominatorTreePreorder`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":92420,"byte_end":92467,"line_start":489,"line_end":489,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":92667,"byte_end":92674,"line_start":498,"line_end":498,"column_start":12,"column_end":19},"name":"compute","qualname":"<DominatorTreePreorder>::compute","value":"fn (&mut self, domtree: &DominatorTree, layout: &Layout) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Recompute this data structure to match `domtree`.\n","sig":null,"attributes":[{"value":"/ Recompute this data structure to match `domtree`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":92602,"byte_end":92655,"line_start":497,"line_end":497,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":398},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":94694,"byte_end":94703,"line_start":547,"line_end":547,"column_start":12,"column_end":21},"name":"ChildIter","qualname":"::dominator_tree::ChildIter","value":"ChildIter {  }","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401}],"decl_id":null,"docs":" An iterator that enumerates the direct children of an block in the dominator tree.\n","sig":null,"attributes":[{"value":"/ An iterator that enumerates the direct children of an block in the dominator tree.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":94596,"byte_end":94682,"line_start":546,"line_end":546,"column_start":1,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":95367,"byte_end":95375,"line_start":570,"line_end":570,"column_start":12,"column_end":20},"name":"children","qualname":"<DominatorTreePreorder>::children","value":"fn (&self, block: Block) -> ChildIter","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over the direct children of `block` in the dominator tree.","sig":null,"attributes":[{"value":"/ Get an iterator over the direct children of `block` in the dominator tree.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":95126,"byte_end":95204,"line_start":566,"line_end":566,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":95209,"byte_end":95212,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ These are the block's whose immediate dominator is an instruction in `block`, ordered according","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":95217,"byte_end":95316,"line_start":568,"line_end":568,"column_start":5,"column_end":104}},{"value":"/ to the CFG reverse post-order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":95321,"byte_end":95355,"line_start":569,"line_end":569,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":95886,"byte_end":95895,"line_start":584,"line_end":584,"column_start":12,"column_end":21},"name":"dominates","qualname":"<DominatorTreePreorder>::dominates","value":"fn (&self, a: Block, b: Block) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Fast, constant time dominance check with block granularity.","sig":null,"attributes":[{"value":"/ Fast, constant time dominance check with block granularity.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":95520,"byte_end":95583,"line_start":577,"line_end":577,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":95588,"byte_end":95591,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ This computes the same result as `domtree.dominates(a, b)`, but in guaranteed fast constant","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":95596,"byte_end":95691,"line_start":579,"line_end":579,"column_start":5,"column_end":100}},{"value":"/ time. This is less general than the `DominatorTree` method because it only works with block","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":95696,"byte_end":95791,"line_start":580,"line_end":580,"column_start":5,"column_end":100}},{"value":"/ program points.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":95796,"byte_end":95815,"line_start":581,"line_end":581,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":95820,"byte_end":95823,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ An block is considered to dominate itself.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":95828,"byte_end":95874,"line_start":583,"line_end":583,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":96149,"byte_end":96162,"line_start":591,"line_end":591,"column_start":12,"column_end":25},"name":"pre_cmp_block","qualname":"<DominatorTreePreorder>::pre_cmp_block","value":"fn (&self, a: Block, b: Block) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Compare two blocks according to the dominator pre-order.\n","sig":null,"attributes":[{"value":"/ Compare two blocks according to the dominator pre-order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":96077,"byte_end":96137,"line_start":590,"line_end":590,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":96568,"byte_end":96575,"line_start":599,"line_end":599,"column_start":12,"column_end":19},"name":"pre_cmp","qualname":"<DominatorTreePreorder>::pre_cmp","value":"fn <A, B> (&self, a: A, b: B, layout: &Layout) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Compare two program points according to the dominator tree pre-order.","sig":null,"attributes":[{"value":"/ Compare two program points according to the dominator tree pre-order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":96279,"byte_end":96352,"line_start":595,"line_end":595,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":96357,"byte_end":96360,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ This ordering of program points have the property that given a program point, pp, all the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":96365,"byte_end":96458,"line_start":597,"line_end":597,"column_start":5,"column_end":98}},{"value":"/ program points dominated by pp follow immediately and contiguously after pp in the order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":96463,"byte_end":96556,"line_start":598,"line_end":598,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":97171,"byte_end":97182,"line_start":616,"line_end":616,"column_start":12,"column_end":23},"name":"pre_cmp_def","qualname":"<DominatorTreePreorder>::pre_cmp_def","value":"fn (&self, a: Value, b: Value, func: &Function) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Compare two value defs according to the dominator tree pre-order.","sig":null,"attributes":[{"value":"/ Compare two value defs according to the dominator tree pre-order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":96890,"byte_end":96959,"line_start":610,"line_end":610,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":96964,"byte_end":96967,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ Two values defined at the same program point are compared according to their parameter or","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":96972,"byte_end":97065,"line_start":612,"line_end":612,"column_start":5,"column_end":98}},{"value":"/ result order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":97070,"byte_end":97087,"line_start":613,"line_end":613,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":97092,"byte_end":97095,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ This is a total ordering of the values in the function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":97100,"byte_end":97159,"line_start":615,"line_end":615,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":415},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"flowgraph","qualname":"::flowgraph","value":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","parent":null,"children":[{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":5071},{"krate":0,"index":5081},{"krate":0,"index":5077},{"krate":0,"index":5078},{"krate":0,"index":5074},{"krate":0,"index":5075},{"krate":0,"index":425},{"krate":0,"index":5083},{"krate":0,"index":5088},{"krate":0,"index":5086},{"krate":0,"index":427},{"krate":0,"index":432},{"krate":0,"index":445},{"krate":0,"index":449},{"krate":0,"index":454}],"decl_id":null,"docs":" A control flow graph represented as mappings of basic blocks to their predecessors\n and successors.","sig":null,"attributes":[{"value":"! A control flow graph represented as mappings of basic blocks to their predecessors","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":105584,"byte_end":105670,"line_start":1,"line_end":1,"column_start":1,"column_end":87}},{"value":"! and successors.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":105671,"byte_end":105690,"line_start":2,"line_end":2,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":105691,"byte_end":105694,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! Successors are represented as basic blocks while predecessors are represented by basic","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":105695,"byte_end":105785,"line_start":4,"line_end":4,"column_start":1,"column_end":91}},{"value":"! blocks. Basic blocks are denoted by tuples of block and branch/jump instructions. Each","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":105786,"byte_end":105876,"line_start":5,"line_end":5,"column_start":1,"column_end":91}},{"value":"! predecessor tuple corresponds to the end of a basic block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":105877,"byte_end":105939,"line_start":6,"line_end":6,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":105940,"byte_end":105943,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! ```c","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":105944,"byte_end":105952,"line_start":8,"line_end":8,"column_start":1,"column_end":9}},{"value":"!     Block0:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":105953,"byte_end":105968,"line_start":9,"line_end":9,"column_start":1,"column_end":16}},{"value":"!         ...          ; beginning of basic block","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":105969,"byte_end":106020,"line_start":10,"line_end":10,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":106021,"byte_end":106024,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"!         ...","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":106025,"byte_end":106040,"line_start":12,"line_end":12,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":106041,"byte_end":106044,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"!         brz vx, Block1 ; end of basic block","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":106045,"byte_end":106092,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":106093,"byte_end":106096,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"!         ...          ; beginning of basic block","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":106097,"byte_end":106148,"line_start":16,"line_end":16,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":106149,"byte_end":106152,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"!         ...","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":106153,"byte_end":106168,"line_start":18,"line_end":18,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":106169,"byte_end":106172,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"!         jmp Block2     ; end of basic block","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":106173,"byte_end":106220,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"! ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":106221,"byte_end":106228,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":106229,"byte_end":106232,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! Here `Block1` and `Block2` would each have a single predecessor denoted as `(Block0, brz)`","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":106233,"byte_end":106327,"line_start":23,"line_end":23,"column_start":1,"column_end":95}},{"value":"! and `(Block0, jmp Block2)` respectively.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":106328,"byte_end":106372,"line_start":24,"line_end":24,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":5071},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":106657,"byte_end":106673,"line_start":35,"line_end":35,"column_start":12,"column_end":28},"name":"BlockPredecessor","qualname":"::flowgraph::BlockPredecessor","value":"BlockPredecessor { block, inst }","parent":null,"children":[{"krate":0,"index":5072},{"krate":0,"index":5073}],"decl_id":null,"docs":" A basic block denoted by its enclosing Block and last instruction.\n","sig":null,"attributes":[{"value":"/ A basic block denoted by its enclosing Block and last instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":106543,"byte_end":106613,"line_start":33,"line_end":33,"column_start":1,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":5072},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":106713,"byte_end":106718,"line_start":37,"line_end":37,"column_start":9,"column_end":14},"name":"block","qualname":"::flowgraph::BlockPredecessor::block","value":"ir::entities::Block","parent":{"krate":0,"index":5071},"children":[],"decl_id":null,"docs":" Enclosing Block key.\n","sig":null,"attributes":[{"value":"/ Enclosing Block key.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":106680,"byte_end":106704,"line_start":36,"line_end":36,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":5073},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":106780,"byte_end":106784,"line_start":39,"line_end":39,"column_start":9,"column_end":13},"name":"inst","qualname":"::flowgraph::BlockPredecessor::inst","value":"ir::entities::Inst","parent":{"krate":0,"index":5071},"children":[],"decl_id":null,"docs":" Last instruction in the basic block.\n","sig":null,"attributes":[{"value":"/ Last instruction in the basic block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":106731,"byte_end":106771,"line_start":38,"line_end":38,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":106891,"byte_end":106894,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BlockPredecessor>::new","value":"fn (block: Block, inst: Inst) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convenient method to construct new BlockPredecessor.\n","sig":null,"attributes":[{"value":"/ Convenient method to construct new BlockPredecessor.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":106823,"byte_end":106879,"line_start":43,"line_end":43,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":427},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":108260,"byte_end":108276,"line_start":74,"line_end":74,"column_start":12,"column_end":28},"name":"ControlFlowGraph","qualname":"::flowgraph::ControlFlowGraph","value":"ControlFlowGraph {  }","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431}],"decl_id":null,"docs":" The Control Flow Graph maintains a mapping of blocks to their predecessors\n and successors where predecessors are basic blocks and successors are\n basic blocks.\n","sig":null,"attributes":[{"value":"/ The Control Flow Graph maintains a mapping of blocks to their predecessors","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":108078,"byte_end":108156,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ and successors where predecessors are basic blocks and successors are","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":108157,"byte_end":108230,"line_start":72,"line_end":72,"column_start":1,"column_end":74}},{"value":"/ basic blocks.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":108231,"byte_end":108248,"line_start":73,"line_end":73,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":108517,"byte_end":108520,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"new","qualname":"<ControlFlowGraph>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allocate a new blank control flow graph.\n","sig":null,"attributes":[{"value":"/ Allocate a new blank control flow graph.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":108461,"byte_end":108505,"line_start":82,"line_end":82,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":108807,"byte_end":108812,"line_start":93,"line_end":93,"column_start":12,"column_end":17},"name":"clear","qualname":"<ControlFlowGraph>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear all data structures in this control flow graph.\n","sig":null,"attributes":[{"value":"/ Clear all data structures in this control flow graph.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":108738,"byte_end":108795,"line_start":92,"line_end":92,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":109031,"byte_end":109044,"line_start":101,"line_end":101,"column_start":12,"column_end":25},"name":"with_function","qualname":"<ControlFlowGraph>::with_function","value":"fn (func: &Function) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allocate and compute the control flow graph for `func`.\n","sig":null,"attributes":[{"value":"/ Allocate and compute the control flow graph for `func`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":108960,"byte_end":109019,"line_start":100,"line_end":100,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":109315,"byte_end":109322,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"compute","qualname":"<ControlFlowGraph>::compute","value":"fn (&mut self, func: &Function) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Compute the control flow graph of `func`.","sig":null,"attributes":[{"value":"/ Compute the control flow graph of `func`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":109157,"byte_end":109202,"line_start":107,"line_end":107,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":109207,"byte_end":109210,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ This will clear and overwrite any information already stored in this data structure.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":109215,"byte_end":109303,"line_start":109,"line_end":109,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":111412,"byte_end":111427,"line_start":160,"line_end":160,"column_start":12,"column_end":27},"name":"recompute_block","qualname":"<ControlFlowGraph>::recompute_block","value":"fn (&mut self, func: &Function, block: Block) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Recompute the control flow graph of `block`.","sig":null,"attributes":[{"value":"/ Recompute the control flow graph of `block`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":110948,"byte_end":110996,"line_start":154,"line_end":154,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":111001,"byte_end":111004,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ This is for use after modifying instructions within a specific block. It recomputes all edges","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":111009,"byte_end":111106,"line_start":156,"line_end":156,"column_start":5,"column_end":102}},{"value":"/ from `block` while leaving edges to `block` intact. Its functionality a subset of that of the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":111111,"byte_end":111208,"line_start":157,"line_end":157,"column_start":5,"column_end":102}},{"value":"/ more expensive `compute`, and should be used when we know we don't need to recompute the CFG","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":111213,"byte_end":111309,"line_start":158,"line_end":158,"column_start":5,"column_end":101}},{"value":"/ from scratch, but rather that our changes have been restricted to specific blocks.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":111314,"byte_end":111400,"line_start":159,"line_end":159,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":111974,"byte_end":111983,"line_start":176,"line_end":176,"column_start":12,"column_end":21},"name":"pred_iter","qualname":"<ControlFlowGraph>::pred_iter","value":"fn (&self, block: Block) -> PredIter","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over the CFG predecessors to `block`.\n","sig":null,"attributes":[{"value":"/ Get an iterator over the CFG predecessors to `block`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":111905,"byte_end":111962,"line_start":175,"line_end":175,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":112169,"byte_end":112178,"line_start":181,"line_end":181,"column_start":12,"column_end":21},"name":"succ_iter","qualname":"<ControlFlowGraph>::succ_iter","value":"fn (&self, block: Block) -> SuccIter","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over the CFG successors to `block`.\n","sig":null,"attributes":[{"value":"/ Get an iterator over the CFG successors to `block`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":112102,"byte_end":112157,"line_start":180,"line_end":180,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":112619,"byte_end":112627,"line_start":191,"line_end":191,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<ControlFlowGraph>::is_valid","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the CFG is in a valid state.","sig":null,"attributes":[{"value":"/ Check if the CFG is in a valid state.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":112325,"byte_end":112366,"line_start":186,"line_end":186,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":112371,"byte_end":112374,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Note that this doesn't perform any kind of validity checks. It simply checks if the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":112379,"byte_end":112466,"line_start":188,"line_end":188,"column_start":5,"column_end":92}},{"value":"/ `compute()` method has been called since the last `clear()`. It does not check that the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":112471,"byte_end":112562,"line_start":189,"line_end":189,"column_start":5,"column_end":96}},{"value":"/ CFG is consistent with the function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":112567,"byte_end":112607,"line_start":190,"line_end":190,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":445},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":112837,"byte_end":112845,"line_start":199,"line_end":199,"column_start":12,"column_end":20},"name":"PredIter","qualname":"::flowgraph::PredIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over block predecessors. The iterator type is `BlockPredecessor`.","sig":null,"attributes":[{"value":"/ An iterator over block predecessors. The iterator type is `BlockPredecessor`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":112673,"byte_end":112754,"line_start":196,"line_end":196,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":112755,"byte_end":112758,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ Each predecessor is an instruction that branches to the block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":112759,"byte_end":112825,"line_start":198,"line_end":198,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":454},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":113163,"byte_end":113171,"line_start":210,"line_end":210,"column_start":10,"column_end":18},"name":"SuccIter","qualname":"::flowgraph::SuccIter","value":"bforest::SetIter<'a, Block>","parent":null,"children":[],"decl_id":null,"docs":" An iterator over block successors. The iterator type is `Block`.\n","sig":null,"attributes":[{"value":"/ An iterator over block successors. The iterator type is `Block`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":113085,"byte_end":113153,"line_start":209,"line_end":209,"column_start":1,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":456},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ir","qualname":"::ir","value":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":528},{"krate":0,"index":589},{"krate":0,"index":736},{"krate":0,"index":786},{"krate":0,"index":857},{"krate":0,"index":877},{"krate":0,"index":886},{"krate":0,"index":993},{"krate":0,"index":1008},{"krate":0,"index":1016},{"krate":0,"index":1142},{"krate":0,"index":1270},{"krate":0,"index":1293},{"krate":0,"index":1385},{"krate":0,"index":1419},{"krate":0,"index":1445},{"krate":0,"index":1483},{"krate":0,"index":1493},{"krate":0,"index":1553},{"krate":0,"index":1561},{"krate":0,"index":1575},{"krate":0,"index":1622},{"krate":0,"index":1662},{"krate":0,"index":1668},{"krate":0,"index":1672},{"krate":0,"index":1675},{"krate":0,"index":1688},{"krate":0,"index":1694},{"krate":0,"index":1695},{"krate":0,"index":1699},{"krate":0,"index":1702},{"krate":0,"index":1703},{"krate":0,"index":1706},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1722},{"krate":0,"index":1723},{"krate":0,"index":1728},{"krate":0,"index":1729},{"krate":0,"index":1730},{"krate":0,"index":1731},{"krate":0,"index":1734},{"krate":0,"index":1735},{"krate":0,"index":1736},{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":7635},{"krate":0,"index":7650},{"krate":0,"index":7648},{"krate":0,"index":7644},{"krate":0,"index":7645},{"krate":0,"index":7641},{"krate":0,"index":7642},{"krate":0,"index":7638},{"krate":0,"index":7655},{"krate":0,"index":7658},{"krate":0,"index":7660},{"krate":0,"index":7651},{"krate":0,"index":7653},{"krate":0,"index":7663},{"krate":0,"index":7668},{"krate":0,"index":7666},{"krate":0,"index":7670},{"krate":0,"index":7679},{"krate":0,"index":7677}],"decl_id":null,"docs":" Representation of Cranelift IR functions.\n","sig":null,"attributes":[{"value":"! Representation of Cranelift IR functions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":118295,"byte_end":118340,"line_start":1,"line_end":1,"column_start":1,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":469},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":122545,"byte_end":122560,"line_start":20,"line_end":20,"column_start":11,"column_end":26},"name":"InstBuilderBase","qualname":"::ir::builder::InstBuilderBase","value":"InstBuilderBase<'f>: Sized","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473}],"decl_id":null,"docs":" Base trait for instruction builders.","sig":null,"attributes":[{"value":"/ Base trait for instruction builders.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":122137,"byte_end":122177,"line_start":12,"line_end":12,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":122178,"byte_end":122181,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The `InstBuilderBase` trait provides the basic functionality required by the methods of the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":122182,"byte_end":122277,"line_start":14,"line_end":14,"column_start":1,"column_end":96}},{"value":"/ generated `InstBuilder` trait. These methods should not normally be used directly. Use the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":122278,"byte_end":122372,"line_start":15,"line_end":15,"column_start":1,"column_end":95}},{"value":"/ methods in the `InstBuilder` trait instead.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":122373,"byte_end":122420,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":122421,"byte_end":122424,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Any data type that implements `InstBuilderBase` also gets all the methods of the `InstBuilder`","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":122425,"byte_end":122523,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ trait.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":122524,"byte_end":122534,"line_start":19,"line_end":19,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":122692,"byte_end":122707,"line_start":23,"line_end":23,"column_start":8,"column_end":23},"name":"data_flow_graph","qualname":"::ir::builder::InstBuilderBase::data_flow_graph","value":"fn (&self) -> &DataFlowGraph","parent":{"krate":0,"index":469},"children":[],"decl_id":null,"docs":" Get an immutable reference to the data flow graph that will hold the constructed\n instructions.\n","sig":null,"attributes":[{"value":"/ Get an immutable reference to the data flow graph that will hold the constructed","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":122578,"byte_end":122662,"line_start":21,"line_end":21,"column_start":5,"column_end":89}},{"value":"/ instructions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":122667,"byte_end":122684,"line_start":22,"line_end":22,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":122849,"byte_end":122868,"line_start":26,"line_end":26,"column_start":8,"column_end":27},"name":"data_flow_graph_mut","qualname":"::ir::builder::InstBuilderBase::data_flow_graph_mut","value":"fn (&mut self) -> &mut DataFlowGraph","parent":{"krate":0,"index":469},"children":[],"decl_id":null,"docs":" Get a mutable reference to the data flow graph that will hold the constructed\n instructions.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the data flow graph that will hold the constructed","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":122738,"byte_end":122819,"line_start":24,"line_end":24,"column_start":5,"column_end":86}},{"value":"/ instructions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":122824,"byte_end":122841,"line_start":25,"line_end":25,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":123182,"byte_end":123187,"line_start":32,"line_end":32,"column_start":8,"column_end":13},"name":"build","qualname":"::ir::builder::InstBuilderBase::build","value":"fn (self, data: InstructionData, ctrl_typevar: Type) -> (Inst, &'f mut DataFlowGraph)","parent":{"krate":0,"index":469},"children":[],"decl_id":null,"docs":" Insert an instruction and return a reference to it, consuming the builder.","sig":null,"attributes":[{"value":"/ Insert an instruction and return a reference to it, consuming the builder.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":122908,"byte_end":122986,"line_start":28,"line_end":28,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":122991,"byte_end":122994,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ The result types may depend on a controlling type variable. For non-polymorphic","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":122999,"byte_end":123082,"line_start":30,"line_end":30,"column_start":5,"column_end":88}},{"value":"/ instructions with multiple results, pass `INVALID` for the `ctrl_typevar` argument.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":123087,"byte_end":123174,"line_start":31,"line_end":31,"column_start":5,"column_end":92}}]},{"kind":"Trait","id":{"krate":0,"index":5090},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10073145,"byte_end":10073156,"line_start":14,"line_end":14,"column_start":11,"column_end":22},"name":"InstBuilder","qualname":"::ir::builder::InstBuilder","value":"InstBuilder<'f>: InstBuilderBase<'f>","parent":null,"children":[{"krate":0,"index":5092},{"krate":0,"index":5093},{"krate":0,"index":5094},{"krate":0,"index":5095},{"krate":0,"index":5096},{"krate":0,"index":5098},{"krate":0,"index":5100},{"krate":0,"index":5102},{"krate":0,"index":5103},{"krate":0,"index":5105},{"krate":0,"index":5106},{"krate":0,"index":5107},{"krate":0,"index":5108},{"krate":0,"index":5110},{"krate":0,"index":5112},{"krate":0,"index":5114},{"krate":0,"index":5116},{"krate":0,"index":5119},{"krate":0,"index":5122},{"krate":0,"index":5123},{"krate":0,"index":5124},{"krate":0,"index":5125},{"krate":0,"index":5126},{"krate":0,"index":5127},{"krate":0,"index":5128},{"krate":0,"index":5129},{"krate":0,"index":5130},{"krate":0,"index":5131},{"krate":0,"index":5132},{"krate":0,"index":5135},{"krate":0,"index":5138},{"krate":0,"index":5141},{"krate":0,"index":5144},{"krate":0,"index":5147},{"krate":0,"index":5150},{"krate":0,"index":5153},{"krate":0,"index":5156},{"krate":0,"index":5159},{"krate":0,"index":5162},{"krate":0,"index":5165},{"krate":0,"index":5168},{"krate":0,"index":5171},{"krate":0,"index":5174},{"krate":0,"index":5177},{"krate":0,"index":5180},{"krate":0,"index":5183},{"krate":0,"index":5186},{"krate":0,"index":5189},{"krate":0,"index":5192},{"krate":0,"index":5195},{"krate":0,"index":5198},{"krate":0,"index":5200},{"krate":0,"index":5202},{"krate":0,"index":5204},{"krate":0,"index":5205},{"krate":0,"index":5206},{"krate":0,"index":5208},{"krate":0,"index":5209},{"krate":0,"index":5210},{"krate":0,"index":5212},{"krate":0,"index":5214},{"krate":0,"index":5216},{"krate":0,"index":5218},{"krate":0,"index":5220},{"krate":0,"index":5222},{"krate":0,"index":5224},{"krate":0,"index":5225},{"krate":0,"index":5226},{"krate":0,"index":5227},{"krate":0,"index":5229},{"krate":0,"index":5230},{"krate":0,"index":5231},{"krate":0,"index":5232},{"krate":0,"index":5233},{"krate":0,"index":5234},{"krate":0,"index":5237},{"krate":0,"index":5240},{"krate":0,"index":5242},{"krate":0,"index":5243},{"krate":0,"index":5244},{"krate":0,"index":5246},{"krate":0,"index":5248},{"krate":0,"index":5249},{"krate":0,"index":5251},{"krate":0,"index":5253},{"krate":0,"index":5254},{"krate":0,"index":5255},{"krate":0,"index":5256},{"krate":0,"index":5257},{"krate":0,"index":5258},{"krate":0,"index":5259},{"krate":0,"index":5260},{"krate":0,"index":5262},{"krate":0,"index":5264},{"krate":0,"index":5266},{"krate":0,"index":5269},{"krate":0,"index":5270},{"krate":0,"index":5272},{"krate":0,"index":5273},{"krate":0,"index":5274},{"krate":0,"index":5275},{"krate":0,"index":5276},{"krate":0,"index":5277},{"krate":0,"index":5278},{"krate":0,"index":5279},{"krate":0,"index":5280},{"krate":0,"index":5281},{"krate":0,"index":5282},{"krate":0,"index":5283},{"krate":0,"index":5284},{"krate":0,"index":5285},{"krate":0,"index":5286},{"krate":0,"index":5288},{"krate":0,"index":5290},{"krate":0,"index":5292},{"krate":0,"index":5294},{"krate":0,"index":5296},{"krate":0,"index":5298},{"krate":0,"index":5300},{"krate":0,"index":5301},{"krate":0,"index":5302},{"krate":0,"index":5303},{"krate":0,"index":5304},{"krate":0,"index":5305},{"krate":0,"index":5306},{"krate":0,"index":5307},{"krate":0,"index":5308},{"krate":0,"index":5309},{"krate":0,"index":5310},{"krate":0,"index":5311},{"krate":0,"index":5312},{"krate":0,"index":5313},{"krate":0,"index":5314},{"krate":0,"index":5315},{"krate":0,"index":5316},{"krate":0,"index":5317},{"krate":0,"index":5318},{"krate":0,"index":5319},{"krate":0,"index":5321},{"krate":0,"index":5323},{"krate":0,"index":5325},{"krate":0,"index":5326},{"krate":0,"index":5327},{"krate":0,"index":5329},{"krate":0,"index":5331},{"krate":0,"index":5332},{"krate":0,"index":5333},{"krate":0,"index":5334},{"krate":0,"index":5336},{"krate":0,"index":5338},{"krate":0,"index":5340},{"krate":0,"index":5341},{"krate":0,"index":5342},{"krate":0,"index":5343},{"krate":0,"index":5344},{"krate":0,"index":5345},{"krate":0,"index":5347},{"krate":0,"index":5348},{"krate":0,"index":5349},{"krate":0,"index":5350},{"krate":0,"index":5351},{"krate":0,"index":5352},{"krate":0,"index":5353},{"krate":0,"index":5354},{"krate":0,"index":5355},{"krate":0,"index":5356},{"krate":0,"index":5357},{"krate":0,"index":5358},{"krate":0,"index":5359},{"krate":0,"index":5360},{"krate":0,"index":5361},{"krate":0,"index":5362},{"krate":0,"index":5363},{"krate":0,"index":5364},{"krate":0,"index":5365},{"krate":0,"index":5367},{"krate":0,"index":5369},{"krate":0,"index":5370},{"krate":0,"index":5371},{"krate":0,"index":5372},{"krate":0,"index":5373},{"krate":0,"index":5374},{"krate":0,"index":5375},{"krate":0,"index":5376},{"krate":0,"index":5377},{"krate":0,"index":5378},{"krate":0,"index":5379},{"krate":0,"index":5380},{"krate":0,"index":5381},{"krate":0,"index":5382},{"krate":0,"index":5383},{"krate":0,"index":5384},{"krate":0,"index":5385},{"krate":0,"index":5386},{"krate":0,"index":5387},{"krate":0,"index":5388},{"krate":0,"index":5389},{"krate":0,"index":5390},{"krate":0,"index":5391},{"krate":0,"index":5392},{"krate":0,"index":5393},{"krate":0,"index":5394},{"krate":0,"index":5395},{"krate":0,"index":5396},{"krate":0,"index":5397},{"krate":0,"index":5398},{"krate":0,"index":5399},{"krate":0,"index":5400},{"krate":0,"index":5402},{"krate":0,"index":5403},{"krate":0,"index":5405},{"krate":0,"index":5407},{"krate":0,"index":5409},{"krate":0,"index":5410},{"krate":0,"index":5411},{"krate":0,"index":5412},{"krate":0,"index":5413},{"krate":0,"index":5414},{"krate":0,"index":5415},{"krate":0,"index":5416},{"krate":0,"index":5417},{"krate":0,"index":5418},{"krate":0,"index":5419},{"krate":0,"index":5420},{"krate":0,"index":5421},{"krate":0,"index":5422},{"krate":0,"index":5423},{"krate":0,"index":5424},{"krate":0,"index":5425},{"krate":0,"index":5426},{"krate":0,"index":5427},{"krate":0,"index":5428},{"krate":0,"index":5429},{"krate":0,"index":5430},{"krate":0,"index":5431},{"krate":0,"index":5432},{"krate":0,"index":5433},{"krate":0,"index":5434},{"krate":0,"index":5435},{"krate":0,"index":5436},{"krate":0,"index":5437},{"krate":0,"index":5438},{"krate":0,"index":5439},{"krate":0,"index":5440},{"krate":0,"index":5441},{"krate":0,"index":5442},{"krate":0,"index":5443},{"krate":0,"index":5444},{"krate":0,"index":5445},{"krate":0,"index":5446},{"krate":0,"index":5447},{"krate":0,"index":5448},{"krate":0,"index":5449},{"krate":0,"index":5450},{"krate":0,"index":5451},{"krate":0,"index":5452},{"krate":0,"index":5453},{"krate":0,"index":5454},{"krate":0,"index":5455},{"krate":0,"index":5456},{"krate":0,"index":5457},{"krate":0,"index":5458},{"krate":0,"index":5459},{"krate":0,"index":5460},{"krate":0,"index":5461},{"krate":0,"index":5462},{"krate":0,"index":5463},{"krate":0,"index":5464},{"krate":0,"index":5465},{"krate":0,"index":5466},{"krate":0,"index":5467},{"krate":0,"index":5468}],"decl_id":null,"docs":" Convenience methods for building instructions.","sig":null,"attributes":[{"value":"/ Convenience methods for building instructions.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10072537,"byte_end":10072587,"line_start":1,"line_end":1,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10072588,"byte_end":10072591,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The `InstBuilder` trait has one method per instruction opcode for","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10072592,"byte_end":10072661,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ conveniently constructing the instruction with minimum arguments.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10072662,"byte_end":10072731,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"/ Polymorphic instructions infer their result types from the input","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10072732,"byte_end":10072800,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/ arguments when possible. In some cases, an explicit `ctrl_typevar`","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10072801,"byte_end":10072871,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ argument is required.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10072872,"byte_end":10072897,"line_start":7,"line_end":7,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10072898,"byte_end":10072901,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The opcode methods return the new instruction's result values, or","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10072902,"byte_end":10072971,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/ the `Inst` itself for instructions that don't have any results.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10072972,"byte_end":10073039,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10073040,"byte_end":10073043,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ There is also a method per instruction format. These methods all","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10073044,"byte_end":10073112,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/ return an `Inst`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10073113,"byte_end":10073134,"line_start":13,"line_end":13,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5092},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10073517,"byte_end":10073521,"line_start":26,"line_end":26,"column_start":8,"column_end":12},"name":"jump","qualname":"::ir::builder::InstBuilder::jump","value":"fn (mut self, block: ir::Block, args: &[Value]) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Jump.","sig":null,"attributes":[{"value":"/ Jump.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10073188,"byte_end":10073197,"line_start":15,"line_end":15,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10073202,"byte_end":10073205,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ Unconditionally jump to a basic block, passing the specified","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10073210,"byte_end":10073274,"line_start":17,"line_end":17,"column_start":5,"column_end":69}},{"value":"/ block arguments. The number and types of arguments must match the","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10073279,"byte_end":10073348,"line_start":18,"line_end":18,"column_start":5,"column_end":74}},{"value":"/ destination block.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10073353,"byte_end":10073375,"line_start":19,"line_end":19,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10073380,"byte_end":10073383,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10073388,"byte_end":10073399,"line_start":21,"line_end":21,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10073404,"byte_end":10073407,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ - block: Destination basic block","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10073412,"byte_end":10073448,"line_start":23,"line_end":23,"column_start":5,"column_end":41}},{"value":"/ - args: block arguments","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10073453,"byte_end":10073480,"line_start":24,"line_end":24,"column_start":5,"column_end":32}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10073485,"byte_end":10073509,"line_start":25,"line_end":25,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5093},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10074310,"byte_end":10074321,"line_start":49,"line_end":49,"column_start":8,"column_end":19},"name":"fallthrough","qualname":"::ir::builder::InstBuilder::fallthrough","value":"fn (mut self, block: ir::Block, args: &[Value]) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Fall through to the next block.","sig":null,"attributes":[{"value":"/ Fall through to the next block.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10073843,"byte_end":10073878,"line_start":35,"line_end":35,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10073883,"byte_end":10073886,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This is the same as `jump`, except the destination block must be","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10073891,"byte_end":10073959,"line_start":37,"line_end":37,"column_start":5,"column_end":73}},{"value":"/ the next one in the layout.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10073964,"byte_end":10073995,"line_start":38,"line_end":38,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10074000,"byte_end":10074003,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Jumps are turned into fall-through instructions by the branch","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10074008,"byte_end":10074073,"line_start":40,"line_end":40,"column_start":5,"column_end":70}},{"value":"/ relaxation pass. There is no reason to use this instruction outside","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10074078,"byte_end":10074149,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/ that pass.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10074154,"byte_end":10074168,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10074173,"byte_end":10074176,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10074181,"byte_end":10074192,"line_start":44,"line_end":44,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10074197,"byte_end":10074200,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ - block: Destination basic block","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10074205,"byte_end":10074241,"line_start":46,"line_end":46,"column_start":5,"column_end":41}},{"value":"/ - args: block arguments","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10074246,"byte_end":10074273,"line_start":47,"line_end":47,"column_start":5,"column_end":32}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10074278,"byte_end":10074302,"line_start":48,"line_end":48,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5094},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10075001,"byte_end":10075004,"line_start":69,"line_end":69,"column_start":8,"column_end":11},"name":"brz","qualname":"::ir::builder::InstBuilder::brz","value":"fn (mut self, c: ir::Value, block: ir::Block, args: &[Value]) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Branch when zero.","sig":null,"attributes":[{"value":"/ Branch when zero.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10074650,"byte_end":10074671,"line_start":58,"line_end":58,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10074676,"byte_end":10074679,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ If ``c`` is a `b1` value, take the branch when ``c`` is false. If","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10074684,"byte_end":10074753,"line_start":60,"line_end":60,"column_start":5,"column_end":74}},{"value":"/ ``c`` is an integer value, take the branch when ``c = 0``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10074758,"byte_end":10074820,"line_start":61,"line_end":61,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10074825,"byte_end":10074828,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10074833,"byte_end":10074844,"line_start":63,"line_end":63,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10074849,"byte_end":10074852,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ - c: Controlling value to test","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10074857,"byte_end":10074891,"line_start":65,"line_end":65,"column_start":5,"column_end":39}},{"value":"/ - block: Destination basic block","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10074896,"byte_end":10074932,"line_start":66,"line_end":66,"column_start":5,"column_end":41}},{"value":"/ - args: block arguments","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10074937,"byte_end":10074964,"line_start":67,"line_end":67,"column_start":5,"column_end":32}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10074969,"byte_end":10074993,"line_start":68,"line_end":68,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5095},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10075792,"byte_end":10075796,"line_start":91,"line_end":91,"column_start":8,"column_end":12},"name":"brnz","qualname":"::ir::builder::InstBuilder::brnz","value":"fn (mut self, c: ir::Value, block: ir::Block, args: &[Value]) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Branch when non-zero.","sig":null,"attributes":[{"value":"/ Branch when non-zero.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10075437,"byte_end":10075462,"line_start":80,"line_end":80,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10075467,"byte_end":10075470,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ If ``c`` is a `b1` value, take the branch when ``c`` is true. If","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10075475,"byte_end":10075543,"line_start":82,"line_end":82,"column_start":5,"column_end":73}},{"value":"/ ``c`` is an integer value, take the branch when ``c != 0``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10075548,"byte_end":10075611,"line_start":83,"line_end":83,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10075616,"byte_end":10075619,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10075624,"byte_end":10075635,"line_start":85,"line_end":85,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10075640,"byte_end":10075643,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ - c: Controlling value to test","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10075648,"byte_end":10075682,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/ - block: Destination basic block","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10075687,"byte_end":10075723,"line_start":88,"line_end":88,"column_start":5,"column_end":41}},{"value":"/ - args: block arguments","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10075728,"byte_end":10075755,"line_start":89,"line_end":89,"column_start":5,"column_end":32}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10075760,"byte_end":10075784,"line_start":90,"line_end":90,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5096},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10077153,"byte_end":10077160,"line_start":130,"line_end":130,"column_start":8,"column_end":15},"name":"br_icmp","qualname":"::ir::builder::InstBuilder::br_icmp","value":"fn <T1> (mut self, Cond: T1, x: ir::Value, y: ir::Value, block: ir::Block, args: &[Value]) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Compare scalar integers and branch.","sig":null,"attributes":[{"value":"/ Compare scalar integers and branch.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10076230,"byte_end":10076269,"line_start":102,"line_end":102,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10076274,"byte_end":10076277,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Compare ``x`` and ``y`` in the same way as the `icmp` instruction","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10076282,"byte_end":10076351,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ and take the branch if the condition is true:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10076356,"byte_end":10076405,"line_start":105,"line_end":105,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10076410,"byte_end":10076413,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10076418,"byte_end":10076429,"line_start":107,"line_end":107,"column_start":5,"column_end":16}},{"value":"/     br_icmp ugt v1, v2, block4(v5, v6)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10076434,"byte_end":10076476,"line_start":108,"line_end":108,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10076481,"byte_end":10076488,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10076493,"byte_end":10076496,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ is semantically equivalent to:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10076501,"byte_end":10076535,"line_start":111,"line_end":111,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10076540,"byte_end":10076543,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10076548,"byte_end":10076559,"line_start":113,"line_end":113,"column_start":5,"column_end":16}},{"value":"/     v10 = icmp ugt, v1, v2","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10076564,"byte_end":10076594,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/     brnz v10, block4(v5, v6)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10076599,"byte_end":10076631,"line_start":115,"line_end":115,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10076636,"byte_end":10076643,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10076648,"byte_end":10076651,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ Some RISC architectures like MIPS and RISC-V provide instructions that","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10076656,"byte_end":10076730,"line_start":118,"line_end":118,"column_start":5,"column_end":79}},{"value":"/ implement all or some of the condition codes. The instruction can also","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10076735,"byte_end":10076809,"line_start":119,"line_end":119,"column_start":5,"column_end":79}},{"value":"/ be used to represent *macro-op fusion* on architectures like Intel's.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10076814,"byte_end":10076887,"line_start":120,"line_end":120,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10076892,"byte_end":10076895,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10076900,"byte_end":10076911,"line_start":122,"line_end":122,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10076916,"byte_end":10076919,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ - Cond: An integer comparison condition code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10076924,"byte_end":10076973,"line_start":124,"line_end":124,"column_start":5,"column_end":54}},{"value":"/ - x: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10076978,"byte_end":10077008,"line_start":125,"line_end":125,"column_start":5,"column_end":35}},{"value":"/ - y: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10077013,"byte_end":10077043,"line_start":126,"line_end":126,"column_start":5,"column_end":35}},{"value":"/ - block: Destination basic block","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10077048,"byte_end":10077084,"line_start":127,"line_end":127,"column_start":5,"column_end":41}},{"value":"/ - args: block arguments","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10077089,"byte_end":10077116,"line_start":128,"line_end":128,"column_start":5,"column_end":32}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10077121,"byte_end":10077145,"line_start":129,"line_end":129,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5098},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10078123,"byte_end":10078127,"line_start":153,"line_end":153,"column_start":8,"column_end":12},"name":"brif","qualname":"::ir::builder::InstBuilder::brif","value":"fn <T1> (mut self, Cond: T1, f: ir::Value, block: ir::Block, args: &[Value]) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Branch when condition is true in integer CPU flags.","sig":null,"attributes":[{"value":"/ Branch when condition is true in integer CPU flags.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10077727,"byte_end":10077782,"line_start":143,"line_end":143,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10077787,"byte_end":10077790,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10077795,"byte_end":10077806,"line_start":145,"line_end":145,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10077811,"byte_end":10077814,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ - Cond: An integer comparison condition code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10077819,"byte_end":10077868,"line_start":147,"line_end":147,"column_start":5,"column_end":54}},{"value":"/ - f: CPU flags representing the result of an integer comparison. These flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10077873,"byte_end":10077953,"line_start":148,"line_end":148,"column_start":5,"column_end":85}},{"value":"/ can be tested with an :type:`intcc` condition code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10077958,"byte_end":10078013,"line_start":149,"line_end":149,"column_start":5,"column_end":60}},{"value":"/ - block: Destination basic block","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10078018,"byte_end":10078054,"line_start":150,"line_end":150,"column_start":5,"column_end":41}},{"value":"/ - args: block arguments","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10078059,"byte_end":10078086,"line_start":151,"line_end":151,"column_start":5,"column_end":32}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10078091,"byte_end":10078115,"line_start":152,"line_end":152,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5100},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10078996,"byte_end":10079000,"line_start":174,"line_end":174,"column_start":8,"column_end":12},"name":"brff","qualname":"::ir::builder::InstBuilder::brff","value":"fn <T1> (mut self, Cond: T1, f: ir::Value, block: ir::Block, args: &[Value]) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Branch when condition is true in floating point CPU flags.","sig":null,"attributes":[{"value":"/ Branch when condition is true in floating point CPU flags.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10078581,"byte_end":10078643,"line_start":164,"line_end":164,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10078648,"byte_end":10078651,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10078656,"byte_end":10078667,"line_start":166,"line_end":166,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10078672,"byte_end":10078675,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ - Cond: A floating point comparison condition code","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10078680,"byte_end":10078734,"line_start":168,"line_end":168,"column_start":5,"column_end":59}},{"value":"/ - f: CPU flags representing the result of a floating point comparison. These","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10078739,"byte_end":10078819,"line_start":169,"line_end":169,"column_start":5,"column_end":85}},{"value":"/ flags can be tested with a :type:`floatcc` condition code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10078824,"byte_end":10078886,"line_start":170,"line_end":170,"column_start":5,"column_end":67}},{"value":"/ - block: Destination basic block","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10078891,"byte_end":10078927,"line_start":171,"line_end":171,"column_start":5,"column_end":41}},{"value":"/ - args: block arguments","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10078932,"byte_end":10078959,"line_start":172,"line_end":172,"column_start":5,"column_end":32}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10078964,"byte_end":10078988,"line_start":173,"line_end":173,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5102},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10080399,"byte_end":10080407,"line_start":206,"line_end":206,"column_start":8,"column_end":16},"name":"br_table","qualname":"::ir::builder::InstBuilder::br_table","value":"fn (self, x: ir::Value, block: ir::Block, JT: ir::JumpTable) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Indirect branch via jump table.","sig":null,"attributes":[{"value":"/ Indirect branch via jump table.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10079458,"byte_end":10079493,"line_start":185,"line_end":185,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10079498,"byte_end":10079501,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Use ``x`` as an unsigned index into the jump table ``JT``. If a jump","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10079506,"byte_end":10079578,"line_start":187,"line_end":187,"column_start":5,"column_end":77}},{"value":"/ table entry is found, branch to the corresponding block. If no entry was","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10079583,"byte_end":10079659,"line_start":188,"line_end":188,"column_start":5,"column_end":81}},{"value":"/ found or the index is out-of-bounds, branch to the given default block.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10079664,"byte_end":10079739,"line_start":189,"line_end":189,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10079744,"byte_end":10079747,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Note that this branch instruction can't pass arguments to the targeted","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10079752,"byte_end":10079826,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ blocks. Split critical edges as needed to work around this.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10079831,"byte_end":10079894,"line_start":192,"line_end":192,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10079899,"byte_end":10079902,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ Do not confuse this with \"tables\" in WebAssembly. ``br_table`` is for","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10079907,"byte_end":10079980,"line_start":194,"line_end":194,"column_start":5,"column_end":78}},{"value":"/ jump tables with destinations within the current function only -- think","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10079985,"byte_end":10080060,"line_start":195,"line_end":195,"column_start":5,"column_end":80}},{"value":"/ of a ``match`` in Rust or a ``switch`` in C.  If you want to call a","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10080065,"byte_end":10080136,"line_start":196,"line_end":196,"column_start":5,"column_end":76}},{"value":"/ function in a dynamic library, that will typically use","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10080141,"byte_end":10080199,"line_start":197,"line_end":197,"column_start":5,"column_end":63}},{"value":"/ ``call_indirect``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10080204,"byte_end":10080226,"line_start":198,"line_end":198,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10080231,"byte_end":10080234,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10080239,"byte_end":10080250,"line_start":200,"line_end":200,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10080255,"byte_end":10080258,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ - x: index into jump table","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10080263,"byte_end":10080293,"line_start":202,"line_end":202,"column_start":5,"column_end":35}},{"value":"/ - block: Destination basic block","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10080298,"byte_end":10080334,"line_start":203,"line_end":203,"column_start":5,"column_end":41}},{"value":"/ - JT: A jump table.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10080339,"byte_end":10080362,"line_start":204,"line_end":204,"column_start":5,"column_end":28}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10080367,"byte_end":10080391,"line_start":205,"line_end":205,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5103},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10081286,"byte_end":10081302,"line_start":231,"line_end":231,"column_start":8,"column_end":24},"name":"jump_table_entry","qualname":"::ir::builder::InstBuilder::jump_table_entry","value":"fn <T1> (self, x: ir::Value, addr: ir::Value, Size: T1, JT: ir::JumpTable) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Get an entry from a jump table.","sig":null,"attributes":[{"value":"/ Get an entry from a jump table.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10080623,"byte_end":10080658,"line_start":211,"line_end":211,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10080663,"byte_end":10080666,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Load a serialized ``entry`` from a jump table ``JT`` at a given index","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10080671,"byte_end":10080744,"line_start":213,"line_end":213,"column_start":5,"column_end":78}},{"value":"/ ``addr`` with a specific ``Size``. The retrieved entry may need to be","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10080749,"byte_end":10080822,"line_start":214,"line_end":214,"column_start":5,"column_end":78}},{"value":"/ decoded after loading, depending upon the jump table type used.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10080827,"byte_end":10080894,"line_start":215,"line_end":215,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10080899,"byte_end":10080902,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Currently, the only type supported is entries which are relative to the","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10080907,"byte_end":10080982,"line_start":217,"line_end":217,"column_start":5,"column_end":80}},{"value":"/ base of the jump table.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10080987,"byte_end":10081014,"line_start":218,"line_end":218,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10081019,"byte_end":10081022,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10081027,"byte_end":10081038,"line_start":220,"line_end":220,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10081043,"byte_end":10081046,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ - x: index into jump table","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10081051,"byte_end":10081081,"line_start":222,"line_end":222,"column_start":5,"column_end":35}},{"value":"/ - addr: An integer address type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10081086,"byte_end":10081121,"line_start":223,"line_end":223,"column_start":5,"column_end":40}},{"value":"/ - Size: Size in bytes","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10081126,"byte_end":10081151,"line_start":224,"line_end":224,"column_start":5,"column_end":30}},{"value":"/ - JT: A jump table.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10081156,"byte_end":10081179,"line_start":225,"line_end":225,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10081184,"byte_end":10081187,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10081192,"byte_end":10081204,"line_start":227,"line_end":227,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10081209,"byte_end":10081212,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ - entry: entry of jump table","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10081217,"byte_end":10081249,"line_start":229,"line_end":229,"column_start":5,"column_end":37}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10081254,"byte_end":10081278,"line_start":230,"line_end":230,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5105},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10082239,"byte_end":10082254,"line_start":254,"line_end":254,"column_start":8,"column_end":23},"name":"jump_table_base","qualname":"::ir::builder::InstBuilder::jump_table_base","value":"fn (self, iAddr: crate::ir::Type, JT: ir::JumpTable) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Get the absolute base address of a jump table.","sig":null,"attributes":[{"value":"/ Get the absolute base address of a jump table.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10081658,"byte_end":10081708,"line_start":238,"line_end":238,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10081713,"byte_end":10081716,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ This is used for jump tables wherein the entries are stored relative to","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10081721,"byte_end":10081796,"line_start":240,"line_end":240,"column_start":5,"column_end":80}},{"value":"/ the base of jump table. In order to use these, generated code should first","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10081801,"byte_end":10081879,"line_start":241,"line_end":241,"column_start":5,"column_end":83}},{"value":"/ load an entry using ``jump_table_entry``, then use this instruction to add","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10081884,"byte_end":10081962,"line_start":242,"line_end":242,"column_start":5,"column_end":83}},{"value":"/ the relative base back to it.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10081967,"byte_end":10082000,"line_start":243,"line_end":243,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10082005,"byte_end":10082008,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10082013,"byte_end":10082024,"line_start":245,"line_end":245,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10082029,"byte_end":10082032,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ - iAddr (controlling type variable): An integer address type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10082037,"byte_end":10082101,"line_start":247,"line_end":247,"column_start":5,"column_end":69}},{"value":"/ - JT: A jump table.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10082106,"byte_end":10082129,"line_start":248,"line_end":248,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10082134,"byte_end":10082137,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10082142,"byte_end":10082154,"line_start":250,"line_end":250,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10082159,"byte_end":10082162,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ - addr: An integer address type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10082167,"byte_end":10082202,"line_start":252,"line_end":252,"column_start":5,"column_end":40}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10082207,"byte_end":10082231,"line_start":253,"line_end":253,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5106},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10082759,"byte_end":10082781,"line_start":269,"line_end":269,"column_start":8,"column_end":30},"name":"indirect_jump_table_br","qualname":"::ir::builder::InstBuilder::indirect_jump_table_br","value":"fn (self, addr: ir::Value, JT: ir::JumpTable) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Branch indirectly via a jump table entry.","sig":null,"attributes":[{"value":"/ Branch indirectly via a jump table entry.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10082439,"byte_end":10082484,"line_start":259,"line_end":259,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10082489,"byte_end":10082492,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ Unconditionally jump via a jump table entry that was previously loaded","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10082497,"byte_end":10082571,"line_start":261,"line_end":261,"column_start":5,"column_end":79}},{"value":"/ with the ``jump_table_entry`` instruction.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10082576,"byte_end":10082622,"line_start":262,"line_end":262,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10082627,"byte_end":10082630,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10082635,"byte_end":10082646,"line_start":264,"line_end":264,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10082651,"byte_end":10082654,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ - addr: An integer address type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10082659,"byte_end":10082694,"line_start":266,"line_end":266,"column_start":5,"column_end":40}},{"value":"/ - JT: A jump table.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10082699,"byte_end":10082722,"line_start":267,"line_end":267,"column_start":5,"column_end":28}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10082727,"byte_end":10082751,"line_start":268,"line_end":268,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5107},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10083066,"byte_end":10083075,"line_start":276,"line_end":276,"column_start":8,"column_end":17},"name":"debugtrap","qualname":"::ir::builder::InstBuilder::debugtrap","value":"fn (self) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Encodes an assembly debug trap.\n","sig":null,"attributes":[{"value":"/ Encodes an assembly debug trap.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10082994,"byte_end":10083029,"line_start":274,"line_end":274,"column_start":5,"column_end":40}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10083034,"byte_end":10083058,"line_start":275,"line_end":275,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5108},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10083306,"byte_end":10083310,"line_start":286,"line_end":286,"column_start":8,"column_end":12},"name":"trap","qualname":"::ir::builder::InstBuilder::trap","value":"fn <T1> (self, code: T1) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Terminate execution unconditionally.","sig":null,"attributes":[{"value":"/ Terminate execution unconditionally.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10083161,"byte_end":10083201,"line_start":280,"line_end":280,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10083206,"byte_end":10083209,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10083214,"byte_end":10083225,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10083230,"byte_end":10083233,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ - code: A trap reason code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10083238,"byte_end":10083269,"line_start":284,"line_end":284,"column_start":5,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10083274,"byte_end":10083298,"line_start":285,"line_end":285,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5110},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10083711,"byte_end":10083716,"line_start":300,"line_end":300,"column_start":8,"column_end":13},"name":"trapz","qualname":"::ir::builder::InstBuilder::trapz","value":"fn <T1> (self, c: ir::Value, code: T1) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Trap when zero.","sig":null,"attributes":[{"value":"/ Trap when zero.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10083460,"byte_end":10083479,"line_start":291,"line_end":291,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10083484,"byte_end":10083487,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ if ``c`` is non-zero, execution continues at the following instruction.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10083492,"byte_end":10083567,"line_start":293,"line_end":293,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10083572,"byte_end":10083575,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10083580,"byte_end":10083591,"line_start":295,"line_end":295,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10083596,"byte_end":10083599,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ - c: Controlling value to test","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10083604,"byte_end":10083638,"line_start":297,"line_end":297,"column_start":5,"column_end":39}},{"value":"/ - code: A trap reason code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10083643,"byte_end":10083674,"line_start":298,"line_end":298,"column_start":5,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10083679,"byte_end":10083703,"line_start":299,"line_end":299,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5112},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10084180,"byte_end":10084194,"line_start":314,"line_end":314,"column_start":8,"column_end":22},"name":"resumable_trap","qualname":"::ir::builder::InstBuilder::resumable_trap","value":"fn <T1> (self, code: T1) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" A resumable trap.","sig":null,"attributes":[{"value":"/ A resumable trap.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10083951,"byte_end":10083972,"line_start":306,"line_end":306,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10083977,"byte_end":10083980,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This instruction allows non-conditional traps to be used as non-terminal instructions.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10083985,"byte_end":10084075,"line_start":308,"line_end":308,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10084080,"byte_end":10084083,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10084088,"byte_end":10084099,"line_start":310,"line_end":310,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10084104,"byte_end":10084107,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ - code: A trap reason code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10084112,"byte_end":10084143,"line_start":312,"line_end":312,"column_start":5,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10084148,"byte_end":10084172,"line_start":313,"line_end":313,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5114},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10084604,"byte_end":10084610,"line_start":328,"line_end":328,"column_start":8,"column_end":14},"name":"trapnz","qualname":"::ir::builder::InstBuilder::trapnz","value":"fn <T1> (self, c: ir::Value, code: T1) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Trap when non-zero.","sig":null,"attributes":[{"value":"/ Trap when non-zero.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10084353,"byte_end":10084376,"line_start":319,"line_end":319,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10084381,"byte_end":10084384,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ if ``c`` is zero, execution continues at the following instruction.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10084389,"byte_end":10084460,"line_start":321,"line_end":321,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10084465,"byte_end":10084468,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10084473,"byte_end":10084484,"line_start":323,"line_end":323,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10084489,"byte_end":10084492,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ - c: Controlling value to test","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10084497,"byte_end":10084531,"line_start":325,"line_end":325,"column_start":5,"column_end":39}},{"value":"/ - code: A trap reason code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10084536,"byte_end":10084567,"line_start":326,"line_end":326,"column_start":5,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10084572,"byte_end":10084596,"line_start":327,"line_end":327,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5116},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10085203,"byte_end":10085209,"line_start":343,"line_end":343,"column_start":8,"column_end":14},"name":"trapif","qualname":"::ir::builder::InstBuilder::trapif","value":"fn <T1, T2> (self, Cond: T1, f: ir::Value, code: T2) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Trap when condition is true in integer CPU flags.","sig":null,"attributes":[{"value":"/ Trap when condition is true in integer CPU flags.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10084846,"byte_end":10084899,"line_start":334,"line_end":334,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10084904,"byte_end":10084907,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10084912,"byte_end":10084923,"line_start":336,"line_end":336,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10084928,"byte_end":10084931,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ - Cond: An integer comparison condition code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10084936,"byte_end":10084985,"line_start":338,"line_end":338,"column_start":5,"column_end":54}},{"value":"/ - f: CPU flags representing the result of an integer comparison. These flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10084990,"byte_end":10085070,"line_start":339,"line_end":339,"column_start":5,"column_end":85}},{"value":"/ can be tested with an :type:`intcc` condition code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10085075,"byte_end":10085130,"line_start":340,"line_end":340,"column_start":5,"column_end":60}},{"value":"/ - code: A trap reason code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10085135,"byte_end":10085166,"line_start":341,"line_end":341,"column_start":5,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10085171,"byte_end":10085195,"line_start":342,"line_end":342,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5119},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10085841,"byte_end":10085847,"line_start":358,"line_end":358,"column_start":8,"column_end":14},"name":"trapff","qualname":"::ir::builder::InstBuilder::trapff","value":"fn <T1, T2> (self, Cond: T1, f: ir::Value, code: T2) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Trap when condition is true in floating point CPU flags.","sig":null,"attributes":[{"value":"/ Trap when condition is true in floating point CPU flags.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10085465,"byte_end":10085525,"line_start":349,"line_end":349,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10085530,"byte_end":10085533,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10085538,"byte_end":10085549,"line_start":351,"line_end":351,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10085554,"byte_end":10085557,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ - Cond: A floating point comparison condition code","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10085562,"byte_end":10085616,"line_start":353,"line_end":353,"column_start":5,"column_end":59}},{"value":"/ - f: CPU flags representing the result of a floating point comparison. These","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10085621,"byte_end":10085701,"line_start":354,"line_end":354,"column_start":5,"column_end":85}},{"value":"/ flags can be tested with a :type:`floatcc` condition code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10085706,"byte_end":10085768,"line_start":355,"line_end":355,"column_start":5,"column_end":67}},{"value":"/ - code: A trap reason code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10085773,"byte_end":10085804,"line_start":356,"line_end":356,"column_start":5,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10085809,"byte_end":10085833,"line_start":357,"line_end":357,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5122},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10086438,"byte_end":10086445,"line_start":374,"line_end":374,"column_start":8,"column_end":15},"name":"return_","qualname":"::ir::builder::InstBuilder::return_","value":"fn (mut self, rvals: &[Value]) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Return from the function.","sig":null,"attributes":[{"value":"/ Return from the function.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10086107,"byte_end":10086136,"line_start":364,"line_end":364,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10086141,"byte_end":10086144,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Unconditionally transfer control to the calling function, passing the","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10086149,"byte_end":10086222,"line_start":366,"line_end":366,"column_start":5,"column_end":78}},{"value":"/ provided return values. The list of return values must match the","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10086227,"byte_end":10086295,"line_start":367,"line_end":367,"column_start":5,"column_end":73}},{"value":"/ function signature's return types.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10086300,"byte_end":10086338,"line_start":368,"line_end":368,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10086343,"byte_end":10086346,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10086351,"byte_end":10086362,"line_start":370,"line_end":370,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10086367,"byte_end":10086370,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ - rvals: return values","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10086375,"byte_end":10086401,"line_start":372,"line_end":372,"column_start":5,"column_end":31}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10086406,"byte_end":10086430,"line_start":373,"line_end":373,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5123},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10087088,"byte_end":10087106,"line_start":393,"line_end":393,"column_start":8,"column_end":26},"name":"fallthrough_return","qualname":"::ir::builder::InstBuilder::fallthrough_return","value":"fn (mut self, rvals: &[Value]) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Return from the function by fallthrough.","sig":null,"attributes":[{"value":"/ Return from the function by fallthrough.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10086750,"byte_end":10086794,"line_start":383,"line_end":383,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10086799,"byte_end":10086802,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ This is a specialized instruction for use where one wants to append","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10086807,"byte_end":10086878,"line_start":385,"line_end":385,"column_start":5,"column_end":76}},{"value":"/ a custom epilogue, which will then perform the real return. This","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10086883,"byte_end":10086951,"line_start":386,"line_end":386,"column_start":5,"column_end":73}},{"value":"/ instruction has no encoding.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10086956,"byte_end":10086988,"line_start":387,"line_end":387,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10086993,"byte_end":10086996,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10087001,"byte_end":10087012,"line_start":389,"line_end":389,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10087017,"byte_end":10087020,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ - rvals: return values","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10087025,"byte_end":10087051,"line_start":391,"line_end":391,"column_start":5,"column_end":31}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10087056,"byte_end":10087080,"line_start":392,"line_end":392,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5124},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10087803,"byte_end":10087807,"line_start":416,"line_end":416,"column_start":8,"column_end":12},"name":"call","qualname":"::ir::builder::InstBuilder::call","value":"fn (mut self, FN: ir::FuncRef, args: &[Value]) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Direct function call.","sig":null,"attributes":[{"value":"/ Direct function call.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10087422,"byte_end":10087447,"line_start":402,"line_end":402,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10087452,"byte_end":10087455,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ Call a function which has been declared in the preamble. The argument","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10087460,"byte_end":10087533,"line_start":404,"line_end":404,"column_start":5,"column_end":78}},{"value":"/ types must match the function's signature.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10087538,"byte_end":10087584,"line_start":405,"line_end":405,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10087589,"byte_end":10087592,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10087597,"byte_end":10087608,"line_start":407,"line_end":407,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10087613,"byte_end":10087616,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ - FN: function to call, declared by `function`","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10087621,"byte_end":10087671,"line_start":409,"line_end":409,"column_start":5,"column_end":55}},{"value":"/ - args: call arguments","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10087676,"byte_end":10087702,"line_start":410,"line_end":410,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10087707,"byte_end":10087710,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10087715,"byte_end":10087727,"line_start":412,"line_end":412,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10087732,"byte_end":10087735,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ - rvals: return values","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10087740,"byte_end":10087766,"line_start":414,"line_end":414,"column_start":5,"column_end":31}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10087771,"byte_end":10087795,"line_start":415,"line_end":415,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5125},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10088799,"byte_end":10088812,"line_start":445,"line_end":445,"column_start":8,"column_end":21},"name":"call_indirect","qualname":"::ir::builder::InstBuilder::call_indirect","value":"fn (mut self, SIG: ir::SigRef, callee: ir::Value, args: &[Value]) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Indirect function call.","sig":null,"attributes":[{"value":"/ Indirect function call.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10088125,"byte_end":10088152,"line_start":425,"line_end":425,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10088157,"byte_end":10088160,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ Call the function pointed to by `callee` with the given arguments. The","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10088165,"byte_end":10088239,"line_start":427,"line_end":427,"column_start":5,"column_end":79}},{"value":"/ called function must match the specified signature.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10088244,"byte_end":10088299,"line_start":428,"line_end":428,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10088304,"byte_end":10088307,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Note that this is different from WebAssembly's ``call_indirect``; the","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10088312,"byte_end":10088385,"line_start":430,"line_end":430,"column_start":5,"column_end":78}},{"value":"/ callee is a native address, rather than a table index. For WebAssembly,","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10088390,"byte_end":10088465,"line_start":431,"line_end":431,"column_start":5,"column_end":80}},{"value":"/ `table_addr` and `load` are used to obtain a native address","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10088470,"byte_end":10088533,"line_start":432,"line_end":432,"column_start":5,"column_end":68}},{"value":"/ from a table.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10088538,"byte_end":10088555,"line_start":433,"line_end":433,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10088560,"byte_end":10088563,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10088568,"byte_end":10088579,"line_start":435,"line_end":435,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10088584,"byte_end":10088587,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ - SIG: function signature","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10088592,"byte_end":10088621,"line_start":437,"line_end":437,"column_start":5,"column_end":34}},{"value":"/ - callee: address of function to call","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10088626,"byte_end":10088667,"line_start":438,"line_end":438,"column_start":5,"column_end":46}},{"value":"/ - args: call arguments","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10088672,"byte_end":10088698,"line_start":439,"line_end":439,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10088703,"byte_end":10088706,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10088711,"byte_end":10088723,"line_start":441,"line_end":441,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10088728,"byte_end":10088731,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ - rvals: return values","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10088736,"byte_end":10088762,"line_start":443,"line_end":443,"column_start":5,"column_end":31}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10088767,"byte_end":10088791,"line_start":444,"line_end":444,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5126},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10089883,"byte_end":10089892,"line_start":473,"line_end":473,"column_start":8,"column_end":17},"name":"func_addr","qualname":"::ir::builder::InstBuilder::func_addr","value":"fn (self, iAddr: crate::ir::Type, FN: ir::FuncRef) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Get the address of a function.","sig":null,"attributes":[{"value":"/ Get the address of a function.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10089272,"byte_end":10089306,"line_start":456,"line_end":456,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10089311,"byte_end":10089314,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ Compute the absolute address of a function declared in the preamble.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10089319,"byte_end":10089391,"line_start":458,"line_end":458,"column_start":5,"column_end":77}},{"value":"/ The returned address can be used as a ``callee`` argument to","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10089396,"byte_end":10089460,"line_start":459,"line_end":459,"column_start":5,"column_end":69}},{"value":"/ `call_indirect`. This is also a method for calling functions that","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10089465,"byte_end":10089534,"line_start":460,"line_end":460,"column_start":5,"column_end":74}},{"value":"/ are too far away to be addressable by a direct `call`","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10089539,"byte_end":10089596,"line_start":461,"line_end":461,"column_start":5,"column_end":62}},{"value":"/ instruction.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10089601,"byte_end":10089617,"line_start":462,"line_end":462,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10089622,"byte_end":10089625,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10089630,"byte_end":10089641,"line_start":464,"line_end":464,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10089646,"byte_end":10089649,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ - iAddr (controlling type variable): An integer address type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10089654,"byte_end":10089718,"line_start":466,"line_end":466,"column_start":5,"column_end":69}},{"value":"/ - FN: function to call, declared by `function`","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10089723,"byte_end":10089773,"line_start":467,"line_end":467,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10089778,"byte_end":10089781,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10089786,"byte_end":10089798,"line_start":469,"line_end":469,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10089803,"byte_end":10089806,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ - addr: An integer address type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10089811,"byte_end":10089846,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10089851,"byte_end":10089875,"line_start":472,"line_end":472,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5127},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10090327,"byte_end":10090331,"line_start":489,"line_end":489,"column_start":8,"column_end":12},"name":"imin","qualname":"::ir::builder::InstBuilder::imin","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Signed integer minimum.","sig":null,"attributes":[{"value":"/ Signed integer minimum.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10090063,"byte_end":10090090,"line_start":478,"line_end":478,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10090095,"byte_end":10090098,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10090103,"byte_end":10090114,"line_start":480,"line_end":480,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10090119,"byte_end":10090122,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10090127,"byte_end":10090167,"line_start":482,"line_end":482,"column_start":5,"column_end":45}},{"value":"/ - y: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10090172,"byte_end":10090212,"line_start":483,"line_end":483,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10090217,"byte_end":10090220,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10090225,"byte_end":10090237,"line_start":485,"line_end":485,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10090242,"byte_end":10090245,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10090250,"byte_end":10090290,"line_start":487,"line_end":487,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10090295,"byte_end":10090319,"line_start":488,"line_end":488,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5128},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10090823,"byte_end":10090827,"line_start":506,"line_end":506,"column_start":8,"column_end":12},"name":"umin","qualname":"::ir::builder::InstBuilder::umin","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Unsigned integer minimum.","sig":null,"attributes":[{"value":"/ Unsigned integer minimum.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10090557,"byte_end":10090586,"line_start":495,"line_end":495,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10090591,"byte_end":10090594,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10090599,"byte_end":10090610,"line_start":497,"line_end":497,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10090615,"byte_end":10090618,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10090623,"byte_end":10090663,"line_start":499,"line_end":499,"column_start":5,"column_end":45}},{"value":"/ - y: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10090668,"byte_end":10090708,"line_start":500,"line_end":500,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10090713,"byte_end":10090716,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10090721,"byte_end":10090733,"line_start":502,"line_end":502,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10090738,"byte_end":10090741,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10090746,"byte_end":10090786,"line_start":504,"line_end":504,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10090791,"byte_end":10090815,"line_start":505,"line_end":505,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5129},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10091317,"byte_end":10091321,"line_start":523,"line_end":523,"column_start":8,"column_end":12},"name":"imax","qualname":"::ir::builder::InstBuilder::imax","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Signed integer maximum.","sig":null,"attributes":[{"value":"/ Signed integer maximum.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10091053,"byte_end":10091080,"line_start":512,"line_end":512,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10091085,"byte_end":10091088,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10091093,"byte_end":10091104,"line_start":514,"line_end":514,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10091109,"byte_end":10091112,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10091117,"byte_end":10091157,"line_start":516,"line_end":516,"column_start":5,"column_end":45}},{"value":"/ - y: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10091162,"byte_end":10091202,"line_start":517,"line_end":517,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10091207,"byte_end":10091210,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10091215,"byte_end":10091227,"line_start":519,"line_end":519,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10091232,"byte_end":10091235,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10091240,"byte_end":10091280,"line_start":521,"line_end":521,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10091285,"byte_end":10091309,"line_start":522,"line_end":522,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5130},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10091813,"byte_end":10091817,"line_start":540,"line_end":540,"column_start":8,"column_end":12},"name":"umax","qualname":"::ir::builder::InstBuilder::umax","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Unsigned integer maximum.","sig":null,"attributes":[{"value":"/ Unsigned integer maximum.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10091547,"byte_end":10091576,"line_start":529,"line_end":529,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10091581,"byte_end":10091584,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10091589,"byte_end":10091600,"line_start":531,"line_end":531,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10091605,"byte_end":10091608,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10091613,"byte_end":10091653,"line_start":533,"line_end":533,"column_start":5,"column_end":45}},{"value":"/ - y: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10091658,"byte_end":10091698,"line_start":534,"line_end":534,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10091703,"byte_end":10091706,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10091711,"byte_end":10091723,"line_start":536,"line_end":536,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10091728,"byte_end":10091731,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10091736,"byte_end":10091776,"line_start":538,"line_end":538,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10091781,"byte_end":10091805,"line_start":539,"line_end":539,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5131},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10092360,"byte_end":10092369,"line_start":557,"line_end":557,"column_start":8,"column_end":17},"name":"avg_round","qualname":"::ir::builder::InstBuilder::avg_round","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Unsigned average with rounding: `a := (x + y + 1) // 2`","sig":null,"attributes":[{"value":"/ Unsigned average with rounding: `a := (x + y + 1) // 2`","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10092043,"byte_end":10092102,"line_start":546,"line_end":546,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10092107,"byte_end":10092110,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10092115,"byte_end":10092126,"line_start":548,"line_end":548,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10092131,"byte_end":10092134,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ - x: A SIMD vector type containing integers","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10092139,"byte_end":10092186,"line_start":550,"line_end":550,"column_start":5,"column_end":52}},{"value":"/ - y: A SIMD vector type containing integers","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10092191,"byte_end":10092238,"line_start":551,"line_end":551,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10092243,"byte_end":10092246,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10092251,"byte_end":10092263,"line_start":553,"line_end":553,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10092268,"byte_end":10092271,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ - a: A SIMD vector type containing integers","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10092276,"byte_end":10092323,"line_start":555,"line_end":555,"column_start":5,"column_end":52}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10092328,"byte_end":10092352,"line_start":556,"line_end":556,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5132},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10093097,"byte_end":10093101,"line_start":579,"line_end":579,"column_start":8,"column_end":12},"name":"load","qualname":"::ir::builder::InstBuilder::load","value":"fn <T1, T2> (self, Mem: crate::ir::Type, MemFlags: T1, p: ir::Value, Offset: T2) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Load from memory at ``p + Offset``.","sig":null,"attributes":[{"value":"/ Load from memory at ``p + Offset``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10092599,"byte_end":10092638,"line_start":563,"line_end":563,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10092643,"byte_end":10092646,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ This is a polymorphic instruction that can load any value type which","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10092651,"byte_end":10092723,"line_start":565,"line_end":565,"column_start":5,"column_end":77}},{"value":"/ has a memory representation.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10092728,"byte_end":10092760,"line_start":566,"line_end":566,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10092765,"byte_end":10092768,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10092773,"byte_end":10092784,"line_start":568,"line_end":568,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10092789,"byte_end":10092792,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ - Mem (controlling type variable): Any type that can be stored in memory","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10092797,"byte_end":10092873,"line_start":570,"line_end":570,"column_start":5,"column_end":81}},{"value":"/ - MemFlags: Memory operation flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10092878,"byte_end":10092916,"line_start":571,"line_end":571,"column_start":5,"column_end":43}},{"value":"/ - p: An integer address type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10092921,"byte_end":10092953,"line_start":572,"line_end":572,"column_start":5,"column_end":37}},{"value":"/ - Offset: Byte offset from base address","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10092958,"byte_end":10093001,"line_start":573,"line_end":573,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10093006,"byte_end":10093009,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10093014,"byte_end":10093026,"line_start":575,"line_end":575,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10093031,"byte_end":10093034,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ - a: Value loaded","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10093039,"byte_end":10093060,"line_start":577,"line_end":577,"column_start":5,"column_end":26}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10093065,"byte_end":10093089,"line_start":578,"line_end":578,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5135},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10093939,"byte_end":10093951,"line_start":602,"line_end":602,"column_start":8,"column_end":20},"name":"load_complex","qualname":"::ir::builder::InstBuilder::load_complex","value":"fn <T1, T2> (mut self, Mem: crate::ir::Type, MemFlags: T1, args: &[Value], Offset: T2) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Load from memory at ``sum(args) + Offset``.","sig":null,"attributes":[{"value":"/ Load from memory at ``sum(args) + Offset``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10093436,"byte_end":10093483,"line_start":586,"line_end":586,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10093488,"byte_end":10093491,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ This is a polymorphic instruction that can load any value type which","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10093496,"byte_end":10093568,"line_start":588,"line_end":588,"column_start":5,"column_end":77}},{"value":"/ has a memory representation.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10093573,"byte_end":10093605,"line_start":589,"line_end":589,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10093610,"byte_end":10093613,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10093618,"byte_end":10093629,"line_start":591,"line_end":591,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10093634,"byte_end":10093637,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ - Mem (controlling type variable): Any type that can be stored in memory","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10093642,"byte_end":10093718,"line_start":593,"line_end":593,"column_start":5,"column_end":81}},{"value":"/ - MemFlags: Memory operation flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10093723,"byte_end":10093761,"line_start":594,"line_end":594,"column_start":5,"column_end":43}},{"value":"/ - args: Address arguments","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10093766,"byte_end":10093795,"line_start":595,"line_end":595,"column_start":5,"column_end":34}},{"value":"/ - Offset: Byte offset from base address","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10093800,"byte_end":10093843,"line_start":596,"line_end":596,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10093848,"byte_end":10093851,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10093856,"byte_end":10093868,"line_start":598,"line_end":598,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10093873,"byte_end":10093876,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ - a: Value loaded","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10093881,"byte_end":10093902,"line_start":600,"line_end":600,"column_start":5,"column_end":26}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10093907,"byte_end":10093931,"line_start":601,"line_end":601,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5138},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10094893,"byte_end":10094898,"line_start":626,"line_end":626,"column_start":8,"column_end":13},"name":"store","qualname":"::ir::builder::InstBuilder::store","value":"fn <T1, T2> (self, MemFlags: T1, x: ir::Value, p: ir::Value, Offset: T2) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Store ``x`` to memory at ``p + Offset``.","sig":null,"attributes":[{"value":"/ Store ``x`` to memory at ``p + Offset``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10094502,"byte_end":10094546,"line_start":614,"line_end":614,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10094551,"byte_end":10094554,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ This is a polymorphic instruction that can store any value type with a","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10094559,"byte_end":10094633,"line_start":616,"line_end":616,"column_start":5,"column_end":79}},{"value":"/ memory representation.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10094638,"byte_end":10094664,"line_start":617,"line_end":617,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10094669,"byte_end":10094672,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10094677,"byte_end":10094688,"line_start":619,"line_end":619,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10094693,"byte_end":10094696,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ - MemFlags: Memory operation flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10094701,"byte_end":10094739,"line_start":621,"line_end":621,"column_start":5,"column_end":43}},{"value":"/ - x: Value to be stored","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10094744,"byte_end":10094771,"line_start":622,"line_end":622,"column_start":5,"column_end":32}},{"value":"/ - p: An integer address type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10094776,"byte_end":10094808,"line_start":623,"line_end":623,"column_start":5,"column_end":37}},{"value":"/ - Offset: Byte offset from base address","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10094813,"byte_end":10094856,"line_start":624,"line_end":624,"column_start":5,"column_end":48}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10094861,"byte_end":10094885,"line_start":625,"line_end":625,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5141},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10095651,"byte_end":10095664,"line_start":645,"line_end":645,"column_start":8,"column_end":21},"name":"store_complex","qualname":"::ir::builder::InstBuilder::store_complex","value":"fn <T1, T2> (mut self, MemFlags: T1, x: ir::Value, args: &[Value], Offset: T2) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Store ``x`` to memory at ``sum(args) + Offset``.","sig":null,"attributes":[{"value":"/ Store ``x`` to memory at ``sum(args) + Offset``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10095255,"byte_end":10095307,"line_start":633,"line_end":633,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10095312,"byte_end":10095315,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ This is a polymorphic instruction that can store any value type with a","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10095320,"byte_end":10095394,"line_start":635,"line_end":635,"column_start":5,"column_end":79}},{"value":"/ memory representation.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10095399,"byte_end":10095425,"line_start":636,"line_end":636,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10095430,"byte_end":10095433,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10095438,"byte_end":10095449,"line_start":638,"line_end":638,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10095454,"byte_end":10095457,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ - MemFlags: Memory operation flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10095462,"byte_end":10095500,"line_start":640,"line_end":640,"column_start":5,"column_end":43}},{"value":"/ - x: Value to be stored","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10095505,"byte_end":10095532,"line_start":641,"line_end":641,"column_start":5,"column_end":32}},{"value":"/ - args: Address arguments","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10095537,"byte_end":10095566,"line_start":642,"line_end":642,"column_start":5,"column_end":34}},{"value":"/ - Offset: Byte offset from base address","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10095571,"byte_end":10095614,"line_start":643,"line_end":643,"column_start":5,"column_end":48}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10095619,"byte_end":10095643,"line_start":644,"line_end":644,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5144},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10096768,"byte_end":10096774,"line_start":673,"line_end":673,"column_start":8,"column_end":14},"name":"uload8","qualname":"::ir::builder::InstBuilder::uload8","value":"fn <T1, T2> (self, iExt8: crate::ir::Type, MemFlags: T1, p: ir::Value, Offset: T2) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Load 8 bits from memory at ``p + Offset`` and zero-extend.","sig":null,"attributes":[{"value":"/ Load 8 bits from memory at ``p + Offset`` and zero-extend.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10096267,"byte_end":10096329,"line_start":658,"line_end":658,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10096334,"byte_end":10096337,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to ``load.i8`` followed by ``uextend``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10096342,"byte_end":10096404,"line_start":660,"line_end":660,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10096409,"byte_end":10096412,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10096417,"byte_end":10096428,"line_start":662,"line_end":662,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10096433,"byte_end":10096436,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ - iExt8 (controlling type variable): An integer type with more than 8 bits","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10096441,"byte_end":10096519,"line_start":664,"line_end":664,"column_start":5,"column_end":83}},{"value":"/ - MemFlags: Memory operation flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10096524,"byte_end":10096562,"line_start":665,"line_end":665,"column_start":5,"column_end":43}},{"value":"/ - p: An integer address type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10096567,"byte_end":10096599,"line_start":666,"line_end":666,"column_start":5,"column_end":37}},{"value":"/ - Offset: Byte offset from base address","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10096604,"byte_end":10096647,"line_start":667,"line_end":667,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10096652,"byte_end":10096655,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10096660,"byte_end":10096672,"line_start":669,"line_end":669,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10096677,"byte_end":10096680,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ - a: An integer type with more than 8 bits","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10096685,"byte_end":10096731,"line_start":671,"line_end":671,"column_start":5,"column_end":51}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10096736,"byte_end":10096760,"line_start":672,"line_end":672,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5147},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10097621,"byte_end":10097635,"line_start":695,"line_end":695,"column_start":8,"column_end":22},"name":"uload8_complex","qualname":"::ir::builder::InstBuilder::uload8_complex","value":"fn <T1, T2> (mut self, iExt8: crate::ir::Type, MemFlags: T1, args: &[Value], Offset: T2) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Load 8 bits from memory at ``sum(args) + Offset`` and zero-extend.","sig":null,"attributes":[{"value":"/ Load 8 bits from memory at ``sum(args) + Offset`` and zero-extend.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10097115,"byte_end":10097185,"line_start":680,"line_end":680,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10097190,"byte_end":10097193,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to ``load.i8`` followed by ``uextend``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10097198,"byte_end":10097260,"line_start":682,"line_end":682,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10097265,"byte_end":10097268,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10097273,"byte_end":10097284,"line_start":684,"line_end":684,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10097289,"byte_end":10097292,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ - iExt8 (controlling type variable): An integer type with more than 8 bits","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10097297,"byte_end":10097375,"line_start":686,"line_end":686,"column_start":5,"column_end":83}},{"value":"/ - MemFlags: Memory operation flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10097380,"byte_end":10097418,"line_start":687,"line_end":687,"column_start":5,"column_end":43}},{"value":"/ - args: Address arguments","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10097423,"byte_end":10097452,"line_start":688,"line_end":688,"column_start":5,"column_end":34}},{"value":"/ - Offset: Byte offset from base address","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10097457,"byte_end":10097500,"line_start":689,"line_end":689,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10097505,"byte_end":10097508,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10097513,"byte_end":10097525,"line_start":691,"line_end":691,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10097530,"byte_end":10097533,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ - a: An integer type with more than 8 bits","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10097538,"byte_end":10097584,"line_start":693,"line_end":693,"column_start":5,"column_end":51}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10097589,"byte_end":10097613,"line_start":694,"line_end":694,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5150},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10098693,"byte_end":10098699,"line_start":722,"line_end":722,"column_start":8,"column_end":14},"name":"sload8","qualname":"::ir::builder::InstBuilder::sload8","value":"fn <T1, T2> (self, iExt8: crate::ir::Type, MemFlags: T1, p: ir::Value, Offset: T2) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Load 8 bits from memory at ``p + Offset`` and sign-extend.","sig":null,"attributes":[{"value":"/ Load 8 bits from memory at ``p + Offset`` and sign-extend.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10098192,"byte_end":10098254,"line_start":707,"line_end":707,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10098259,"byte_end":10098262,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to ``load.i8`` followed by ``sextend``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10098267,"byte_end":10098329,"line_start":709,"line_end":709,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10098334,"byte_end":10098337,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10098342,"byte_end":10098353,"line_start":711,"line_end":711,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10098358,"byte_end":10098361,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ - iExt8 (controlling type variable): An integer type with more than 8 bits","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10098366,"byte_end":10098444,"line_start":713,"line_end":713,"column_start":5,"column_end":83}},{"value":"/ - MemFlags: Memory operation flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10098449,"byte_end":10098487,"line_start":714,"line_end":714,"column_start":5,"column_end":43}},{"value":"/ - p: An integer address type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10098492,"byte_end":10098524,"line_start":715,"line_end":715,"column_start":5,"column_end":37}},{"value":"/ - Offset: Byte offset from base address","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10098529,"byte_end":10098572,"line_start":716,"line_end":716,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10098577,"byte_end":10098580,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10098585,"byte_end":10098597,"line_start":718,"line_end":718,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10098602,"byte_end":10098605,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ - a: An integer type with more than 8 bits","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10098610,"byte_end":10098656,"line_start":720,"line_end":720,"column_start":5,"column_end":51}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10098661,"byte_end":10098685,"line_start":721,"line_end":721,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5153},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10099546,"byte_end":10099560,"line_start":744,"line_end":744,"column_start":8,"column_end":22},"name":"sload8_complex","qualname":"::ir::builder::InstBuilder::sload8_complex","value":"fn <T1, T2> (mut self, iExt8: crate::ir::Type, MemFlags: T1, args: &[Value], Offset: T2) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Load 8 bits from memory at ``sum(args) + Offset`` and sign-extend.","sig":null,"attributes":[{"value":"/ Load 8 bits from memory at ``sum(args) + Offset`` and sign-extend.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10099040,"byte_end":10099110,"line_start":729,"line_end":729,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10099115,"byte_end":10099118,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to ``load.i8`` followed by ``sextend``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10099123,"byte_end":10099185,"line_start":731,"line_end":731,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10099190,"byte_end":10099193,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10099198,"byte_end":10099209,"line_start":733,"line_end":733,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10099214,"byte_end":10099217,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ - iExt8 (controlling type variable): An integer type with more than 8 bits","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10099222,"byte_end":10099300,"line_start":735,"line_end":735,"column_start":5,"column_end":83}},{"value":"/ - MemFlags: Memory operation flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10099305,"byte_end":10099343,"line_start":736,"line_end":736,"column_start":5,"column_end":43}},{"value":"/ - args: Address arguments","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10099348,"byte_end":10099377,"line_start":737,"line_end":737,"column_start":5,"column_end":34}},{"value":"/ - Offset: Byte offset from base address","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10099382,"byte_end":10099425,"line_start":738,"line_end":738,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10099430,"byte_end":10099433,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10099438,"byte_end":10099450,"line_start":740,"line_end":740,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10099455,"byte_end":10099458,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ - a: An integer type with more than 8 bits","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10099463,"byte_end":10099509,"line_start":742,"line_end":742,"column_start":5,"column_end":51}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10099514,"byte_end":10099538,"line_start":743,"line_end":743,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5156},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10100506,"byte_end":10100513,"line_start":767,"line_end":767,"column_start":8,"column_end":15},"name":"istore8","qualname":"::ir::builder::InstBuilder::istore8","value":"fn <T1, T2> (self, MemFlags: T1, x: ir::Value, p: ir::Value, Offset: T2) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Store the low 8 bits of ``x`` to memory at ``p + Offset``.","sig":null,"attributes":[{"value":"/ Store the low 8 bits of ``x`` to memory at ``p + Offset``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10100117,"byte_end":10100179,"line_start":756,"line_end":756,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10100184,"byte_end":10100187,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to ``ireduce.i8`` followed by ``store.i8``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10100192,"byte_end":10100258,"line_start":758,"line_end":758,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10100263,"byte_end":10100266,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10100271,"byte_end":10100282,"line_start":760,"line_end":760,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10100287,"byte_end":10100290,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ - MemFlags: Memory operation flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10100295,"byte_end":10100333,"line_start":762,"line_end":762,"column_start":5,"column_end":43}},{"value":"/ - x: An integer type with more than 8 bits","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10100338,"byte_end":10100384,"line_start":763,"line_end":763,"column_start":5,"column_end":51}},{"value":"/ - p: An integer address type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10100389,"byte_end":10100421,"line_start":764,"line_end":764,"column_start":5,"column_end":37}},{"value":"/ - Offset: Byte offset from base address","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10100426,"byte_end":10100469,"line_start":765,"line_end":765,"column_start":5,"column_end":48}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10100474,"byte_end":10100498,"line_start":766,"line_end":766,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5159},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10101266,"byte_end":10101281,"line_start":785,"line_end":785,"column_start":8,"column_end":23},"name":"istore8_complex","qualname":"::ir::builder::InstBuilder::istore8_complex","value":"fn <T1, T2> (mut self, MemFlags: T1, x: ir::Value, args: &[Value], Offset: T2) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Store the low 8 bits of ``x`` to memory at ``sum(args) + Offset``.","sig":null,"attributes":[{"value":"/ Store the low 8 bits of ``x`` to memory at ``sum(args) + Offset``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10100872,"byte_end":10100942,"line_start":774,"line_end":774,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10100947,"byte_end":10100950,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to ``ireduce.i8`` followed by ``store.i8``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10100955,"byte_end":10101021,"line_start":776,"line_end":776,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10101026,"byte_end":10101029,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10101034,"byte_end":10101045,"line_start":778,"line_end":778,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10101050,"byte_end":10101053,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ - MemFlags: Memory operation flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10101058,"byte_end":10101096,"line_start":780,"line_end":780,"column_start":5,"column_end":43}},{"value":"/ - x: An integer type with more than 8 bits","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10101101,"byte_end":10101147,"line_start":781,"line_end":781,"column_start":5,"column_end":51}},{"value":"/ - args: Address arguments","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10101152,"byte_end":10101181,"line_start":782,"line_end":782,"column_start":5,"column_end":34}},{"value":"/ - Offset: Byte offset from base address","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10101186,"byte_end":10101229,"line_start":783,"line_end":783,"column_start":5,"column_end":48}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10101234,"byte_end":10101258,"line_start":784,"line_end":784,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5162},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10102392,"byte_end":10102399,"line_start":813,"line_end":813,"column_start":8,"column_end":15},"name":"uload16","qualname":"::ir::builder::InstBuilder::uload16","value":"fn <T1, T2> (self, iExt16: crate::ir::Type, MemFlags: T1, p: ir::Value, Offset: T2) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Load 16 bits from memory at ``p + Offset`` and zero-extend.","sig":null,"attributes":[{"value":"/ Load 16 bits from memory at ``p + Offset`` and zero-extend.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10101886,"byte_end":10101949,"line_start":798,"line_end":798,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10101954,"byte_end":10101957,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to ``load.i16`` followed by ``uextend``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10101962,"byte_end":10102025,"line_start":800,"line_end":800,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10102030,"byte_end":10102033,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10102038,"byte_end":10102049,"line_start":802,"line_end":802,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10102054,"byte_end":10102057,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ - iExt16 (controlling type variable): An integer type with more than 16 bits","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10102062,"byte_end":10102142,"line_start":804,"line_end":804,"column_start":5,"column_end":85}},{"value":"/ - MemFlags: Memory operation flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10102147,"byte_end":10102185,"line_start":805,"line_end":805,"column_start":5,"column_end":43}},{"value":"/ - p: An integer address type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10102190,"byte_end":10102222,"line_start":806,"line_end":806,"column_start":5,"column_end":37}},{"value":"/ - Offset: Byte offset from base address","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10102227,"byte_end":10102270,"line_start":807,"line_end":807,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10102275,"byte_end":10102278,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10102283,"byte_end":10102295,"line_start":809,"line_end":809,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10102300,"byte_end":10102303,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ - a: An integer type with more than 16 bits","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10102308,"byte_end":10102355,"line_start":811,"line_end":811,"column_start":5,"column_end":52}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10102360,"byte_end":10102384,"line_start":812,"line_end":812,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5165},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10103254,"byte_end":10103269,"line_start":835,"line_end":835,"column_start":8,"column_end":23},"name":"uload16_complex","qualname":"::ir::builder::InstBuilder::uload16_complex","value":"fn <T1, T2> (mut self, iExt16: crate::ir::Type, MemFlags: T1, args: &[Value], Offset: T2) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Load 16 bits from memory at ``sum(args) + Offset`` and zero-extend.","sig":null,"attributes":[{"value":"/ Load 16 bits from memory at ``sum(args) + Offset`` and zero-extend.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10102743,"byte_end":10102814,"line_start":820,"line_end":820,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10102819,"byte_end":10102822,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to ``load.i16`` followed by ``uextend``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10102827,"byte_end":10102890,"line_start":822,"line_end":822,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10102895,"byte_end":10102898,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10102903,"byte_end":10102914,"line_start":824,"line_end":824,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10102919,"byte_end":10102922,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ - iExt16 (controlling type variable): An integer type with more than 16 bits","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10102927,"byte_end":10103007,"line_start":826,"line_end":826,"column_start":5,"column_end":85}},{"value":"/ - MemFlags: Memory operation flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10103012,"byte_end":10103050,"line_start":827,"line_end":827,"column_start":5,"column_end":43}},{"value":"/ - args: Address arguments","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10103055,"byte_end":10103084,"line_start":828,"line_end":828,"column_start":5,"column_end":34}},{"value":"/ - Offset: Byte offset from base address","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10103089,"byte_end":10103132,"line_start":829,"line_end":829,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10103137,"byte_end":10103140,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10103145,"byte_end":10103157,"line_start":831,"line_end":831,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10103162,"byte_end":10103165,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ - a: An integer type with more than 16 bits","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10103170,"byte_end":10103217,"line_start":833,"line_end":833,"column_start":5,"column_end":52}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10103222,"byte_end":10103246,"line_start":834,"line_end":834,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5168},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10104335,"byte_end":10104342,"line_start":862,"line_end":862,"column_start":8,"column_end":15},"name":"sload16","qualname":"::ir::builder::InstBuilder::sload16","value":"fn <T1, T2> (self, iExt16: crate::ir::Type, MemFlags: T1, p: ir::Value, Offset: T2) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Load 16 bits from memory at ``p + Offset`` and sign-extend.","sig":null,"attributes":[{"value":"/ Load 16 bits from memory at ``p + Offset`` and sign-extend.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10103829,"byte_end":10103892,"line_start":847,"line_end":847,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10103897,"byte_end":10103900,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to ``load.i16`` followed by ``sextend``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10103905,"byte_end":10103968,"line_start":849,"line_end":849,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10103973,"byte_end":10103976,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10103981,"byte_end":10103992,"line_start":851,"line_end":851,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10103997,"byte_end":10104000,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ - iExt16 (controlling type variable): An integer type with more than 16 bits","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10104005,"byte_end":10104085,"line_start":853,"line_end":853,"column_start":5,"column_end":85}},{"value":"/ - MemFlags: Memory operation flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10104090,"byte_end":10104128,"line_start":854,"line_end":854,"column_start":5,"column_end":43}},{"value":"/ - p: An integer address type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10104133,"byte_end":10104165,"line_start":855,"line_end":855,"column_start":5,"column_end":37}},{"value":"/ - Offset: Byte offset from base address","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10104170,"byte_end":10104213,"line_start":856,"line_end":856,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10104218,"byte_end":10104221,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10104226,"byte_end":10104238,"line_start":858,"line_end":858,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10104243,"byte_end":10104246,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ - a: An integer type with more than 16 bits","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10104251,"byte_end":10104298,"line_start":860,"line_end":860,"column_start":5,"column_end":52}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10104303,"byte_end":10104327,"line_start":861,"line_end":861,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5171},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10105197,"byte_end":10105212,"line_start":884,"line_end":884,"column_start":8,"column_end":23},"name":"sload16_complex","qualname":"::ir::builder::InstBuilder::sload16_complex","value":"fn <T1, T2> (mut self, iExt16: crate::ir::Type, MemFlags: T1, args: &[Value], Offset: T2) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Load 16 bits from memory at ``sum(args) + Offset`` and sign-extend.","sig":null,"attributes":[{"value":"/ Load 16 bits from memory at ``sum(args) + Offset`` and sign-extend.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10104686,"byte_end":10104757,"line_start":869,"line_end":869,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10104762,"byte_end":10104765,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to ``load.i16`` followed by ``sextend``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10104770,"byte_end":10104833,"line_start":871,"line_end":871,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10104838,"byte_end":10104841,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10104846,"byte_end":10104857,"line_start":873,"line_end":873,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10104862,"byte_end":10104865,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ - iExt16 (controlling type variable): An integer type with more than 16 bits","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10104870,"byte_end":10104950,"line_start":875,"line_end":875,"column_start":5,"column_end":85}},{"value":"/ - MemFlags: Memory operation flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10104955,"byte_end":10104993,"line_start":876,"line_end":876,"column_start":5,"column_end":43}},{"value":"/ - args: Address arguments","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10104998,"byte_end":10105027,"line_start":877,"line_end":877,"column_start":5,"column_end":34}},{"value":"/ - Offset: Byte offset from base address","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10105032,"byte_end":10105075,"line_start":878,"line_end":878,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10105080,"byte_end":10105083,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10105088,"byte_end":10105100,"line_start":880,"line_end":880,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10105105,"byte_end":10105108,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ - a: An integer type with more than 16 bits","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10105113,"byte_end":10105160,"line_start":882,"line_end":882,"column_start":5,"column_end":52}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10105165,"byte_end":10105189,"line_start":883,"line_end":883,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5174},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10106165,"byte_end":10106173,"line_start":907,"line_end":907,"column_start":8,"column_end":16},"name":"istore16","qualname":"::ir::builder::InstBuilder::istore16","value":"fn <T1, T2> (self, MemFlags: T1, x: ir::Value, p: ir::Value, Offset: T2) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Store the low 16 bits of ``x`` to memory at ``p + Offset``.","sig":null,"attributes":[{"value":"/ Store the low 16 bits of ``x`` to memory at ``p + Offset``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10105772,"byte_end":10105835,"line_start":896,"line_end":896,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10105840,"byte_end":10105843,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to ``ireduce.i16`` followed by ``store.i16``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10105848,"byte_end":10105916,"line_start":898,"line_end":898,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10105921,"byte_end":10105924,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10105929,"byte_end":10105940,"line_start":900,"line_end":900,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10105945,"byte_end":10105948,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ - MemFlags: Memory operation flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10105953,"byte_end":10105991,"line_start":902,"line_end":902,"column_start":5,"column_end":43}},{"value":"/ - x: An integer type with more than 16 bits","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10105996,"byte_end":10106043,"line_start":903,"line_end":903,"column_start":5,"column_end":52}},{"value":"/ - p: An integer address type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10106048,"byte_end":10106080,"line_start":904,"line_end":904,"column_start":5,"column_end":37}},{"value":"/ - Offset: Byte offset from base address","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10106085,"byte_end":10106128,"line_start":905,"line_end":905,"column_start":5,"column_end":48}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10106133,"byte_end":10106157,"line_start":906,"line_end":906,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5177},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10106931,"byte_end":10106947,"line_start":925,"line_end":925,"column_start":8,"column_end":24},"name":"istore16_complex","qualname":"::ir::builder::InstBuilder::istore16_complex","value":"fn <T1, T2> (mut self, MemFlags: T1, x: ir::Value, args: &[Value], Offset: T2) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Store the low 16 bits of ``x`` to memory at ``sum(args) + Offset``.","sig":null,"attributes":[{"value":"/ Store the low 16 bits of ``x`` to memory at ``sum(args) + Offset``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10106533,"byte_end":10106604,"line_start":914,"line_end":914,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10106609,"byte_end":10106612,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to ``ireduce.i16`` followed by ``store.i16``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10106617,"byte_end":10106685,"line_start":916,"line_end":916,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10106690,"byte_end":10106693,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10106698,"byte_end":10106709,"line_start":918,"line_end":918,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10106714,"byte_end":10106717,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ - MemFlags: Memory operation flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10106722,"byte_end":10106760,"line_start":920,"line_end":920,"column_start":5,"column_end":43}},{"value":"/ - x: An integer type with more than 16 bits","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10106765,"byte_end":10106812,"line_start":921,"line_end":921,"column_start":5,"column_end":52}},{"value":"/ - args: Address arguments","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10106817,"byte_end":10106846,"line_start":922,"line_end":922,"column_start":5,"column_end":34}},{"value":"/ - Offset: Byte offset from base address","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10106851,"byte_end":10106894,"line_start":923,"line_end":923,"column_start":5,"column_end":48}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10106899,"byte_end":10106923,"line_start":924,"line_end":924,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5180},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10107974,"byte_end":10107981,"line_start":952,"line_end":952,"column_start":8,"column_end":15},"name":"uload32","qualname":"::ir::builder::InstBuilder::uload32","value":"fn <T1, T2> (self, MemFlags: T1, p: ir::Value, Offset: T2) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Load 32 bits from memory at ``p + Offset`` and zero-extend.","sig":null,"attributes":[{"value":"/ Load 32 bits from memory at ``p + Offset`` and zero-extend.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10107553,"byte_end":10107616,"line_start":938,"line_end":938,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10107621,"byte_end":10107624,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to ``load.i32`` followed by ``uextend``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10107629,"byte_end":10107692,"line_start":940,"line_end":940,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10107697,"byte_end":10107700,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10107705,"byte_end":10107716,"line_start":942,"line_end":942,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10107721,"byte_end":10107724,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ - MemFlags: Memory operation flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10107729,"byte_end":10107767,"line_start":944,"line_end":944,"column_start":5,"column_end":43}},{"value":"/ - p: An integer address type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10107772,"byte_end":10107804,"line_start":945,"line_end":945,"column_start":5,"column_end":37}},{"value":"/ - Offset: Byte offset from base address","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10107809,"byte_end":10107852,"line_start":946,"line_end":946,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10107857,"byte_end":10107860,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10107865,"byte_end":10107877,"line_start":948,"line_end":948,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10107882,"byte_end":10107885,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ - a: An integer type with more than 32 bits","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10107890,"byte_end":10107937,"line_start":950,"line_end":950,"column_start":5,"column_end":52}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10107942,"byte_end":10107966,"line_start":951,"line_end":951,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5183},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10108797,"byte_end":10108812,"line_start":974,"line_end":974,"column_start":8,"column_end":23},"name":"uload32_complex","qualname":"::ir::builder::InstBuilder::uload32_complex","value":"fn <T1, T2> (mut self, MemFlags: T1, args: &[Value], Offset: T2) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Load 32 bits from memory at ``sum(args) + Offset`` and zero-extend.","sig":null,"attributes":[{"value":"/ Load 32 bits from memory at ``sum(args) + Offset`` and zero-extend.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10108371,"byte_end":10108442,"line_start":960,"line_end":960,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10108447,"byte_end":10108450,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to ``load.i32`` followed by ``uextend``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10108455,"byte_end":10108518,"line_start":962,"line_end":962,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10108523,"byte_end":10108526,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10108531,"byte_end":10108542,"line_start":964,"line_end":964,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10108547,"byte_end":10108550,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ - MemFlags: Memory operation flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10108555,"byte_end":10108593,"line_start":966,"line_end":966,"column_start":5,"column_end":43}},{"value":"/ - args: Address arguments","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10108598,"byte_end":10108627,"line_start":967,"line_end":967,"column_start":5,"column_end":34}},{"value":"/ - Offset: Byte offset from base address","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10108632,"byte_end":10108675,"line_start":968,"line_end":968,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10108680,"byte_end":10108683,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10108688,"byte_end":10108700,"line_start":970,"line_end":970,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10108705,"byte_end":10108708,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ - a: An integer type with more than 32 bits","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10108713,"byte_end":10108760,"line_start":972,"line_end":972,"column_start":5,"column_end":52}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10108765,"byte_end":10108789,"line_start":973,"line_end":973,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5186},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10109776,"byte_end":10109783,"line_start":1000,"line_end":1000,"column_start":8,"column_end":15},"name":"sload32","qualname":"::ir::builder::InstBuilder::sload32","value":"fn <T1, T2> (self, MemFlags: T1, p: ir::Value, Offset: T2) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Load 32 bits from memory at ``p + Offset`` and sign-extend.","sig":null,"attributes":[{"value":"/ Load 32 bits from memory at ``p + Offset`` and sign-extend.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10109355,"byte_end":10109418,"line_start":986,"line_end":986,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10109423,"byte_end":10109426,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to ``load.i32`` followed by ``sextend``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10109431,"byte_end":10109494,"line_start":988,"line_end":988,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10109499,"byte_end":10109502,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10109507,"byte_end":10109518,"line_start":990,"line_end":990,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10109523,"byte_end":10109526,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ - MemFlags: Memory operation flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10109531,"byte_end":10109569,"line_start":992,"line_end":992,"column_start":5,"column_end":43}},{"value":"/ - p: An integer address type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10109574,"byte_end":10109606,"line_start":993,"line_end":993,"column_start":5,"column_end":37}},{"value":"/ - Offset: Byte offset from base address","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10109611,"byte_end":10109654,"line_start":994,"line_end":994,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10109659,"byte_end":10109662,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10109667,"byte_end":10109679,"line_start":996,"line_end":996,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10109684,"byte_end":10109687,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ - a: An integer type with more than 32 bits","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10109692,"byte_end":10109739,"line_start":998,"line_end":998,"column_start":5,"column_end":52}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10109744,"byte_end":10109768,"line_start":999,"line_end":999,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5189},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10110599,"byte_end":10110614,"line_start":1022,"line_end":1022,"column_start":8,"column_end":23},"name":"sload32_complex","qualname":"::ir::builder::InstBuilder::sload32_complex","value":"fn <T1, T2> (mut self, MemFlags: T1, args: &[Value], Offset: T2) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Load 32 bits from memory at ``sum(args) + Offset`` and sign-extend.","sig":null,"attributes":[{"value":"/ Load 32 bits from memory at ``sum(args) + Offset`` and sign-extend.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10110173,"byte_end":10110244,"line_start":1008,"line_end":1008,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10110249,"byte_end":10110252,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to ``load.i32`` followed by ``sextend``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10110257,"byte_end":10110320,"line_start":1010,"line_end":1010,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10110325,"byte_end":10110328,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10110333,"byte_end":10110344,"line_start":1012,"line_end":1012,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10110349,"byte_end":10110352,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ - MemFlags: Memory operation flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10110357,"byte_end":10110395,"line_start":1014,"line_end":1014,"column_start":5,"column_end":43}},{"value":"/ - args: Address arguments","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10110400,"byte_end":10110429,"line_start":1015,"line_end":1015,"column_start":5,"column_end":34}},{"value":"/ - Offset: Byte offset from base address","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10110434,"byte_end":10110477,"line_start":1016,"line_end":1016,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10110482,"byte_end":10110485,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10110490,"byte_end":10110502,"line_start":1018,"line_end":1018,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10110507,"byte_end":10110510,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ - a: An integer type with more than 32 bits","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10110515,"byte_end":10110562,"line_start":1020,"line_end":1020,"column_start":5,"column_end":52}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10110567,"byte_end":10110591,"line_start":1021,"line_end":1021,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5192},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10111550,"byte_end":10111558,"line_start":1045,"line_end":1045,"column_start":8,"column_end":16},"name":"istore32","qualname":"::ir::builder::InstBuilder::istore32","value":"fn <T1, T2> (self, MemFlags: T1, x: ir::Value, p: ir::Value, Offset: T2) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Store the low 32 bits of ``x`` to memory at ``p + Offset``.","sig":null,"attributes":[{"value":"/ Store the low 32 bits of ``x`` to memory at ``p + Offset``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10111157,"byte_end":10111220,"line_start":1034,"line_end":1034,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10111225,"byte_end":10111228,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to ``ireduce.i32`` followed by ``store.i32``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10111233,"byte_end":10111301,"line_start":1036,"line_end":1036,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10111306,"byte_end":10111309,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10111314,"byte_end":10111325,"line_start":1038,"line_end":1038,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10111330,"byte_end":10111333,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ - MemFlags: Memory operation flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10111338,"byte_end":10111376,"line_start":1040,"line_end":1040,"column_start":5,"column_end":43}},{"value":"/ - x: An integer type with more than 32 bits","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10111381,"byte_end":10111428,"line_start":1041,"line_end":1041,"column_start":5,"column_end":52}},{"value":"/ - p: An integer address type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10111433,"byte_end":10111465,"line_start":1042,"line_end":1042,"column_start":5,"column_end":37}},{"value":"/ - Offset: Byte offset from base address","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10111470,"byte_end":10111513,"line_start":1043,"line_end":1043,"column_start":5,"column_end":48}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10111518,"byte_end":10111542,"line_start":1044,"line_end":1044,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5195},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10112316,"byte_end":10112332,"line_start":1063,"line_end":1063,"column_start":8,"column_end":24},"name":"istore32_complex","qualname":"::ir::builder::InstBuilder::istore32_complex","value":"fn <T1, T2> (mut self, MemFlags: T1, x: ir::Value, args: &[Value], Offset: T2) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Store the low 32 bits of ``x`` to memory at ``sum(args) + Offset``.","sig":null,"attributes":[{"value":"/ Store the low 32 bits of ``x`` to memory at ``sum(args) + Offset``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10111918,"byte_end":10111989,"line_start":1052,"line_end":1052,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10111994,"byte_end":10111997,"line_start":1053,"line_end":1053,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to ``ireduce.i32`` followed by ``store.i32``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10112002,"byte_end":10112070,"line_start":1054,"line_end":1054,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10112075,"byte_end":10112078,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10112083,"byte_end":10112094,"line_start":1056,"line_end":1056,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10112099,"byte_end":10112102,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ - MemFlags: Memory operation flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10112107,"byte_end":10112145,"line_start":1058,"line_end":1058,"column_start":5,"column_end":43}},{"value":"/ - x: An integer type with more than 32 bits","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10112150,"byte_end":10112197,"line_start":1059,"line_end":1059,"column_start":5,"column_end":52}},{"value":"/ - args: Address arguments","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10112202,"byte_end":10112231,"line_start":1060,"line_end":1060,"column_start":5,"column_end":34}},{"value":"/ - Offset: Byte offset from base address","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10112236,"byte_end":10112279,"line_start":1061,"line_end":1061,"column_start":5,"column_end":48}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10112284,"byte_end":10112308,"line_start":1062,"line_end":1062,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5198},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10113513,"byte_end":10113523,"line_start":1094,"line_end":1094,"column_start":8,"column_end":18},"name":"stack_load","qualname":"::ir::builder::InstBuilder::stack_load","value":"fn <T1> (self, Mem: crate::ir::Type, SS: ir::StackSlot, Offset: T1) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Load a value from a stack slot at the constant offset.","sig":null,"attributes":[{"value":"/ Load a value from a stack slot at the constant offset.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10112875,"byte_end":10112933,"line_start":1075,"line_end":1075,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10112938,"byte_end":10112941,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ This is a polymorphic instruction that can load any value type which","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10112946,"byte_end":10113018,"line_start":1077,"line_end":1077,"column_start":5,"column_end":77}},{"value":"/ has a memory representation.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10113023,"byte_end":10113055,"line_start":1078,"line_end":1078,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10113060,"byte_end":10113063,"line_start":1079,"line_end":1079,"column_start":5,"column_end":8}},{"value":"/ The offset is an immediate constant, not an SSA value. The memory","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10113068,"byte_end":10113137,"line_start":1080,"line_end":1080,"column_start":5,"column_end":74}},{"value":"/ access cannot go out of bounds, i.e.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10113142,"byte_end":10113182,"line_start":1081,"line_end":1081,"column_start":5,"column_end":45}},{"value":"/ `sizeof(a) + Offset <= sizeof(SS)`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10113187,"byte_end":10113226,"line_start":1082,"line_end":1082,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10113231,"byte_end":10113234,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10113239,"byte_end":10113250,"line_start":1084,"line_end":1084,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10113255,"byte_end":10113258,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ - Mem (controlling type variable): Any type that can be stored in memory","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10113263,"byte_end":10113339,"line_start":1086,"line_end":1086,"column_start":5,"column_end":81}},{"value":"/ - SS: A stack slot","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10113344,"byte_end":10113366,"line_start":1087,"line_end":1087,"column_start":5,"column_end":27}},{"value":"/ - Offset: In-bounds offset into stack slot","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10113371,"byte_end":10113417,"line_start":1088,"line_end":1088,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10113422,"byte_end":10113425,"line_start":1089,"line_end":1089,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10113430,"byte_end":10113442,"line_start":1090,"line_end":1090,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10113447,"byte_end":10113450,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ - a: Value loaded","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10113455,"byte_end":10113476,"line_start":1092,"line_end":1092,"column_start":5,"column_end":26}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10113481,"byte_end":10113505,"line_start":1093,"line_end":1093,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5200},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10114309,"byte_end":10114320,"line_start":1115,"line_end":1115,"column_start":8,"column_end":19},"name":"stack_store","qualname":"::ir::builder::InstBuilder::stack_store","value":"fn <T1> (self, x: ir::Value, SS: ir::StackSlot, Offset: T1) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Store a value to a stack slot at a constant offset.","sig":null,"attributes":[{"value":"/ Store a value to a stack slot at a constant offset.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10113786,"byte_end":10113841,"line_start":1100,"line_end":1100,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10113846,"byte_end":10113849,"line_start":1101,"line_end":1101,"column_start":5,"column_end":8}},{"value":"/ This is a polymorphic instruction that can store any value type with a","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10113854,"byte_end":10113928,"line_start":1102,"line_end":1102,"column_start":5,"column_end":79}},{"value":"/ memory representation.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10113933,"byte_end":10113959,"line_start":1103,"line_end":1103,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10113964,"byte_end":10113967,"line_start":1104,"line_end":1104,"column_start":5,"column_end":8}},{"value":"/ The offset is an immediate constant, not an SSA value. The memory","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10113972,"byte_end":10114041,"line_start":1105,"line_end":1105,"column_start":5,"column_end":74}},{"value":"/ access cannot go out of bounds, i.e.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10114046,"byte_end":10114086,"line_start":1106,"line_end":1106,"column_start":5,"column_end":45}},{"value":"/ `sizeof(a) + Offset <= sizeof(SS)`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10114091,"byte_end":10114130,"line_start":1107,"line_end":1107,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10114135,"byte_end":10114138,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10114143,"byte_end":10114154,"line_start":1109,"line_end":1109,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10114159,"byte_end":10114162,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ - x: Value to be stored","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10114167,"byte_end":10114194,"line_start":1111,"line_end":1111,"column_start":5,"column_end":32}},{"value":"/ - SS: A stack slot","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10114199,"byte_end":10114221,"line_start":1112,"line_end":1112,"column_start":5,"column_end":27}},{"value":"/ - Offset: In-bounds offset into stack slot","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10114226,"byte_end":10114272,"line_start":1113,"line_end":1113,"column_start":5,"column_end":51}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10114277,"byte_end":10114301,"line_start":1114,"line_end":1114,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5202},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10115101,"byte_end":10115111,"line_start":1137,"line_end":1137,"column_start":8,"column_end":18},"name":"stack_addr","qualname":"::ir::builder::InstBuilder::stack_addr","value":"fn <T1> (self, iAddr: crate::ir::Type, SS: ir::StackSlot, Offset: T1) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Get the address of a stack slot.","sig":null,"attributes":[{"value":"/ Get the address of a stack slot.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10114605,"byte_end":10114641,"line_start":1121,"line_end":1121,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10114646,"byte_end":10114649,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ Compute the absolute address of a byte in a stack slot. The offset must","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10114654,"byte_end":10114729,"line_start":1123,"line_end":1123,"column_start":5,"column_end":80}},{"value":"/ refer to a byte inside the stack slot:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10114734,"byte_end":10114776,"line_start":1124,"line_end":1124,"column_start":5,"column_end":47}},{"value":"/ `0 <= Offset < sizeof(SS)`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10114781,"byte_end":10114812,"line_start":1125,"line_end":1125,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10114817,"byte_end":10114820,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10114825,"byte_end":10114836,"line_start":1127,"line_end":1127,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10114841,"byte_end":10114844,"line_start":1128,"line_end":1128,"column_start":5,"column_end":8}},{"value":"/ - iAddr (controlling type variable): An integer address type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10114849,"byte_end":10114913,"line_start":1129,"line_end":1129,"column_start":5,"column_end":69}},{"value":"/ - SS: A stack slot","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10114918,"byte_end":10114940,"line_start":1130,"line_end":1130,"column_start":5,"column_end":27}},{"value":"/ - Offset: In-bounds offset into stack slot","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10114945,"byte_end":10114991,"line_start":1131,"line_end":1131,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10114996,"byte_end":10114999,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10115004,"byte_end":10115016,"line_start":1133,"line_end":1133,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10115021,"byte_end":10115024,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ - addr: An integer address type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10115029,"byte_end":10115064,"line_start":1135,"line_end":1135,"column_start":5,"column_end":40}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10115069,"byte_end":10115093,"line_start":1136,"line_end":1136,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5204},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10115652,"byte_end":10115664,"line_start":1154,"line_end":1154,"column_start":8,"column_end":20},"name":"global_value","qualname":"::ir::builder::InstBuilder::global_value","value":"fn (self, Mem: crate::ir::Type, GV: ir::GlobalValue) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Compute the value of global GV.","sig":null,"attributes":[{"value":"/ Compute the value of global GV.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10115378,"byte_end":10115413,"line_start":1143,"line_end":1143,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10115418,"byte_end":10115421,"line_start":1144,"line_end":1144,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10115426,"byte_end":10115437,"line_start":1145,"line_end":1145,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10115442,"byte_end":10115445,"line_start":1146,"line_end":1146,"column_start":5,"column_end":8}},{"value":"/ - Mem (controlling type variable): Any type that can be stored in memory","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10115450,"byte_end":10115526,"line_start":1147,"line_end":1147,"column_start":5,"column_end":81}},{"value":"/ - GV: A global value.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10115531,"byte_end":10115556,"line_start":1148,"line_end":1148,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10115561,"byte_end":10115564,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10115569,"byte_end":10115581,"line_start":1150,"line_end":1150,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10115586,"byte_end":10115589,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ - a: Value loaded","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10115594,"byte_end":10115615,"line_start":1152,"line_end":1152,"column_start":5,"column_end":26}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10115620,"byte_end":10115644,"line_start":1153,"line_end":1153,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5205},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10116147,"byte_end":10116159,"line_start":1170,"line_end":1170,"column_start":8,"column_end":20},"name":"symbol_value","qualname":"::ir::builder::InstBuilder::symbol_value","value":"fn (self, Mem: crate::ir::Type, GV: ir::GlobalValue) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Compute the value of global GV, which is a symbolic value.","sig":null,"attributes":[{"value":"/ Compute the value of global GV, which is a symbolic value.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10115846,"byte_end":10115908,"line_start":1159,"line_end":1159,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10115913,"byte_end":10115916,"line_start":1160,"line_end":1160,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10115921,"byte_end":10115932,"line_start":1161,"line_end":1161,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10115937,"byte_end":10115940,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ - Mem (controlling type variable): Any type that can be stored in memory","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10115945,"byte_end":10116021,"line_start":1163,"line_end":1163,"column_start":5,"column_end":81}},{"value":"/ - GV: A global value.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10116026,"byte_end":10116051,"line_start":1164,"line_end":1164,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10116056,"byte_end":10116059,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10116064,"byte_end":10116076,"line_start":1166,"line_end":1166,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10116081,"byte_end":10116084,"line_start":1167,"line_end":1167,"column_start":5,"column_end":8}},{"value":"/ - a: Value loaded","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10116089,"byte_end":10116110,"line_start":1168,"line_end":1168,"column_start":5,"column_end":26}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10116115,"byte_end":10116139,"line_start":1169,"line_end":1169,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5206},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10117133,"byte_end":10117142,"line_start":1196,"line_end":1196,"column_start":8,"column_end":17},"name":"heap_addr","qualname":"::ir::builder::InstBuilder::heap_addr","value":"fn <T1> (self, iAddr: crate::ir::Type, H: ir::Heap, p: ir::Value, Size: T1) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Bounds check and compute absolute address of heap memory.","sig":null,"attributes":[{"value":"/ Bounds check and compute absolute address of heap memory.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10116341,"byte_end":10116402,"line_start":1175,"line_end":1175,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10116407,"byte_end":10116410,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}},{"value":"/ Verify that the offset range ``p .. p + Size - 1`` is in bounds for the","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10116415,"byte_end":10116490,"line_start":1177,"line_end":1177,"column_start":5,"column_end":80}},{"value":"/ heap H, and generate an absolute address that is safe to dereference.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10116495,"byte_end":10116568,"line_start":1178,"line_end":1178,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10116573,"byte_end":10116576,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ 1. If ``p + Size`` is not greater than the heap bound, return an","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10116581,"byte_end":10116649,"line_start":1180,"line_end":1180,"column_start":5,"column_end":73}},{"value":"/    absolute address corresponding to a byte offset of ``p`` from the","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10116654,"byte_end":10116726,"line_start":1181,"line_end":1181,"column_start":5,"column_end":77}},{"value":"/    heap's base address.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10116731,"byte_end":10116758,"line_start":1182,"line_end":1182,"column_start":5,"column_end":32}},{"value":"/ 2. If ``p + Size`` is greater than the heap bound, generate a trap.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10116763,"byte_end":10116834,"line_start":1183,"line_end":1183,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10116839,"byte_end":10116842,"line_start":1184,"line_end":1184,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10116847,"byte_end":10116858,"line_start":1185,"line_end":1185,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10116863,"byte_end":10116866,"line_start":1186,"line_end":1186,"column_start":5,"column_end":8}},{"value":"/ - iAddr (controlling type variable): An integer address type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10116871,"byte_end":10116935,"line_start":1187,"line_end":1187,"column_start":5,"column_end":69}},{"value":"/ - H: A heap.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10116940,"byte_end":10116956,"line_start":1188,"line_end":1188,"column_start":5,"column_end":21}},{"value":"/ - p: An unsigned heap offset","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10116961,"byte_end":10116993,"line_start":1189,"line_end":1189,"column_start":5,"column_end":37}},{"value":"/ - Size: Size in bytes","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10116998,"byte_end":10117023,"line_start":1190,"line_end":1190,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10117028,"byte_end":10117031,"line_start":1191,"line_end":1191,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10117036,"byte_end":10117048,"line_start":1192,"line_end":1192,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10117053,"byte_end":10117056,"line_start":1193,"line_end":1193,"column_start":5,"column_end":8}},{"value":"/ - addr: An integer address type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10117061,"byte_end":10117096,"line_start":1194,"line_end":1194,"column_start":5,"column_end":40}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10117101,"byte_end":10117125,"line_start":1195,"line_end":1195,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5208},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10117681,"byte_end":10117695,"line_start":1212,"line_end":1212,"column_start":8,"column_end":22},"name":"get_pinned_reg","qualname":"::ir::builder::InstBuilder::get_pinned_reg","value":"fn (self, iAddr: crate::ir::Type) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Gets the content of the pinned register, when it's enabled.","sig":null,"attributes":[{"value":"/ Gets the content of the pinned register, when it's enabled.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10117407,"byte_end":10117470,"line_start":1202,"line_end":1202,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10117475,"byte_end":10117478,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10117483,"byte_end":10117494,"line_start":1204,"line_end":1204,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10117499,"byte_end":10117502,"line_start":1205,"line_end":1205,"column_start":5,"column_end":8}},{"value":"/ - iAddr (controlling type variable): An integer address type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10117507,"byte_end":10117571,"line_start":1206,"line_end":1206,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10117576,"byte_end":10117579,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10117584,"byte_end":10117596,"line_start":1208,"line_end":1208,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10117601,"byte_end":10117604,"line_start":1209,"line_end":1209,"column_start":5,"column_end":8}},{"value":"/ - addr: An integer address type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10117609,"byte_end":10117644,"line_start":1210,"line_end":1210,"column_start":5,"column_end":40}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10117649,"byte_end":10117673,"line_start":1211,"line_end":1211,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5209},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10118020,"byte_end":10118034,"line_start":1223,"line_end":1223,"column_start":8,"column_end":22},"name":"set_pinned_reg","qualname":"::ir::builder::InstBuilder::set_pinned_reg","value":"fn (self, addr: ir::Value) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Sets the content of the pinned register, when it's enabled.","sig":null,"attributes":[{"value":"/ Sets the content of the pinned register, when it's enabled.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10117848,"byte_end":10117911,"line_start":1217,"line_end":1217,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10117916,"byte_end":10117919,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10117924,"byte_end":10117935,"line_start":1219,"line_end":1219,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10117940,"byte_end":10117943,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ - addr: An integer address type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10117948,"byte_end":10117983,"line_start":1221,"line_end":1221,"column_start":5,"column_end":40}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10117988,"byte_end":10118012,"line_start":1222,"line_end":1222,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5210},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10119069,"byte_end":10119079,"line_start":1251,"line_end":1251,"column_start":8,"column_end":18},"name":"table_addr","qualname":"::ir::builder::InstBuilder::table_addr","value":"fn <T1> (self, iAddr: crate::ir::Type, T: ir::Table, p: ir::Value, Offset: T1) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Bounds check and compute absolute address of a table entry.","sig":null,"attributes":[{"value":"/ Bounds check and compute absolute address of a table entry.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10118210,"byte_end":10118273,"line_start":1228,"line_end":1228,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10118278,"byte_end":10118281,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ Verify that the offset ``p`` is in bounds for the table T, and generate","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10118286,"byte_end":10118361,"line_start":1230,"line_end":1230,"column_start":5,"column_end":80}},{"value":"/ an absolute address that is safe to dereference.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10118366,"byte_end":10118418,"line_start":1231,"line_end":1231,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10118423,"byte_end":10118426,"line_start":1232,"line_end":1232,"column_start":5,"column_end":8}},{"value":"/ ``Offset`` must be less than the size of a table element.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10118431,"byte_end":10118492,"line_start":1233,"line_end":1233,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10118497,"byte_end":10118500,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ 1. If ``p`` is not greater than the table bound, return an absolute","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10118505,"byte_end":10118576,"line_start":1235,"line_end":1235,"column_start":5,"column_end":76}},{"value":"/    address corresponding to a byte offset of ``p`` from the table's","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10118581,"byte_end":10118652,"line_start":1236,"line_end":1236,"column_start":5,"column_end":76}},{"value":"/    base address.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10118657,"byte_end":10118677,"line_start":1237,"line_end":1237,"column_start":5,"column_end":25}},{"value":"/ 2. If ``p`` is greater than the table bound, generate a trap.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10118682,"byte_end":10118747,"line_start":1238,"line_end":1238,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10118752,"byte_end":10118755,"line_start":1239,"line_end":1239,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10118760,"byte_end":10118771,"line_start":1240,"line_end":1240,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10118776,"byte_end":10118779,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ - iAddr (controlling type variable): An integer address type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10118784,"byte_end":10118848,"line_start":1242,"line_end":1242,"column_start":5,"column_end":69}},{"value":"/ - T: A table.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10118853,"byte_end":10118870,"line_start":1243,"line_end":1243,"column_start":5,"column_end":22}},{"value":"/ - p: An unsigned table offset","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10118875,"byte_end":10118908,"line_start":1244,"line_end":1244,"column_start":5,"column_end":38}},{"value":"/ - Offset: Byte offset from element address","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10118913,"byte_end":10118959,"line_start":1245,"line_end":1245,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10118964,"byte_end":10118967,"line_start":1246,"line_end":1246,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10118972,"byte_end":10118984,"line_start":1247,"line_end":1247,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10118989,"byte_end":10118992,"line_start":1248,"line_end":1248,"column_start":5,"column_end":8}},{"value":"/ - addr: An integer address type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10118997,"byte_end":10119032,"line_start":1249,"line_end":1249,"column_start":5,"column_end":40}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10119037,"byte_end":10119061,"line_start":1250,"line_end":1250,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5212},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10119805,"byte_end":10119811,"line_start":1271,"line_end":1271,"column_start":8,"column_end":14},"name":"iconst","qualname":"::ir::builder::InstBuilder::iconst","value":"fn <T1> (self, Int: crate::ir::Type, N: T1) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Integer constant.","sig":null,"attributes":[{"value":"/ Integer constant.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10119357,"byte_end":10119378,"line_start":1257,"line_end":1257,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10119383,"byte_end":10119386,"line_start":1258,"line_end":1258,"column_start":5,"column_end":8}},{"value":"/ Create a scalar integer SSA value with an immediate constant value, or","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10119391,"byte_end":10119465,"line_start":1259,"line_end":1259,"column_start":5,"column_end":79}},{"value":"/ an integer vector where all the lanes have the same value.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10119470,"byte_end":10119532,"line_start":1260,"line_end":1260,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10119537,"byte_end":10119540,"line_start":1261,"line_end":1261,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10119545,"byte_end":10119556,"line_start":1262,"line_end":1262,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10119561,"byte_end":10119564,"line_start":1263,"line_end":1263,"column_start":5,"column_end":8}},{"value":"/ - Int (controlling type variable): A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10119569,"byte_end":10119639,"line_start":1264,"line_end":1264,"column_start":5,"column_end":75}},{"value":"/ - N: A 64-bit immediate integer.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10119644,"byte_end":10119680,"line_start":1265,"line_end":1265,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10119685,"byte_end":10119688,"line_start":1266,"line_end":1266,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10119693,"byte_end":10119705,"line_start":1267,"line_end":1267,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10119710,"byte_end":10119713,"line_start":1268,"line_end":1268,"column_start":5,"column_end":8}},{"value":"/ - a: A constant integer scalar or vector value","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10119718,"byte_end":10119768,"line_start":1269,"line_end":1269,"column_start":5,"column_end":55}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10119773,"byte_end":10119797,"line_start":1270,"line_end":1270,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5214},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10120325,"byte_end":10120333,"line_start":1289,"line_end":1289,"column_start":8,"column_end":16},"name":"f32const","qualname":"::ir::builder::InstBuilder::f32const","value":"fn <T1> (self, N: T1) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Floating point constant.","sig":null,"attributes":[{"value":"/ Floating point constant.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10120024,"byte_end":10120052,"line_start":1277,"line_end":1277,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10120057,"byte_end":10120060,"line_start":1278,"line_end":1278,"column_start":5,"column_end":8}},{"value":"/ Create a `f32` SSA value with an immediate constant value.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10120065,"byte_end":10120127,"line_start":1279,"line_end":1279,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10120132,"byte_end":10120135,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10120140,"byte_end":10120151,"line_start":1281,"line_end":1281,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10120156,"byte_end":10120159,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ - N: A 32-bit immediate floating point number.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10120164,"byte_end":10120214,"line_start":1283,"line_end":1283,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10120219,"byte_end":10120222,"line_start":1284,"line_end":1284,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10120227,"byte_end":10120239,"line_start":1285,"line_end":1285,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10120244,"byte_end":10120247,"line_start":1286,"line_end":1286,"column_start":5,"column_end":8}},{"value":"/ - a: A constant f32 scalar value","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10120252,"byte_end":10120288,"line_start":1287,"line_end":1287,"column_start":5,"column_end":41}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10120293,"byte_end":10120317,"line_start":1288,"line_end":1288,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5216},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10120842,"byte_end":10120850,"line_start":1307,"line_end":1307,"column_start":8,"column_end":16},"name":"f64const","qualname":"::ir::builder::InstBuilder::f64const","value":"fn <T1> (self, N: T1) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Floating point constant.","sig":null,"attributes":[{"value":"/ Floating point constant.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10120541,"byte_end":10120569,"line_start":1295,"line_end":1295,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10120574,"byte_end":10120577,"line_start":1296,"line_end":1296,"column_start":5,"column_end":8}},{"value":"/ Create a `f64` SSA value with an immediate constant value.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10120582,"byte_end":10120644,"line_start":1297,"line_end":1297,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10120649,"byte_end":10120652,"line_start":1298,"line_end":1298,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10120657,"byte_end":10120668,"line_start":1299,"line_end":1299,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10120673,"byte_end":10120676,"line_start":1300,"line_end":1300,"column_start":5,"column_end":8}},{"value":"/ - N: A 64-bit immediate floating point number.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10120681,"byte_end":10120731,"line_start":1301,"line_end":1301,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10120736,"byte_end":10120739,"line_start":1302,"line_end":1302,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10120744,"byte_end":10120756,"line_start":1303,"line_end":1303,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10120761,"byte_end":10120764,"line_start":1304,"line_end":1304,"column_start":5,"column_end":8}},{"value":"/ - a: A constant f64 scalar value","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10120769,"byte_end":10120805,"line_start":1305,"line_end":1305,"column_start":5,"column_end":41}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10120810,"byte_end":10120834,"line_start":1306,"line_end":1306,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5218},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10121500,"byte_end":10121506,"line_start":1327,"line_end":1327,"column_start":8,"column_end":14},"name":"bconst","qualname":"::ir::builder::InstBuilder::bconst","value":"fn <T1> (self, Bool: crate::ir::Type, N: T1) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Boolean constant.","sig":null,"attributes":[{"value":"/ Boolean constant.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10121058,"byte_end":10121079,"line_start":1313,"line_end":1313,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10121084,"byte_end":10121087,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ Create a scalar boolean SSA value with an immediate constant value, or","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10121092,"byte_end":10121166,"line_start":1315,"line_end":1315,"column_start":5,"column_end":79}},{"value":"/ a boolean vector where all the lanes have the same value.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10121171,"byte_end":10121232,"line_start":1316,"line_end":1316,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10121237,"byte_end":10121240,"line_start":1317,"line_end":1317,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10121245,"byte_end":10121256,"line_start":1318,"line_end":1318,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10121261,"byte_end":10121264,"line_start":1319,"line_end":1319,"column_start":5,"column_end":8}},{"value":"/ - Bool (controlling type variable): A scalar or vector boolean type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10121269,"byte_end":10121340,"line_start":1320,"line_end":1320,"column_start":5,"column_end":76}},{"value":"/ - N: An immediate boolean.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10121345,"byte_end":10121375,"line_start":1321,"line_end":1321,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10121380,"byte_end":10121383,"line_start":1322,"line_end":1322,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10121388,"byte_end":10121400,"line_start":1323,"line_end":1323,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10121405,"byte_end":10121408,"line_start":1324,"line_end":1324,"column_start":5,"column_end":8}},{"value":"/ - a: A constant boolean scalar or vector value","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10121413,"byte_end":10121463,"line_start":1325,"line_end":1325,"column_start":5,"column_end":55}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10121468,"byte_end":10121492,"line_start":1326,"line_end":1326,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5220},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10122054,"byte_end":10122060,"line_start":1346,"line_end":1346,"column_start":8,"column_end":14},"name":"vconst","qualname":"::ir::builder::InstBuilder::vconst","value":"fn <T1> (self, TxN: crate::ir::Type, N: T1) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" SIMD vector constant.","sig":null,"attributes":[{"value":"/ SIMD vector constant.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10121705,"byte_end":10121730,"line_start":1333,"line_end":1333,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10121735,"byte_end":10121738,"line_start":1334,"line_end":1334,"column_start":5,"column_end":8}},{"value":"/ Construct a vector with the given immediate bytes.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10121743,"byte_end":10121797,"line_start":1335,"line_end":1335,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10121802,"byte_end":10121805,"line_start":1336,"line_end":1336,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10121810,"byte_end":10121821,"line_start":1337,"line_end":1337,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10121826,"byte_end":10121829,"line_start":1338,"line_end":1338,"column_start":5,"column_end":8}},{"value":"/ - TxN (controlling type variable): A SIMD vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10121834,"byte_end":10121891,"line_start":1339,"line_end":1339,"column_start":5,"column_end":62}},{"value":"/ - N: The 16 immediate bytes of a 128-bit vector","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10121896,"byte_end":10121947,"line_start":1340,"line_end":1340,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10121952,"byte_end":10121955,"line_start":1341,"line_end":1341,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10121960,"byte_end":10121972,"line_start":1342,"line_end":1342,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10121977,"byte_end":10121980,"line_start":1343,"line_end":1343,"column_start":5,"column_end":8}},{"value":"/ - a: A constant vector value","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10121985,"byte_end":10122017,"line_start":1344,"line_end":1344,"column_start":5,"column_end":37}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10122022,"byte_end":10122046,"line_start":1345,"line_end":1345,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5222},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10122914,"byte_end":10122921,"line_start":1369,"line_end":1369,"column_start":8,"column_end":15},"name":"shuffle","qualname":"::ir::builder::InstBuilder::shuffle","value":"fn <T1> (self, a: ir::Value, b: ir::Value, mask: T1) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" SIMD vector shuffle.","sig":null,"attributes":[{"value":"/ SIMD vector shuffle.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10122266,"byte_end":10122290,"line_start":1352,"line_end":1352,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10122295,"byte_end":10122298,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/ Shuffle two vectors using the given immediate bytes. For each of the 16 bytes of the","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10122303,"byte_end":10122391,"line_start":1354,"line_end":1354,"column_start":5,"column_end":93}},{"value":"/ immediate, a value i of 0-15 selects the i-th element of the first vector and a value i of","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10122396,"byte_end":10122490,"line_start":1355,"line_end":1355,"column_start":5,"column_end":99}},{"value":"/ 16-31 selects the (i-16)th element of the second vector. Immediate values outside of the","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10122495,"byte_end":10122587,"line_start":1356,"line_end":1356,"column_start":5,"column_end":97}},{"value":"/ 0-31 range place a 0 in the resulting vector lane.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10122592,"byte_end":10122646,"line_start":1357,"line_end":1357,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10122651,"byte_end":10122654,"line_start":1358,"line_end":1358,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10122659,"byte_end":10122670,"line_start":1359,"line_end":1359,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10122675,"byte_end":10122678,"line_start":1360,"line_end":1360,"column_start":5,"column_end":8}},{"value":"/ - a: A vector value","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10122683,"byte_end":10122706,"line_start":1361,"line_end":1361,"column_start":5,"column_end":28}},{"value":"/ - b: A vector value","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10122711,"byte_end":10122734,"line_start":1362,"line_end":1362,"column_start":5,"column_end":28}},{"value":"/ - mask: The 16 immediate bytes used for selecting the elements to shuffle","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10122739,"byte_end":10122816,"line_start":1363,"line_end":1363,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10122821,"byte_end":10122824,"line_start":1364,"line_end":1364,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10122829,"byte_end":10122841,"line_start":1365,"line_end":1365,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10122846,"byte_end":10122849,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ - a: A vector value","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10122854,"byte_end":10122877,"line_start":1367,"line_end":1367,"column_start":5,"column_end":28}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10122882,"byte_end":10122906,"line_start":1368,"line_end":1368,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5224},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10123562,"byte_end":10123566,"line_start":1388,"line_end":1388,"column_start":8,"column_end":12},"name":"null","qualname":"::ir::builder::InstBuilder::null","value":"fn (self, Ref: crate::ir::Type) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Null constant value for reference types.","sig":null,"attributes":[{"value":"/ Null constant value for reference types.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10123224,"byte_end":10123268,"line_start":1376,"line_end":1376,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10123273,"byte_end":10123276,"line_start":1377,"line_end":1377,"column_start":5,"column_end":8}},{"value":"/ Create a scalar reference SSA value with a constant null value.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10123281,"byte_end":10123348,"line_start":1378,"line_end":1378,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10123353,"byte_end":10123356,"line_start":1379,"line_end":1379,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10123361,"byte_end":10123372,"line_start":1380,"line_end":1380,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10123377,"byte_end":10123380,"line_start":1381,"line_end":1381,"column_start":5,"column_end":8}},{"value":"/ - Ref (controlling type variable): A scalar reference type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10123385,"byte_end":10123447,"line_start":1382,"line_end":1382,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10123452,"byte_end":10123455,"line_start":1383,"line_end":1383,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10123460,"byte_end":10123472,"line_start":1384,"line_end":1384,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10123477,"byte_end":10123480,"line_start":1385,"line_end":1385,"column_start":5,"column_end":8}},{"value":"/ - a: A constant reference null value","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10123485,"byte_end":10123525,"line_start":1386,"line_end":1386,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10123530,"byte_end":10123554,"line_start":1387,"line_end":1387,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5225},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10123839,"byte_end":10123842,"line_start":1397,"line_end":1397,"column_start":8,"column_end":11},"name":"nop","qualname":"::ir::builder::InstBuilder::nop","value":"fn (self) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Just a dummy instruction.","sig":null,"attributes":[{"value":"/ Just a dummy instruction.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10123707,"byte_end":10123736,"line_start":1393,"line_end":1393,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10123741,"byte_end":10123744,"line_start":1394,"line_end":1394,"column_start":5,"column_end":8}},{"value":"/ Note: this doesn't compile to a machine code nop.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10123749,"byte_end":10123802,"line_start":1395,"line_end":1395,"column_start":5,"column_end":58}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10123807,"byte_end":10123831,"line_start":1396,"line_end":1396,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5226},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10124352,"byte_end":10124358,"line_start":1416,"line_end":1416,"column_start":8,"column_end":14},"name":"select","qualname":"::ir::builder::InstBuilder::select","value":"fn (self, c: ir::Value, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Conditional select.","sig":null,"attributes":[{"value":"/ Conditional select.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10123922,"byte_end":10123945,"line_start":1401,"line_end":1401,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10123950,"byte_end":10123953,"line_start":1402,"line_end":1402,"column_start":5,"column_end":8}},{"value":"/ This instruction selects whole values. Use `vselect` for","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10123958,"byte_end":10124018,"line_start":1403,"line_end":1403,"column_start":5,"column_end":65}},{"value":"/ lane-wise selection.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10124023,"byte_end":10124047,"line_start":1404,"line_end":1404,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10124052,"byte_end":10124055,"line_start":1405,"line_end":1405,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10124060,"byte_end":10124071,"line_start":1406,"line_end":1406,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10124076,"byte_end":10124079,"line_start":1407,"line_end":1407,"column_start":5,"column_end":8}},{"value":"/ - c: Controlling value to test","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10124084,"byte_end":10124118,"line_start":1408,"line_end":1408,"column_start":5,"column_end":39}},{"value":"/ - x: Value to use when `c` is true","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10124123,"byte_end":10124161,"line_start":1409,"line_end":1409,"column_start":5,"column_end":43}},{"value":"/ - y: Value to use when `c` is false","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10124166,"byte_end":10124205,"line_start":1410,"line_end":1410,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10124210,"byte_end":10124213,"line_start":1411,"line_end":1411,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10124218,"byte_end":10124230,"line_start":1412,"line_end":1412,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10124235,"byte_end":10124238,"line_start":1413,"line_end":1413,"column_start":5,"column_end":8}},{"value":"/ - a: Any integer, float, boolean, or reference scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10124243,"byte_end":10124315,"line_start":1414,"line_end":1414,"column_start":5,"column_end":77}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10124320,"byte_end":10124344,"line_start":1415,"line_end":1415,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5227},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10125124,"byte_end":10125132,"line_start":1436,"line_end":1436,"column_start":8,"column_end":16},"name":"selectif","qualname":"::ir::builder::InstBuilder::selectif","value":"fn <T1> (self, Any: crate::ir::Type, cc: T1, flags: ir::Value, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Conditional select, dependent on integer condition codes.","sig":null,"attributes":[{"value":"/ Conditional select, dependent on integer condition codes.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10124604,"byte_end":10124665,"line_start":1422,"line_end":1422,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10124670,"byte_end":10124673,"line_start":1423,"line_end":1423,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10124678,"byte_end":10124689,"line_start":1424,"line_end":1424,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10124694,"byte_end":10124697,"line_start":1425,"line_end":1425,"column_start":5,"column_end":8}},{"value":"/ - Any (controlling type variable): Any integer, float, boolean, or reference scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10124702,"byte_end":10124804,"line_start":1426,"line_end":1426,"column_start":5,"column_end":107}},{"value":"/ - cc: Controlling condition code","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10124809,"byte_end":10124845,"line_start":1427,"line_end":1427,"column_start":5,"column_end":41}},{"value":"/ - flags: The machine's flag register","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10124850,"byte_end":10124890,"line_start":1428,"line_end":1428,"column_start":5,"column_end":45}},{"value":"/ - x: Value to use when `c` is true","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10124895,"byte_end":10124933,"line_start":1429,"line_end":1429,"column_start":5,"column_end":43}},{"value":"/ - y: Value to use when `c` is false","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10124938,"byte_end":10124977,"line_start":1430,"line_end":1430,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10124982,"byte_end":10124985,"line_start":1431,"line_end":1431,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10124990,"byte_end":10125002,"line_start":1432,"line_end":1432,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10125007,"byte_end":10125010,"line_start":1433,"line_end":1433,"column_start":5,"column_end":8}},{"value":"/ - a: Any integer, float, boolean, or reference scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10125015,"byte_end":10125087,"line_start":1434,"line_end":1434,"column_start":5,"column_end":77}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10125092,"byte_end":10125116,"line_start":1435,"line_end":1435,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5229},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10125968,"byte_end":10125977,"line_start":1458,"line_end":1458,"column_start":8,"column_end":17},"name":"bitselect","qualname":"::ir::builder::InstBuilder::bitselect","value":"fn (self, c: ir::Value, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Conditional select of bits.","sig":null,"attributes":[{"value":"/ Conditional select of bits.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10125410,"byte_end":10125441,"line_start":1442,"line_end":1442,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10125446,"byte_end":10125449,"line_start":1443,"line_end":1443,"column_start":5,"column_end":8}},{"value":"/ For each bit in `c`, this instruction selects the corresponding bit from `x` if the bit","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10125454,"byte_end":10125545,"line_start":1444,"line_end":1444,"column_start":5,"column_end":96}},{"value":"/ in `c` is 1 and the corresponding bit from `y` if the bit in `c` is 0. See also:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10125550,"byte_end":10125634,"line_start":1445,"line_end":1445,"column_start":5,"column_end":89}},{"value":"/ `select`, `vselect`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10125639,"byte_end":10125663,"line_start":1446,"line_end":1446,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10125668,"byte_end":10125671,"line_start":1447,"line_end":1447,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10125676,"byte_end":10125687,"line_start":1448,"line_end":1448,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10125692,"byte_end":10125695,"line_start":1449,"line_end":1449,"column_start":5,"column_end":8}},{"value":"/ - c: Controlling value to test","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10125700,"byte_end":10125734,"line_start":1450,"line_end":1450,"column_start":5,"column_end":39}},{"value":"/ - x: Value to use when `c` is true","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10125739,"byte_end":10125777,"line_start":1451,"line_end":1451,"column_start":5,"column_end":43}},{"value":"/ - y: Value to use when `c` is false","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10125782,"byte_end":10125821,"line_start":1452,"line_end":1452,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10125826,"byte_end":10125829,"line_start":1453,"line_end":1453,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10125834,"byte_end":10125846,"line_start":1454,"line_end":1454,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10125851,"byte_end":10125854,"line_start":1455,"line_end":1455,"column_start":5,"column_end":8}},{"value":"/ - a: Any integer, float, boolean, or reference scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10125859,"byte_end":10125931,"line_start":1456,"line_end":1456,"column_start":5,"column_end":77}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10125936,"byte_end":10125960,"line_start":1457,"line_end":1457,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5230},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10126857,"byte_end":10126861,"line_start":1481,"line_end":1481,"column_start":8,"column_end":12},"name":"copy","qualname":"::ir::builder::InstBuilder::copy","value":"fn (self, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Register-register copy.","sig":null,"attributes":[{"value":"/ Register-register copy.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10126226,"byte_end":10126253,"line_start":1464,"line_end":1464,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10126258,"byte_end":10126261,"line_start":1465,"line_end":1465,"column_start":5,"column_end":8}},{"value":"/ This instruction copies its input, preserving the value type.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10126266,"byte_end":10126331,"line_start":1466,"line_end":1466,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10126336,"byte_end":10126339,"line_start":1467,"line_end":1467,"column_start":5,"column_end":8}},{"value":"/ A pure SSA-form program does not need to copy values, but this","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10126344,"byte_end":10126410,"line_start":1468,"line_end":1468,"column_start":5,"column_end":71}},{"value":"/ instruction is useful for representing intermediate stages during","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10126415,"byte_end":10126484,"line_start":1469,"line_end":1469,"column_start":5,"column_end":74}},{"value":"/ instruction transformations, and the register allocator needs a way of","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10126489,"byte_end":10126563,"line_start":1470,"line_end":1470,"column_start":5,"column_end":79}},{"value":"/ representing register copies.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10126568,"byte_end":10126601,"line_start":1471,"line_end":1471,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10126606,"byte_end":10126609,"line_start":1472,"line_end":1472,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10126614,"byte_end":10126625,"line_start":1473,"line_end":1473,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10126630,"byte_end":10126633,"line_start":1474,"line_end":1474,"column_start":5,"column_end":8}},{"value":"/ - x: Any integer, float, boolean, or reference scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10126638,"byte_end":10126710,"line_start":1475,"line_end":1475,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10126715,"byte_end":10126718,"line_start":1476,"line_end":1476,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10126723,"byte_end":10126735,"line_start":1477,"line_end":1477,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10126740,"byte_end":10126743,"line_start":1478,"line_end":1478,"column_start":5,"column_end":8}},{"value":"/ - a: Any integer, float, boolean, or reference scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10126748,"byte_end":10126820,"line_start":1479,"line_end":1479,"column_start":5,"column_end":77}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10126825,"byte_end":10126849,"line_start":1480,"line_end":1480,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5231},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10127488,"byte_end":10127493,"line_start":1500,"line_end":1500,"column_start":8,"column_end":13},"name":"spill","qualname":"::ir::builder::InstBuilder::spill","value":"fn (self, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Spill a register value to a stack slot.","sig":null,"attributes":[{"value":"/ Spill a register value to a stack slot.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10127069,"byte_end":10127112,"line_start":1487,"line_end":1487,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10127117,"byte_end":10127120,"line_start":1488,"line_end":1488,"column_start":5,"column_end":8}},{"value":"/ This instruction behaves exactly like `copy`, but the result","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10127125,"byte_end":10127189,"line_start":1489,"line_end":1489,"column_start":5,"column_end":69}},{"value":"/ value is assigned to a spill slot.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10127194,"byte_end":10127232,"line_start":1490,"line_end":1490,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10127237,"byte_end":10127240,"line_start":1491,"line_end":1491,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10127245,"byte_end":10127256,"line_start":1492,"line_end":1492,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10127261,"byte_end":10127264,"line_start":1493,"line_end":1493,"column_start":5,"column_end":8}},{"value":"/ - x: Any integer, float, boolean, or reference scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10127269,"byte_end":10127341,"line_start":1494,"line_end":1494,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10127346,"byte_end":10127349,"line_start":1495,"line_end":1495,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10127354,"byte_end":10127366,"line_start":1496,"line_end":1496,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10127371,"byte_end":10127374,"line_start":1497,"line_end":1497,"column_start":5,"column_end":8}},{"value":"/ - a: Any integer, float, boolean, or reference scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10127379,"byte_end":10127451,"line_start":1498,"line_end":1498,"column_start":5,"column_end":77}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10127456,"byte_end":10127480,"line_start":1499,"line_end":1499,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5232},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10128129,"byte_end":10128133,"line_start":1519,"line_end":1519,"column_start":8,"column_end":12},"name":"fill","qualname":"::ir::builder::InstBuilder::fill","value":"fn (self, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Load a register value from a stack slot.","sig":null,"attributes":[{"value":"/ Load a register value from a stack slot.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10127702,"byte_end":10127746,"line_start":1506,"line_end":1506,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10127751,"byte_end":10127754,"line_start":1507,"line_end":1507,"column_start":5,"column_end":8}},{"value":"/ This instruction behaves exactly like `copy`, but creates a new","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10127759,"byte_end":10127826,"line_start":1508,"line_end":1508,"column_start":5,"column_end":72}},{"value":"/ SSA value for the spilled input value.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10127831,"byte_end":10127873,"line_start":1509,"line_end":1509,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10127878,"byte_end":10127881,"line_start":1510,"line_end":1510,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10127886,"byte_end":10127897,"line_start":1511,"line_end":1511,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10127902,"byte_end":10127905,"line_start":1512,"line_end":1512,"column_start":5,"column_end":8}},{"value":"/ - x: Any integer, float, boolean, or reference scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10127910,"byte_end":10127982,"line_start":1513,"line_end":1513,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10127987,"byte_end":10127990,"line_start":1514,"line_end":1514,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10127995,"byte_end":10128007,"line_start":1515,"line_end":1515,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10128012,"byte_end":10128015,"line_start":1516,"line_end":1516,"column_start":5,"column_end":8}},{"value":"/ - a: Any integer, float, boolean, or reference scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10128020,"byte_end":10128092,"line_start":1517,"line_end":1517,"column_start":5,"column_end":77}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10128097,"byte_end":10128121,"line_start":1518,"line_end":1518,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5233},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10128913,"byte_end":10128921,"line_start":1539,"line_end":1539,"column_start":8,"column_end":16},"name":"fill_nop","qualname":"::ir::builder::InstBuilder::fill_nop","value":"fn (self, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" This is identical to `fill`, except it has no encoding, since it is a no-op.","sig":null,"attributes":[{"value":"/ This is identical to `fill`, except it has no encoding, since it is a no-op.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10128341,"byte_end":10128421,"line_start":1525,"line_end":1525,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10128426,"byte_end":10128429,"line_start":1526,"line_end":1526,"column_start":5,"column_end":8}},{"value":"/ This instruction is created only during late-stage redundant-reload removal, after all","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10128434,"byte_end":10128524,"line_start":1527,"line_end":1527,"column_start":5,"column_end":95}},{"value":"/ registers and stack slots have been assigned.  It is used to replace `fill`s that have","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10128529,"byte_end":10128619,"line_start":1528,"line_end":1528,"column_start":5,"column_end":95}},{"value":"/ been identified as redundant.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10128624,"byte_end":10128657,"line_start":1529,"line_end":1529,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10128662,"byte_end":10128665,"line_start":1530,"line_end":1530,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10128670,"byte_end":10128681,"line_start":1531,"line_end":1531,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10128686,"byte_end":10128689,"line_start":1532,"line_end":1532,"column_start":5,"column_end":8}},{"value":"/ - x: Any integer, float, boolean, or reference scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10128694,"byte_end":10128766,"line_start":1533,"line_end":1533,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10128771,"byte_end":10128774,"line_start":1534,"line_end":1534,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10128779,"byte_end":10128791,"line_start":1535,"line_end":1535,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10128796,"byte_end":10128799,"line_start":1536,"line_end":1536,"column_start":5,"column_end":8}},{"value":"/ - a: Any integer, float, boolean, or reference scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10128804,"byte_end":10128876,"line_start":1537,"line_end":1537,"column_start":5,"column_end":77}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10128881,"byte_end":10128905,"line_start":1538,"line_end":1538,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5234},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10129934,"byte_end":10129941,"line_start":1562,"line_end":1562,"column_start":8,"column_end":15},"name":"regmove","qualname":"::ir::builder::InstBuilder::regmove","value":"fn <T1, T2> (self, x: ir::Value, src: T1, dst: T2) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Temporarily divert ``x`` from ``src`` to ``dst``.","sig":null,"attributes":[{"value":"/ Temporarily divert ``x`` from ``src`` to ``dst``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10129132,"byte_end":10129185,"line_start":1545,"line_end":1545,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10129190,"byte_end":10129193,"line_start":1546,"line_end":1546,"column_start":5,"column_end":8}},{"value":"/ This instruction moves the location of a value from one register to","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10129198,"byte_end":10129269,"line_start":1547,"line_end":1547,"column_start":5,"column_end":76}},{"value":"/ another without creating a new SSA value. It is used by the register","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10129274,"byte_end":10129346,"line_start":1548,"line_end":1548,"column_start":5,"column_end":77}},{"value":"/ allocator to temporarily rearrange register assignments in order to","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10129351,"byte_end":10129422,"line_start":1549,"line_end":1549,"column_start":5,"column_end":76}},{"value":"/ satisfy instruction constraints.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10129427,"byte_end":10129463,"line_start":1550,"line_end":1550,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10129468,"byte_end":10129471,"line_start":1551,"line_end":1551,"column_start":5,"column_end":8}},{"value":"/ The register diversions created by this instruction must be undone","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10129476,"byte_end":10129546,"line_start":1552,"line_end":1552,"column_start":5,"column_end":75}},{"value":"/ before the value leaves the block. At the entry to a new block, all live","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10129551,"byte_end":10129627,"line_start":1553,"line_end":1553,"column_start":5,"column_end":81}},{"value":"/ values must be in their originally assigned registers.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10129632,"byte_end":10129690,"line_start":1554,"line_end":1554,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10129695,"byte_end":10129698,"line_start":1555,"line_end":1555,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10129703,"byte_end":10129714,"line_start":1556,"line_end":1556,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10129719,"byte_end":10129722,"line_start":1557,"line_end":1557,"column_start":5,"column_end":8}},{"value":"/ - x: Any integer, float, boolean, or reference scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10129727,"byte_end":10129799,"line_start":1558,"line_end":1558,"column_start":5,"column_end":77}},{"value":"/ - src: A register unit in the target ISA","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10129804,"byte_end":10129848,"line_start":1559,"line_end":1559,"column_start":5,"column_end":49}},{"value":"/ - dst: A register unit in the target ISA","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10129853,"byte_end":10129897,"line_start":1560,"line_end":1560,"column_start":5,"column_end":49}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10129902,"byte_end":10129926,"line_start":1561,"line_end":1561,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5237},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10130742,"byte_end":10130754,"line_start":1581,"line_end":1581,"column_start":8,"column_end":20},"name":"copy_special","qualname":"::ir::builder::InstBuilder::copy_special","value":"fn <T1, T2> (self, src: T1, dst: T2) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Copies the contents of ''src'' register to ''dst'' register.","sig":null,"attributes":[{"value":"/ Copies the contents of ''src'' register to ''dst'' register.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10130241,"byte_end":10130305,"line_start":1569,"line_end":1569,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10130310,"byte_end":10130313,"line_start":1570,"line_end":1570,"column_start":5,"column_end":8}},{"value":"/ This instructions copies the contents of one register to another","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10130318,"byte_end":10130386,"line_start":1571,"line_end":1571,"column_start":5,"column_end":73}},{"value":"/ register without involving any SSA values. This is used for copying","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10130391,"byte_end":10130462,"line_start":1572,"line_end":1572,"column_start":5,"column_end":76}},{"value":"/ special registers, e.g. copying the stack register to the frame","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10130467,"byte_end":10130534,"line_start":1573,"line_end":1573,"column_start":5,"column_end":72}},{"value":"/ register in a function prologue.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10130539,"byte_end":10130575,"line_start":1574,"line_end":1574,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10130580,"byte_end":10130583,"line_start":1575,"line_end":1575,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10130588,"byte_end":10130599,"line_start":1576,"line_end":1576,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10130604,"byte_end":10130607,"line_start":1577,"line_end":1577,"column_start":5,"column_end":8}},{"value":"/ - src: A register unit in the target ISA","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10130612,"byte_end":10130656,"line_start":1578,"line_end":1578,"column_start":5,"column_end":49}},{"value":"/ - dst: A register unit in the target ISA","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10130661,"byte_end":10130705,"line_start":1579,"line_end":1579,"column_start":5,"column_end":49}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10130710,"byte_end":10130734,"line_start":1580,"line_end":1580,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5240},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10131685,"byte_end":10131696,"line_start":1603,"line_end":1603,"column_start":8,"column_end":19},"name":"copy_to_ssa","qualname":"::ir::builder::InstBuilder::copy_to_ssa","value":"fn <T1> (self, Any: crate::ir::Type, src: T1) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Copies the contents of ''src'' register to ''a'' SSA name.","sig":null,"attributes":[{"value":"/ Copies the contents of ''src'' register to ''a'' SSA name.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10130982,"byte_end":10131044,"line_start":1587,"line_end":1587,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10131049,"byte_end":10131052,"line_start":1588,"line_end":1588,"column_start":5,"column_end":8}},{"value":"/ This instruction copies the contents of one register, regardless of its SSA name, to","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10131057,"byte_end":10131145,"line_start":1589,"line_end":1589,"column_start":5,"column_end":93}},{"value":"/ another register, creating a new SSA name.  In that sense it is a one-sided version","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10131150,"byte_end":10131237,"line_start":1590,"line_end":1590,"column_start":5,"column_end":92}},{"value":"/ of ''copy_special''.  This instruction is internal and should not be created by","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10131242,"byte_end":10131325,"line_start":1591,"line_end":1591,"column_start":5,"column_end":88}},{"value":"/ Cranelift users.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10131330,"byte_end":10131350,"line_start":1592,"line_end":1592,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10131355,"byte_end":10131358,"line_start":1593,"line_end":1593,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10131363,"byte_end":10131374,"line_start":1594,"line_end":1594,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10131379,"byte_end":10131382,"line_start":1595,"line_end":1595,"column_start":5,"column_end":8}},{"value":"/ - Any (controlling type variable): Any integer, float, boolean, or reference scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10131387,"byte_end":10131489,"line_start":1596,"line_end":1596,"column_start":5,"column_end":107}},{"value":"/ - src: A register unit in the target ISA","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10131494,"byte_end":10131538,"line_start":1597,"line_end":1597,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10131543,"byte_end":10131546,"line_start":1598,"line_end":1598,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10131551,"byte_end":10131563,"line_start":1599,"line_end":1599,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10131568,"byte_end":10131571,"line_start":1600,"line_end":1600,"column_start":5,"column_end":8}},{"value":"/ - a: Any integer, float, boolean, or reference scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10131576,"byte_end":10131648,"line_start":1601,"line_end":1601,"column_start":5,"column_end":77}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10131653,"byte_end":10131677,"line_start":1602,"line_end":1602,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5242},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10132398,"byte_end":10132406,"line_start":1622,"line_end":1622,"column_start":8,"column_end":16},"name":"copy_nop","qualname":"::ir::builder::InstBuilder::copy_nop","value":"fn (self, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Stack-slot-to-the-same-stack-slot copy, which is guaranteed to turn\n into a no-op.  This instruction is for use only within Cranelift itself.","sig":null,"attributes":[{"value":"/ Stack-slot-to-the-same-stack-slot copy, which is guaranteed to turn","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10131912,"byte_end":10131983,"line_start":1609,"line_end":1609,"column_start":5,"column_end":76}},{"value":"/ into a no-op.  This instruction is for use only within Cranelift itself.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10131988,"byte_end":10132064,"line_start":1610,"line_end":1610,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10132069,"byte_end":10132072,"line_start":1611,"line_end":1611,"column_start":5,"column_end":8}},{"value":"/ This instruction copies its input, preserving the value type.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10132077,"byte_end":10132142,"line_start":1612,"line_end":1612,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10132147,"byte_end":10132150,"line_start":1613,"line_end":1613,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10132155,"byte_end":10132166,"line_start":1614,"line_end":1614,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10132171,"byte_end":10132174,"line_start":1615,"line_end":1615,"column_start":5,"column_end":8}},{"value":"/ - x: Any integer, float, boolean, or reference scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10132179,"byte_end":10132251,"line_start":1616,"line_end":1616,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10132256,"byte_end":10132259,"line_start":1617,"line_end":1617,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10132264,"byte_end":10132276,"line_start":1618,"line_end":1618,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10132281,"byte_end":10132284,"line_start":1619,"line_end":1619,"column_start":5,"column_end":8}},{"value":"/ - a: Any integer, float, boolean, or reference scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10132289,"byte_end":10132361,"line_start":1620,"line_end":1620,"column_start":5,"column_end":77}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10132366,"byte_end":10132390,"line_start":1621,"line_end":1621,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5243},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10132894,"byte_end":10132908,"line_start":1636,"line_end":1636,"column_start":8,"column_end":22},"name":"adjust_sp_down","qualname":"::ir::builder::InstBuilder::adjust_sp_down","value":"fn (self, delta: ir::Value) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Subtracts ``delta`` offset value from the stack pointer register.","sig":null,"attributes":[{"value":"/ Subtracts ``delta`` offset value from the stack pointer register.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10132617,"byte_end":10132686,"line_start":1628,"line_end":1628,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10132691,"byte_end":10132694,"line_start":1629,"line_end":1629,"column_start":5,"column_end":8}},{"value":"/ This instruction is used to adjust the stack pointer by a dynamic amount.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10132699,"byte_end":10132776,"line_start":1630,"line_end":1630,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10132781,"byte_end":10132784,"line_start":1631,"line_end":1631,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10132789,"byte_end":10132800,"line_start":1632,"line_end":1632,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10132805,"byte_end":10132808,"line_start":1633,"line_end":1633,"column_start":5,"column_end":8}},{"value":"/ - delta: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10132813,"byte_end":10132857,"line_start":1634,"line_end":1634,"column_start":5,"column_end":49}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10132862,"byte_end":10132886,"line_start":1635,"line_end":1635,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5244},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10133480,"byte_end":10133496,"line_start":1651,"line_end":1651,"column_start":8,"column_end":24},"name":"adjust_sp_up_imm","qualname":"::ir::builder::InstBuilder::adjust_sp_up_imm","value":"fn <T1> (self, Offset: T1) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Adds ``Offset`` immediate offset value to the stack pointer register.","sig":null,"attributes":[{"value":"/ Adds ``Offset`` immediate offset value to the stack pointer register.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10133087,"byte_end":10133160,"line_start":1641,"line_end":1641,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10133165,"byte_end":10133168,"line_start":1642,"line_end":1642,"column_start":5,"column_end":8}},{"value":"/ This instruction is used to adjust the stack pointer, primarily in function","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10133173,"byte_end":10133252,"line_start":1643,"line_end":1643,"column_start":5,"column_end":84}},{"value":"/ prologues and epilogues. ``Offset`` is constrained to the size of a signed","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10133257,"byte_end":10133335,"line_start":1644,"line_end":1644,"column_start":5,"column_end":83}},{"value":"/ 32-bit integer.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10133340,"byte_end":10133359,"line_start":1645,"line_end":1645,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10133364,"byte_end":10133367,"line_start":1646,"line_end":1646,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10133372,"byte_end":10133383,"line_start":1647,"line_end":1647,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10133388,"byte_end":10133391,"line_start":1648,"line_end":1648,"column_start":5,"column_end":8}},{"value":"/ - Offset: Offset from current stack pointer","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10133396,"byte_end":10133443,"line_start":1649,"line_end":1649,"column_start":5,"column_end":52}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10133448,"byte_end":10133472,"line_start":1650,"line_end":1650,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5246},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10134084,"byte_end":10134102,"line_start":1667,"line_end":1667,"column_start":8,"column_end":26},"name":"adjust_sp_down_imm","qualname":"::ir::builder::InstBuilder::adjust_sp_down_imm","value":"fn <T1> (self, Offset: T1) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Subtracts ``Offset`` immediate offset value from the stack pointer\n register.","sig":null,"attributes":[{"value":"/ Subtracts ``Offset`` immediate offset value from the stack pointer","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10133676,"byte_end":10133746,"line_start":1656,"line_end":1656,"column_start":5,"column_end":75}},{"value":"/ register.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10133751,"byte_end":10133764,"line_start":1657,"line_end":1657,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10133769,"byte_end":10133772,"line_start":1658,"line_end":1658,"column_start":5,"column_end":8}},{"value":"/ This instruction is used to adjust the stack pointer, primarily in function","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10133777,"byte_end":10133856,"line_start":1659,"line_end":1659,"column_start":5,"column_end":84}},{"value":"/ prologues and epilogues. ``Offset`` is constrained to the size of a signed","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10133861,"byte_end":10133939,"line_start":1660,"line_end":1660,"column_start":5,"column_end":83}},{"value":"/ 32-bit integer.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10133944,"byte_end":10133963,"line_start":1661,"line_end":1661,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10133968,"byte_end":10133971,"line_start":1662,"line_end":1662,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10133976,"byte_end":10133987,"line_start":1663,"line_end":1663,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10133992,"byte_end":10133995,"line_start":1664,"line_end":1664,"column_start":5,"column_end":8}},{"value":"/ - Offset: Offset from current stack pointer","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10134000,"byte_end":10134047,"line_start":1665,"line_end":1665,"column_start":5,"column_end":52}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10134052,"byte_end":10134076,"line_start":1666,"line_end":1666,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5248},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10134750,"byte_end":10134758,"line_start":1686,"line_end":1686,"column_start":8,"column_end":16},"name":"ifcmp_sp","qualname":"::ir::builder::InstBuilder::ifcmp_sp","value":"fn (self, addr: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Compare ``addr`` with the stack pointer and set the CPU flags.","sig":null,"attributes":[{"value":"/ Compare ``addr`` with the stack pointer and set the CPU flags.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10134284,"byte_end":10134350,"line_start":1672,"line_end":1672,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10134355,"byte_end":10134358,"line_start":1673,"line_end":1673,"column_start":5,"column_end":8}},{"value":"/ This is like `ifcmp` where ``addr`` is the LHS operand and the stack","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10134363,"byte_end":10134435,"line_start":1674,"line_end":1674,"column_start":5,"column_end":77}},{"value":"/ pointer is the RHS.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10134440,"byte_end":10134463,"line_start":1675,"line_end":1675,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10134468,"byte_end":10134471,"line_start":1676,"line_end":1676,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10134476,"byte_end":10134487,"line_start":1677,"line_end":1677,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10134492,"byte_end":10134495,"line_start":1678,"line_end":1678,"column_start":5,"column_end":8}},{"value":"/ - addr: An integer address type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10134500,"byte_end":10134535,"line_start":1679,"line_end":1679,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10134540,"byte_end":10134543,"line_start":1680,"line_end":1680,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10134548,"byte_end":10134560,"line_start":1681,"line_end":1681,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10134565,"byte_end":10134568,"line_start":1682,"line_end":1682,"column_start":5,"column_end":8}},{"value":"/ - f: CPU flags representing the result of an integer comparison. These flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10134573,"byte_end":10134653,"line_start":1683,"line_end":1683,"column_start":5,"column_end":85}},{"value":"/ can be tested with an :type:`intcc` condition code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10134658,"byte_end":10134713,"line_start":1684,"line_end":1684,"column_start":5,"column_end":60}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10134718,"byte_end":10134742,"line_start":1685,"line_end":1685,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5249},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10135569,"byte_end":10135577,"line_start":1707,"line_end":1707,"column_start":8,"column_end":16},"name":"regspill","qualname":"::ir::builder::InstBuilder::regspill","value":"fn <T1> (self, x: ir::Value, src: T1, SS: ir::StackSlot) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Temporarily divert ``x`` from ``src`` to ``SS``.","sig":null,"attributes":[{"value":"/ Temporarily divert ``x`` from ``src`` to ``SS``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10134978,"byte_end":10135030,"line_start":1692,"line_end":1692,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10135035,"byte_end":10135038,"line_start":1693,"line_end":1693,"column_start":5,"column_end":8}},{"value":"/ This instruction moves the location of a value from a register to a","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10135043,"byte_end":10135114,"line_start":1694,"line_end":1694,"column_start":5,"column_end":76}},{"value":"/ stack slot without creating a new SSA value. It is used by the register","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10135119,"byte_end":10135194,"line_start":1695,"line_end":1695,"column_start":5,"column_end":80}},{"value":"/ allocator to temporarily rearrange register assignments in order to","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10135199,"byte_end":10135270,"line_start":1696,"line_end":1696,"column_start":5,"column_end":76}},{"value":"/ satisfy instruction constraints.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10135275,"byte_end":10135311,"line_start":1697,"line_end":1697,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10135316,"byte_end":10135319,"line_start":1698,"line_end":1698,"column_start":5,"column_end":8}},{"value":"/ See also `regmove`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10135324,"byte_end":10135347,"line_start":1699,"line_end":1699,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10135352,"byte_end":10135355,"line_start":1700,"line_end":1700,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10135360,"byte_end":10135371,"line_start":1701,"line_end":1701,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10135376,"byte_end":10135379,"line_start":1702,"line_end":1702,"column_start":5,"column_end":8}},{"value":"/ - x: Any integer, float, boolean, or reference scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10135384,"byte_end":10135456,"line_start":1703,"line_end":1703,"column_start":5,"column_end":77}},{"value":"/ - src: A register unit in the target ISA","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10135461,"byte_end":10135505,"line_start":1704,"line_end":1704,"column_start":5,"column_end":49}},{"value":"/ - SS: A stack slot","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10135510,"byte_end":10135532,"line_start":1705,"line_end":1705,"column_start":5,"column_end":27}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10135537,"byte_end":10135561,"line_start":1706,"line_end":1706,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5251},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10136425,"byte_end":10136432,"line_start":1728,"line_end":1728,"column_start":8,"column_end":15},"name":"regfill","qualname":"::ir::builder::InstBuilder::regfill","value":"fn <T1> (self, x: ir::Value, SS: ir::StackSlot, dst: T1) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Temporarily divert ``x`` from ``SS`` to ``dst``.","sig":null,"attributes":[{"value":"/ Temporarily divert ``x`` from ``SS`` to ``dst``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10135834,"byte_end":10135886,"line_start":1713,"line_end":1713,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10135891,"byte_end":10135894,"line_start":1714,"line_end":1714,"column_start":5,"column_end":8}},{"value":"/ This instruction moves the location of a value from a stack slot to a","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10135899,"byte_end":10135972,"line_start":1715,"line_end":1715,"column_start":5,"column_end":78}},{"value":"/ register without creating a new SSA value. It is used by the register","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10135977,"byte_end":10136050,"line_start":1716,"line_end":1716,"column_start":5,"column_end":78}},{"value":"/ allocator to temporarily rearrange register assignments in order to","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10136055,"byte_end":10136126,"line_start":1717,"line_end":1717,"column_start":5,"column_end":76}},{"value":"/ satisfy instruction constraints.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10136131,"byte_end":10136167,"line_start":1718,"line_end":1718,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10136172,"byte_end":10136175,"line_start":1719,"line_end":1719,"column_start":5,"column_end":8}},{"value":"/ See also `regmove`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10136180,"byte_end":10136203,"line_start":1720,"line_end":1720,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10136208,"byte_end":10136211,"line_start":1721,"line_end":1721,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10136216,"byte_end":10136227,"line_start":1722,"line_end":1722,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10136232,"byte_end":10136235,"line_start":1723,"line_end":1723,"column_start":5,"column_end":8}},{"value":"/ - x: Any integer, float, boolean, or reference scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10136240,"byte_end":10136312,"line_start":1724,"line_end":1724,"column_start":5,"column_end":77}},{"value":"/ - SS: A stack slot","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10136317,"byte_end":10136339,"line_start":1725,"line_end":1725,"column_start":5,"column_end":27}},{"value":"/ - dst: A register unit in the target ISA","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10136344,"byte_end":10136388,"line_start":1726,"line_end":1726,"column_start":5,"column_end":49}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10136393,"byte_end":10136417,"line_start":1727,"line_end":1727,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5253},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10136937,"byte_end":10136946,"line_start":1741,"line_end":1741,"column_start":8,"column_end":17},"name":"safepoint","qualname":"::ir::builder::InstBuilder::safepoint","value":"fn (mut self, args: &[Value]) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" This instruction will provide live reference values at a point in\n the function. It can only be used by the compiler.","sig":null,"attributes":[{"value":"/ This instruction will provide live reference values at a point in","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10136687,"byte_end":10136756,"line_start":1734,"line_end":1734,"column_start":5,"column_end":74}},{"value":"/ the function. It can only be used by the compiler.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10136761,"byte_end":10136815,"line_start":1735,"line_end":1735,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10136820,"byte_end":10136823,"line_start":1736,"line_end":1736,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10136828,"byte_end":10136839,"line_start":1737,"line_end":1737,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10136844,"byte_end":10136847,"line_start":1738,"line_end":1738,"column_start":5,"column_end":8}},{"value":"/ - args: Variable number of args for Stackmap","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10136852,"byte_end":10136900,"line_start":1739,"line_end":1739,"column_start":5,"column_end":53}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10136905,"byte_end":10136929,"line_start":1740,"line_end":1740,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5254},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10137683,"byte_end":10137689,"line_start":1765,"line_end":1765,"column_start":8,"column_end":14},"name":"vsplit","qualname":"::ir::builder::InstBuilder::vsplit","value":"fn (self, x: ir::Value) -> (Value, Value)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Split a vector into two halves.","sig":null,"attributes":[{"value":"/ Split a vector into two halves.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10137252,"byte_end":10137287,"line_start":1750,"line_end":1750,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10137292,"byte_end":10137295,"line_start":1751,"line_end":1751,"column_start":5,"column_end":8}},{"value":"/ Split the vector `x` into two separate values, each containing half of","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10137300,"byte_end":10137374,"line_start":1752,"line_end":1752,"column_start":5,"column_end":79}},{"value":"/ the lanes from ``x``. The result may be two scalars if ``x`` only had","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10137379,"byte_end":10137452,"line_start":1753,"line_end":1753,"column_start":5,"column_end":78}},{"value":"/ two lanes.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10137457,"byte_end":10137471,"line_start":1754,"line_end":1754,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10137476,"byte_end":10137479,"line_start":1755,"line_end":1755,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10137484,"byte_end":10137495,"line_start":1756,"line_end":1756,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10137500,"byte_end":10137503,"line_start":1757,"line_end":1757,"column_start":5,"column_end":8}},{"value":"/ - x: Vector to split","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10137508,"byte_end":10137532,"line_start":1758,"line_end":1758,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10137537,"byte_end":10137540,"line_start":1759,"line_end":1759,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10137545,"byte_end":10137557,"line_start":1760,"line_end":1760,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10137562,"byte_end":10137565,"line_start":1761,"line_end":1761,"column_start":5,"column_end":8}},{"value":"/ - lo: Low-numbered lanes of `x`","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10137570,"byte_end":10137605,"line_start":1762,"line_end":1762,"column_start":5,"column_end":40}},{"value":"/ - hi: High-numbered lanes of `x`","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10137610,"byte_end":10137646,"line_start":1763,"line_end":1763,"column_start":5,"column_end":41}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10137651,"byte_end":10137675,"line_start":1764,"line_end":1764,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5255},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10138562,"byte_end":10138569,"line_start":1790,"line_end":1790,"column_start":8,"column_end":15},"name":"vconcat","qualname":"::ir::builder::InstBuilder::vconcat","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Vector concatenation.","sig":null,"attributes":[{"value":"/ Vector concatenation.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10137963,"byte_end":10137988,"line_start":1772,"line_end":1772,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10137993,"byte_end":10137996,"line_start":1773,"line_end":1773,"column_start":5,"column_end":8}},{"value":"/ Return a vector formed by concatenating ``x`` and ``y``. The resulting","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10138001,"byte_end":10138075,"line_start":1774,"line_end":1774,"column_start":5,"column_end":79}},{"value":"/ vector type has twice as many lanes as each of the inputs. The lanes of","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10138080,"byte_end":10138155,"line_start":1775,"line_end":1775,"column_start":5,"column_end":80}},{"value":"/ ``x`` appear as the low-numbered lanes, and the lanes of ``y`` become","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10138160,"byte_end":10138233,"line_start":1776,"line_end":1776,"column_start":5,"column_end":78}},{"value":"/ the high-numbered lanes of ``a``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10138238,"byte_end":10138275,"line_start":1777,"line_end":1777,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10138280,"byte_end":10138283,"line_start":1778,"line_end":1778,"column_start":5,"column_end":8}},{"value":"/ It is possible to form a vector by concatenating two scalars.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10138288,"byte_end":10138353,"line_start":1779,"line_end":1779,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10138358,"byte_end":10138361,"line_start":1780,"line_end":1780,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10138366,"byte_end":10138377,"line_start":1781,"line_end":1781,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10138382,"byte_end":10138385,"line_start":1782,"line_end":1782,"column_start":5,"column_end":8}},{"value":"/ - x: Low-numbered lanes","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10138390,"byte_end":10138417,"line_start":1783,"line_end":1783,"column_start":5,"column_end":32}},{"value":"/ - y: High-numbered lanes","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10138422,"byte_end":10138450,"line_start":1784,"line_end":1784,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10138455,"byte_end":10138458,"line_start":1785,"line_end":1785,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10138463,"byte_end":10138475,"line_start":1786,"line_end":1786,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10138480,"byte_end":10138483,"line_start":1787,"line_end":1787,"column_start":5,"column_end":8}},{"value":"/ - a: Concatenation of `x` and `y`","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10138488,"byte_end":10138525,"line_start":1788,"line_end":1788,"column_start":5,"column_end":42}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10138530,"byte_end":10138554,"line_start":1789,"line_end":1789,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5256},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10139186,"byte_end":10139193,"line_start":1811,"line_end":1811,"column_start":8,"column_end":15},"name":"vselect","qualname":"::ir::builder::InstBuilder::vselect","value":"fn (self, c: ir::Value, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Vector lane select.","sig":null,"attributes":[{"value":"/ Vector lane select.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10138798,"byte_end":10138821,"line_start":1796,"line_end":1796,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10138826,"byte_end":10138829,"line_start":1797,"line_end":1797,"column_start":5,"column_end":8}},{"value":"/ Select lanes from ``x`` or ``y`` controlled by the lanes of the boolean","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10138834,"byte_end":10138909,"line_start":1798,"line_end":1798,"column_start":5,"column_end":80}},{"value":"/ vector ``c``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10138914,"byte_end":10138931,"line_start":1799,"line_end":1799,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10138936,"byte_end":10138939,"line_start":1800,"line_end":1800,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10138944,"byte_end":10138955,"line_start":1801,"line_end":1801,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10138960,"byte_end":10138963,"line_start":1802,"line_end":1802,"column_start":5,"column_end":8}},{"value":"/ - c: Controlling vector","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10138968,"byte_end":10138995,"line_start":1803,"line_end":1803,"column_start":5,"column_end":32}},{"value":"/ - x: Value to use where `c` is true","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10139000,"byte_end":10139039,"line_start":1804,"line_end":1804,"column_start":5,"column_end":44}},{"value":"/ - y: Value to use where `c` is false","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10139044,"byte_end":10139084,"line_start":1805,"line_end":1805,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10139089,"byte_end":10139092,"line_start":1806,"line_end":1806,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10139097,"byte_end":10139109,"line_start":1807,"line_end":1807,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10139114,"byte_end":10139117,"line_start":1808,"line_end":1808,"column_start":5,"column_end":8}},{"value":"/ - a: A SIMD vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10139122,"byte_end":10139149,"line_start":1809,"line_end":1809,"column_start":5,"column_end":32}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10139154,"byte_end":10139178,"line_start":1810,"line_end":1810,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5257},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10139751,"byte_end":10139760,"line_start":1829,"line_end":1829,"column_start":8,"column_end":17},"name":"vany_true","qualname":"::ir::builder::InstBuilder::vany_true","value":"fn (self, a: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Reduce a vector to a scalar boolean.","sig":null,"attributes":[{"value":"/ Reduce a vector to a scalar boolean.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10139440,"byte_end":10139480,"line_start":1817,"line_end":1817,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10139485,"byte_end":10139488,"line_start":1818,"line_end":1818,"column_start":5,"column_end":8}},{"value":"/ Return a scalar boolean true if any lane in ``a`` is non-zero, false otherwise.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10139493,"byte_end":10139576,"line_start":1819,"line_end":1819,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10139581,"byte_end":10139584,"line_start":1820,"line_end":1820,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10139589,"byte_end":10139600,"line_start":1821,"line_end":1821,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10139605,"byte_end":10139608,"line_start":1822,"line_end":1822,"column_start":5,"column_end":8}},{"value":"/ - a: A SIMD vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10139613,"byte_end":10139640,"line_start":1823,"line_end":1823,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10139645,"byte_end":10139648,"line_start":1824,"line_end":1824,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10139653,"byte_end":10139665,"line_start":1825,"line_end":1825,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10139670,"byte_end":10139673,"line_start":1826,"line_end":1826,"column_start":5,"column_end":8}},{"value":"/ - s: A boolean type with 1 bits.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10139678,"byte_end":10139714,"line_start":1827,"line_end":1827,"column_start":5,"column_end":41}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10139719,"byte_end":10139743,"line_start":1828,"line_end":1828,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5258},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10140285,"byte_end":10140294,"line_start":1847,"line_end":1847,"column_start":8,"column_end":17},"name":"vall_true","qualname":"::ir::builder::InstBuilder::vall_true","value":"fn (self, a: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Reduce a vector to a scalar boolean.","sig":null,"attributes":[{"value":"/ Reduce a vector to a scalar boolean.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10139972,"byte_end":10140012,"line_start":1835,"line_end":1835,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10140017,"byte_end":10140020,"line_start":1836,"line_end":1836,"column_start":5,"column_end":8}},{"value":"/ Return a scalar boolean true if all lanes in ``i`` are non-zero, false otherwise.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10140025,"byte_end":10140110,"line_start":1837,"line_end":1837,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10140115,"byte_end":10140118,"line_start":1838,"line_end":1838,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10140123,"byte_end":10140134,"line_start":1839,"line_end":1839,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10140139,"byte_end":10140142,"line_start":1840,"line_end":1840,"column_start":5,"column_end":8}},{"value":"/ - a: A SIMD vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10140147,"byte_end":10140174,"line_start":1841,"line_end":1841,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10140179,"byte_end":10140182,"line_start":1842,"line_end":1842,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10140187,"byte_end":10140199,"line_start":1843,"line_end":1843,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10140204,"byte_end":10140207,"line_start":1844,"line_end":1844,"column_start":5,"column_end":8}},{"value":"/ - s: A boolean type with 1 bits.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10140212,"byte_end":10140248,"line_start":1845,"line_end":1845,"column_start":5,"column_end":41}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10140253,"byte_end":10140277,"line_start":1846,"line_end":1846,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5259},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10140791,"byte_end":10140796,"line_start":1866,"line_end":1866,"column_start":8,"column_end":13},"name":"splat","qualname":"::ir::builder::InstBuilder::splat","value":"fn (self, TxN: crate::ir::Type, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Vector splat.","sig":null,"attributes":[{"value":"/ Vector splat.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10140506,"byte_end":10140523,"line_start":1853,"line_end":1853,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10140528,"byte_end":10140531,"line_start":1854,"line_end":1854,"column_start":5,"column_end":8}},{"value":"/ Return a vector whose lanes are all ``x``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10140536,"byte_end":10140582,"line_start":1855,"line_end":1855,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10140587,"byte_end":10140590,"line_start":1856,"line_end":1856,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10140595,"byte_end":10140606,"line_start":1857,"line_end":1857,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10140611,"byte_end":10140614,"line_start":1858,"line_end":1858,"column_start":5,"column_end":8}},{"value":"/ - TxN (controlling type variable): A SIMD vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10140619,"byte_end":10140676,"line_start":1859,"line_end":1859,"column_start":5,"column_end":62}},{"value":"/ - x:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10140681,"byte_end":10140689,"line_start":1860,"line_end":1860,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10140694,"byte_end":10140697,"line_start":1861,"line_end":1861,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10140702,"byte_end":10140714,"line_start":1862,"line_end":1862,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10140719,"byte_end":10140722,"line_start":1863,"line_end":1863,"column_start":5,"column_end":8}},{"value":"/ - a: A SIMD vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10140727,"byte_end":10140754,"line_start":1864,"line_end":1864,"column_start":5,"column_end":32}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10140759,"byte_end":10140783,"line_start":1865,"line_end":1865,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5260},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10141363,"byte_end":10141373,"line_start":1886,"line_end":1886,"column_start":8,"column_end":18},"name":"insertlane","qualname":"::ir::builder::InstBuilder::insertlane","value":"fn <T1> (self, x: ir::Value, Idx: T1, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Insert ``y`` as lane ``Idx`` in x.","sig":null,"attributes":[{"value":"/ Insert ``y`` as lane ``Idx`` in x.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10140953,"byte_end":10140991,"line_start":1871,"line_end":1871,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10140996,"byte_end":10140999,"line_start":1872,"line_end":1872,"column_start":5,"column_end":8}},{"value":"/ The lane index, ``Idx``, is an immediate value, not an SSA value. It","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10141004,"byte_end":10141076,"line_start":1873,"line_end":1873,"column_start":5,"column_end":77}},{"value":"/ must indicate a valid lane index for the type of ``x``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10141081,"byte_end":10141140,"line_start":1874,"line_end":1874,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10141145,"byte_end":10141148,"line_start":1875,"line_end":1875,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10141153,"byte_end":10141164,"line_start":1876,"line_end":1876,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10141169,"byte_end":10141172,"line_start":1877,"line_end":1877,"column_start":5,"column_end":8}},{"value":"/ - x: SIMD vector to modify","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10141177,"byte_end":10141207,"line_start":1878,"line_end":1878,"column_start":5,"column_end":35}},{"value":"/ - Idx: Lane index","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10141212,"byte_end":10141233,"line_start":1879,"line_end":1879,"column_start":5,"column_end":26}},{"value":"/ - y: New lane value","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10141238,"byte_end":10141261,"line_start":1880,"line_end":1880,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10141266,"byte_end":10141269,"line_start":1881,"line_end":1881,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10141274,"byte_end":10141286,"line_start":1882,"line_end":1882,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10141291,"byte_end":10141294,"line_start":1883,"line_end":1883,"column_start":5,"column_end":8}},{"value":"/ - a: A SIMD vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10141299,"byte_end":10141326,"line_start":1884,"line_end":1884,"column_start":5,"column_end":32}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10141331,"byte_end":10141355,"line_start":1885,"line_end":1885,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5262},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10142231,"byte_end":10142242,"line_start":1909,"line_end":1909,"column_start":8,"column_end":19},"name":"extractlane","qualname":"::ir::builder::InstBuilder::extractlane","value":"fn <T1> (self, x: ir::Value, Idx: T1) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Extract lane ``Idx`` from ``x``.","sig":null,"attributes":[{"value":"/ Extract lane ``Idx`` from ``x``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10141686,"byte_end":10141722,"line_start":1893,"line_end":1893,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10141727,"byte_end":10141730,"line_start":1894,"line_end":1894,"column_start":5,"column_end":8}},{"value":"/ The lane index, ``Idx``, is an immediate value, not an SSA value. It","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10141735,"byte_end":10141807,"line_start":1895,"line_end":1895,"column_start":5,"column_end":77}},{"value":"/ must indicate a valid lane index for the type of ``x``. Note that the upper bits of ``a``","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10141812,"byte_end":10141905,"line_start":1896,"line_end":1896,"column_start":5,"column_end":98}},{"value":"/ may or may not be zeroed depending on the ISA but the type system should prevent using","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10141910,"byte_end":10142000,"line_start":1897,"line_end":1897,"column_start":5,"column_end":95}},{"value":"/ ``a`` as anything other than the extracted value.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10142005,"byte_end":10142058,"line_start":1898,"line_end":1898,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10142063,"byte_end":10142066,"line_start":1899,"line_end":1899,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10142071,"byte_end":10142082,"line_start":1900,"line_end":1900,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10142087,"byte_end":10142090,"line_start":1901,"line_end":1901,"column_start":5,"column_end":8}},{"value":"/ - x: A SIMD vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10142095,"byte_end":10142122,"line_start":1902,"line_end":1902,"column_start":5,"column_end":32}},{"value":"/ - Idx: Lane index","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10142127,"byte_end":10142148,"line_start":1903,"line_end":1903,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10142153,"byte_end":10142156,"line_start":1904,"line_end":1904,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10142161,"byte_end":10142173,"line_start":1905,"line_end":1905,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10142178,"byte_end":10142181,"line_start":1906,"line_end":1906,"column_start":5,"column_end":8}},{"value":"/ - a:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10142186,"byte_end":10142194,"line_start":1907,"line_end":1907,"column_start":5,"column_end":13}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10142199,"byte_end":10142223,"line_start":1908,"line_end":1908,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5264},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10143961,"byte_end":10143965,"line_start":1950,"line_end":1950,"column_start":8,"column_end":12},"name":"icmp","qualname":"::ir::builder::InstBuilder::icmp","value":"fn <T1> (self, Cond: T1, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Integer comparison.","sig":null,"attributes":[{"value":"/ Integer comparison.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10142540,"byte_end":10142563,"line_start":1916,"line_end":1916,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10142568,"byte_end":10142571,"line_start":1917,"line_end":1917,"column_start":5,"column_end":8}},{"value":"/ The condition code determines if the operands are interpreted as signed","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10142576,"byte_end":10142651,"line_start":1918,"line_end":1918,"column_start":5,"column_end":80}},{"value":"/ or unsigned integers.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10142656,"byte_end":10142681,"line_start":1919,"line_end":1919,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10142686,"byte_end":10142689,"line_start":1920,"line_end":1920,"column_start":5,"column_end":8}},{"value":"/ | Signed | Unsigned | Condition             |","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10142694,"byte_end":10142743,"line_start":1921,"line_end":1921,"column_start":5,"column_end":54}},{"value":"/ |--------|----------|-----------------------|","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10142748,"byte_end":10142797,"line_start":1922,"line_end":1922,"column_start":5,"column_end":54}},{"value":"/ | eq     | eq       | Equal                 |","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10142802,"byte_end":10142851,"line_start":1923,"line_end":1923,"column_start":5,"column_end":54}},{"value":"/ | ne     | ne       | Not equal             |","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10142856,"byte_end":10142905,"line_start":1924,"line_end":1924,"column_start":5,"column_end":54}},{"value":"/ | slt    | ult      | Less than             |","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10142910,"byte_end":10142959,"line_start":1925,"line_end":1925,"column_start":5,"column_end":54}},{"value":"/ | sge    | uge      | Greater than or equal |","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10142964,"byte_end":10143013,"line_start":1926,"line_end":1926,"column_start":5,"column_end":54}},{"value":"/ | sgt    | ugt      | Greater than          |","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10143018,"byte_end":10143067,"line_start":1927,"line_end":1927,"column_start":5,"column_end":54}},{"value":"/ | sle    | ule      | Less than or equal    |","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10143072,"byte_end":10143121,"line_start":1928,"line_end":1928,"column_start":5,"column_end":54}},{"value":"/ | of     | *        | Overflow              |","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10143126,"byte_end":10143175,"line_start":1929,"line_end":1929,"column_start":5,"column_end":54}},{"value":"/ | nof    | *        | No Overflow           |","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10143180,"byte_end":10143229,"line_start":1930,"line_end":1930,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10143234,"byte_end":10143237,"line_start":1931,"line_end":1931,"column_start":5,"column_end":8}},{"value":"/ \\* The unsigned version of overflow conditions have ISA-specific","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10143242,"byte_end":10143310,"line_start":1932,"line_end":1932,"column_start":5,"column_end":73}},{"value":"/ semantics and thus have been kept as methods on the TargetIsa trait as","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10143315,"byte_end":10143389,"line_start":1933,"line_end":1933,"column_start":5,"column_end":79}},{"value":"/ [unsigned_add_overflow_condition][isa::TargetIsa::unsigned_add_overflow_condition] and","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10143394,"byte_end":10143484,"line_start":1934,"line_end":1934,"column_start":5,"column_end":95}},{"value":"/ [unsigned_sub_overflow_condition][isa::TargetIsa::unsigned_sub_overflow_condition].","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10143489,"byte_end":10143576,"line_start":1935,"line_end":1935,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10143581,"byte_end":10143584,"line_start":1936,"line_end":1936,"column_start":5,"column_end":8}},{"value":"/ When this instruction compares integer vectors, it returns a boolean","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10143589,"byte_end":10143661,"line_start":1937,"line_end":1937,"column_start":5,"column_end":77}},{"value":"/ vector of lane-wise comparisons.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10143666,"byte_end":10143702,"line_start":1938,"line_end":1938,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10143707,"byte_end":10143710,"line_start":1939,"line_end":1939,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10143715,"byte_end":10143726,"line_start":1940,"line_end":1940,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10143731,"byte_end":10143734,"line_start":1941,"line_end":1941,"column_start":5,"column_end":8}},{"value":"/ - Cond: An integer comparison condition code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10143739,"byte_end":10143788,"line_start":1942,"line_end":1942,"column_start":5,"column_end":54}},{"value":"/ - x: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10143793,"byte_end":10143833,"line_start":1943,"line_end":1943,"column_start":5,"column_end":45}},{"value":"/ - y: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10143838,"byte_end":10143878,"line_start":1944,"line_end":1944,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10143883,"byte_end":10143886,"line_start":1945,"line_end":1945,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10143891,"byte_end":10143903,"line_start":1946,"line_end":1946,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10143908,"byte_end":10143911,"line_start":1947,"line_end":1947,"column_start":5,"column_end":8}},{"value":"/ - a:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10143916,"byte_end":10143924,"line_start":1948,"line_end":1948,"column_start":5,"column_end":13}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10143929,"byte_end":10143953,"line_start":1949,"line_end":1949,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5266},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10144814,"byte_end":10144822,"line_start":1975,"line_end":1975,"column_start":8,"column_end":16},"name":"icmp_imm","qualname":"::ir::builder::InstBuilder::icmp_imm","value":"fn <T1, T2> (self, Cond: T1, x: ir::Value, Y: T2) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Compare scalar integer to a constant.","sig":null,"attributes":[{"value":"/ Compare scalar integer to a constant.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10144275,"byte_end":10144316,"line_start":1957,"line_end":1957,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10144321,"byte_end":10144324,"line_start":1958,"line_end":1958,"column_start":5,"column_end":8}},{"value":"/ This is the same as the `icmp` instruction, except one operand is","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10144329,"byte_end":10144398,"line_start":1959,"line_end":1959,"column_start":5,"column_end":74}},{"value":"/ an immediate constant.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10144403,"byte_end":10144429,"line_start":1960,"line_end":1960,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10144434,"byte_end":10144437,"line_start":1961,"line_end":1961,"column_start":5,"column_end":8}},{"value":"/ This instruction can only compare scalars. Use `icmp` for","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10144442,"byte_end":10144503,"line_start":1962,"line_end":1962,"column_start":5,"column_end":66}},{"value":"/ lane-wise vector comparisons.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10144508,"byte_end":10144541,"line_start":1963,"line_end":1963,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10144546,"byte_end":10144549,"line_start":1964,"line_end":1964,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10144554,"byte_end":10144565,"line_start":1965,"line_end":1965,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10144570,"byte_end":10144573,"line_start":1966,"line_end":1966,"column_start":5,"column_end":8}},{"value":"/ - Cond: An integer comparison condition code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10144578,"byte_end":10144627,"line_start":1967,"line_end":1967,"column_start":5,"column_end":54}},{"value":"/ - x: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10144632,"byte_end":10144662,"line_start":1968,"line_end":1968,"column_start":5,"column_end":35}},{"value":"/ - Y: A 64-bit immediate integer.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10144667,"byte_end":10144703,"line_start":1969,"line_end":1969,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10144708,"byte_end":10144711,"line_start":1970,"line_end":1970,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10144716,"byte_end":10144728,"line_start":1971,"line_end":1971,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10144733,"byte_end":10144736,"line_start":1972,"line_end":1972,"column_start":5,"column_end":8}},{"value":"/ - a: A boolean type with 1 bits.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10144741,"byte_end":10144777,"line_start":1973,"line_end":1973,"column_start":5,"column_end":41}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10144782,"byte_end":10144806,"line_start":1974,"line_end":1974,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5269},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10145664,"byte_end":10145669,"line_start":1998,"line_end":1998,"column_start":8,"column_end":13},"name":"ifcmp","qualname":"::ir::builder::InstBuilder::ifcmp","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Compare scalar integers and return flags.","sig":null,"attributes":[{"value":"/ Compare scalar integers and return flags.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10145190,"byte_end":10145235,"line_start":1983,"line_end":1983,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10145240,"byte_end":10145243,"line_start":1984,"line_end":1984,"column_start":5,"column_end":8}},{"value":"/ Compare two scalar integer values and return integer CPU flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10145248,"byte_end":10145314,"line_start":1985,"line_end":1985,"column_start":5,"column_end":71}},{"value":"/ representing the result.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10145319,"byte_end":10145347,"line_start":1986,"line_end":1986,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10145352,"byte_end":10145355,"line_start":1987,"line_end":1987,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10145360,"byte_end":10145371,"line_start":1988,"line_end":1988,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10145376,"byte_end":10145379,"line_start":1989,"line_end":1989,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10145384,"byte_end":10145414,"line_start":1990,"line_end":1990,"column_start":5,"column_end":35}},{"value":"/ - y: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10145419,"byte_end":10145449,"line_start":1991,"line_end":1991,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10145454,"byte_end":10145457,"line_start":1992,"line_end":1992,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10145462,"byte_end":10145474,"line_start":1993,"line_end":1993,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10145479,"byte_end":10145482,"line_start":1994,"line_end":1994,"column_start":5,"column_end":8}},{"value":"/ - f: CPU flags representing the result of an integer comparison. These flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10145487,"byte_end":10145567,"line_start":1995,"line_end":1995,"column_start":5,"column_end":85}},{"value":"/ can be tested with an :type:`intcc` condition code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10145572,"byte_end":10145627,"line_start":1996,"line_end":1996,"column_start":5,"column_end":60}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10145632,"byte_end":10145656,"line_start":1997,"line_end":1997,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5270},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10146394,"byte_end":10146403,"line_start":2019,"line_end":2019,"column_start":8,"column_end":17},"name":"ifcmp_imm","qualname":"::ir::builder::InstBuilder::ifcmp_imm","value":"fn <T1> (self, x: ir::Value, Y: T1) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Compare scalar integer to a constant and return flags.","sig":null,"attributes":[{"value":"/ Compare scalar integer to a constant and return flags.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10145896,"byte_end":10145954,"line_start":2004,"line_end":2004,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10145959,"byte_end":10145962,"line_start":2005,"line_end":2005,"column_start":5,"column_end":8}},{"value":"/ Like `icmp_imm`, but returns integer CPU flags instead of testing","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10145967,"byte_end":10146036,"line_start":2006,"line_end":2006,"column_start":5,"column_end":74}},{"value":"/ a specific condition code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10146041,"byte_end":10146071,"line_start":2007,"line_end":2007,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10146076,"byte_end":10146079,"line_start":2008,"line_end":2008,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10146084,"byte_end":10146095,"line_start":2009,"line_end":2009,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10146100,"byte_end":10146103,"line_start":2010,"line_end":2010,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10146108,"byte_end":10146138,"line_start":2011,"line_end":2011,"column_start":5,"column_end":35}},{"value":"/ - Y: A 64-bit immediate integer.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10146143,"byte_end":10146179,"line_start":2012,"line_end":2012,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10146184,"byte_end":10146187,"line_start":2013,"line_end":2013,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10146192,"byte_end":10146204,"line_start":2014,"line_end":2014,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10146209,"byte_end":10146212,"line_start":2015,"line_end":2015,"column_start":5,"column_end":8}},{"value":"/ - f: CPU flags representing the result of an integer comparison. These flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10146217,"byte_end":10146297,"line_start":2016,"line_end":2016,"column_start":5,"column_end":85}},{"value":"/ can be tested with an :type:`intcc` condition code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10146302,"byte_end":10146357,"line_start":2017,"line_end":2017,"column_start":5,"column_end":60}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10146362,"byte_end":10146386,"line_start":2018,"line_end":2018,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5272},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10147092,"byte_end":10147096,"line_start":2040,"line_end":2040,"column_start":8,"column_end":12},"name":"iadd","qualname":"::ir::builder::InstBuilder::iadd","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Wrapping integer addition: `a := x + y \\pmod{2^B}`.","sig":null,"attributes":[{"value":"/ Wrapping integer addition: `a := x + y \\pmod{2^B}`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10146688,"byte_end":10146743,"line_start":2026,"line_end":2026,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10146748,"byte_end":10146751,"line_start":2027,"line_end":2027,"column_start":5,"column_end":8}},{"value":"/ This instruction does not depend on the signed/unsigned interpretation","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10146756,"byte_end":10146830,"line_start":2028,"line_end":2028,"column_start":5,"column_end":79}},{"value":"/ of the operands.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10146835,"byte_end":10146855,"line_start":2029,"line_end":2029,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10146860,"byte_end":10146863,"line_start":2030,"line_end":2030,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10146868,"byte_end":10146879,"line_start":2031,"line_end":2031,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10146884,"byte_end":10146887,"line_start":2032,"line_end":2032,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10146892,"byte_end":10146932,"line_start":2033,"line_end":2033,"column_start":5,"column_end":45}},{"value":"/ - y: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10146937,"byte_end":10146977,"line_start":2034,"line_end":2034,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10146982,"byte_end":10146985,"line_start":2035,"line_end":2035,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10146990,"byte_end":10147002,"line_start":2036,"line_end":2036,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10147007,"byte_end":10147010,"line_start":2037,"line_end":2037,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10147015,"byte_end":10147055,"line_start":2038,"line_end":2038,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10147060,"byte_end":10147084,"line_start":2039,"line_end":2039,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5273},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10147847,"byte_end":10147855,"line_start":2061,"line_end":2061,"column_start":8,"column_end":16},"name":"uadd_sat","qualname":"::ir::builder::InstBuilder::uadd_sat","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Add with unsigned saturation.","sig":null,"attributes":[{"value":"/ Add with unsigned saturation.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10147322,"byte_end":10147355,"line_start":2046,"line_end":2046,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10147360,"byte_end":10147363,"line_start":2047,"line_end":2047,"column_start":5,"column_end":8}},{"value":"/ This is similar to `iadd` but the operands are interpreted as unsigned integers and their","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10147368,"byte_end":10147461,"line_start":2048,"line_end":2048,"column_start":5,"column_end":98}},{"value":"/ summed result, instead of wrapping, will be saturated to the highest unsigned integer for","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10147466,"byte_end":10147559,"line_start":2049,"line_end":2049,"column_start":5,"column_end":98}},{"value":"/ the controlling type (e.g. `0xFF` for i8).","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10147564,"byte_end":10147610,"line_start":2050,"line_end":2050,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10147615,"byte_end":10147618,"line_start":2051,"line_end":2051,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10147623,"byte_end":10147634,"line_start":2052,"line_end":2052,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10147639,"byte_end":10147642,"line_start":2053,"line_end":2053,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10147647,"byte_end":10147687,"line_start":2054,"line_end":2054,"column_start":5,"column_end":45}},{"value":"/ - y: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10147692,"byte_end":10147732,"line_start":2055,"line_end":2055,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10147737,"byte_end":10147740,"line_start":2056,"line_end":2056,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10147745,"byte_end":10147757,"line_start":2057,"line_end":2057,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10147762,"byte_end":10147765,"line_start":2058,"line_end":2058,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10147770,"byte_end":10147810,"line_start":2059,"line_end":2059,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10147815,"byte_end":10147839,"line_start":2060,"line_end":2060,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5274},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10148759,"byte_end":10148767,"line_start":2084,"line_end":2084,"column_start":8,"column_end":16},"name":"sadd_sat","qualname":"::ir::builder::InstBuilder::sadd_sat","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Add with signed saturation.","sig":null,"attributes":[{"value":"/ Add with signed saturation.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10148084,"byte_end":10148115,"line_start":2067,"line_end":2067,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10148120,"byte_end":10148123,"line_start":2068,"line_end":2068,"column_start":5,"column_end":8}},{"value":"/ This is similar to `iadd` but the operands are interpreted as signed integers and their","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10148128,"byte_end":10148219,"line_start":2069,"line_end":2069,"column_start":5,"column_end":96}},{"value":"/ summed result, instead of wrapping, will be saturated to the lowest or highest","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10148224,"byte_end":10148306,"line_start":2070,"line_end":2070,"column_start":5,"column_end":87}},{"value":"/ signed integer for the controlling type (e.g. `0x80` or `0x7F` for i8). For example,","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10148311,"byte_end":10148399,"line_start":2071,"line_end":2071,"column_start":5,"column_end":93}},{"value":"/ since an `iadd_ssat.i8` of `0x70` and `0x70` is greater than `0x7F`, the result will be","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10148404,"byte_end":10148495,"line_start":2072,"line_end":2072,"column_start":5,"column_end":96}},{"value":"/ clamped to `0x7F`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10148500,"byte_end":10148522,"line_start":2073,"line_end":2073,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10148527,"byte_end":10148530,"line_start":2074,"line_end":2074,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10148535,"byte_end":10148546,"line_start":2075,"line_end":2075,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10148551,"byte_end":10148554,"line_start":2076,"line_end":2076,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10148559,"byte_end":10148599,"line_start":2077,"line_end":2077,"column_start":5,"column_end":45}},{"value":"/ - y: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10148604,"byte_end":10148644,"line_start":2078,"line_end":2078,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10148649,"byte_end":10148652,"line_start":2079,"line_end":2079,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10148657,"byte_end":10148669,"line_start":2080,"line_end":2080,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10148674,"byte_end":10148677,"line_start":2081,"line_end":2081,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10148682,"byte_end":10148722,"line_start":2082,"line_end":2082,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10148727,"byte_end":10148751,"line_start":2083,"line_end":2083,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5275},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10149403,"byte_end":10149407,"line_start":2104,"line_end":2104,"column_start":8,"column_end":12},"name":"isub","qualname":"::ir::builder::InstBuilder::isub","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Wrapping integer subtraction: `a := x - y \\pmod{2^B}`.","sig":null,"attributes":[{"value":"/ Wrapping integer subtraction: `a := x - y \\pmod{2^B}`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10148996,"byte_end":10149054,"line_start":2090,"line_end":2090,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10149059,"byte_end":10149062,"line_start":2091,"line_end":2091,"column_start":5,"column_end":8}},{"value":"/ This instruction does not depend on the signed/unsigned interpretation","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10149067,"byte_end":10149141,"line_start":2092,"line_end":2092,"column_start":5,"column_end":79}},{"value":"/ of the operands.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10149146,"byte_end":10149166,"line_start":2093,"line_end":2093,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10149171,"byte_end":10149174,"line_start":2094,"line_end":2094,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10149179,"byte_end":10149190,"line_start":2095,"line_end":2095,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10149195,"byte_end":10149198,"line_start":2096,"line_end":2096,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10149203,"byte_end":10149243,"line_start":2097,"line_end":2097,"column_start":5,"column_end":45}},{"value":"/ - y: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10149248,"byte_end":10149288,"line_start":2098,"line_end":2098,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10149293,"byte_end":10149296,"line_start":2099,"line_end":2099,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10149301,"byte_end":10149313,"line_start":2100,"line_end":2100,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10149318,"byte_end":10149321,"line_start":2101,"line_end":2101,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10149326,"byte_end":10149366,"line_start":2102,"line_end":2102,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10149371,"byte_end":10149395,"line_start":2103,"line_end":2103,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5276},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10150159,"byte_end":10150167,"line_start":2125,"line_end":2125,"column_start":8,"column_end":16},"name":"usub_sat","qualname":"::ir::builder::InstBuilder::usub_sat","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Subtract with unsigned saturation.","sig":null,"attributes":[{"value":"/ Subtract with unsigned saturation.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10149633,"byte_end":10149671,"line_start":2110,"line_end":2110,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10149676,"byte_end":10149679,"line_start":2111,"line_end":2111,"column_start":5,"column_end":8}},{"value":"/ This is similar to `isub` but the operands are interpreted as unsigned integers and their","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10149684,"byte_end":10149777,"line_start":2112,"line_end":2112,"column_start":5,"column_end":98}},{"value":"/ difference, instead of wrapping, will be saturated to the lowest unsigned integer for","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10149782,"byte_end":10149871,"line_start":2113,"line_end":2113,"column_start":5,"column_end":94}},{"value":"/ the controlling type (e.g. `0x00` for i8).","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10149876,"byte_end":10149922,"line_start":2114,"line_end":2114,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10149927,"byte_end":10149930,"line_start":2115,"line_end":2115,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10149935,"byte_end":10149946,"line_start":2116,"line_end":2116,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10149951,"byte_end":10149954,"line_start":2117,"line_end":2117,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10149959,"byte_end":10149999,"line_start":2118,"line_end":2118,"column_start":5,"column_end":45}},{"value":"/ - y: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10150004,"byte_end":10150044,"line_start":2119,"line_end":2119,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10150049,"byte_end":10150052,"line_start":2120,"line_end":2120,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10150057,"byte_end":10150069,"line_start":2121,"line_end":2121,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10150074,"byte_end":10150077,"line_start":2122,"line_end":2122,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10150082,"byte_end":10150122,"line_start":2123,"line_end":2123,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10150127,"byte_end":10150151,"line_start":2124,"line_end":2124,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5277},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10150937,"byte_end":10150945,"line_start":2146,"line_end":2146,"column_start":8,"column_end":16},"name":"ssub_sat","qualname":"::ir::builder::InstBuilder::ssub_sat","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Subtract with signed saturation.","sig":null,"attributes":[{"value":"/ Subtract with signed saturation.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10150396,"byte_end":10150432,"line_start":2131,"line_end":2131,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10150437,"byte_end":10150440,"line_start":2132,"line_end":2132,"column_start":5,"column_end":8}},{"value":"/ This is similar to `isub` but the operands are interpreted as signed integers and their","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10150445,"byte_end":10150536,"line_start":2133,"line_end":2133,"column_start":5,"column_end":96}},{"value":"/ difference, instead of wrapping, will be saturated to the lowest or highest","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10150541,"byte_end":10150620,"line_start":2134,"line_end":2134,"column_start":5,"column_end":84}},{"value":"/ signed integer for the controlling type (e.g. `0x80` or `0x7F` for i8).","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10150625,"byte_end":10150700,"line_start":2135,"line_end":2135,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10150705,"byte_end":10150708,"line_start":2136,"line_end":2136,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10150713,"byte_end":10150724,"line_start":2137,"line_end":2137,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10150729,"byte_end":10150732,"line_start":2138,"line_end":2138,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10150737,"byte_end":10150777,"line_start":2139,"line_end":2139,"column_start":5,"column_end":45}},{"value":"/ - y: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10150782,"byte_end":10150822,"line_start":2140,"line_end":2140,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10150827,"byte_end":10150830,"line_start":2141,"line_end":2141,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10150835,"byte_end":10150847,"line_start":2142,"line_end":2142,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10150852,"byte_end":10150855,"line_start":2143,"line_end":2143,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10150860,"byte_end":10150900,"line_start":2144,"line_end":2144,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10150905,"byte_end":10150929,"line_start":2145,"line_end":2145,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5278},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10151409,"byte_end":10151413,"line_start":2162,"line_end":2162,"column_start":8,"column_end":12},"name":"ineg","qualname":"::ir::builder::InstBuilder::ineg","value":"fn (self, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Integer negation: `a := -x \\pmod{2^B}`.","sig":null,"attributes":[{"value":"/ Integer negation: `a := -x \\pmod{2^B}`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10151174,"byte_end":10151217,"line_start":2152,"line_end":2152,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10151222,"byte_end":10151225,"line_start":2153,"line_end":2153,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10151230,"byte_end":10151241,"line_start":2154,"line_end":2154,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10151246,"byte_end":10151249,"line_start":2155,"line_end":2155,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10151254,"byte_end":10151294,"line_start":2156,"line_end":2156,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10151299,"byte_end":10151302,"line_start":2157,"line_end":2157,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10151307,"byte_end":10151319,"line_start":2158,"line_end":2158,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10151324,"byte_end":10151327,"line_start":2159,"line_end":2159,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10151332,"byte_end":10151372,"line_start":2160,"line_end":2160,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10151377,"byte_end":10151401,"line_start":2161,"line_end":2161,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5279},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10152101,"byte_end":10152105,"line_start":2184,"line_end":2184,"column_start":8,"column_end":12},"name":"imul","qualname":"::ir::builder::InstBuilder::imul","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Wrapping integer multiplication: `a := x y \\pmod{2^B}`.","sig":null,"attributes":[{"value":"/ Wrapping integer multiplication: `a := x y \\pmod{2^B}`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10151621,"byte_end":10151680,"line_start":2168,"line_end":2168,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10151685,"byte_end":10151688,"line_start":2169,"line_end":2169,"column_start":5,"column_end":8}},{"value":"/ This instruction does not depend on the signed/unsigned interpretation","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10151693,"byte_end":10151767,"line_start":2170,"line_end":2170,"column_start":5,"column_end":79}},{"value":"/ of the operands.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10151772,"byte_end":10151792,"line_start":2171,"line_end":2171,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10151797,"byte_end":10151800,"line_start":2172,"line_end":2172,"column_start":5,"column_end":8}},{"value":"/ Polymorphic over all integer types (vector and scalar).","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10151805,"byte_end":10151864,"line_start":2173,"line_end":2173,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10151869,"byte_end":10151872,"line_start":2174,"line_end":2174,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10151877,"byte_end":10151888,"line_start":2175,"line_end":2175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10151893,"byte_end":10151896,"line_start":2176,"line_end":2176,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10151901,"byte_end":10151941,"line_start":2177,"line_end":2177,"column_start":5,"column_end":45}},{"value":"/ - y: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10151946,"byte_end":10151986,"line_start":2178,"line_end":2178,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10151991,"byte_end":10151994,"line_start":2179,"line_end":2179,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10151999,"byte_end":10152011,"line_start":2180,"line_end":2180,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10152016,"byte_end":10152019,"line_start":2181,"line_end":2181,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10152024,"byte_end":10152064,"line_start":2182,"line_end":2182,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10152069,"byte_end":10152093,"line_start":2183,"line_end":2183,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5280},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10152765,"byte_end":10152771,"line_start":2205,"line_end":2205,"column_start":8,"column_end":14},"name":"umulhi","qualname":"::ir::builder::InstBuilder::umulhi","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Unsigned integer multiplication, producing the high half of a\n double-length result.","sig":null,"attributes":[{"value":"/ Unsigned integer multiplication, producing the high half of a","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10152331,"byte_end":10152396,"line_start":2190,"line_end":2190,"column_start":5,"column_end":70}},{"value":"/ double-length result.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10152401,"byte_end":10152426,"line_start":2191,"line_end":2191,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10152431,"byte_end":10152434,"line_start":2192,"line_end":2192,"column_start":5,"column_end":8}},{"value":"/ Polymorphic over all scalar integer types, but does not support vector","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10152439,"byte_end":10152513,"line_start":2193,"line_end":2193,"column_start":5,"column_end":79}},{"value":"/ types.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10152518,"byte_end":10152528,"line_start":2194,"line_end":2194,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10152533,"byte_end":10152536,"line_start":2195,"line_end":2195,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10152541,"byte_end":10152552,"line_start":2196,"line_end":2196,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10152557,"byte_end":10152560,"line_start":2197,"line_end":2197,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10152565,"byte_end":10152605,"line_start":2198,"line_end":2198,"column_start":5,"column_end":45}},{"value":"/ - y: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10152610,"byte_end":10152650,"line_start":2199,"line_end":2199,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10152655,"byte_end":10152658,"line_start":2200,"line_end":2200,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10152663,"byte_end":10152675,"line_start":2201,"line_end":2201,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10152680,"byte_end":10152683,"line_start":2202,"line_end":2202,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10152688,"byte_end":10152728,"line_start":2203,"line_end":2203,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10152733,"byte_end":10152757,"line_start":2204,"line_end":2204,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5281},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10153431,"byte_end":10153437,"line_start":2226,"line_end":2226,"column_start":8,"column_end":14},"name":"smulhi","qualname":"::ir::builder::InstBuilder::smulhi","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Signed integer multiplication, producing the high half of a\n double-length result.","sig":null,"attributes":[{"value":"/ Signed integer multiplication, producing the high half of a","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10152999,"byte_end":10153062,"line_start":2211,"line_end":2211,"column_start":5,"column_end":68}},{"value":"/ double-length result.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10153067,"byte_end":10153092,"line_start":2212,"line_end":2212,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10153097,"byte_end":10153100,"line_start":2213,"line_end":2213,"column_start":5,"column_end":8}},{"value":"/ Polymorphic over all scalar integer types, but does not support vector","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10153105,"byte_end":10153179,"line_start":2214,"line_end":2214,"column_start":5,"column_end":79}},{"value":"/ types.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10153184,"byte_end":10153194,"line_start":2215,"line_end":2215,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10153199,"byte_end":10153202,"line_start":2216,"line_end":2216,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10153207,"byte_end":10153218,"line_start":2217,"line_end":2217,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10153223,"byte_end":10153226,"line_start":2218,"line_end":2218,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10153231,"byte_end":10153271,"line_start":2219,"line_end":2219,"column_start":5,"column_end":45}},{"value":"/ - y: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10153276,"byte_end":10153316,"line_start":2220,"line_end":2220,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10153321,"byte_end":10153324,"line_start":2221,"line_end":2221,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10153329,"byte_end":10153341,"line_start":2222,"line_end":2222,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10153346,"byte_end":10153349,"line_start":2223,"line_end":2223,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10153354,"byte_end":10153394,"line_start":2224,"line_end":2224,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10153399,"byte_end":10153423,"line_start":2225,"line_end":2225,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5282},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10154029,"byte_end":10154033,"line_start":2245,"line_end":2245,"column_start":8,"column_end":12},"name":"udiv","qualname":"::ir::builder::InstBuilder::udiv","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Unsigned integer division: `a := \\lfloor {x \\over y} \\rfloor`.","sig":null,"attributes":[{"value":"/ Unsigned integer division: `a := \\lfloor {x \\over y} \\rfloor`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10153665,"byte_end":10153731,"line_start":2232,"line_end":2232,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10153736,"byte_end":10153739,"line_start":2233,"line_end":2233,"column_start":5,"column_end":8}},{"value":"/ This operation traps if the divisor is zero.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10153744,"byte_end":10153792,"line_start":2234,"line_end":2234,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10153797,"byte_end":10153800,"line_start":2235,"line_end":2235,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10153805,"byte_end":10153816,"line_start":2236,"line_end":2236,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10153821,"byte_end":10153824,"line_start":2237,"line_end":2237,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10153829,"byte_end":10153869,"line_start":2238,"line_end":2238,"column_start":5,"column_end":45}},{"value":"/ - y: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10153874,"byte_end":10153914,"line_start":2239,"line_end":2239,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10153919,"byte_end":10153922,"line_start":2240,"line_end":2240,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10153927,"byte_end":10153939,"line_start":2241,"line_end":2241,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10153944,"byte_end":10153947,"line_start":2242,"line_end":2242,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10153952,"byte_end":10153992,"line_start":2243,"line_end":2243,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10153997,"byte_end":10154021,"line_start":2244,"line_end":2244,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5283},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10154792,"byte_end":10154796,"line_start":2267,"line_end":2267,"column_start":8,"column_end":12},"name":"sdiv","qualname":"::ir::builder::InstBuilder::sdiv","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Signed integer division rounded toward zero: `a := sign(xy)\n \\lfloor {|x| \\over |y|}\\rfloor`.","sig":null,"attributes":[{"value":"/ Signed integer division rounded toward zero: `a := sign(xy)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10154259,"byte_end":10154322,"line_start":2251,"line_end":2251,"column_start":5,"column_end":68}},{"value":"/ \\lfloor {|x| \\over |y|}\\rfloor`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10154327,"byte_end":10154363,"line_start":2252,"line_end":2252,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10154368,"byte_end":10154371,"line_start":2253,"line_end":2253,"column_start":5,"column_end":8}},{"value":"/ This operation traps if the divisor is zero, or if the result is not","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10154376,"byte_end":10154448,"line_start":2254,"line_end":2254,"column_start":5,"column_end":77}},{"value":"/ representable in `B` bits two's complement. This only happens","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10154453,"byte_end":10154518,"line_start":2255,"line_end":2255,"column_start":5,"column_end":70}},{"value":"/ when `x = -2^{B-1}, y = -1`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10154523,"byte_end":10154555,"line_start":2256,"line_end":2256,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10154560,"byte_end":10154563,"line_start":2257,"line_end":2257,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10154568,"byte_end":10154579,"line_start":2258,"line_end":2258,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10154584,"byte_end":10154587,"line_start":2259,"line_end":2259,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10154592,"byte_end":10154632,"line_start":2260,"line_end":2260,"column_start":5,"column_end":45}},{"value":"/ - y: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10154637,"byte_end":10154677,"line_start":2261,"line_end":2261,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10154682,"byte_end":10154685,"line_start":2262,"line_end":2262,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10154690,"byte_end":10154702,"line_start":2263,"line_end":2263,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10154707,"byte_end":10154710,"line_start":2264,"line_end":2264,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10154715,"byte_end":10154755,"line_start":2265,"line_end":2265,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10154760,"byte_end":10154784,"line_start":2266,"line_end":2266,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5284},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10155351,"byte_end":10155355,"line_start":2286,"line_end":2286,"column_start":8,"column_end":12},"name":"urem","qualname":"::ir::builder::InstBuilder::urem","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Unsigned integer remainder.","sig":null,"attributes":[{"value":"/ Unsigned integer remainder.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10155022,"byte_end":10155053,"line_start":2273,"line_end":2273,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10155058,"byte_end":10155061,"line_start":2274,"line_end":2274,"column_start":5,"column_end":8}},{"value":"/ This operation traps if the divisor is zero.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10155066,"byte_end":10155114,"line_start":2275,"line_end":2275,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10155119,"byte_end":10155122,"line_start":2276,"line_end":2276,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10155127,"byte_end":10155138,"line_start":2277,"line_end":2277,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10155143,"byte_end":10155146,"line_start":2278,"line_end":2278,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10155151,"byte_end":10155191,"line_start":2279,"line_end":2279,"column_start":5,"column_end":45}},{"value":"/ - y: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10155196,"byte_end":10155236,"line_start":2280,"line_end":2280,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10155241,"byte_end":10155244,"line_start":2281,"line_end":2281,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10155249,"byte_end":10155261,"line_start":2282,"line_end":2282,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10155266,"byte_end":10155269,"line_start":2283,"line_end":2283,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10155274,"byte_end":10155314,"line_start":2284,"line_end":2284,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10155319,"byte_end":10155343,"line_start":2285,"line_end":2285,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5285},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10155949,"byte_end":10155953,"line_start":2305,"line_end":2305,"column_start":8,"column_end":12},"name":"srem","qualname":"::ir::builder::InstBuilder::srem","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Signed integer remainder. The result has the sign of the dividend.","sig":null,"attributes":[{"value":"/ Signed integer remainder. The result has the sign of the dividend.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10155581,"byte_end":10155651,"line_start":2292,"line_end":2292,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10155656,"byte_end":10155659,"line_start":2293,"line_end":2293,"column_start":5,"column_end":8}},{"value":"/ This operation traps if the divisor is zero.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10155664,"byte_end":10155712,"line_start":2294,"line_end":2294,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10155717,"byte_end":10155720,"line_start":2295,"line_end":2295,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10155725,"byte_end":10155736,"line_start":2296,"line_end":2296,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10155741,"byte_end":10155744,"line_start":2297,"line_end":2297,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10155749,"byte_end":10155789,"line_start":2298,"line_end":2298,"column_start":5,"column_end":45}},{"value":"/ - y: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10155794,"byte_end":10155834,"line_start":2299,"line_end":2299,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10155839,"byte_end":10155842,"line_start":2300,"line_end":2300,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10155847,"byte_end":10155859,"line_start":2301,"line_end":2301,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10155864,"byte_end":10155867,"line_start":2302,"line_end":2302,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10155872,"byte_end":10155912,"line_start":2303,"line_end":2303,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10155917,"byte_end":10155941,"line_start":2304,"line_end":2304,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5286},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10156594,"byte_end":10156602,"line_start":2327,"line_end":2327,"column_start":8,"column_end":16},"name":"iadd_imm","qualname":"::ir::builder::InstBuilder::iadd_imm","value":"fn <T1> (self, x: ir::Value, Y: T1) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Add immediate integer.","sig":null,"attributes":[{"value":"/ Add immediate integer.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10156179,"byte_end":10156205,"line_start":2311,"line_end":2311,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10156210,"byte_end":10156213,"line_start":2312,"line_end":2312,"column_start":5,"column_end":8}},{"value":"/ Same as `iadd`, but one operand is an immediate constant.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10156218,"byte_end":10156279,"line_start":2313,"line_end":2313,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10156284,"byte_end":10156287,"line_start":2314,"line_end":2314,"column_start":5,"column_end":8}},{"value":"/ Polymorphic over all scalar integer types, but does not support vector","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10156292,"byte_end":10156366,"line_start":2315,"line_end":2315,"column_start":5,"column_end":79}},{"value":"/ types.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10156371,"byte_end":10156381,"line_start":2316,"line_end":2316,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10156386,"byte_end":10156389,"line_start":2317,"line_end":2317,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10156394,"byte_end":10156405,"line_start":2318,"line_end":2318,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10156410,"byte_end":10156413,"line_start":2319,"line_end":2319,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10156418,"byte_end":10156448,"line_start":2320,"line_end":2320,"column_start":5,"column_end":35}},{"value":"/ - Y: A 64-bit immediate integer.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10156453,"byte_end":10156489,"line_start":2321,"line_end":2321,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10156494,"byte_end":10156497,"line_start":2322,"line_end":2322,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10156502,"byte_end":10156514,"line_start":2323,"line_end":2323,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10156519,"byte_end":10156522,"line_start":2324,"line_end":2324,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10156527,"byte_end":10156557,"line_start":2325,"line_end":2325,"column_start":5,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10156562,"byte_end":10156586,"line_start":2326,"line_end":2326,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5288},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10157250,"byte_end":10157258,"line_start":2348,"line_end":2348,"column_start":8,"column_end":16},"name":"imul_imm","qualname":"::ir::builder::InstBuilder::imul_imm","value":"fn <T1> (self, x: ir::Value, Y: T1) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Integer multiplication by immediate constant.","sig":null,"attributes":[{"value":"/ Integer multiplication by immediate constant.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10156886,"byte_end":10156935,"line_start":2334,"line_end":2334,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10156940,"byte_end":10156943,"line_start":2335,"line_end":2335,"column_start":5,"column_end":8}},{"value":"/ Polymorphic over all scalar integer types, but does not support vector","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10156948,"byte_end":10157022,"line_start":2336,"line_end":2336,"column_start":5,"column_end":79}},{"value":"/ types.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10157027,"byte_end":10157037,"line_start":2337,"line_end":2337,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10157042,"byte_end":10157045,"line_start":2338,"line_end":2338,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10157050,"byte_end":10157061,"line_start":2339,"line_end":2339,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10157066,"byte_end":10157069,"line_start":2340,"line_end":2340,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10157074,"byte_end":10157104,"line_start":2341,"line_end":2341,"column_start":5,"column_end":35}},{"value":"/ - Y: A 64-bit immediate integer.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10157109,"byte_end":10157145,"line_start":2342,"line_end":2342,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10157150,"byte_end":10157153,"line_start":2343,"line_end":2343,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10157158,"byte_end":10157170,"line_start":2344,"line_end":2344,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10157175,"byte_end":10157178,"line_start":2345,"line_end":2345,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10157183,"byte_end":10157213,"line_start":2346,"line_end":2346,"column_start":5,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10157218,"byte_end":10157242,"line_start":2347,"line_end":2347,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5290},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10157871,"byte_end":10157879,"line_start":2368,"line_end":2368,"column_start":8,"column_end":16},"name":"udiv_imm","qualname":"::ir::builder::InstBuilder::udiv_imm","value":"fn <T1> (self, x: ir::Value, Y: T1) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Unsigned integer division by an immediate constant.","sig":null,"attributes":[{"value":"/ Unsigned integer division by an immediate constant.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10157542,"byte_end":10157597,"line_start":2355,"line_end":2355,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10157602,"byte_end":10157605,"line_start":2356,"line_end":2356,"column_start":5,"column_end":8}},{"value":"/ This operation traps if the divisor is zero.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10157610,"byte_end":10157658,"line_start":2357,"line_end":2357,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10157663,"byte_end":10157666,"line_start":2358,"line_end":2358,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10157671,"byte_end":10157682,"line_start":2359,"line_end":2359,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10157687,"byte_end":10157690,"line_start":2360,"line_end":2360,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10157695,"byte_end":10157725,"line_start":2361,"line_end":2361,"column_start":5,"column_end":35}},{"value":"/ - Y: A 64-bit immediate integer.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10157730,"byte_end":10157766,"line_start":2362,"line_end":2362,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10157771,"byte_end":10157774,"line_start":2363,"line_end":2363,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10157779,"byte_end":10157791,"line_start":2364,"line_end":2364,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10157796,"byte_end":10157799,"line_start":2365,"line_end":2365,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10157804,"byte_end":10157834,"line_start":2366,"line_end":2366,"column_start":5,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10157839,"byte_end":10157863,"line_start":2367,"line_end":2367,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5292},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10158621,"byte_end":10158629,"line_start":2390,"line_end":2390,"column_start":8,"column_end":16},"name":"sdiv_imm","qualname":"::ir::builder::InstBuilder::sdiv_imm","value":"fn <T1> (self, x: ir::Value, Y: T1) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Signed integer division by an immediate constant.","sig":null,"attributes":[{"value":"/ Signed integer division by an immediate constant.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10158163,"byte_end":10158216,"line_start":2375,"line_end":2375,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10158221,"byte_end":10158224,"line_start":2376,"line_end":2376,"column_start":5,"column_end":8}},{"value":"/ This operation traps if the divisor is zero, or if the result is not","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10158229,"byte_end":10158301,"line_start":2377,"line_end":2377,"column_start":5,"column_end":77}},{"value":"/ representable in `B` bits two's complement. This only happens","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10158306,"byte_end":10158371,"line_start":2378,"line_end":2378,"column_start":5,"column_end":70}},{"value":"/ when `x = -2^{B-1}, Y = -1`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10158376,"byte_end":10158408,"line_start":2379,"line_end":2379,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10158413,"byte_end":10158416,"line_start":2380,"line_end":2380,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10158421,"byte_end":10158432,"line_start":2381,"line_end":2381,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10158437,"byte_end":10158440,"line_start":2382,"line_end":2382,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10158445,"byte_end":10158475,"line_start":2383,"line_end":2383,"column_start":5,"column_end":35}},{"value":"/ - Y: A 64-bit immediate integer.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10158480,"byte_end":10158516,"line_start":2384,"line_end":2384,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10158521,"byte_end":10158524,"line_start":2385,"line_end":2385,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10158529,"byte_end":10158541,"line_start":2386,"line_end":2386,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10158546,"byte_end":10158549,"line_start":2387,"line_end":2387,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10158554,"byte_end":10158584,"line_start":2388,"line_end":2388,"column_start":5,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10158589,"byte_end":10158613,"line_start":2389,"line_end":2389,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5294},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10159241,"byte_end":10159249,"line_start":2410,"line_end":2410,"column_start":8,"column_end":16},"name":"urem_imm","qualname":"::ir::builder::InstBuilder::urem_imm","value":"fn <T1> (self, x: ir::Value, Y: T1) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Unsigned integer remainder with immediate divisor.","sig":null,"attributes":[{"value":"/ Unsigned integer remainder with immediate divisor.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10158913,"byte_end":10158967,"line_start":2397,"line_end":2397,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10158972,"byte_end":10158975,"line_start":2398,"line_end":2398,"column_start":5,"column_end":8}},{"value":"/ This operation traps if the divisor is zero.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10158980,"byte_end":10159028,"line_start":2399,"line_end":2399,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10159033,"byte_end":10159036,"line_start":2400,"line_end":2400,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10159041,"byte_end":10159052,"line_start":2401,"line_end":2401,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10159057,"byte_end":10159060,"line_start":2402,"line_end":2402,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10159065,"byte_end":10159095,"line_start":2403,"line_end":2403,"column_start":5,"column_end":35}},{"value":"/ - Y: A 64-bit immediate integer.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10159100,"byte_end":10159136,"line_start":2404,"line_end":2404,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10159141,"byte_end":10159144,"line_start":2405,"line_end":2405,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10159149,"byte_end":10159161,"line_start":2406,"line_end":2406,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10159166,"byte_end":10159169,"line_start":2407,"line_end":2407,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10159174,"byte_end":10159204,"line_start":2408,"line_end":2408,"column_start":5,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10159209,"byte_end":10159233,"line_start":2409,"line_end":2409,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5296},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10159859,"byte_end":10159867,"line_start":2430,"line_end":2430,"column_start":8,"column_end":16},"name":"srem_imm","qualname":"::ir::builder::InstBuilder::srem_imm","value":"fn <T1> (self, x: ir::Value, Y: T1) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Signed integer remainder with immediate divisor.","sig":null,"attributes":[{"value":"/ Signed integer remainder with immediate divisor.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10159533,"byte_end":10159585,"line_start":2417,"line_end":2417,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10159590,"byte_end":10159593,"line_start":2418,"line_end":2418,"column_start":5,"column_end":8}},{"value":"/ This operation traps if the divisor is zero.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10159598,"byte_end":10159646,"line_start":2419,"line_end":2419,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10159651,"byte_end":10159654,"line_start":2420,"line_end":2420,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10159659,"byte_end":10159670,"line_start":2421,"line_end":2421,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10159675,"byte_end":10159678,"line_start":2422,"line_end":2422,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10159683,"byte_end":10159713,"line_start":2423,"line_end":2423,"column_start":5,"column_end":35}},{"value":"/ - Y: A 64-bit immediate integer.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10159718,"byte_end":10159754,"line_start":2424,"line_end":2424,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10159759,"byte_end":10159762,"line_start":2425,"line_end":2425,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10159767,"byte_end":10159779,"line_start":2426,"line_end":2426,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10159784,"byte_end":10159787,"line_start":2427,"line_end":2427,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10159792,"byte_end":10159822,"line_start":2428,"line_end":2428,"column_start":5,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10159827,"byte_end":10159851,"line_start":2429,"line_end":2429,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5298},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10160699,"byte_end":10160708,"line_start":2455,"line_end":2455,"column_start":8,"column_end":17},"name":"irsub_imm","qualname":"::ir::builder::InstBuilder::irsub_imm","value":"fn <T1> (self, x: ir::Value, Y: T1) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Immediate reverse wrapping subtraction: `a := Y - x \\pmod{2^B}`.","sig":null,"attributes":[{"value":"/ Immediate reverse wrapping subtraction: `a := Y - x \\pmod{2^B}`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10160151,"byte_end":10160219,"line_start":2437,"line_end":2437,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10160224,"byte_end":10160227,"line_start":2438,"line_end":2438,"column_start":5,"column_end":8}},{"value":"/ Also works as integer negation when `Y = 0`. Use `iadd_imm`","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10160232,"byte_end":10160295,"line_start":2439,"line_end":2439,"column_start":5,"column_end":68}},{"value":"/ with a negative immediate operand for the reverse immediate","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10160300,"byte_end":10160363,"line_start":2440,"line_end":2440,"column_start":5,"column_end":68}},{"value":"/ subtraction.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10160368,"byte_end":10160384,"line_start":2441,"line_end":2441,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10160389,"byte_end":10160392,"line_start":2442,"line_end":2442,"column_start":5,"column_end":8}},{"value":"/ Polymorphic over all scalar integer types, but does not support vector","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10160397,"byte_end":10160471,"line_start":2443,"line_end":2443,"column_start":5,"column_end":79}},{"value":"/ types.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10160476,"byte_end":10160486,"line_start":2444,"line_end":2444,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10160491,"byte_end":10160494,"line_start":2445,"line_end":2445,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10160499,"byte_end":10160510,"line_start":2446,"line_end":2446,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10160515,"byte_end":10160518,"line_start":2447,"line_end":2447,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10160523,"byte_end":10160553,"line_start":2448,"line_end":2448,"column_start":5,"column_end":35}},{"value":"/ - Y: A 64-bit immediate integer.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10160558,"byte_end":10160594,"line_start":2449,"line_end":2449,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10160599,"byte_end":10160602,"line_start":2450,"line_end":2450,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10160607,"byte_end":10160619,"line_start":2451,"line_end":2451,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10160624,"byte_end":10160627,"line_start":2452,"line_end":2452,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10160632,"byte_end":10160662,"line_start":2453,"line_end":2453,"column_start":5,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10160667,"byte_end":10160691,"line_start":2454,"line_end":2454,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5300},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10161516,"byte_end":10161524,"line_start":2483,"line_end":2483,"column_start":8,"column_end":16},"name":"iadd_cin","qualname":"::ir::builder::InstBuilder::iadd_cin","value":"fn (self, x: ir::Value, y: ir::Value, c_in: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Add integers with carry in.","sig":null,"attributes":[{"value":"/ Add integers with carry in.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10160993,"byte_end":10161024,"line_start":2462,"line_end":2462,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10161029,"byte_end":10161032,"line_start":2463,"line_end":2463,"column_start":5,"column_end":8}},{"value":"/ Same as `iadd` with an additional carry input. Computes:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10161037,"byte_end":10161097,"line_start":2464,"line_end":2464,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10161102,"byte_end":10161105,"line_start":2465,"line_end":2465,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10161110,"byte_end":10161121,"line_start":2466,"line_end":2466,"column_start":5,"column_end":16}},{"value":"/     a = x + y + c_{in} \\pmod 2^B","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10161126,"byte_end":10161162,"line_start":2467,"line_end":2467,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10161167,"byte_end":10161174,"line_start":2468,"line_end":2468,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10161179,"byte_end":10161182,"line_start":2469,"line_end":2469,"column_start":5,"column_end":8}},{"value":"/ Polymorphic over all scalar integer types, but does not support vector","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10161187,"byte_end":10161261,"line_start":2470,"line_end":2470,"column_start":5,"column_end":79}},{"value":"/ types.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10161266,"byte_end":10161276,"line_start":2471,"line_end":2471,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10161281,"byte_end":10161284,"line_start":2472,"line_end":2472,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10161289,"byte_end":10161300,"line_start":2473,"line_end":2473,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10161305,"byte_end":10161308,"line_start":2474,"line_end":2474,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10161313,"byte_end":10161343,"line_start":2475,"line_end":2475,"column_start":5,"column_end":35}},{"value":"/ - y: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10161348,"byte_end":10161378,"line_start":2476,"line_end":2476,"column_start":5,"column_end":35}},{"value":"/ - c_in: Input carry flag","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10161383,"byte_end":10161411,"line_start":2477,"line_end":2477,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10161416,"byte_end":10161419,"line_start":2478,"line_end":2478,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10161424,"byte_end":10161436,"line_start":2479,"line_end":2479,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10161441,"byte_end":10161444,"line_start":2480,"line_end":2480,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10161449,"byte_end":10161479,"line_start":2481,"line_end":2481,"column_start":5,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10161484,"byte_end":10161508,"line_start":2482,"line_end":2482,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5301},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10162420,"byte_end":10162430,"line_start":2511,"line_end":2511,"column_start":8,"column_end":18},"name":"iadd_ifcin","qualname":"::ir::builder::InstBuilder::iadd_ifcin","value":"fn (self, x: ir::Value, y: ir::Value, c_in: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Add integers with carry in.","sig":null,"attributes":[{"value":"/ Add integers with carry in.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10161777,"byte_end":10161808,"line_start":2489,"line_end":2489,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10161813,"byte_end":10161816,"line_start":2490,"line_end":2490,"column_start":5,"column_end":8}},{"value":"/ Same as `iadd` with an additional carry flag input. Computes:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10161821,"byte_end":10161886,"line_start":2491,"line_end":2491,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10161891,"byte_end":10161894,"line_start":2492,"line_end":2492,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10161899,"byte_end":10161910,"line_start":2493,"line_end":2493,"column_start":5,"column_end":16}},{"value":"/     a = x + y + c_{in} \\pmod 2^B","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10161915,"byte_end":10161951,"line_start":2494,"line_end":2494,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10161956,"byte_end":10161963,"line_start":2495,"line_end":2495,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10161968,"byte_end":10161971,"line_start":2496,"line_end":2496,"column_start":5,"column_end":8}},{"value":"/ Polymorphic over all scalar integer types, but does not support vector","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10161976,"byte_end":10162050,"line_start":2497,"line_end":2497,"column_start":5,"column_end":79}},{"value":"/ types.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10162055,"byte_end":10162065,"line_start":2498,"line_end":2498,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10162070,"byte_end":10162073,"line_start":2499,"line_end":2499,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10162078,"byte_end":10162089,"line_start":2500,"line_end":2500,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10162094,"byte_end":10162097,"line_start":2501,"line_end":2501,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10162102,"byte_end":10162132,"line_start":2502,"line_end":2502,"column_start":5,"column_end":35}},{"value":"/ - y: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10162137,"byte_end":10162167,"line_start":2503,"line_end":2503,"column_start":5,"column_end":35}},{"value":"/ - c_in: CPU flags representing the result of an integer comparison. These flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10162172,"byte_end":10162255,"line_start":2504,"line_end":2504,"column_start":5,"column_end":88}},{"value":"/ can be tested with an :type:`intcc` condition code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10162260,"byte_end":10162315,"line_start":2505,"line_end":2505,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10162320,"byte_end":10162323,"line_start":2506,"line_end":2506,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10162328,"byte_end":10162340,"line_start":2507,"line_end":2507,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10162345,"byte_end":10162348,"line_start":2508,"line_end":2508,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10162353,"byte_end":10162383,"line_start":2509,"line_end":2509,"column_start":5,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10162388,"byte_end":10162412,"line_start":2510,"line_end":2510,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5302},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10163231,"byte_end":10163240,"line_start":2539,"line_end":2539,"column_start":8,"column_end":17},"name":"iadd_cout","qualname":"::ir::builder::InstBuilder::iadd_cout","value":"fn (self, x: ir::Value, y: ir::Value) -> (Value, Value)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Add integers with carry out.","sig":null,"attributes":[{"value":"/ Add integers with carry out.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10162685,"byte_end":10162717,"line_start":2517,"line_end":2517,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10162722,"byte_end":10162725,"line_start":2518,"line_end":2518,"column_start":5,"column_end":8}},{"value":"/ Same as `iadd` with an additional carry output.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10162730,"byte_end":10162781,"line_start":2519,"line_end":2519,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10162786,"byte_end":10162789,"line_start":2520,"line_end":2520,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10162794,"byte_end":10162805,"line_start":2521,"line_end":2521,"column_start":5,"column_end":16}},{"value":"/     a &= x + y \\pmod 2^B \\\\","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10162810,"byte_end":10162841,"line_start":2522,"line_end":2522,"column_start":5,"column_end":36}},{"value":"/     c_{out} &= x+y >= 2^B","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10162846,"byte_end":10162875,"line_start":2523,"line_end":2523,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10162880,"byte_end":10162887,"line_start":2524,"line_end":2524,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10162892,"byte_end":10162895,"line_start":2525,"line_end":2525,"column_start":5,"column_end":8}},{"value":"/ Polymorphic over all scalar integer types, but does not support vector","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10162900,"byte_end":10162974,"line_start":2526,"line_end":2526,"column_start":5,"column_end":79}},{"value":"/ types.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10162979,"byte_end":10162989,"line_start":2527,"line_end":2527,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10162994,"byte_end":10162997,"line_start":2528,"line_end":2528,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10163002,"byte_end":10163013,"line_start":2529,"line_end":2529,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10163018,"byte_end":10163021,"line_start":2530,"line_end":2530,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10163026,"byte_end":10163056,"line_start":2531,"line_end":2531,"column_start":5,"column_end":35}},{"value":"/ - y: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10163061,"byte_end":10163091,"line_start":2532,"line_end":2532,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10163096,"byte_end":10163099,"line_start":2533,"line_end":2533,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10163104,"byte_end":10163116,"line_start":2534,"line_end":2534,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10163121,"byte_end":10163124,"line_start":2535,"line_end":2535,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10163129,"byte_end":10163159,"line_start":2536,"line_end":2536,"column_start":5,"column_end":35}},{"value":"/ - c_out: Output carry flag","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10163164,"byte_end":10163194,"line_start":2537,"line_end":2537,"column_start":5,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10163199,"byte_end":10163223,"line_start":2538,"line_end":2538,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5303},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10164199,"byte_end":10164210,"line_start":2569,"line_end":2569,"column_start":8,"column_end":19},"name":"iadd_ifcout","qualname":"::ir::builder::InstBuilder::iadd_ifcout","value":"fn (self, x: ir::Value, y: ir::Value) -> (Value, Value)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Add integers with carry out.","sig":null,"attributes":[{"value":"/ Add integers with carry out.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10163534,"byte_end":10163566,"line_start":2546,"line_end":2546,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10163571,"byte_end":10163574,"line_start":2547,"line_end":2547,"column_start":5,"column_end":8}},{"value":"/ Same as `iadd` with an additional carry flag output.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10163579,"byte_end":10163635,"line_start":2548,"line_end":2548,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10163640,"byte_end":10163643,"line_start":2549,"line_end":2549,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10163648,"byte_end":10163659,"line_start":2550,"line_end":2550,"column_start":5,"column_end":16}},{"value":"/     a &= x + y \\pmod 2^B \\\\","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10163664,"byte_end":10163695,"line_start":2551,"line_end":2551,"column_start":5,"column_end":36}},{"value":"/     c_{out} &= x+y >= 2^B","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10163700,"byte_end":10163729,"line_start":2552,"line_end":2552,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10163734,"byte_end":10163741,"line_start":2553,"line_end":2553,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10163746,"byte_end":10163749,"line_start":2554,"line_end":2554,"column_start":5,"column_end":8}},{"value":"/ Polymorphic over all scalar integer types, but does not support vector","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10163754,"byte_end":10163828,"line_start":2555,"line_end":2555,"column_start":5,"column_end":79}},{"value":"/ types.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10163833,"byte_end":10163843,"line_start":2556,"line_end":2556,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10163848,"byte_end":10163851,"line_start":2557,"line_end":2557,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10163856,"byte_end":10163867,"line_start":2558,"line_end":2558,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10163872,"byte_end":10163875,"line_start":2559,"line_end":2559,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10163880,"byte_end":10163910,"line_start":2560,"line_end":2560,"column_start":5,"column_end":35}},{"value":"/ - y: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10163915,"byte_end":10163945,"line_start":2561,"line_end":2561,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10163950,"byte_end":10163953,"line_start":2562,"line_end":2562,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10163958,"byte_end":10163970,"line_start":2563,"line_end":2563,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10163975,"byte_end":10163978,"line_start":2564,"line_end":2564,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10163983,"byte_end":10164013,"line_start":2565,"line_end":2565,"column_start":5,"column_end":35}},{"value":"/ - c_out: CPU flags representing the result of an integer comparison. These flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10164018,"byte_end":10164102,"line_start":2566,"line_end":2566,"column_start":5,"column_end":89}},{"value":"/ can be tested with an :type:`intcc` condition code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10164107,"byte_end":10164162,"line_start":2567,"line_end":2567,"column_start":5,"column_end":60}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10164167,"byte_end":10164191,"line_start":2568,"line_end":2568,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5304},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10165122,"byte_end":10165132,"line_start":2599,"line_end":2599,"column_start":8,"column_end":18},"name":"iadd_carry","qualname":"::ir::builder::InstBuilder::iadd_carry","value":"fn (self, x: ir::Value, y: ir::Value, c_in: ir::Value) -> (Value, Value)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Add integers with carry in and out.","sig":null,"attributes":[{"value":"/ Add integers with carry in and out.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10164506,"byte_end":10164545,"line_start":2576,"line_end":2576,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10164550,"byte_end":10164553,"line_start":2577,"line_end":2577,"column_start":5,"column_end":8}},{"value":"/ Same as `iadd` with an additional carry input and output.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10164558,"byte_end":10164619,"line_start":2578,"line_end":2578,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10164624,"byte_end":10164627,"line_start":2579,"line_end":2579,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10164632,"byte_end":10164643,"line_start":2580,"line_end":2580,"column_start":5,"column_end":16}},{"value":"/     a &= x + y + c_{in} \\pmod 2^B \\\\","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10164648,"byte_end":10164688,"line_start":2581,"line_end":2581,"column_start":5,"column_end":45}},{"value":"/     c_{out} &= x + y + c_{in} >= 2^B","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10164693,"byte_end":10164733,"line_start":2582,"line_end":2582,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10164738,"byte_end":10164745,"line_start":2583,"line_end":2583,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10164750,"byte_end":10164753,"line_start":2584,"line_end":2584,"column_start":5,"column_end":8}},{"value":"/ Polymorphic over all scalar integer types, but does not support vector","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10164758,"byte_end":10164832,"line_start":2585,"line_end":2585,"column_start":5,"column_end":79}},{"value":"/ types.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10164837,"byte_end":10164847,"line_start":2586,"line_end":2586,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10164852,"byte_end":10164855,"line_start":2587,"line_end":2587,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10164860,"byte_end":10164871,"line_start":2588,"line_end":2588,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10164876,"byte_end":10164879,"line_start":2589,"line_end":2589,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10164884,"byte_end":10164914,"line_start":2590,"line_end":2590,"column_start":5,"column_end":35}},{"value":"/ - y: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10164919,"byte_end":10164949,"line_start":2591,"line_end":2591,"column_start":5,"column_end":35}},{"value":"/ - c_in: Input carry flag","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10164954,"byte_end":10164982,"line_start":2592,"line_end":2592,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10164987,"byte_end":10164990,"line_start":2593,"line_end":2593,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10164995,"byte_end":10165007,"line_start":2594,"line_end":2594,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10165012,"byte_end":10165015,"line_start":2595,"line_end":2595,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10165020,"byte_end":10165050,"line_start":2596,"line_end":2596,"column_start":5,"column_end":35}},{"value":"/ - c_out: Output carry flag","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10165055,"byte_end":10165085,"line_start":2597,"line_end":2597,"column_start":5,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10165090,"byte_end":10165114,"line_start":2598,"line_end":2598,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5305},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10166301,"byte_end":10166313,"line_start":2631,"line_end":2631,"column_start":8,"column_end":20},"name":"iadd_ifcarry","qualname":"::ir::builder::InstBuilder::iadd_ifcarry","value":"fn (self, x: ir::Value, y: ir::Value, c_in: ir::Value) -> (Value, Value)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Add integers with carry in and out.","sig":null,"attributes":[{"value":"/ Add integers with carry in and out.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10165451,"byte_end":10165490,"line_start":2606,"line_end":2606,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10165495,"byte_end":10165498,"line_start":2607,"line_end":2607,"column_start":5,"column_end":8}},{"value":"/ Same as `iadd` with an additional carry flag input and output.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10165503,"byte_end":10165569,"line_start":2608,"line_end":2608,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10165574,"byte_end":10165577,"line_start":2609,"line_end":2609,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10165582,"byte_end":10165593,"line_start":2610,"line_end":2610,"column_start":5,"column_end":16}},{"value":"/     a &= x + y + c_{in} \\pmod 2^B \\\\","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10165598,"byte_end":10165638,"line_start":2611,"line_end":2611,"column_start":5,"column_end":45}},{"value":"/     c_{out} &= x + y + c_{in} >= 2^B","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10165643,"byte_end":10165683,"line_start":2612,"line_end":2612,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10165688,"byte_end":10165695,"line_start":2613,"line_end":2613,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10165700,"byte_end":10165703,"line_start":2614,"line_end":2614,"column_start":5,"column_end":8}},{"value":"/ Polymorphic over all scalar integer types, but does not support vector","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10165708,"byte_end":10165782,"line_start":2615,"line_end":2615,"column_start":5,"column_end":79}},{"value":"/ types.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10165787,"byte_end":10165797,"line_start":2616,"line_end":2616,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10165802,"byte_end":10165805,"line_start":2617,"line_end":2617,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10165810,"byte_end":10165821,"line_start":2618,"line_end":2618,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10165826,"byte_end":10165829,"line_start":2619,"line_end":2619,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10165834,"byte_end":10165864,"line_start":2620,"line_end":2620,"column_start":5,"column_end":35}},{"value":"/ - y: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10165869,"byte_end":10165899,"line_start":2621,"line_end":2621,"column_start":5,"column_end":35}},{"value":"/ - c_in: CPU flags representing the result of an integer comparison. These flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10165904,"byte_end":10165987,"line_start":2622,"line_end":2622,"column_start":5,"column_end":88}},{"value":"/ can be tested with an :type:`intcc` condition code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10165992,"byte_end":10166047,"line_start":2623,"line_end":2623,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10166052,"byte_end":10166055,"line_start":2624,"line_end":2624,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10166060,"byte_end":10166072,"line_start":2625,"line_end":2625,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10166077,"byte_end":10166080,"line_start":2626,"line_end":2626,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10166085,"byte_end":10166115,"line_start":2627,"line_end":2627,"column_start":5,"column_end":35}},{"value":"/ - c_out: CPU flags representing the result of an integer comparison. These flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10166120,"byte_end":10166204,"line_start":2628,"line_end":2628,"column_start":5,"column_end":89}},{"value":"/ can be tested with an :type:`intcc` condition code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10166209,"byte_end":10166264,"line_start":2629,"line_end":2629,"column_start":5,"column_end":60}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10166269,"byte_end":10166293,"line_start":2630,"line_end":2630,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5306},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10167172,"byte_end":10167180,"line_start":2659,"line_end":2659,"column_start":8,"column_end":16},"name":"isub_bin","qualname":"::ir::builder::InstBuilder::isub_bin","value":"fn (self, x: ir::Value, y: ir::Value, b_in: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Subtract integers with borrow in.","sig":null,"attributes":[{"value":"/ Subtract integers with borrow in.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10166634,"byte_end":10166671,"line_start":2638,"line_end":2638,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10166676,"byte_end":10166679,"line_start":2639,"line_end":2639,"column_start":5,"column_end":8}},{"value":"/ Same as `isub` with an additional borrow flag input. Computes:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10166684,"byte_end":10166750,"line_start":2640,"line_end":2640,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10166755,"byte_end":10166758,"line_start":2641,"line_end":2641,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10166763,"byte_end":10166774,"line_start":2642,"line_end":2642,"column_start":5,"column_end":16}},{"value":"/     a = x - (y + b_{in}) \\pmod 2^B","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10166779,"byte_end":10166817,"line_start":2643,"line_end":2643,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10166822,"byte_end":10166829,"line_start":2644,"line_end":2644,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10166834,"byte_end":10166837,"line_start":2645,"line_end":2645,"column_start":5,"column_end":8}},{"value":"/ Polymorphic over all scalar integer types, but does not support vector","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10166842,"byte_end":10166916,"line_start":2646,"line_end":2646,"column_start":5,"column_end":79}},{"value":"/ types.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10166921,"byte_end":10166931,"line_start":2647,"line_end":2647,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10166936,"byte_end":10166939,"line_start":2648,"line_end":2648,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10166944,"byte_end":10166955,"line_start":2649,"line_end":2649,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10166960,"byte_end":10166963,"line_start":2650,"line_end":2650,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10166968,"byte_end":10166998,"line_start":2651,"line_end":2651,"column_start":5,"column_end":35}},{"value":"/ - y: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10167003,"byte_end":10167033,"line_start":2652,"line_end":2652,"column_start":5,"column_end":35}},{"value":"/ - b_in: Input borrow flag","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10167038,"byte_end":10167067,"line_start":2653,"line_end":2653,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10167072,"byte_end":10167075,"line_start":2654,"line_end":2654,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10167080,"byte_end":10167092,"line_start":2655,"line_end":2655,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10167097,"byte_end":10167100,"line_start":2656,"line_end":2656,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10167105,"byte_end":10167135,"line_start":2657,"line_end":2657,"column_start":5,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10167140,"byte_end":10167164,"line_start":2658,"line_end":2658,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5307},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10168085,"byte_end":10168095,"line_start":2687,"line_end":2687,"column_start":8,"column_end":18},"name":"isub_ifbin","qualname":"::ir::builder::InstBuilder::isub_ifbin","value":"fn (self, x: ir::Value, y: ir::Value, b_in: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Subtract integers with borrow in.","sig":null,"attributes":[{"value":"/ Subtract integers with borrow in.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10167433,"byte_end":10167470,"line_start":2665,"line_end":2665,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10167475,"byte_end":10167478,"line_start":2666,"line_end":2666,"column_start":5,"column_end":8}},{"value":"/ Same as `isub` with an additional borrow flag input. Computes:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10167483,"byte_end":10167549,"line_start":2667,"line_end":2667,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10167554,"byte_end":10167557,"line_start":2668,"line_end":2668,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10167562,"byte_end":10167573,"line_start":2669,"line_end":2669,"column_start":5,"column_end":16}},{"value":"/     a = x - (y + b_{in}) \\pmod 2^B","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10167578,"byte_end":10167616,"line_start":2670,"line_end":2670,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10167621,"byte_end":10167628,"line_start":2671,"line_end":2671,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10167633,"byte_end":10167636,"line_start":2672,"line_end":2672,"column_start":5,"column_end":8}},{"value":"/ Polymorphic over all scalar integer types, but does not support vector","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10167641,"byte_end":10167715,"line_start":2673,"line_end":2673,"column_start":5,"column_end":79}},{"value":"/ types.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10167720,"byte_end":10167730,"line_start":2674,"line_end":2674,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10167735,"byte_end":10167738,"line_start":2675,"line_end":2675,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10167743,"byte_end":10167754,"line_start":2676,"line_end":2676,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10167759,"byte_end":10167762,"line_start":2677,"line_end":2677,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10167767,"byte_end":10167797,"line_start":2678,"line_end":2678,"column_start":5,"column_end":35}},{"value":"/ - y: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10167802,"byte_end":10167832,"line_start":2679,"line_end":2679,"column_start":5,"column_end":35}},{"value":"/ - b_in: CPU flags representing the result of an integer comparison. These flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10167837,"byte_end":10167920,"line_start":2680,"line_end":2680,"column_start":5,"column_end":88}},{"value":"/ can be tested with an :type:`intcc` condition code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10167925,"byte_end":10167980,"line_start":2681,"line_end":2681,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10167985,"byte_end":10167988,"line_start":2682,"line_end":2682,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10167993,"byte_end":10168005,"line_start":2683,"line_end":2683,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10168010,"byte_end":10168013,"line_start":2684,"line_end":2684,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10168018,"byte_end":10168048,"line_start":2685,"line_end":2685,"column_start":5,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10168053,"byte_end":10168077,"line_start":2686,"line_end":2686,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5308},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10168904,"byte_end":10168913,"line_start":2715,"line_end":2715,"column_start":8,"column_end":17},"name":"isub_bout","qualname":"::ir::builder::InstBuilder::isub_bout","value":"fn (self, x: ir::Value, y: ir::Value) -> (Value, Value)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Subtract integers with borrow out.","sig":null,"attributes":[{"value":"/ Subtract integers with borrow out.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10168350,"byte_end":10168388,"line_start":2693,"line_end":2693,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10168393,"byte_end":10168396,"line_start":2694,"line_end":2694,"column_start":5,"column_end":8}},{"value":"/ Same as `isub` with an additional borrow flag output.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10168401,"byte_end":10168458,"line_start":2695,"line_end":2695,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10168463,"byte_end":10168466,"line_start":2696,"line_end":2696,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10168471,"byte_end":10168482,"line_start":2697,"line_end":2697,"column_start":5,"column_end":16}},{"value":"/     a &= x - y \\pmod 2^B \\\\","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10168487,"byte_end":10168518,"line_start":2698,"line_end":2698,"column_start":5,"column_end":36}},{"value":"/     b_{out} &= x < y","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10168523,"byte_end":10168547,"line_start":2699,"line_end":2699,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10168552,"byte_end":10168559,"line_start":2700,"line_end":2700,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10168564,"byte_end":10168567,"line_start":2701,"line_end":2701,"column_start":5,"column_end":8}},{"value":"/ Polymorphic over all scalar integer types, but does not support vector","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10168572,"byte_end":10168646,"line_start":2702,"line_end":2702,"column_start":5,"column_end":79}},{"value":"/ types.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10168651,"byte_end":10168661,"line_start":2703,"line_end":2703,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10168666,"byte_end":10168669,"line_start":2704,"line_end":2704,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10168674,"byte_end":10168685,"line_start":2705,"line_end":2705,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10168690,"byte_end":10168693,"line_start":2706,"line_end":2706,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10168698,"byte_end":10168728,"line_start":2707,"line_end":2707,"column_start":5,"column_end":35}},{"value":"/ - y: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10168733,"byte_end":10168763,"line_start":2708,"line_end":2708,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10168768,"byte_end":10168771,"line_start":2709,"line_end":2709,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10168776,"byte_end":10168788,"line_start":2710,"line_end":2710,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10168793,"byte_end":10168796,"line_start":2711,"line_end":2711,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10168801,"byte_end":10168831,"line_start":2712,"line_end":2712,"column_start":5,"column_end":35}},{"value":"/ - b_out: Output borrow flag","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10168836,"byte_end":10168867,"line_start":2713,"line_end":2713,"column_start":5,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10168872,"byte_end":10168896,"line_start":2714,"line_end":2714,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5309},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10169874,"byte_end":10169885,"line_start":2745,"line_end":2745,"column_start":8,"column_end":19},"name":"isub_ifbout","qualname":"::ir::builder::InstBuilder::isub_ifbout","value":"fn (self, x: ir::Value, y: ir::Value) -> (Value, Value)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Subtract integers with borrow out.","sig":null,"attributes":[{"value":"/ Subtract integers with borrow out.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10169207,"byte_end":10169245,"line_start":2722,"line_end":2722,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10169250,"byte_end":10169253,"line_start":2723,"line_end":2723,"column_start":5,"column_end":8}},{"value":"/ Same as `isub` with an additional borrow flag output.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10169258,"byte_end":10169315,"line_start":2724,"line_end":2724,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10169320,"byte_end":10169323,"line_start":2725,"line_end":2725,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10169328,"byte_end":10169339,"line_start":2726,"line_end":2726,"column_start":5,"column_end":16}},{"value":"/     a &= x - y \\pmod 2^B \\\\","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10169344,"byte_end":10169375,"line_start":2727,"line_end":2727,"column_start":5,"column_end":36}},{"value":"/     b_{out} &= x < y","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10169380,"byte_end":10169404,"line_start":2728,"line_end":2728,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10169409,"byte_end":10169416,"line_start":2729,"line_end":2729,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10169421,"byte_end":10169424,"line_start":2730,"line_end":2730,"column_start":5,"column_end":8}},{"value":"/ Polymorphic over all scalar integer types, but does not support vector","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10169429,"byte_end":10169503,"line_start":2731,"line_end":2731,"column_start":5,"column_end":79}},{"value":"/ types.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10169508,"byte_end":10169518,"line_start":2732,"line_end":2732,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10169523,"byte_end":10169526,"line_start":2733,"line_end":2733,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10169531,"byte_end":10169542,"line_start":2734,"line_end":2734,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10169547,"byte_end":10169550,"line_start":2735,"line_end":2735,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10169555,"byte_end":10169585,"line_start":2736,"line_end":2736,"column_start":5,"column_end":35}},{"value":"/ - y: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10169590,"byte_end":10169620,"line_start":2737,"line_end":2737,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10169625,"byte_end":10169628,"line_start":2738,"line_end":2738,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10169633,"byte_end":10169645,"line_start":2739,"line_end":2739,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10169650,"byte_end":10169653,"line_start":2740,"line_end":2740,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10169658,"byte_end":10169688,"line_start":2741,"line_end":2741,"column_start":5,"column_end":35}},{"value":"/ - b_out: CPU flags representing the result of an integer comparison. These flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10169693,"byte_end":10169777,"line_start":2742,"line_end":2742,"column_start":5,"column_end":89}},{"value":"/ can be tested with an :type:`intcc` condition code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10169782,"byte_end":10169837,"line_start":2743,"line_end":2743,"column_start":5,"column_end":60}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10169842,"byte_end":10169866,"line_start":2744,"line_end":2744,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5310},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10170806,"byte_end":10170817,"line_start":2775,"line_end":2775,"column_start":8,"column_end":19},"name":"isub_borrow","qualname":"::ir::builder::InstBuilder::isub_borrow","value":"fn (self, x: ir::Value, y: ir::Value, b_in: ir::Value) -> (Value, Value)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Subtract integers with borrow in and out.","sig":null,"attributes":[{"value":"/ Subtract integers with borrow in and out.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10170181,"byte_end":10170226,"line_start":2752,"line_end":2752,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10170231,"byte_end":10170234,"line_start":2753,"line_end":2753,"column_start":5,"column_end":8}},{"value":"/ Same as `isub` with an additional borrow flag input and output.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10170239,"byte_end":10170306,"line_start":2754,"line_end":2754,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10170311,"byte_end":10170314,"line_start":2755,"line_end":2755,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10170319,"byte_end":10170330,"line_start":2756,"line_end":2756,"column_start":5,"column_end":16}},{"value":"/     a &= x - (y + b_{in}) \\pmod 2^B \\\\","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10170335,"byte_end":10170377,"line_start":2757,"line_end":2757,"column_start":5,"column_end":47}},{"value":"/     b_{out} &= x < y + b_{in}","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10170382,"byte_end":10170415,"line_start":2758,"line_end":2758,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10170420,"byte_end":10170427,"line_start":2759,"line_end":2759,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10170432,"byte_end":10170435,"line_start":2760,"line_end":2760,"column_start":5,"column_end":8}},{"value":"/ Polymorphic over all scalar integer types, but does not support vector","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10170440,"byte_end":10170514,"line_start":2761,"line_end":2761,"column_start":5,"column_end":79}},{"value":"/ types.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10170519,"byte_end":10170529,"line_start":2762,"line_end":2762,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10170534,"byte_end":10170537,"line_start":2763,"line_end":2763,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10170542,"byte_end":10170553,"line_start":2764,"line_end":2764,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10170558,"byte_end":10170561,"line_start":2765,"line_end":2765,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10170566,"byte_end":10170596,"line_start":2766,"line_end":2766,"column_start":5,"column_end":35}},{"value":"/ - y: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10170601,"byte_end":10170631,"line_start":2767,"line_end":2767,"column_start":5,"column_end":35}},{"value":"/ - b_in: Input borrow flag","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10170636,"byte_end":10170665,"line_start":2768,"line_end":2768,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10170670,"byte_end":10170673,"line_start":2769,"line_end":2769,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10170678,"byte_end":10170690,"line_start":2770,"line_end":2770,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10170695,"byte_end":10170698,"line_start":2771,"line_end":2771,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10170703,"byte_end":10170733,"line_start":2772,"line_end":2772,"column_start":5,"column_end":35}},{"value":"/ - b_out: Output borrow flag","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10170738,"byte_end":10170769,"line_start":2773,"line_end":2773,"column_start":5,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10170774,"byte_end":10170798,"line_start":2774,"line_end":2774,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5311},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10171989,"byte_end":10172002,"line_start":2807,"line_end":2807,"column_start":8,"column_end":21},"name":"isub_ifborrow","qualname":"::ir::builder::InstBuilder::isub_ifborrow","value":"fn (self, x: ir::Value, y: ir::Value, b_in: ir::Value) -> (Value, Value)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Subtract integers with borrow in and out.","sig":null,"attributes":[{"value":"/ Subtract integers with borrow in and out.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10171137,"byte_end":10171182,"line_start":2782,"line_end":2782,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10171187,"byte_end":10171190,"line_start":2783,"line_end":2783,"column_start":5,"column_end":8}},{"value":"/ Same as `isub` with an additional borrow flag input and output.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10171195,"byte_end":10171262,"line_start":2784,"line_end":2784,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10171267,"byte_end":10171270,"line_start":2785,"line_end":2785,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10171275,"byte_end":10171286,"line_start":2786,"line_end":2786,"column_start":5,"column_end":16}},{"value":"/     a &= x - (y + b_{in}) \\pmod 2^B \\\\","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10171291,"byte_end":10171333,"line_start":2787,"line_end":2787,"column_start":5,"column_end":47}},{"value":"/     b_{out} &= x < y + b_{in}","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10171338,"byte_end":10171371,"line_start":2788,"line_end":2788,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10171376,"byte_end":10171383,"line_start":2789,"line_end":2789,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10171388,"byte_end":10171391,"line_start":2790,"line_end":2790,"column_start":5,"column_end":8}},{"value":"/ Polymorphic over all scalar integer types, but does not support vector","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10171396,"byte_end":10171470,"line_start":2791,"line_end":2791,"column_start":5,"column_end":79}},{"value":"/ types.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10171475,"byte_end":10171485,"line_start":2792,"line_end":2792,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10171490,"byte_end":10171493,"line_start":2793,"line_end":2793,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10171498,"byte_end":10171509,"line_start":2794,"line_end":2794,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10171514,"byte_end":10171517,"line_start":2795,"line_end":2795,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10171522,"byte_end":10171552,"line_start":2796,"line_end":2796,"column_start":5,"column_end":35}},{"value":"/ - y: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10171557,"byte_end":10171587,"line_start":2797,"line_end":2797,"column_start":5,"column_end":35}},{"value":"/ - b_in: CPU flags representing the result of an integer comparison. These flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10171592,"byte_end":10171675,"line_start":2798,"line_end":2798,"column_start":5,"column_end":88}},{"value":"/ can be tested with an :type:`intcc` condition code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10171680,"byte_end":10171735,"line_start":2799,"line_end":2799,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10171740,"byte_end":10171743,"line_start":2800,"line_end":2800,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10171748,"byte_end":10171760,"line_start":2801,"line_end":2801,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10171765,"byte_end":10171768,"line_start":2802,"line_end":2802,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10171773,"byte_end":10171803,"line_start":2803,"line_end":2803,"column_start":5,"column_end":35}},{"value":"/ - b_out: CPU flags representing the result of an integer comparison. These flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10171808,"byte_end":10171892,"line_start":2804,"line_end":2804,"column_start":5,"column_end":89}},{"value":"/ can be tested with an :type:`intcc` condition code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10171897,"byte_end":10171952,"line_start":2805,"line_end":2805,"column_start":5,"column_end":60}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10171957,"byte_end":10171981,"line_start":2806,"line_end":2806,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5312},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10172640,"byte_end":10172644,"line_start":2825,"line_end":2825,"column_start":8,"column_end":12},"name":"band","qualname":"::ir::builder::InstBuilder::band","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Bitwise and.","sig":null,"attributes":[{"value":"/ Bitwise and.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10172324,"byte_end":10172340,"line_start":2814,"line_end":2814,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10172345,"byte_end":10172348,"line_start":2815,"line_end":2815,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10172353,"byte_end":10172364,"line_start":2816,"line_end":2816,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10172369,"byte_end":10172372,"line_start":2817,"line_end":2817,"column_start":5,"column_end":8}},{"value":"/ - x: Any integer, float, or boolean scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10172377,"byte_end":10172438,"line_start":2818,"line_end":2818,"column_start":5,"column_end":66}},{"value":"/ - y: Any integer, float, or boolean scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10172443,"byte_end":10172504,"line_start":2819,"line_end":2819,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10172509,"byte_end":10172512,"line_start":2820,"line_end":2820,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10172517,"byte_end":10172529,"line_start":2821,"line_end":2821,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10172534,"byte_end":10172537,"line_start":2822,"line_end":2822,"column_start":5,"column_end":8}},{"value":"/ - a: Any integer, float, or boolean scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10172542,"byte_end":10172603,"line_start":2823,"line_end":2823,"column_start":5,"column_end":66}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10172608,"byte_end":10172632,"line_start":2824,"line_end":2824,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5313},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10173185,"byte_end":10173188,"line_start":2842,"line_end":2842,"column_start":8,"column_end":11},"name":"bor","qualname":"::ir::builder::InstBuilder::bor","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Bitwise or.","sig":null,"attributes":[{"value":"/ Bitwise or.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10172870,"byte_end":10172885,"line_start":2831,"line_end":2831,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10172890,"byte_end":10172893,"line_start":2832,"line_end":2832,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10172898,"byte_end":10172909,"line_start":2833,"line_end":2833,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10172914,"byte_end":10172917,"line_start":2834,"line_end":2834,"column_start":5,"column_end":8}},{"value":"/ - x: Any integer, float, or boolean scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10172922,"byte_end":10172983,"line_start":2835,"line_end":2835,"column_start":5,"column_end":66}},{"value":"/ - y: Any integer, float, or boolean scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10172988,"byte_end":10173049,"line_start":2836,"line_end":2836,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10173054,"byte_end":10173057,"line_start":2837,"line_end":2837,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10173062,"byte_end":10173074,"line_start":2838,"line_end":2838,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10173079,"byte_end":10173082,"line_start":2839,"line_end":2839,"column_start":5,"column_end":8}},{"value":"/ - a: Any integer, float, or boolean scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10173087,"byte_end":10173148,"line_start":2840,"line_end":2840,"column_start":5,"column_end":66}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10173153,"byte_end":10173177,"line_start":2841,"line_end":2841,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5314},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10173729,"byte_end":10173733,"line_start":2859,"line_end":2859,"column_start":8,"column_end":12},"name":"bxor","qualname":"::ir::builder::InstBuilder::bxor","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Bitwise xor.","sig":null,"attributes":[{"value":"/ Bitwise xor.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10173413,"byte_end":10173429,"line_start":2848,"line_end":2848,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10173434,"byte_end":10173437,"line_start":2849,"line_end":2849,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10173442,"byte_end":10173453,"line_start":2850,"line_end":2850,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10173458,"byte_end":10173461,"line_start":2851,"line_end":2851,"column_start":5,"column_end":8}},{"value":"/ - x: Any integer, float, or boolean scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10173466,"byte_end":10173527,"line_start":2852,"line_end":2852,"column_start":5,"column_end":66}},{"value":"/ - y: Any integer, float, or boolean scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10173532,"byte_end":10173593,"line_start":2853,"line_end":2853,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10173598,"byte_end":10173601,"line_start":2854,"line_end":2854,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10173606,"byte_end":10173618,"line_start":2855,"line_end":2855,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10173623,"byte_end":10173626,"line_start":2856,"line_end":2856,"column_start":5,"column_end":8}},{"value":"/ - a: Any integer, float, or boolean scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10173631,"byte_end":10173692,"line_start":2857,"line_end":2857,"column_start":5,"column_end":66}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10173697,"byte_end":10173721,"line_start":2858,"line_end":2858,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5315},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10174209,"byte_end":10174213,"line_start":2875,"line_end":2875,"column_start":8,"column_end":12},"name":"bnot","qualname":"::ir::builder::InstBuilder::bnot","value":"fn (self, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Bitwise not.","sig":null,"attributes":[{"value":"/ Bitwise not.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10173959,"byte_end":10173975,"line_start":2865,"line_end":2865,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10173980,"byte_end":10173983,"line_start":2866,"line_end":2866,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10173988,"byte_end":10173999,"line_start":2867,"line_end":2867,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10174004,"byte_end":10174007,"line_start":2868,"line_end":2868,"column_start":5,"column_end":8}},{"value":"/ - x: Any integer, float, or boolean scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10174012,"byte_end":10174073,"line_start":2869,"line_end":2869,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10174078,"byte_end":10174081,"line_start":2870,"line_end":2870,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10174086,"byte_end":10174098,"line_start":2871,"line_end":2871,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10174103,"byte_end":10174106,"line_start":2872,"line_end":2872,"column_start":5,"column_end":8}},{"value":"/ - a: Any integer, float, or boolean scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10174111,"byte_end":10174172,"line_start":2873,"line_end":2873,"column_start":5,"column_end":66}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10174177,"byte_end":10174201,"line_start":2874,"line_end":2874,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5316},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10174776,"byte_end":10174784,"line_start":2894,"line_end":2894,"column_start":8,"column_end":16},"name":"band_not","qualname":"::ir::builder::InstBuilder::band_not","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Bitwise and not.","sig":null,"attributes":[{"value":"/ Bitwise and not.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10174421,"byte_end":10174441,"line_start":2881,"line_end":2881,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10174446,"byte_end":10174449,"line_start":2882,"line_end":2882,"column_start":5,"column_end":8}},{"value":"/ Computes `x & ~y`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10174454,"byte_end":10174476,"line_start":2883,"line_end":2883,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10174481,"byte_end":10174484,"line_start":2884,"line_end":2884,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10174489,"byte_end":10174500,"line_start":2885,"line_end":2885,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10174505,"byte_end":10174508,"line_start":2886,"line_end":2886,"column_start":5,"column_end":8}},{"value":"/ - x: Any integer, float, or boolean scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10174513,"byte_end":10174574,"line_start":2887,"line_end":2887,"column_start":5,"column_end":66}},{"value":"/ - y: Any integer, float, or boolean scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10174579,"byte_end":10174640,"line_start":2888,"line_end":2888,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10174645,"byte_end":10174648,"line_start":2889,"line_end":2889,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10174653,"byte_end":10174665,"line_start":2890,"line_end":2890,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10174670,"byte_end":10174673,"line_start":2891,"line_end":2891,"column_start":5,"column_end":8}},{"value":"/ - a: Any integer, float, or boolean scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10174678,"byte_end":10174739,"line_start":2892,"line_end":2892,"column_start":5,"column_end":66}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10174744,"byte_end":10174768,"line_start":2893,"line_end":2893,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5317},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10175367,"byte_end":10175374,"line_start":2913,"line_end":2913,"column_start":8,"column_end":15},"name":"bor_not","qualname":"::ir::builder::InstBuilder::bor_not","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Bitwise or not.","sig":null,"attributes":[{"value":"/ Bitwise or not.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10175013,"byte_end":10175032,"line_start":2900,"line_end":2900,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10175037,"byte_end":10175040,"line_start":2901,"line_end":2901,"column_start":5,"column_end":8}},{"value":"/ Computes `x | ~y`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10175045,"byte_end":10175067,"line_start":2902,"line_end":2902,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10175072,"byte_end":10175075,"line_start":2903,"line_end":2903,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10175080,"byte_end":10175091,"line_start":2904,"line_end":2904,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10175096,"byte_end":10175099,"line_start":2905,"line_end":2905,"column_start":5,"column_end":8}},{"value":"/ - x: Any integer, float, or boolean scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10175104,"byte_end":10175165,"line_start":2906,"line_end":2906,"column_start":5,"column_end":66}},{"value":"/ - y: Any integer, float, or boolean scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10175170,"byte_end":10175231,"line_start":2907,"line_end":2907,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10175236,"byte_end":10175239,"line_start":2908,"line_end":2908,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10175244,"byte_end":10175256,"line_start":2909,"line_end":2909,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10175261,"byte_end":10175264,"line_start":2910,"line_end":2910,"column_start":5,"column_end":8}},{"value":"/ - a: Any integer, float, or boolean scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10175269,"byte_end":10175330,"line_start":2911,"line_end":2911,"column_start":5,"column_end":66}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10175335,"byte_end":10175359,"line_start":2912,"line_end":2912,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5318},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10175957,"byte_end":10175965,"line_start":2932,"line_end":2932,"column_start":8,"column_end":16},"name":"bxor_not","qualname":"::ir::builder::InstBuilder::bxor_not","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Bitwise xor not.","sig":null,"attributes":[{"value":"/ Bitwise xor not.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10175602,"byte_end":10175622,"line_start":2919,"line_end":2919,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10175627,"byte_end":10175630,"line_start":2920,"line_end":2920,"column_start":5,"column_end":8}},{"value":"/ Computes `x ^ ~y`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10175635,"byte_end":10175657,"line_start":2921,"line_end":2921,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10175662,"byte_end":10175665,"line_start":2922,"line_end":2922,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10175670,"byte_end":10175681,"line_start":2923,"line_end":2923,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10175686,"byte_end":10175689,"line_start":2924,"line_end":2924,"column_start":5,"column_end":8}},{"value":"/ - x: Any integer, float, or boolean scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10175694,"byte_end":10175755,"line_start":2925,"line_end":2925,"column_start":5,"column_end":66}},{"value":"/ - y: Any integer, float, or boolean scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10175760,"byte_end":10175821,"line_start":2926,"line_end":2926,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10175826,"byte_end":10175829,"line_start":2927,"line_end":2927,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10175834,"byte_end":10175846,"line_start":2928,"line_end":2928,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10175851,"byte_end":10175854,"line_start":2929,"line_end":2929,"column_start":5,"column_end":8}},{"value":"/ - a: Any integer, float, or boolean scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10175859,"byte_end":10175920,"line_start":2930,"line_end":2930,"column_start":5,"column_end":66}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10175925,"byte_end":10175949,"line_start":2931,"line_end":2931,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5319},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10176614,"byte_end":10176622,"line_start":2954,"line_end":2954,"column_start":8,"column_end":16},"name":"band_imm","qualname":"::ir::builder::InstBuilder::band_imm","value":"fn <T1> (self, x: ir::Value, Y: T1) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Bitwise and with immediate.","sig":null,"attributes":[{"value":"/ Bitwise and with immediate.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10176194,"byte_end":10176225,"line_start":2938,"line_end":2938,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10176230,"byte_end":10176233,"line_start":2939,"line_end":2939,"column_start":5,"column_end":8}},{"value":"/ Same as `band`, but one operand is an immediate constant.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10176238,"byte_end":10176299,"line_start":2940,"line_end":2940,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10176304,"byte_end":10176307,"line_start":2941,"line_end":2941,"column_start":5,"column_end":8}},{"value":"/ Polymorphic over all scalar integer types, but does not support vector","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10176312,"byte_end":10176386,"line_start":2942,"line_end":2942,"column_start":5,"column_end":79}},{"value":"/ types.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10176391,"byte_end":10176401,"line_start":2943,"line_end":2943,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10176406,"byte_end":10176409,"line_start":2944,"line_end":2944,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10176414,"byte_end":10176425,"line_start":2945,"line_end":2945,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10176430,"byte_end":10176433,"line_start":2946,"line_end":2946,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10176438,"byte_end":10176468,"line_start":2947,"line_end":2947,"column_start":5,"column_end":35}},{"value":"/ - Y: A 64-bit immediate integer.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10176473,"byte_end":10176509,"line_start":2948,"line_end":2948,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10176514,"byte_end":10176517,"line_start":2949,"line_end":2949,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10176522,"byte_end":10176534,"line_start":2950,"line_end":2950,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10176539,"byte_end":10176542,"line_start":2951,"line_end":2951,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10176547,"byte_end":10176577,"line_start":2952,"line_end":2952,"column_start":5,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10176582,"byte_end":10176606,"line_start":2953,"line_end":2953,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5321},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10177324,"byte_end":10177331,"line_start":2977,"line_end":2977,"column_start":8,"column_end":15},"name":"bor_imm","qualname":"::ir::builder::InstBuilder::bor_imm","value":"fn <T1> (self, x: ir::Value, Y: T1) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Bitwise or with immediate.","sig":null,"attributes":[{"value":"/ Bitwise or with immediate.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10176906,"byte_end":10176936,"line_start":2961,"line_end":2961,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10176941,"byte_end":10176944,"line_start":2962,"line_end":2962,"column_start":5,"column_end":8}},{"value":"/ Same as `bor`, but one operand is an immediate constant.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10176949,"byte_end":10177009,"line_start":2963,"line_end":2963,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10177014,"byte_end":10177017,"line_start":2964,"line_end":2964,"column_start":5,"column_end":8}},{"value":"/ Polymorphic over all scalar integer types, but does not support vector","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10177022,"byte_end":10177096,"line_start":2965,"line_end":2965,"column_start":5,"column_end":79}},{"value":"/ types.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10177101,"byte_end":10177111,"line_start":2966,"line_end":2966,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10177116,"byte_end":10177119,"line_start":2967,"line_end":2967,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10177124,"byte_end":10177135,"line_start":2968,"line_end":2968,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10177140,"byte_end":10177143,"line_start":2969,"line_end":2969,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10177148,"byte_end":10177178,"line_start":2970,"line_end":2970,"column_start":5,"column_end":35}},{"value":"/ - Y: A 64-bit immediate integer.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10177183,"byte_end":10177219,"line_start":2971,"line_end":2971,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10177224,"byte_end":10177227,"line_start":2972,"line_end":2972,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10177232,"byte_end":10177244,"line_start":2973,"line_end":2973,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10177249,"byte_end":10177252,"line_start":2974,"line_end":2974,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10177257,"byte_end":10177287,"line_start":2975,"line_end":2975,"column_start":5,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10177292,"byte_end":10177316,"line_start":2976,"line_end":2976,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5323},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10178034,"byte_end":10178042,"line_start":3000,"line_end":3000,"column_start":8,"column_end":16},"name":"bxor_imm","qualname":"::ir::builder::InstBuilder::bxor_imm","value":"fn <T1> (self, x: ir::Value, Y: T1) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Bitwise xor with immediate.","sig":null,"attributes":[{"value":"/ Bitwise xor with immediate.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10177614,"byte_end":10177645,"line_start":2984,"line_end":2984,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10177650,"byte_end":10177653,"line_start":2985,"line_end":2985,"column_start":5,"column_end":8}},{"value":"/ Same as `bxor`, but one operand is an immediate constant.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10177658,"byte_end":10177719,"line_start":2986,"line_end":2986,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10177724,"byte_end":10177727,"line_start":2987,"line_end":2987,"column_start":5,"column_end":8}},{"value":"/ Polymorphic over all scalar integer types, but does not support vector","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10177732,"byte_end":10177806,"line_start":2988,"line_end":2988,"column_start":5,"column_end":79}},{"value":"/ types.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10177811,"byte_end":10177821,"line_start":2989,"line_end":2989,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10177826,"byte_end":10177829,"line_start":2990,"line_end":2990,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10177834,"byte_end":10177845,"line_start":2991,"line_end":2991,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10177850,"byte_end":10177853,"line_start":2992,"line_end":2992,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10177858,"byte_end":10177888,"line_start":2993,"line_end":2993,"column_start":5,"column_end":35}},{"value":"/ - Y: A 64-bit immediate integer.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10177893,"byte_end":10177929,"line_start":2994,"line_end":2994,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10177934,"byte_end":10177937,"line_start":2995,"line_end":2995,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10177942,"byte_end":10177954,"line_start":2996,"line_end":2996,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10177959,"byte_end":10177962,"line_start":2997,"line_end":2997,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10177967,"byte_end":10177997,"line_start":2998,"line_end":2998,"column_start":5,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10178002,"byte_end":10178026,"line_start":2999,"line_end":2999,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5325},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10178629,"byte_end":10178633,"line_start":3020,"line_end":3020,"column_start":8,"column_end":12},"name":"rotl","qualname":"::ir::builder::InstBuilder::rotl","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Rotate left.","sig":null,"attributes":[{"value":"/ Rotate left.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10178326,"byte_end":10178342,"line_start":3007,"line_end":3007,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10178347,"byte_end":10178350,"line_start":3008,"line_end":3008,"column_start":5,"column_end":8}},{"value":"/ Rotate the bits in ``x`` by ``y`` places.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10178355,"byte_end":10178400,"line_start":3009,"line_end":3009,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10178405,"byte_end":10178408,"line_start":3010,"line_end":3010,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10178413,"byte_end":10178424,"line_start":3011,"line_end":3011,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10178429,"byte_end":10178432,"line_start":3012,"line_end":3012,"column_start":5,"column_end":8}},{"value":"/ - x: Scalar or vector value to shift","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10178437,"byte_end":10178477,"line_start":3013,"line_end":3013,"column_start":5,"column_end":45}},{"value":"/ - y: Number of bits to shift","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10178482,"byte_end":10178514,"line_start":3014,"line_end":3014,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10178519,"byte_end":10178522,"line_start":3015,"line_end":3015,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10178527,"byte_end":10178539,"line_start":3016,"line_end":3016,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10178544,"byte_end":10178547,"line_start":3017,"line_end":3017,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10178552,"byte_end":10178592,"line_start":3018,"line_end":3018,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10178597,"byte_end":10178621,"line_start":3019,"line_end":3019,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5326},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10179163,"byte_end":10179167,"line_start":3039,"line_end":3039,"column_start":8,"column_end":12},"name":"rotr","qualname":"::ir::builder::InstBuilder::rotr","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Rotate right.","sig":null,"attributes":[{"value":"/ Rotate right.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10178859,"byte_end":10178876,"line_start":3026,"line_end":3026,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10178881,"byte_end":10178884,"line_start":3027,"line_end":3027,"column_start":5,"column_end":8}},{"value":"/ Rotate the bits in ``x`` by ``y`` places.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10178889,"byte_end":10178934,"line_start":3028,"line_end":3028,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10178939,"byte_end":10178942,"line_start":3029,"line_end":3029,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10178947,"byte_end":10178958,"line_start":3030,"line_end":3030,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10178963,"byte_end":10178966,"line_start":3031,"line_end":3031,"column_start":5,"column_end":8}},{"value":"/ - x: Scalar or vector value to shift","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10178971,"byte_end":10179011,"line_start":3032,"line_end":3032,"column_start":5,"column_end":45}},{"value":"/ - y: Number of bits to shift","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10179016,"byte_end":10179048,"line_start":3033,"line_end":3033,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10179053,"byte_end":10179056,"line_start":3034,"line_end":3034,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10179061,"byte_end":10179073,"line_start":3035,"line_end":3035,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10179078,"byte_end":10179081,"line_start":3036,"line_end":3036,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10179086,"byte_end":10179126,"line_start":3037,"line_end":3037,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10179131,"byte_end":10179155,"line_start":3038,"line_end":3038,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5327},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10179655,"byte_end":10179663,"line_start":3056,"line_end":3056,"column_start":8,"column_end":16},"name":"rotl_imm","qualname":"::ir::builder::InstBuilder::rotl_imm","value":"fn <T1> (self, x: ir::Value, Y: T1) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Rotate left by immediate.","sig":null,"attributes":[{"value":"/ Rotate left by immediate.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10179393,"byte_end":10179422,"line_start":3045,"line_end":3045,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10179427,"byte_end":10179430,"line_start":3046,"line_end":3046,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10179435,"byte_end":10179446,"line_start":3047,"line_end":3047,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10179451,"byte_end":10179454,"line_start":3048,"line_end":3048,"column_start":5,"column_end":8}},{"value":"/ - x: Scalar or vector value to shift","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10179459,"byte_end":10179499,"line_start":3049,"line_end":3049,"column_start":5,"column_end":45}},{"value":"/ - Y: A 64-bit immediate integer.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10179504,"byte_end":10179540,"line_start":3050,"line_end":3050,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10179545,"byte_end":10179548,"line_start":3051,"line_end":3051,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10179553,"byte_end":10179565,"line_start":3052,"line_end":3052,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10179570,"byte_end":10179573,"line_start":3053,"line_end":3053,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10179578,"byte_end":10179618,"line_start":3054,"line_end":3054,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10179623,"byte_end":10179647,"line_start":3055,"line_end":3055,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5329},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10180210,"byte_end":10180218,"line_start":3074,"line_end":3074,"column_start":8,"column_end":16},"name":"rotr_imm","qualname":"::ir::builder::InstBuilder::rotr_imm","value":"fn <T1> (self, x: ir::Value, Y: T1) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Rotate right by immediate.","sig":null,"attributes":[{"value":"/ Rotate right by immediate.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10179947,"byte_end":10179977,"line_start":3063,"line_end":3063,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10179982,"byte_end":10179985,"line_start":3064,"line_end":3064,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10179990,"byte_end":10180001,"line_start":3065,"line_end":3065,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10180006,"byte_end":10180009,"line_start":3066,"line_end":3066,"column_start":5,"column_end":8}},{"value":"/ - x: Scalar or vector value to shift","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10180014,"byte_end":10180054,"line_start":3067,"line_end":3067,"column_start":5,"column_end":45}},{"value":"/ - Y: A 64-bit immediate integer.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10180059,"byte_end":10180095,"line_start":3068,"line_end":3068,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10180100,"byte_end":10180103,"line_start":3069,"line_end":3069,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10180108,"byte_end":10180120,"line_start":3070,"line_end":3070,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10180125,"byte_end":10180128,"line_start":3071,"line_end":3071,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10180133,"byte_end":10180173,"line_start":3072,"line_end":3072,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10180178,"byte_end":10180202,"line_start":3073,"line_end":3073,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5331},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10181102,"byte_end":10181106,"line_start":3102,"line_end":3102,"column_start":8,"column_end":12},"name":"ishl","qualname":"::ir::builder::InstBuilder::ishl","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Integer shift left. Shift the bits in ``x`` towards the MSB by ``y``\n places. Shift in zero bits to the LSB.","sig":null,"attributes":[{"value":"/ Integer shift left. Shift the bits in ``x`` towards the MSB by ``y``","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10180502,"byte_end":10180574,"line_start":3081,"line_end":3081,"column_start":5,"column_end":77}},{"value":"/ places. Shift in zero bits to the LSB.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10180579,"byte_end":10180621,"line_start":3082,"line_end":3082,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10180626,"byte_end":10180629,"line_start":3083,"line_end":3083,"column_start":5,"column_end":8}},{"value":"/ The shift amount is masked to the size of ``x``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10180634,"byte_end":10180686,"line_start":3084,"line_end":3084,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10180691,"byte_end":10180694,"line_start":3085,"line_end":3085,"column_start":5,"column_end":8}},{"value":"/ When shifting a B-bits integer type, this instruction computes:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10180699,"byte_end":10180766,"line_start":3086,"line_end":3086,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10180771,"byte_end":10180774,"line_start":3087,"line_end":3087,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10180779,"byte_end":10180790,"line_start":3088,"line_end":3088,"column_start":5,"column_end":16}},{"value":"/     s &:= y \\pmod B,","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10180795,"byte_end":10180819,"line_start":3089,"line_end":3089,"column_start":5,"column_end":29}},{"value":"/     a &:= x \\cdot 2^s \\pmod{2^B}.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10180824,"byte_end":10180861,"line_start":3090,"line_end":3090,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10180866,"byte_end":10180873,"line_start":3091,"line_end":3091,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10180878,"byte_end":10180881,"line_start":3092,"line_end":3092,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10180886,"byte_end":10180897,"line_start":3093,"line_end":3093,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10180902,"byte_end":10180905,"line_start":3094,"line_end":3094,"column_start":5,"column_end":8}},{"value":"/ - x: Scalar or vector value to shift","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10180910,"byte_end":10180950,"line_start":3095,"line_end":3095,"column_start":5,"column_end":45}},{"value":"/ - y: Number of bits to shift","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10180955,"byte_end":10180987,"line_start":3096,"line_end":3096,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10180992,"byte_end":10180995,"line_start":3097,"line_end":3097,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10181000,"byte_end":10181012,"line_start":3098,"line_end":3098,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10181017,"byte_end":10181020,"line_start":3099,"line_end":3099,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10181025,"byte_end":10181065,"line_start":3100,"line_end":3100,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10181070,"byte_end":10181094,"line_start":3101,"line_end":3101,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5332},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10181987,"byte_end":10181991,"line_start":3130,"line_end":3130,"column_start":8,"column_end":12},"name":"ushr","qualname":"::ir::builder::InstBuilder::ushr","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Unsigned shift right. Shift bits in ``x`` towards the LSB by ``y``\n places, shifting in zero bits to the MSB. Also called a *logical\n shift*.","sig":null,"attributes":[{"value":"/ Unsigned shift right. Shift bits in ``x`` towards the LSB by ``y``","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10181332,"byte_end":10181402,"line_start":3108,"line_end":3108,"column_start":5,"column_end":75}},{"value":"/ places, shifting in zero bits to the MSB. Also called a *logical","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10181407,"byte_end":10181475,"line_start":3109,"line_end":3109,"column_start":5,"column_end":73}},{"value":"/ shift*.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10181480,"byte_end":10181491,"line_start":3110,"line_end":3110,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10181496,"byte_end":10181499,"line_start":3111,"line_end":3111,"column_start":5,"column_end":8}},{"value":"/ The shift amount is masked to the size of the register.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10181504,"byte_end":10181563,"line_start":3112,"line_end":3112,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10181568,"byte_end":10181571,"line_start":3113,"line_end":3113,"column_start":5,"column_end":8}},{"value":"/ When shifting a B-bits integer type, this instruction computes:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10181576,"byte_end":10181643,"line_start":3114,"line_end":3114,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10181648,"byte_end":10181651,"line_start":3115,"line_end":3115,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10181656,"byte_end":10181667,"line_start":3116,"line_end":3116,"column_start":5,"column_end":16}},{"value":"/     s &:= y \\pmod B,","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10181672,"byte_end":10181696,"line_start":3117,"line_end":3117,"column_start":5,"column_end":29}},{"value":"/     a &:= \\lfloor x \\cdot 2^{-s} \\rfloor.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10181701,"byte_end":10181746,"line_start":3118,"line_end":3118,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10181751,"byte_end":10181758,"line_start":3119,"line_end":3119,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10181763,"byte_end":10181766,"line_start":3120,"line_end":3120,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10181771,"byte_end":10181782,"line_start":3121,"line_end":3121,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10181787,"byte_end":10181790,"line_start":3122,"line_end":3122,"column_start":5,"column_end":8}},{"value":"/ - x: Scalar or vector value to shift","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10181795,"byte_end":10181835,"line_start":3123,"line_end":3123,"column_start":5,"column_end":45}},{"value":"/ - y: Number of bits to shift","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10181840,"byte_end":10181872,"line_start":3124,"line_end":3124,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10181877,"byte_end":10181880,"line_start":3125,"line_end":3125,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10181885,"byte_end":10181897,"line_start":3126,"line_end":3126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10181902,"byte_end":10181905,"line_start":3127,"line_end":3127,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10181910,"byte_end":10181950,"line_start":3128,"line_end":3128,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10181955,"byte_end":10181979,"line_start":3129,"line_end":3129,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5333},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10182679,"byte_end":10182683,"line_start":3151,"line_end":3151,"column_start":8,"column_end":12},"name":"sshr","qualname":"::ir::builder::InstBuilder::sshr","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Signed shift right. Shift bits in ``x`` towards the LSB by ``y``\n places, shifting in sign bits to the MSB. Also called an *arithmetic\n shift*.","sig":null,"attributes":[{"value":"/ Signed shift right. Shift bits in ``x`` towards the LSB by ``y``","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10182217,"byte_end":10182285,"line_start":3136,"line_end":3136,"column_start":5,"column_end":73}},{"value":"/ places, shifting in sign bits to the MSB. Also called an *arithmetic","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10182290,"byte_end":10182362,"line_start":3137,"line_end":3137,"column_start":5,"column_end":77}},{"value":"/ shift*.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10182367,"byte_end":10182378,"line_start":3138,"line_end":3138,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10182383,"byte_end":10182386,"line_start":3139,"line_end":3139,"column_start":5,"column_end":8}},{"value":"/ The shift amount is masked to the size of the register.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10182391,"byte_end":10182450,"line_start":3140,"line_end":3140,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10182455,"byte_end":10182458,"line_start":3141,"line_end":3141,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10182463,"byte_end":10182474,"line_start":3142,"line_end":3142,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10182479,"byte_end":10182482,"line_start":3143,"line_end":3143,"column_start":5,"column_end":8}},{"value":"/ - x: Scalar or vector value to shift","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10182487,"byte_end":10182527,"line_start":3144,"line_end":3144,"column_start":5,"column_end":45}},{"value":"/ - y: Number of bits to shift","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10182532,"byte_end":10182564,"line_start":3145,"line_end":3145,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10182569,"byte_end":10182572,"line_start":3146,"line_end":3146,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10182577,"byte_end":10182589,"line_start":3147,"line_end":3147,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10182594,"byte_end":10182597,"line_start":3148,"line_end":3148,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10182602,"byte_end":10182642,"line_start":3149,"line_end":3149,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10182647,"byte_end":10182671,"line_start":3150,"line_end":3150,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5334},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10183243,"byte_end":10183251,"line_start":3170,"line_end":3170,"column_start":8,"column_end":16},"name":"ishl_imm","qualname":"::ir::builder::InstBuilder::ishl_imm","value":"fn <T1> (self, x: ir::Value, Y: T1) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Integer shift left by immediate.","sig":null,"attributes":[{"value":"/ Integer shift left by immediate.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10182909,"byte_end":10182945,"line_start":3157,"line_end":3157,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10182950,"byte_end":10182953,"line_start":3158,"line_end":3158,"column_start":5,"column_end":8}},{"value":"/ The shift amount is masked to the size of ``x``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10182958,"byte_end":10183010,"line_start":3159,"line_end":3159,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10183015,"byte_end":10183018,"line_start":3160,"line_end":3160,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10183023,"byte_end":10183034,"line_start":3161,"line_end":3161,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10183039,"byte_end":10183042,"line_start":3162,"line_end":3162,"column_start":5,"column_end":8}},{"value":"/ - x: Scalar or vector value to shift","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10183047,"byte_end":10183087,"line_start":3163,"line_end":3163,"column_start":5,"column_end":45}},{"value":"/ - Y: A 64-bit immediate integer.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10183092,"byte_end":10183128,"line_start":3164,"line_end":3164,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10183133,"byte_end":10183136,"line_start":3165,"line_end":3165,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10183141,"byte_end":10183153,"line_start":3166,"line_end":3166,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10183158,"byte_end":10183161,"line_start":3167,"line_end":3167,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10183166,"byte_end":10183206,"line_start":3168,"line_end":3168,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10183211,"byte_end":10183235,"line_start":3169,"line_end":3169,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5336},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10183878,"byte_end":10183886,"line_start":3190,"line_end":3190,"column_start":8,"column_end":16},"name":"ushr_imm","qualname":"::ir::builder::InstBuilder::ushr_imm","value":"fn <T1> (self, x: ir::Value, Y: T1) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Unsigned shift right by immediate.","sig":null,"attributes":[{"value":"/ Unsigned shift right by immediate.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10183535,"byte_end":10183573,"line_start":3177,"line_end":3177,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10183578,"byte_end":10183581,"line_start":3178,"line_end":3178,"column_start":5,"column_end":8}},{"value":"/ The shift amount is masked to the size of the register.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10183586,"byte_end":10183645,"line_start":3179,"line_end":3179,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10183650,"byte_end":10183653,"line_start":3180,"line_end":3180,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10183658,"byte_end":10183669,"line_start":3181,"line_end":3181,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10183674,"byte_end":10183677,"line_start":3182,"line_end":3182,"column_start":5,"column_end":8}},{"value":"/ - x: Scalar or vector value to shift","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10183682,"byte_end":10183722,"line_start":3183,"line_end":3183,"column_start":5,"column_end":45}},{"value":"/ - Y: A 64-bit immediate integer.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10183727,"byte_end":10183763,"line_start":3184,"line_end":3184,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10183768,"byte_end":10183771,"line_start":3185,"line_end":3185,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10183776,"byte_end":10183788,"line_start":3186,"line_end":3186,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10183793,"byte_end":10183796,"line_start":3187,"line_end":3187,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10183801,"byte_end":10183841,"line_start":3188,"line_end":3188,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10183846,"byte_end":10183870,"line_start":3189,"line_end":3189,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5338},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10184511,"byte_end":10184519,"line_start":3210,"line_end":3210,"column_start":8,"column_end":16},"name":"sshr_imm","qualname":"::ir::builder::InstBuilder::sshr_imm","value":"fn <T1> (self, x: ir::Value, Y: T1) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Signed shift right by immediate.","sig":null,"attributes":[{"value":"/ Signed shift right by immediate.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10184170,"byte_end":10184206,"line_start":3197,"line_end":3197,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10184211,"byte_end":10184214,"line_start":3198,"line_end":3198,"column_start":5,"column_end":8}},{"value":"/ The shift amount is masked to the size of the register.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10184219,"byte_end":10184278,"line_start":3199,"line_end":3199,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10184283,"byte_end":10184286,"line_start":3200,"line_end":3200,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10184291,"byte_end":10184302,"line_start":3201,"line_end":3201,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10184307,"byte_end":10184310,"line_start":3202,"line_end":3202,"column_start":5,"column_end":8}},{"value":"/ - x: Scalar or vector value to shift","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10184315,"byte_end":10184355,"line_start":3203,"line_end":3203,"column_start":5,"column_end":45}},{"value":"/ - Y: A 64-bit immediate integer.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10184360,"byte_end":10184396,"line_start":3204,"line_end":3204,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10184401,"byte_end":10184404,"line_start":3205,"line_end":3205,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10184409,"byte_end":10184421,"line_start":3206,"line_end":3206,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10184426,"byte_end":10184429,"line_start":3207,"line_end":3207,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10184434,"byte_end":10184474,"line_start":3208,"line_end":3208,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10184479,"byte_end":10184503,"line_start":3209,"line_end":3209,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5340},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10185053,"byte_end":10185059,"line_start":3229,"line_end":3229,"column_start":8,"column_end":14},"name":"bitrev","qualname":"::ir::builder::InstBuilder::bitrev","value":"fn (self, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Reverse the bits of a integer.","sig":null,"attributes":[{"value":"/ Reverse the bits of a integer.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10184803,"byte_end":10184837,"line_start":3217,"line_end":3217,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10184842,"byte_end":10184845,"line_start":3218,"line_end":3218,"column_start":5,"column_end":8}},{"value":"/ Reverses the bits in ``x``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10184850,"byte_end":10184881,"line_start":3219,"line_end":3219,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10184886,"byte_end":10184889,"line_start":3220,"line_end":3220,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10184894,"byte_end":10184905,"line_start":3221,"line_end":3221,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10184910,"byte_end":10184913,"line_start":3222,"line_end":3222,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10184918,"byte_end":10184948,"line_start":3223,"line_end":3223,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10184953,"byte_end":10184956,"line_start":3224,"line_end":3224,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10184961,"byte_end":10184973,"line_start":3225,"line_end":3225,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10184978,"byte_end":10184981,"line_start":3226,"line_end":3226,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10184986,"byte_end":10185016,"line_start":3227,"line_end":3227,"column_start":5,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10185021,"byte_end":10185045,"line_start":3228,"line_end":3228,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5341},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10185649,"byte_end":10185652,"line_start":3249,"line_end":3249,"column_start":8,"column_end":11},"name":"clz","qualname":"::ir::builder::InstBuilder::clz","value":"fn (self, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Count leading zero bits.","sig":null,"attributes":[{"value":"/ Count leading zero bits.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10185269,"byte_end":10185297,"line_start":3235,"line_end":3235,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10185302,"byte_end":10185305,"line_start":3236,"line_end":3236,"column_start":5,"column_end":8}},{"value":"/ Starting from the MSB in ``x``, count the number of zero bits before","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10185310,"byte_end":10185382,"line_start":3237,"line_end":3237,"column_start":5,"column_end":77}},{"value":"/ reaching the first one bit. When ``x`` is zero, returns the size of x","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10185387,"byte_end":10185460,"line_start":3238,"line_end":3238,"column_start":5,"column_end":78}},{"value":"/ in bits.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10185465,"byte_end":10185477,"line_start":3239,"line_end":3239,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10185482,"byte_end":10185485,"line_start":3240,"line_end":3240,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10185490,"byte_end":10185501,"line_start":3241,"line_end":3241,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10185506,"byte_end":10185509,"line_start":3242,"line_end":3242,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10185514,"byte_end":10185544,"line_start":3243,"line_end":3243,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10185549,"byte_end":10185552,"line_start":3244,"line_end":3244,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10185557,"byte_end":10185569,"line_start":3245,"line_end":3245,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10185574,"byte_end":10185577,"line_start":3246,"line_end":3246,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10185582,"byte_end":10185612,"line_start":3247,"line_end":3247,"column_start":5,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10185617,"byte_end":10185641,"line_start":3248,"line_end":3248,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5342},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10186274,"byte_end":10186277,"line_start":3269,"line_end":3269,"column_start":8,"column_end":11},"name":"cls","qualname":"::ir::builder::InstBuilder::cls","value":"fn (self, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Count leading sign bits.","sig":null,"attributes":[{"value":"/ Count leading sign bits.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10185859,"byte_end":10185887,"line_start":3255,"line_end":3255,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10185892,"byte_end":10185895,"line_start":3256,"line_end":3256,"column_start":5,"column_end":8}},{"value":"/ Starting from the MSB after the sign bit in ``x``, count the number of","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10185900,"byte_end":10185974,"line_start":3257,"line_end":3257,"column_start":5,"column_end":79}},{"value":"/ consecutive bits identical to the sign bit. When ``x`` is 0 or -1,","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10185979,"byte_end":10186049,"line_start":3258,"line_end":3258,"column_start":5,"column_end":75}},{"value":"/ returns one less than the size of x in bits.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10186054,"byte_end":10186102,"line_start":3259,"line_end":3259,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10186107,"byte_end":10186110,"line_start":3260,"line_end":3260,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10186115,"byte_end":10186126,"line_start":3261,"line_end":3261,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10186131,"byte_end":10186134,"line_start":3262,"line_end":3262,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10186139,"byte_end":10186169,"line_start":3263,"line_end":3263,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10186174,"byte_end":10186177,"line_start":3264,"line_end":3264,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10186182,"byte_end":10186194,"line_start":3265,"line_end":3265,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10186199,"byte_end":10186202,"line_start":3266,"line_end":3266,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10186207,"byte_end":10186237,"line_start":3267,"line_end":3267,"column_start":5,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10186242,"byte_end":10186266,"line_start":3268,"line_end":3268,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5343},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10186861,"byte_end":10186864,"line_start":3289,"line_end":3289,"column_start":8,"column_end":11},"name":"ctz","qualname":"::ir::builder::InstBuilder::ctz","value":"fn (self, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Count trailing zeros.","sig":null,"attributes":[{"value":"/ Count trailing zeros.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10186484,"byte_end":10186509,"line_start":3275,"line_end":3275,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10186514,"byte_end":10186517,"line_start":3276,"line_end":3276,"column_start":5,"column_end":8}},{"value":"/ Starting from the LSB in ``x``, count the number of zero bits before","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10186522,"byte_end":10186594,"line_start":3277,"line_end":3277,"column_start":5,"column_end":77}},{"value":"/ reaching the first one bit. When ``x`` is zero, returns the size of x","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10186599,"byte_end":10186672,"line_start":3278,"line_end":3278,"column_start":5,"column_end":78}},{"value":"/ in bits.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10186677,"byte_end":10186689,"line_start":3279,"line_end":3279,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10186694,"byte_end":10186697,"line_start":3280,"line_end":3280,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10186702,"byte_end":10186713,"line_start":3281,"line_end":3281,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10186718,"byte_end":10186721,"line_start":3282,"line_end":3282,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10186726,"byte_end":10186756,"line_start":3283,"line_end":3283,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10186761,"byte_end":10186764,"line_start":3284,"line_end":3284,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10186769,"byte_end":10186781,"line_start":3285,"line_end":3285,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10186786,"byte_end":10186789,"line_start":3286,"line_end":3286,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10186794,"byte_end":10186824,"line_start":3287,"line_end":3287,"column_start":5,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10186829,"byte_end":10186853,"line_start":3288,"line_end":3288,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5344},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10187318,"byte_end":10187324,"line_start":3307,"line_end":3307,"column_start":8,"column_end":14},"name":"popcnt","qualname":"::ir::builder::InstBuilder::popcnt","value":"fn (self, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Population count","sig":null,"attributes":[{"value":"/ Population count","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10187071,"byte_end":10187091,"line_start":3295,"line_end":3295,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10187096,"byte_end":10187099,"line_start":3296,"line_end":3296,"column_start":5,"column_end":8}},{"value":"/ Count the number of one bits in ``x``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10187104,"byte_end":10187146,"line_start":3297,"line_end":3297,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10187151,"byte_end":10187154,"line_start":3298,"line_end":3298,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10187159,"byte_end":10187170,"line_start":3299,"line_end":3299,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10187175,"byte_end":10187178,"line_start":3300,"line_end":3300,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10187183,"byte_end":10187213,"line_start":3301,"line_end":3301,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10187218,"byte_end":10187221,"line_start":3302,"line_end":3302,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10187226,"byte_end":10187238,"line_start":3303,"line_end":3303,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10187243,"byte_end":10187246,"line_start":3304,"line_end":3304,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10187251,"byte_end":10187281,"line_start":3305,"line_end":3305,"column_start":5,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10187286,"byte_end":10187310,"line_start":3306,"line_end":3306,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5345},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10190891,"byte_end":10190895,"line_start":3383,"line_end":3383,"column_start":8,"column_end":12},"name":"fcmp","qualname":"::ir::builder::InstBuilder::fcmp","value":"fn <T1> (self, Cond: T1, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Floating point comparison.","sig":null,"attributes":[{"value":"/ Floating point comparison.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10187534,"byte_end":10187564,"line_start":3313,"line_end":3313,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10187569,"byte_end":10187572,"line_start":3314,"line_end":3314,"column_start":5,"column_end":8}},{"value":"/ Two IEEE 754-2008 floating point numbers, `x` and `y`, relate to each","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10187577,"byte_end":10187650,"line_start":3315,"line_end":3315,"column_start":5,"column_end":78}},{"value":"/ other in exactly one of four ways:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10187655,"byte_end":10187693,"line_start":3316,"line_end":3316,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10187698,"byte_end":10187701,"line_start":3317,"line_end":3317,"column_start":5,"column_end":8}},{"value":"/ == ==========================================","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10187706,"byte_end":10187755,"line_start":3318,"line_end":3318,"column_start":5,"column_end":54}},{"value":"/ UN Unordered when one or both numbers is NaN.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10187760,"byte_end":10187809,"line_start":3319,"line_end":3319,"column_start":5,"column_end":54}},{"value":"/ EQ When `x = y`. (And `0.0 = -0.0`).","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10187814,"byte_end":10187854,"line_start":3320,"line_end":3320,"column_start":5,"column_end":45}},{"value":"/ LT When `x < y`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10187859,"byte_end":10187879,"line_start":3321,"line_end":3321,"column_start":5,"column_end":25}},{"value":"/ GT When `x > y`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10187884,"byte_end":10187904,"line_start":3322,"line_end":3322,"column_start":5,"column_end":25}},{"value":"/ == ==========================================","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10187909,"byte_end":10187958,"line_start":3323,"line_end":3323,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10187963,"byte_end":10187966,"line_start":3324,"line_end":3324,"column_start":5,"column_end":8}},{"value":"/ The 14 `floatcc` condition codes each correspond to a subset of","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10187971,"byte_end":10188038,"line_start":3325,"line_end":3325,"column_start":5,"column_end":72}},{"value":"/ the four relations, except for the empty set which would always be","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10188043,"byte_end":10188113,"line_start":3326,"line_end":3326,"column_start":5,"column_end":75}},{"value":"/ false, and the full set which would always be true.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10188118,"byte_end":10188173,"line_start":3327,"line_end":3327,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10188178,"byte_end":10188181,"line_start":3328,"line_end":3328,"column_start":5,"column_end":8}},{"value":"/ The condition codes are divided into 7 'ordered' conditions which don't","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10188186,"byte_end":10188261,"line_start":3329,"line_end":3329,"column_start":5,"column_end":80}},{"value":"/ include UN, and 7 unordered conditions which all include UN.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10188266,"byte_end":10188330,"line_start":3330,"line_end":3330,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10188335,"byte_end":10188338,"line_start":3331,"line_end":3331,"column_start":5,"column_end":8}},{"value":"/ +-------+------------+---------+------------+-------------------------+","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10188343,"byte_end":10188418,"line_start":3332,"line_end":3332,"column_start":5,"column_end":80}},{"value":"/ |Ordered             |Unordered             |Condition                |","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10188423,"byte_end":10188498,"line_start":3333,"line_end":3333,"column_start":5,"column_end":80}},{"value":"/ +=======+============+=========+============+=========================+","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10188503,"byte_end":10188578,"line_start":3334,"line_end":3334,"column_start":5,"column_end":80}},{"value":"/ |ord    |EQ | LT | GT|uno      |UN          |NaNs absent / present.   |","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10188583,"byte_end":10188658,"line_start":3335,"line_end":3335,"column_start":5,"column_end":80}},{"value":"/ +-------+------------+---------+------------+-------------------------+","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10188663,"byte_end":10188738,"line_start":3336,"line_end":3336,"column_start":5,"column_end":80}},{"value":"/ |eq     |EQ          |ueq      |UN | EQ     |Equal                    |","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10188743,"byte_end":10188818,"line_start":3337,"line_end":3337,"column_start":5,"column_end":80}},{"value":"/ +-------+------------+---------+------------+-------------------------+","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10188823,"byte_end":10188898,"line_start":3338,"line_end":3338,"column_start":5,"column_end":80}},{"value":"/ |one    |LT | GT     |ne       |UN | LT | GT|Not equal                |","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10188903,"byte_end":10188978,"line_start":3339,"line_end":3339,"column_start":5,"column_end":80}},{"value":"/ +-------+------------+---------+------------+-------------------------+","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10188983,"byte_end":10189058,"line_start":3340,"line_end":3340,"column_start":5,"column_end":80}},{"value":"/ |lt     |LT          |ult      |UN | LT     |Less than                |","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10189063,"byte_end":10189138,"line_start":3341,"line_end":3341,"column_start":5,"column_end":80}},{"value":"/ +-------+------------+---------+------------+-------------------------+","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10189143,"byte_end":10189218,"line_start":3342,"line_end":3342,"column_start":5,"column_end":80}},{"value":"/ |le     |LT | EQ     |ule      |UN | LT | EQ|Less than or equal       |","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10189223,"byte_end":10189298,"line_start":3343,"line_end":3343,"column_start":5,"column_end":80}},{"value":"/ +-------+------------+---------+------------+-------------------------+","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10189303,"byte_end":10189378,"line_start":3344,"line_end":3344,"column_start":5,"column_end":80}},{"value":"/ |gt     |GT          |ugt      |UN | GT     |Greater than             |","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10189383,"byte_end":10189458,"line_start":3345,"line_end":3345,"column_start":5,"column_end":80}},{"value":"/ +-------+------------+---------+------------+-------------------------+","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10189463,"byte_end":10189538,"line_start":3346,"line_end":3346,"column_start":5,"column_end":80}},{"value":"/ |ge     |GT | EQ     |uge      |UN | GT | EQ|Greater than or equal    |","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10189543,"byte_end":10189618,"line_start":3347,"line_end":3347,"column_start":5,"column_end":80}},{"value":"/ +-------+------------+---------+------------+-------------------------+","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10189623,"byte_end":10189698,"line_start":3348,"line_end":3348,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10189703,"byte_end":10189706,"line_start":3349,"line_end":3349,"column_start":5,"column_end":8}},{"value":"/ The standard C comparison operators, `<, <=, >, >=`, are all ordered,","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10189711,"byte_end":10189784,"line_start":3350,"line_end":3350,"column_start":5,"column_end":78}},{"value":"/ so they are false if either operand is NaN. The C equality operator,","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10189789,"byte_end":10189861,"line_start":3351,"line_end":3351,"column_start":5,"column_end":77}},{"value":"/ `==`, is ordered, and since inequality is defined as the logical","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10189866,"byte_end":10189934,"line_start":3352,"line_end":3352,"column_start":5,"column_end":73}},{"value":"/ inverse it is *unordered*. They map to the `floatcc` condition","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10189939,"byte_end":10190005,"line_start":3353,"line_end":3353,"column_start":5,"column_end":71}},{"value":"/ codes as follows:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10190010,"byte_end":10190031,"line_start":3354,"line_end":3354,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10190036,"byte_end":10190039,"line_start":3355,"line_end":3355,"column_start":5,"column_end":8}},{"value":"/ ==== ====== ============","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10190044,"byte_end":10190072,"line_start":3356,"line_end":3356,"column_start":5,"column_end":33}},{"value":"/ C    `Cond` Subset","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10190077,"byte_end":10190099,"line_start":3357,"line_end":3357,"column_start":5,"column_end":27}},{"value":"/ ==== ====== ============","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10190104,"byte_end":10190132,"line_start":3358,"line_end":3358,"column_start":5,"column_end":33}},{"value":"/ `==` eq     EQ","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10190137,"byte_end":10190155,"line_start":3359,"line_end":3359,"column_start":5,"column_end":23}},{"value":"/ `!=` ne     UN | LT | GT","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10190160,"byte_end":10190188,"line_start":3360,"line_end":3360,"column_start":5,"column_end":33}},{"value":"/ `<`  lt     LT","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10190193,"byte_end":10190211,"line_start":3361,"line_end":3361,"column_start":5,"column_end":23}},{"value":"/ `<=` le     LT | EQ","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10190216,"byte_end":10190239,"line_start":3362,"line_end":3362,"column_start":5,"column_end":28}},{"value":"/ `>`  gt     GT","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10190244,"byte_end":10190262,"line_start":3363,"line_end":3363,"column_start":5,"column_end":23}},{"value":"/ `>=` ge     GT | EQ","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10190267,"byte_end":10190290,"line_start":3364,"line_end":3364,"column_start":5,"column_end":28}},{"value":"/ ==== ====== ============","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10190295,"byte_end":10190323,"line_start":3365,"line_end":3365,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10190328,"byte_end":10190331,"line_start":3366,"line_end":3366,"column_start":5,"column_end":8}},{"value":"/ This subset of condition codes also corresponds to the WebAssembly","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10190336,"byte_end":10190406,"line_start":3367,"line_end":3367,"column_start":5,"column_end":75}},{"value":"/ floating point comparisons of the same name.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10190411,"byte_end":10190459,"line_start":3368,"line_end":3368,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10190464,"byte_end":10190467,"line_start":3369,"line_end":3369,"column_start":5,"column_end":8}},{"value":"/ When this instruction compares floating point vectors, it returns a","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10190472,"byte_end":10190543,"line_start":3370,"line_end":3370,"column_start":5,"column_end":76}},{"value":"/ boolean vector with the results of lane-wise comparisons.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10190548,"byte_end":10190609,"line_start":3371,"line_end":3371,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10190614,"byte_end":10190617,"line_start":3372,"line_end":3372,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10190622,"byte_end":10190633,"line_start":3373,"line_end":3373,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10190638,"byte_end":10190641,"line_start":3374,"line_end":3374,"column_start":5,"column_end":8}},{"value":"/ - Cond: A floating point comparison condition code","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10190646,"byte_end":10190700,"line_start":3375,"line_end":3375,"column_start":5,"column_end":59}},{"value":"/ - x: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10190705,"byte_end":10190754,"line_start":3376,"line_end":3376,"column_start":5,"column_end":54}},{"value":"/ - y: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10190759,"byte_end":10190808,"line_start":3377,"line_end":3377,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10190813,"byte_end":10190816,"line_start":3378,"line_end":3378,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10190821,"byte_end":10190833,"line_start":3379,"line_end":3379,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10190838,"byte_end":10190841,"line_start":3380,"line_end":3380,"column_start":5,"column_end":8}},{"value":"/ - a:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10190846,"byte_end":10190854,"line_start":3381,"line_end":3381,"column_start":5,"column_end":13}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10190859,"byte_end":10190883,"line_start":3382,"line_end":3382,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5347},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10191753,"byte_end":10191758,"line_start":3405,"line_end":3405,"column_start":8,"column_end":13},"name":"ffcmp","qualname":"::ir::builder::InstBuilder::ffcmp","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Floating point comparison returning flags.","sig":null,"attributes":[{"value":"/ Floating point comparison returning flags.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10191209,"byte_end":10191255,"line_start":3390,"line_end":3390,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10191260,"byte_end":10191263,"line_start":3391,"line_end":3391,"column_start":5,"column_end":8}},{"value":"/ Compares two numbers like `fcmp`, but returns floating point CPU","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10191268,"byte_end":10191336,"line_start":3392,"line_end":3392,"column_start":5,"column_end":73}},{"value":"/ flags instead of testing a specific condition.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10191341,"byte_end":10191391,"line_start":3393,"line_end":3393,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10191396,"byte_end":10191399,"line_start":3394,"line_end":3394,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10191404,"byte_end":10191415,"line_start":3395,"line_end":3395,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10191420,"byte_end":10191423,"line_start":3396,"line_end":3396,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10191428,"byte_end":10191477,"line_start":3397,"line_end":3397,"column_start":5,"column_end":54}},{"value":"/ - y: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10191482,"byte_end":10191531,"line_start":3398,"line_end":3398,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10191536,"byte_end":10191539,"line_start":3399,"line_end":3399,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10191544,"byte_end":10191556,"line_start":3400,"line_end":3400,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10191561,"byte_end":10191564,"line_start":3401,"line_end":3401,"column_start":5,"column_end":8}},{"value":"/ - f: CPU flags representing the result of a floating point comparison. These","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10191569,"byte_end":10191649,"line_start":3402,"line_end":3402,"column_start":5,"column_end":85}},{"value":"/ flags can be tested with a :type:`floatcc` condition code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10191654,"byte_end":10191716,"line_start":3403,"line_end":3403,"column_start":5,"column_end":67}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10191721,"byte_end":10191745,"line_start":3404,"line_end":3404,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5348},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10192277,"byte_end":10192281,"line_start":3422,"line_end":3422,"column_start":8,"column_end":12},"name":"fadd","qualname":"::ir::builder::InstBuilder::fadd","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Floating point addition.","sig":null,"attributes":[{"value":"/ Floating point addition.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10191985,"byte_end":10192013,"line_start":3411,"line_end":3411,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10192018,"byte_end":10192021,"line_start":3412,"line_end":3412,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10192026,"byte_end":10192037,"line_start":3413,"line_end":3413,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10192042,"byte_end":10192045,"line_start":3414,"line_end":3414,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10192050,"byte_end":10192099,"line_start":3415,"line_end":3415,"column_start":5,"column_end":54}},{"value":"/ - y: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10192104,"byte_end":10192153,"line_start":3416,"line_end":3416,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10192158,"byte_end":10192161,"line_start":3417,"line_end":3417,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10192166,"byte_end":10192178,"line_start":3418,"line_end":3418,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10192183,"byte_end":10192186,"line_start":3419,"line_end":3419,"column_start":5,"column_end":8}},{"value":"/ - a: Result of applying operator to each lane","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10192191,"byte_end":10192240,"line_start":3420,"line_end":3420,"column_start":5,"column_end":54}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10192245,"byte_end":10192269,"line_start":3421,"line_end":3421,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5349},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10192802,"byte_end":10192806,"line_start":3439,"line_end":3439,"column_start":8,"column_end":12},"name":"fsub","qualname":"::ir::builder::InstBuilder::fsub","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Floating point subtraction.","sig":null,"attributes":[{"value":"/ Floating point subtraction.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10192507,"byte_end":10192538,"line_start":3428,"line_end":3428,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10192543,"byte_end":10192546,"line_start":3429,"line_end":3429,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10192551,"byte_end":10192562,"line_start":3430,"line_end":3430,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10192567,"byte_end":10192570,"line_start":3431,"line_end":3431,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10192575,"byte_end":10192624,"line_start":3432,"line_end":3432,"column_start":5,"column_end":54}},{"value":"/ - y: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10192629,"byte_end":10192678,"line_start":3433,"line_end":3433,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10192683,"byte_end":10192686,"line_start":3434,"line_end":3434,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10192691,"byte_end":10192703,"line_start":3435,"line_end":3435,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10192708,"byte_end":10192711,"line_start":3436,"line_end":3436,"column_start":5,"column_end":8}},{"value":"/ - a: Result of applying operator to each lane","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10192716,"byte_end":10192765,"line_start":3437,"line_end":3437,"column_start":5,"column_end":54}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10192770,"byte_end":10192794,"line_start":3438,"line_end":3438,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5350},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10193330,"byte_end":10193334,"line_start":3456,"line_end":3456,"column_start":8,"column_end":12},"name":"fmul","qualname":"::ir::builder::InstBuilder::fmul","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Floating point multiplication.","sig":null,"attributes":[{"value":"/ Floating point multiplication.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10193032,"byte_end":10193066,"line_start":3445,"line_end":3445,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10193071,"byte_end":10193074,"line_start":3446,"line_end":3446,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10193079,"byte_end":10193090,"line_start":3447,"line_end":3447,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10193095,"byte_end":10193098,"line_start":3448,"line_end":3448,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10193103,"byte_end":10193152,"line_start":3449,"line_end":3449,"column_start":5,"column_end":54}},{"value":"/ - y: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10193157,"byte_end":10193206,"line_start":3450,"line_end":3450,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10193211,"byte_end":10193214,"line_start":3451,"line_end":3451,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10193219,"byte_end":10193231,"line_start":3452,"line_end":3452,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10193236,"byte_end":10193239,"line_start":3453,"line_end":3453,"column_start":5,"column_end":8}},{"value":"/ - a: Result of applying operator to each lane","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10193244,"byte_end":10193293,"line_start":3454,"line_end":3454,"column_start":5,"column_end":54}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10193298,"byte_end":10193322,"line_start":3455,"line_end":3455,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5351},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10194020,"byte_end":10194024,"line_start":3477,"line_end":3477,"column_start":8,"column_end":12},"name":"fdiv","qualname":"::ir::builder::InstBuilder::fdiv","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Floating point division.","sig":null,"attributes":[{"value":"/ Floating point division.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10193560,"byte_end":10193588,"line_start":3462,"line_end":3462,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10193593,"byte_end":10193596,"line_start":3463,"line_end":3463,"column_start":5,"column_end":8}},{"value":"/ Unlike the integer division instructions ` and","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10193601,"byte_end":10193651,"line_start":3464,"line_end":3464,"column_start":5,"column_end":55}},{"value":"/ `udiv`, this can't trap. Division by zero is infinity or","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10193656,"byte_end":10193716,"line_start":3465,"line_end":3465,"column_start":5,"column_end":65}},{"value":"/ NaN, depending on the dividend.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10193721,"byte_end":10193756,"line_start":3466,"line_end":3466,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10193761,"byte_end":10193764,"line_start":3467,"line_end":3467,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10193769,"byte_end":10193780,"line_start":3468,"line_end":3468,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10193785,"byte_end":10193788,"line_start":3469,"line_end":3469,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10193793,"byte_end":10193842,"line_start":3470,"line_end":3470,"column_start":5,"column_end":54}},{"value":"/ - y: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10193847,"byte_end":10193896,"line_start":3471,"line_end":3471,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10193901,"byte_end":10193904,"line_start":3472,"line_end":3472,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10193909,"byte_end":10193921,"line_start":3473,"line_end":3473,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10193926,"byte_end":10193929,"line_start":3474,"line_end":3474,"column_start":5,"column_end":8}},{"value":"/ - a: Result of applying operator to each lane","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10193934,"byte_end":10193983,"line_start":3475,"line_end":3475,"column_start":5,"column_end":54}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10193988,"byte_end":10194012,"line_start":3476,"line_end":3476,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5352},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10194491,"byte_end":10194495,"line_start":3493,"line_end":3493,"column_start":8,"column_end":12},"name":"sqrt","qualname":"::ir::builder::InstBuilder::sqrt","value":"fn (self, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Floating point square root.","sig":null,"attributes":[{"value":"/ Floating point square root.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10194250,"byte_end":10194281,"line_start":3483,"line_end":3483,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10194286,"byte_end":10194289,"line_start":3484,"line_end":3484,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10194294,"byte_end":10194305,"line_start":3485,"line_end":3485,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10194310,"byte_end":10194313,"line_start":3486,"line_end":3486,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10194318,"byte_end":10194367,"line_start":3487,"line_end":3487,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10194372,"byte_end":10194375,"line_start":3488,"line_end":3488,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10194380,"byte_end":10194392,"line_start":3489,"line_end":3489,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10194397,"byte_end":10194400,"line_start":3490,"line_end":3490,"column_start":5,"column_end":8}},{"value":"/ - a: Result of applying operator to each lane","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10194405,"byte_end":10194454,"line_start":3491,"line_end":3491,"column_start":5,"column_end":54}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10194459,"byte_end":10194483,"line_start":3492,"line_end":3492,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5353},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10195158,"byte_end":10195161,"line_start":3514,"line_end":3514,"column_start":8,"column_end":11},"name":"fma","qualname":"::ir::builder::InstBuilder::fma","value":"fn (self, x: ir::Value, y: ir::Value, z: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Floating point fused multiply-and-add.","sig":null,"attributes":[{"value":"/ Floating point fused multiply-and-add.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10194703,"byte_end":10194745,"line_start":3499,"line_end":3499,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10194750,"byte_end":10194753,"line_start":3500,"line_end":3500,"column_start":5,"column_end":8}},{"value":"/ Computes `a := xy+z` without any intermediate rounding of the","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10194758,"byte_end":10194823,"line_start":3501,"line_end":3501,"column_start":5,"column_end":70}},{"value":"/ product.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10194828,"byte_end":10194840,"line_start":3502,"line_end":3502,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10194845,"byte_end":10194848,"line_start":3503,"line_end":3503,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10194853,"byte_end":10194864,"line_start":3504,"line_end":3504,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10194869,"byte_end":10194872,"line_start":3505,"line_end":3505,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10194877,"byte_end":10194926,"line_start":3506,"line_end":3506,"column_start":5,"column_end":54}},{"value":"/ - y: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10194931,"byte_end":10194980,"line_start":3507,"line_end":3507,"column_start":5,"column_end":54}},{"value":"/ - z: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10194985,"byte_end":10195034,"line_start":3508,"line_end":3508,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10195039,"byte_end":10195042,"line_start":3509,"line_end":3509,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10195047,"byte_end":10195059,"line_start":3510,"line_end":3510,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10195064,"byte_end":10195067,"line_start":3511,"line_end":3511,"column_start":5,"column_end":8}},{"value":"/ - a: Result of applying operator to each lane","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10195072,"byte_end":10195121,"line_start":3512,"line_end":3512,"column_start":5,"column_end":54}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10195126,"byte_end":10195150,"line_start":3513,"line_end":3513,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5354},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10195694,"byte_end":10195698,"line_start":3532,"line_end":3532,"column_start":8,"column_end":12},"name":"fneg","qualname":"::ir::builder::InstBuilder::fneg","value":"fn (self, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Floating point negation.","sig":null,"attributes":[{"value":"/ Floating point negation.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10195404,"byte_end":10195432,"line_start":3520,"line_end":3520,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10195437,"byte_end":10195440,"line_start":3521,"line_end":3521,"column_start":5,"column_end":8}},{"value":"/ Note that this is a pure bitwise operation.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10195445,"byte_end":10195492,"line_start":3522,"line_end":3522,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10195497,"byte_end":10195500,"line_start":3523,"line_end":3523,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10195505,"byte_end":10195516,"line_start":3524,"line_end":3524,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10195521,"byte_end":10195524,"line_start":3525,"line_end":3525,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10195529,"byte_end":10195578,"line_start":3526,"line_end":3526,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10195583,"byte_end":10195586,"line_start":3527,"line_end":3527,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10195591,"byte_end":10195603,"line_start":3528,"line_end":3528,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10195608,"byte_end":10195611,"line_start":3529,"line_end":3529,"column_start":5,"column_end":8}},{"value":"/ - a: ``x`` with its sign bit inverted","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10195616,"byte_end":10195657,"line_start":3530,"line_end":3530,"column_start":5,"column_end":46}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10195662,"byte_end":10195686,"line_start":3531,"line_end":3531,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5355},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10196201,"byte_end":10196205,"line_start":3550,"line_end":3550,"column_start":8,"column_end":12},"name":"fabs","qualname":"::ir::builder::InstBuilder::fabs","value":"fn (self, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Floating point absolute value.","sig":null,"attributes":[{"value":"/ Floating point absolute value.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10195906,"byte_end":10195940,"line_start":3538,"line_end":3538,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10195945,"byte_end":10195948,"line_start":3539,"line_end":3539,"column_start":5,"column_end":8}},{"value":"/ Note that this is a pure bitwise operation.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10195953,"byte_end":10196000,"line_start":3540,"line_end":3540,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10196005,"byte_end":10196008,"line_start":3541,"line_end":3541,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10196013,"byte_end":10196024,"line_start":3542,"line_end":3542,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10196029,"byte_end":10196032,"line_start":3543,"line_end":3543,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10196037,"byte_end":10196086,"line_start":3544,"line_end":3544,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10196091,"byte_end":10196094,"line_start":3545,"line_end":3545,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10196099,"byte_end":10196111,"line_start":3546,"line_end":3546,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10196116,"byte_end":10196119,"line_start":3547,"line_end":3547,"column_start":5,"column_end":8}},{"value":"/ - a: ``x`` with its sign bit cleared","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10196124,"byte_end":10196164,"line_start":3548,"line_end":3548,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10196169,"byte_end":10196193,"line_start":3549,"line_end":3549,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5356},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10196842,"byte_end":10196851,"line_start":3570,"line_end":3570,"column_start":8,"column_end":17},"name":"fcopysign","qualname":"::ir::builder::InstBuilder::fcopysign","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Floating point copy sign.","sig":null,"attributes":[{"value":"/ Floating point copy sign.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10196413,"byte_end":10196442,"line_start":3556,"line_end":3556,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10196447,"byte_end":10196450,"line_start":3557,"line_end":3557,"column_start":5,"column_end":8}},{"value":"/ Note that this is a pure bitwise operation. The sign bit from ``y`` is","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10196455,"byte_end":10196529,"line_start":3558,"line_end":3558,"column_start":5,"column_end":79}},{"value":"/ copied to the sign bit of ``x``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10196534,"byte_end":10196570,"line_start":3559,"line_end":3559,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10196575,"byte_end":10196578,"line_start":3560,"line_end":3560,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10196583,"byte_end":10196594,"line_start":3561,"line_end":3561,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10196599,"byte_end":10196602,"line_start":3562,"line_end":3562,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10196607,"byte_end":10196656,"line_start":3563,"line_end":3563,"column_start":5,"column_end":54}},{"value":"/ - y: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10196661,"byte_end":10196710,"line_start":3564,"line_end":3564,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10196715,"byte_end":10196718,"line_start":3565,"line_end":3565,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10196723,"byte_end":10196735,"line_start":3566,"line_end":3566,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10196740,"byte_end":10196743,"line_start":3567,"line_end":3567,"column_start":5,"column_end":8}},{"value":"/ - a: ``x`` with its sign bit changed to that of ``y``","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10196748,"byte_end":10196805,"line_start":3568,"line_end":3568,"column_start":5,"column_end":62}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10196810,"byte_end":10196834,"line_start":3569,"line_end":3569,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5357},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10197443,"byte_end":10197447,"line_start":3589,"line_end":3589,"column_start":8,"column_end":12},"name":"fmin","qualname":"::ir::builder::InstBuilder::fmin","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Floating point minimum, propagating NaNs.","sig":null,"attributes":[{"value":"/ Floating point minimum, propagating NaNs.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10197082,"byte_end":10197127,"line_start":3576,"line_end":3576,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10197132,"byte_end":10197135,"line_start":3577,"line_end":3577,"column_start":5,"column_end":8}},{"value":"/ If either operand is NaN, this returns a NaN.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10197140,"byte_end":10197189,"line_start":3578,"line_end":3578,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10197194,"byte_end":10197197,"line_start":3579,"line_end":3579,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10197202,"byte_end":10197213,"line_start":3580,"line_end":3580,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10197218,"byte_end":10197221,"line_start":3581,"line_end":3581,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10197226,"byte_end":10197275,"line_start":3582,"line_end":3582,"column_start":5,"column_end":54}},{"value":"/ - y: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10197280,"byte_end":10197329,"line_start":3583,"line_end":3583,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10197334,"byte_end":10197337,"line_start":3584,"line_end":3584,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10197342,"byte_end":10197354,"line_start":3585,"line_end":3585,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10197359,"byte_end":10197362,"line_start":3586,"line_end":3586,"column_start":5,"column_end":8}},{"value":"/ - a: The smaller of ``x`` and ``y``","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10197367,"byte_end":10197406,"line_start":3587,"line_end":3587,"column_start":5,"column_end":44}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10197411,"byte_end":10197435,"line_start":3588,"line_end":3588,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5358},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10198033,"byte_end":10198037,"line_start":3608,"line_end":3608,"column_start":8,"column_end":12},"name":"fmax","qualname":"::ir::builder::InstBuilder::fmax","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Floating point maximum, propagating NaNs.","sig":null,"attributes":[{"value":"/ Floating point maximum, propagating NaNs.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10197673,"byte_end":10197718,"line_start":3595,"line_end":3595,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10197723,"byte_end":10197726,"line_start":3596,"line_end":3596,"column_start":5,"column_end":8}},{"value":"/ If either operand is NaN, this returns a NaN.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10197731,"byte_end":10197780,"line_start":3597,"line_end":3597,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10197785,"byte_end":10197788,"line_start":3598,"line_end":3598,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10197793,"byte_end":10197804,"line_start":3599,"line_end":3599,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10197809,"byte_end":10197812,"line_start":3600,"line_end":3600,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10197817,"byte_end":10197866,"line_start":3601,"line_end":3601,"column_start":5,"column_end":54}},{"value":"/ - y: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10197871,"byte_end":10197920,"line_start":3602,"line_end":3602,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10197925,"byte_end":10197928,"line_start":3603,"line_end":3603,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10197933,"byte_end":10197945,"line_start":3604,"line_end":3604,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10197950,"byte_end":10197953,"line_start":3605,"line_end":3605,"column_start":5,"column_end":8}},{"value":"/ - a: The larger of ``x`` and ``y``","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10197958,"byte_end":10197996,"line_start":3606,"line_end":3606,"column_start":5,"column_end":43}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10198001,"byte_end":10198025,"line_start":3607,"line_end":3607,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5359},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10198534,"byte_end":10198538,"line_start":3624,"line_end":3624,"column_start":8,"column_end":12},"name":"ceil","qualname":"::ir::builder::InstBuilder::ceil","value":"fn (self, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Round floating point round to integral, towards positive infinity.","sig":null,"attributes":[{"value":"/ Round floating point round to integral, towards positive infinity.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10198263,"byte_end":10198333,"line_start":3614,"line_end":3614,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10198338,"byte_end":10198341,"line_start":3615,"line_end":3615,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10198346,"byte_end":10198357,"line_start":3616,"line_end":3616,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10198362,"byte_end":10198365,"line_start":3617,"line_end":3617,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10198370,"byte_end":10198419,"line_start":3618,"line_end":3618,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10198424,"byte_end":10198427,"line_start":3619,"line_end":3619,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10198432,"byte_end":10198444,"line_start":3620,"line_end":3620,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10198449,"byte_end":10198452,"line_start":3621,"line_end":3621,"column_start":5,"column_end":8}},{"value":"/ - a: ``x`` rounded to integral value","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10198457,"byte_end":10198497,"line_start":3622,"line_end":3622,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10198502,"byte_end":10198526,"line_start":3623,"line_end":3623,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5360},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10199017,"byte_end":10199022,"line_start":3640,"line_end":3640,"column_start":8,"column_end":13},"name":"floor","qualname":"::ir::builder::InstBuilder::floor","value":"fn (self, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Round floating point round to integral, towards negative infinity.","sig":null,"attributes":[{"value":"/ Round floating point round to integral, towards negative infinity.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10198746,"byte_end":10198816,"line_start":3630,"line_end":3630,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10198821,"byte_end":10198824,"line_start":3631,"line_end":3631,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10198829,"byte_end":10198840,"line_start":3632,"line_end":3632,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10198845,"byte_end":10198848,"line_start":3633,"line_end":3633,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10198853,"byte_end":10198902,"line_start":3634,"line_end":3634,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10198907,"byte_end":10198910,"line_start":3635,"line_end":3635,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10198915,"byte_end":10198927,"line_start":3636,"line_end":3636,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10198932,"byte_end":10198935,"line_start":3637,"line_end":3637,"column_start":5,"column_end":8}},{"value":"/ - a: ``x`` rounded to integral value","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10198940,"byte_end":10198980,"line_start":3638,"line_end":3638,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10198985,"byte_end":10199009,"line_start":3639,"line_end":3639,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5361},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10199489,"byte_end":10199494,"line_start":3656,"line_end":3656,"column_start":8,"column_end":13},"name":"trunc","qualname":"::ir::builder::InstBuilder::trunc","value":"fn (self, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Round floating point round to integral, towards zero.","sig":null,"attributes":[{"value":"/ Round floating point round to integral, towards zero.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10199231,"byte_end":10199288,"line_start":3646,"line_end":3646,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10199293,"byte_end":10199296,"line_start":3647,"line_end":3647,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10199301,"byte_end":10199312,"line_start":3648,"line_end":3648,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10199317,"byte_end":10199320,"line_start":3649,"line_end":3649,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10199325,"byte_end":10199374,"line_start":3650,"line_end":3650,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10199379,"byte_end":10199382,"line_start":3651,"line_end":3651,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10199387,"byte_end":10199399,"line_start":3652,"line_end":3652,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10199404,"byte_end":10199407,"line_start":3653,"line_end":3653,"column_start":5,"column_end":8}},{"value":"/ - a: ``x`` rounded to integral value","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10199412,"byte_end":10199452,"line_start":3654,"line_end":3654,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10199457,"byte_end":10199481,"line_start":3655,"line_end":3655,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5362},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10199990,"byte_end":10199997,"line_start":3673,"line_end":3673,"column_start":8,"column_end":15},"name":"nearest","qualname":"::ir::builder::InstBuilder::nearest","value":"fn (self, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Round floating point round to integral, towards nearest with ties to\n even.","sig":null,"attributes":[{"value":"/ Round floating point round to integral, towards nearest with ties to","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10199703,"byte_end":10199775,"line_start":3662,"line_end":3662,"column_start":5,"column_end":77}},{"value":"/ even.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10199780,"byte_end":10199789,"line_start":3663,"line_end":3663,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10199794,"byte_end":10199797,"line_start":3664,"line_end":3664,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10199802,"byte_end":10199813,"line_start":3665,"line_end":3665,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10199818,"byte_end":10199821,"line_start":3666,"line_end":3666,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10199826,"byte_end":10199875,"line_start":3667,"line_end":3667,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10199880,"byte_end":10199883,"line_start":3668,"line_end":3668,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10199888,"byte_end":10199900,"line_start":3669,"line_end":3669,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10199905,"byte_end":10199908,"line_start":3670,"line_end":3670,"column_start":5,"column_end":8}},{"value":"/ - a: ``x`` rounded to integral value","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10199913,"byte_end":10199953,"line_start":3671,"line_end":3671,"column_start":5,"column_end":45}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10199958,"byte_end":10199982,"line_start":3672,"line_end":3672,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5363},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10200519,"byte_end":10200526,"line_start":3692,"line_end":3692,"column_start":8,"column_end":15},"name":"is_null","qualname":"::ir::builder::InstBuilder::is_null","value":"fn (self, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Reference verification.","sig":null,"attributes":[{"value":"/ Reference verification.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10200208,"byte_end":10200235,"line_start":3679,"line_end":3679,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10200240,"byte_end":10200243,"line_start":3680,"line_end":3680,"column_start":5,"column_end":8}},{"value":"/ The condition code determines if the reference type in question is","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10200248,"byte_end":10200318,"line_start":3681,"line_end":3681,"column_start":5,"column_end":75}},{"value":"/ null or not.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10200323,"byte_end":10200339,"line_start":3682,"line_end":3682,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10200344,"byte_end":10200347,"line_start":3683,"line_end":3683,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10200352,"byte_end":10200363,"line_start":3684,"line_end":3684,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10200368,"byte_end":10200371,"line_start":3685,"line_end":3685,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar reference type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10200376,"byte_end":10200408,"line_start":3686,"line_end":3686,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10200413,"byte_end":10200416,"line_start":3687,"line_end":3687,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10200421,"byte_end":10200433,"line_start":3688,"line_end":3688,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10200438,"byte_end":10200441,"line_start":3689,"line_end":3689,"column_start":5,"column_end":8}},{"value":"/ - a: A boolean type with 1 bits.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10200446,"byte_end":10200482,"line_start":3690,"line_end":3690,"column_start":5,"column_end":41}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10200487,"byte_end":10200511,"line_start":3691,"line_end":3691,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5364},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10201050,"byte_end":10201060,"line_start":3711,"line_end":3711,"column_start":8,"column_end":18},"name":"is_invalid","qualname":"::ir::builder::InstBuilder::is_invalid","value":"fn (self, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Reference verification.","sig":null,"attributes":[{"value":"/ Reference verification.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10200736,"byte_end":10200763,"line_start":3698,"line_end":3698,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10200768,"byte_end":10200771,"line_start":3699,"line_end":3699,"column_start":5,"column_end":8}},{"value":"/ The condition code determines if the reference type in question is","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10200776,"byte_end":10200846,"line_start":3700,"line_end":3700,"column_start":5,"column_end":75}},{"value":"/ invalid or not.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10200851,"byte_end":10200870,"line_start":3701,"line_end":3701,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10200875,"byte_end":10200878,"line_start":3702,"line_end":3702,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10200883,"byte_end":10200894,"line_start":3703,"line_end":3703,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10200899,"byte_end":10200902,"line_start":3704,"line_end":3704,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar reference type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10200907,"byte_end":10200939,"line_start":3705,"line_end":3705,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10200944,"byte_end":10200947,"line_start":3706,"line_end":3706,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10200952,"byte_end":10200964,"line_start":3707,"line_end":3707,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10200969,"byte_end":10200972,"line_start":3708,"line_end":3708,"column_start":5,"column_end":8}},{"value":"/ - a: A boolean type with 1 bits.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10200977,"byte_end":10201013,"line_start":3709,"line_end":3709,"column_start":5,"column_end":41}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10201018,"byte_end":10201042,"line_start":3710,"line_end":3710,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5365},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10201810,"byte_end":10201816,"line_start":3732,"line_end":3732,"column_start":8,"column_end":14},"name":"trueif","qualname":"::ir::builder::InstBuilder::trueif","value":"fn <T1> (self, Cond: T1, f: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Test integer CPU flags for a specific condition.","sig":null,"attributes":[{"value":"/ Test integer CPU flags for a specific condition.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10201273,"byte_end":10201325,"line_start":3717,"line_end":3717,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10201330,"byte_end":10201333,"line_start":3718,"line_end":3718,"column_start":5,"column_end":8}},{"value":"/ Check the CPU flags in ``f`` against the ``Cond`` condition code and","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10201338,"byte_end":10201410,"line_start":3719,"line_end":3719,"column_start":5,"column_end":77}},{"value":"/ return true when the condition code is satisfied.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10201415,"byte_end":10201468,"line_start":3720,"line_end":3720,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10201473,"byte_end":10201476,"line_start":3721,"line_end":3721,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10201481,"byte_end":10201492,"line_start":3722,"line_end":3722,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10201497,"byte_end":10201500,"line_start":3723,"line_end":3723,"column_start":5,"column_end":8}},{"value":"/ - Cond: An integer comparison condition code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10201505,"byte_end":10201554,"line_start":3724,"line_end":3724,"column_start":5,"column_end":54}},{"value":"/ - f: CPU flags representing the result of an integer comparison. These flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10201559,"byte_end":10201639,"line_start":3725,"line_end":3725,"column_start":5,"column_end":85}},{"value":"/ can be tested with an :type:`intcc` condition code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10201644,"byte_end":10201699,"line_start":3726,"line_end":3726,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10201704,"byte_end":10201707,"line_start":3727,"line_end":3727,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10201712,"byte_end":10201724,"line_start":3728,"line_end":3728,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10201729,"byte_end":10201732,"line_start":3729,"line_end":3729,"column_start":5,"column_end":8}},{"value":"/ - a: A boolean type with 1 bits.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10201737,"byte_end":10201773,"line_start":3730,"line_end":3730,"column_start":5,"column_end":41}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10201778,"byte_end":10201802,"line_start":3731,"line_end":3731,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5367},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10202601,"byte_end":10202607,"line_start":3753,"line_end":3753,"column_start":8,"column_end":14},"name":"trueff","qualname":"::ir::builder::InstBuilder::trueff","value":"fn <T1> (self, Cond: T1, f: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Test floating point CPU flags for a specific condition.","sig":null,"attributes":[{"value":"/ Test floating point CPU flags for a specific condition.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10202045,"byte_end":10202104,"line_start":3738,"line_end":3738,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10202109,"byte_end":10202112,"line_start":3739,"line_end":3739,"column_start":5,"column_end":8}},{"value":"/ Check the CPU flags in ``f`` against the ``Cond`` condition code and","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10202117,"byte_end":10202189,"line_start":3740,"line_end":3740,"column_start":5,"column_end":77}},{"value":"/ return true when the condition code is satisfied.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10202194,"byte_end":10202247,"line_start":3741,"line_end":3741,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10202252,"byte_end":10202255,"line_start":3742,"line_end":3742,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10202260,"byte_end":10202271,"line_start":3743,"line_end":3743,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10202276,"byte_end":10202279,"line_start":3744,"line_end":3744,"column_start":5,"column_end":8}},{"value":"/ - Cond: A floating point comparison condition code","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10202284,"byte_end":10202338,"line_start":3745,"line_end":3745,"column_start":5,"column_end":59}},{"value":"/ - f: CPU flags representing the result of a floating point comparison. These","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10202343,"byte_end":10202423,"line_start":3746,"line_end":3746,"column_start":5,"column_end":85}},{"value":"/ flags can be tested with a :type:`floatcc` condition code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10202428,"byte_end":10202490,"line_start":3747,"line_end":3747,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10202495,"byte_end":10202498,"line_start":3748,"line_end":3748,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10202503,"byte_end":10202515,"line_start":3749,"line_end":3749,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10202520,"byte_end":10202523,"line_start":3750,"line_end":3750,"column_start":5,"column_end":8}},{"value":"/ - a: A boolean type with 1 bits.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10202528,"byte_end":10202564,"line_start":3751,"line_end":3751,"column_start":5,"column_end":41}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10202569,"byte_end":10202593,"line_start":3752,"line_end":3752,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5369},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10203331,"byte_end":10203338,"line_start":3774,"line_end":3774,"column_start":8,"column_end":15},"name":"bitcast","qualname":"::ir::builder::InstBuilder::bitcast","value":"fn (self, MemTo: crate::ir::Type, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Reinterpret the bits in `x` as a different type.","sig":null,"attributes":[{"value":"/ Reinterpret the bits in `x` as a different type.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10202840,"byte_end":10202892,"line_start":3759,"line_end":3759,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10202897,"byte_end":10202900,"line_start":3760,"line_end":3760,"column_start":5,"column_end":8}},{"value":"/ The input and output types must be storable to memory and of the same","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10202905,"byte_end":10202978,"line_start":3761,"line_end":3761,"column_start":5,"column_end":78}},{"value":"/ size. A bitcast is equivalent to storing one type and loading the other","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10202983,"byte_end":10203058,"line_start":3762,"line_end":3762,"column_start":5,"column_end":80}},{"value":"/ type from the same address.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10203063,"byte_end":10203094,"line_start":3763,"line_end":3763,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10203099,"byte_end":10203102,"line_start":3764,"line_end":3764,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10203107,"byte_end":10203118,"line_start":3765,"line_end":3765,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10203123,"byte_end":10203126,"line_start":3766,"line_end":3766,"column_start":5,"column_end":8}},{"value":"/ - MemTo (controlling type variable):","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10203131,"byte_end":10203171,"line_start":3767,"line_end":3767,"column_start":5,"column_end":45}},{"value":"/ - x: Any type that can be stored in memory","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10203176,"byte_end":10203222,"line_start":3768,"line_end":3768,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10203227,"byte_end":10203230,"line_start":3769,"line_end":3769,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10203235,"byte_end":10203247,"line_start":3770,"line_end":3770,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10203252,"byte_end":10203255,"line_start":3771,"line_end":3771,"column_start":5,"column_end":8}},{"value":"/ - a: Bits of `x` reinterpreted","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10203260,"byte_end":10203294,"line_start":3772,"line_end":3772,"column_start":5,"column_end":39}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10203299,"byte_end":10203323,"line_start":3773,"line_end":3773,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5370},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10204371,"byte_end":10204382,"line_start":3798,"line_end":3798,"column_start":8,"column_end":19},"name":"raw_bitcast","qualname":"::ir::builder::InstBuilder::raw_bitcast","value":"fn (self, AnyTo: crate::ir::Type, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Cast the bits in `x` as a different type of the same bit width.","sig":null,"attributes":[{"value":"/ Cast the bits in `x` as a different type of the same bit width.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10203501,"byte_end":10203568,"line_start":3779,"line_end":3779,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10203573,"byte_end":10203576,"line_start":3780,"line_end":3780,"column_start":5,"column_end":8}},{"value":"/ This instruction does not change the data's representation but allows","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10203581,"byte_end":10203654,"line_start":3781,"line_end":3781,"column_start":5,"column_end":78}},{"value":"/ data in registers to be used as different types, e.g. an i32x4 as a","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10203659,"byte_end":10203730,"line_start":3782,"line_end":3782,"column_start":5,"column_end":76}},{"value":"/ b8x16. The only constraint on the result `a` is that it can be","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10203735,"byte_end":10203801,"line_start":3783,"line_end":3783,"column_start":5,"column_end":71}},{"value":"/ `raw_bitcast` back to the original type. Also, in a raw_bitcast between","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10203806,"byte_end":10203881,"line_start":3784,"line_end":3784,"column_start":5,"column_end":80}},{"value":"/ vector types with the same number of lanes, the value of each result","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10203886,"byte_end":10203958,"line_start":3785,"line_end":3785,"column_start":5,"column_end":77}},{"value":"/ lane is a raw_bitcast of the corresponding operand lane. TODO there is","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10203963,"byte_end":10204037,"line_start":3786,"line_end":3786,"column_start":5,"column_end":79}},{"value":"/ currently no mechanism for enforcing the bit width constraint.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10204042,"byte_end":10204108,"line_start":3787,"line_end":3787,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10204113,"byte_end":10204116,"line_start":3788,"line_end":3788,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10204121,"byte_end":10204132,"line_start":3789,"line_end":3789,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10204137,"byte_end":10204140,"line_start":3790,"line_end":3790,"column_start":5,"column_end":8}},{"value":"/ - AnyTo (controlling type variable):","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10204145,"byte_end":10204185,"line_start":3791,"line_end":3791,"column_start":5,"column_end":45}},{"value":"/ - x: Any integer, float, boolean, or reference scalar or vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10204190,"byte_end":10204262,"line_start":3792,"line_end":3792,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10204267,"byte_end":10204270,"line_start":3793,"line_end":3793,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10204275,"byte_end":10204287,"line_start":3794,"line_end":3794,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10204292,"byte_end":10204295,"line_start":3795,"line_end":3795,"column_start":5,"column_end":8}},{"value":"/ - a: Bits of `x` reinterpreted","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10204300,"byte_end":10204334,"line_start":3796,"line_end":3796,"column_start":5,"column_end":39}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10204339,"byte_end":10204363,"line_start":3797,"line_end":3797,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5371},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10205222,"byte_end":10205238,"line_start":3818,"line_end":3818,"column_start":8,"column_end":24},"name":"scalar_to_vector","qualname":"::ir::builder::InstBuilder::scalar_to_vector","value":"fn (self, TxN: crate::ir::Type, s: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Scalar To Vector -- move a value out of a scalar register and into a vector register; the\n scalar will be moved to the lowest-order bits of the vector register. Note that this\n instruction is intended as a low-level legalization instruction and frontends should prefer\n insertlane; on certain architectures, scalar_to_vector may zero the highest-order bits for some\n types (e.g. integers) but not for others (e.g. floats).","sig":null,"attributes":[{"value":"/ Scalar To Vector -- move a value out of a scalar register and into a vector register; the","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10204548,"byte_end":10204641,"line_start":3803,"line_end":3803,"column_start":5,"column_end":98}},{"value":"/ scalar will be moved to the lowest-order bits of the vector register. Note that this","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10204646,"byte_end":10204734,"line_start":3804,"line_end":3804,"column_start":5,"column_end":93}},{"value":"/ instruction is intended as a low-level legalization instruction and frontends should prefer","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10204739,"byte_end":10204834,"line_start":3805,"line_end":3805,"column_start":5,"column_end":100}},{"value":"/ insertlane; on certain architectures, scalar_to_vector may zero the highest-order bits for some","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10204839,"byte_end":10204938,"line_start":3806,"line_end":3806,"column_start":5,"column_end":104}},{"value":"/ types (e.g. integers) but not for others (e.g. floats).","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10204943,"byte_end":10205002,"line_start":3807,"line_end":3807,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10205007,"byte_end":10205010,"line_start":3808,"line_end":3808,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10205015,"byte_end":10205026,"line_start":3809,"line_end":3809,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10205031,"byte_end":10205034,"line_start":3810,"line_end":3810,"column_start":5,"column_end":8}},{"value":"/ - TxN (controlling type variable): A SIMD vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10205039,"byte_end":10205096,"line_start":3811,"line_end":3811,"column_start":5,"column_end":62}},{"value":"/ - s: A scalar value","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10205101,"byte_end":10205124,"line_start":3812,"line_end":3812,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10205129,"byte_end":10205132,"line_start":3813,"line_end":3813,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10205137,"byte_end":10205149,"line_start":3814,"line_end":3814,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10205154,"byte_end":10205157,"line_start":3815,"line_end":3815,"column_start":5,"column_end":8}},{"value":"/ - a: A vector value","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10205162,"byte_end":10205185,"line_start":3816,"line_end":3816,"column_start":5,"column_end":28}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10205190,"byte_end":10205214,"line_start":3817,"line_end":3817,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5372},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10206011,"byte_end":10206018,"line_start":3838,"line_end":3838,"column_start":8,"column_end":15},"name":"breduce","qualname":"::ir::builder::InstBuilder::breduce","value":"fn (self, BoolTo: crate::ir::Type, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Convert `x` to a smaller boolean type in the platform-defined way.","sig":null,"attributes":[{"value":"/ Convert `x` to a smaller boolean type in the platform-defined way.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10205404,"byte_end":10205474,"line_start":3823,"line_end":3823,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10205479,"byte_end":10205482,"line_start":3824,"line_end":3824,"column_start":5,"column_end":8}},{"value":"/ The result type must have the same number of vector lanes as the input,","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10205487,"byte_end":10205562,"line_start":3825,"line_end":3825,"column_start":5,"column_end":80}},{"value":"/ and each lane must not have more bits that the input lanes. If the","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10205567,"byte_end":10205637,"line_start":3826,"line_end":3826,"column_start":5,"column_end":75}},{"value":"/ input and output types are the same, this is a no-op.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10205642,"byte_end":10205699,"line_start":3827,"line_end":3827,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10205704,"byte_end":10205707,"line_start":3828,"line_end":3828,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10205712,"byte_end":10205723,"line_start":3829,"line_end":3829,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10205728,"byte_end":10205731,"line_start":3830,"line_end":3830,"column_start":5,"column_end":8}},{"value":"/ - BoolTo (controlling type variable): A smaller boolean type with the same number of lanes","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10205736,"byte_end":10205830,"line_start":3831,"line_end":3831,"column_start":5,"column_end":99}},{"value":"/ - x: A scalar or vector boolean type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10205835,"byte_end":10205875,"line_start":3832,"line_end":3832,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10205880,"byte_end":10205883,"line_start":3833,"line_end":3833,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10205888,"byte_end":10205900,"line_start":3834,"line_end":3834,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10205905,"byte_end":10205908,"line_start":3835,"line_end":3835,"column_start":5,"column_end":8}},{"value":"/ - a: A smaller boolean type with the same number of lanes","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10205913,"byte_end":10205974,"line_start":3836,"line_end":3836,"column_start":5,"column_end":66}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10205979,"byte_end":10206003,"line_start":3837,"line_end":3837,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5373},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10206788,"byte_end":10206795,"line_start":3858,"line_end":3858,"column_start":8,"column_end":15},"name":"bextend","qualname":"::ir::builder::InstBuilder::bextend","value":"fn (self, BoolTo: crate::ir::Type, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Convert `x` to a larger boolean type in the platform-defined way.","sig":null,"attributes":[{"value":"/ Convert `x` to a larger boolean type in the platform-defined way.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10206183,"byte_end":10206252,"line_start":3843,"line_end":3843,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10206257,"byte_end":10206260,"line_start":3844,"line_end":3844,"column_start":5,"column_end":8}},{"value":"/ The result type must have the same number of vector lanes as the input,","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10206265,"byte_end":10206340,"line_start":3845,"line_end":3845,"column_start":5,"column_end":80}},{"value":"/ and each lane must not have fewer bits that the input lanes. If the","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10206345,"byte_end":10206416,"line_start":3846,"line_end":3846,"column_start":5,"column_end":76}},{"value":"/ input and output types are the same, this is a no-op.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10206421,"byte_end":10206478,"line_start":3847,"line_end":3847,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10206483,"byte_end":10206486,"line_start":3848,"line_end":3848,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10206491,"byte_end":10206502,"line_start":3849,"line_end":3849,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10206507,"byte_end":10206510,"line_start":3850,"line_end":3850,"column_start":5,"column_end":8}},{"value":"/ - BoolTo (controlling type variable): A larger boolean type with the same number of lanes","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10206515,"byte_end":10206608,"line_start":3851,"line_end":3851,"column_start":5,"column_end":98}},{"value":"/ - x: A scalar or vector boolean type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10206613,"byte_end":10206653,"line_start":3852,"line_end":3852,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10206658,"byte_end":10206661,"line_start":3853,"line_end":3853,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10206666,"byte_end":10206678,"line_start":3854,"line_end":3854,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10206683,"byte_end":10206686,"line_start":3855,"line_end":3855,"column_start":5,"column_end":8}},{"value":"/ - a: A larger boolean type with the same number of lanes","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10206691,"byte_end":10206751,"line_start":3856,"line_end":3856,"column_start":5,"column_end":65}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10206756,"byte_end":10206780,"line_start":3857,"line_end":3857,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5374},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10207419,"byte_end":10207423,"line_start":3877,"line_end":3877,"column_start":8,"column_end":12},"name":"bint","qualname":"::ir::builder::InstBuilder::bint","value":"fn (self, IntTo: crate::ir::Type, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Convert `x` to an integer.","sig":null,"attributes":[{"value":"/ Convert `x` to an integer.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10206960,"byte_end":10206990,"line_start":3863,"line_end":3863,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10206995,"byte_end":10206998,"line_start":3864,"line_end":3864,"column_start":5,"column_end":8}},{"value":"/ True maps to 1 and false maps to 0. The result type must have the same","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10207003,"byte_end":10207077,"line_start":3865,"line_end":3865,"column_start":5,"column_end":79}},{"value":"/ number of vector lanes as the input.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10207082,"byte_end":10207122,"line_start":3866,"line_end":3866,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10207127,"byte_end":10207130,"line_start":3867,"line_end":3867,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10207135,"byte_end":10207146,"line_start":3868,"line_end":3868,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10207151,"byte_end":10207154,"line_start":3869,"line_end":3869,"column_start":5,"column_end":8}},{"value":"/ - IntTo (controlling type variable): An integer type with the same number of lanes","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10207159,"byte_end":10207245,"line_start":3870,"line_end":3870,"column_start":5,"column_end":91}},{"value":"/ - x: A scalar or vector boolean type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10207250,"byte_end":10207290,"line_start":3871,"line_end":3871,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10207295,"byte_end":10207298,"line_start":3872,"line_end":3872,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10207303,"byte_end":10207315,"line_start":3873,"line_end":3873,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10207320,"byte_end":10207323,"line_start":3874,"line_end":3874,"column_start":5,"column_end":8}},{"value":"/ - a: An integer type with the same number of lanes","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10207328,"byte_end":10207382,"line_start":3875,"line_end":3875,"column_start":5,"column_end":59}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10207387,"byte_end":10207411,"line_start":3876,"line_end":3876,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5375},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10208057,"byte_end":10208062,"line_start":3896,"line_end":3896,"column_start":8,"column_end":13},"name":"bmask","qualname":"::ir::builder::InstBuilder::bmask","value":"fn (self, IntTo: crate::ir::Type, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Convert `x` to an integer mask.","sig":null,"attributes":[{"value":"/ Convert `x` to an integer mask.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10207583,"byte_end":10207618,"line_start":3882,"line_end":3882,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10207623,"byte_end":10207626,"line_start":3883,"line_end":3883,"column_start":5,"column_end":8}},{"value":"/ True maps to all 1s and false maps to all 0s. The result type must have","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10207631,"byte_end":10207706,"line_start":3884,"line_end":3884,"column_start":5,"column_end":80}},{"value":"/ the same number of vector lanes as the input.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10207711,"byte_end":10207760,"line_start":3885,"line_end":3885,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10207765,"byte_end":10207768,"line_start":3886,"line_end":3886,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10207773,"byte_end":10207784,"line_start":3887,"line_end":3887,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10207789,"byte_end":10207792,"line_start":3888,"line_end":3888,"column_start":5,"column_end":8}},{"value":"/ - IntTo (controlling type variable): An integer type with the same number of lanes","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10207797,"byte_end":10207883,"line_start":3889,"line_end":3889,"column_start":5,"column_end":91}},{"value":"/ - x: A scalar or vector boolean type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10207888,"byte_end":10207928,"line_start":3890,"line_end":3890,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10207933,"byte_end":10207936,"line_start":3891,"line_end":3891,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10207941,"byte_end":10207953,"line_start":3892,"line_end":3892,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10207958,"byte_end":10207961,"line_start":3893,"line_end":3893,"column_start":5,"column_end":8}},{"value":"/ - a: An integer type with the same number of lanes","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10207966,"byte_end":10208020,"line_start":3894,"line_end":3894,"column_start":5,"column_end":59}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10208025,"byte_end":10208049,"line_start":3895,"line_end":3895,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5376},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10208995,"byte_end":10209002,"line_start":3920,"line_end":3920,"column_start":8,"column_end":15},"name":"ireduce","qualname":"::ir::builder::InstBuilder::ireduce","value":"fn (self, IntTo: crate::ir::Type, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Convert `x` to a smaller integer type by dropping high bits.","sig":null,"attributes":[{"value":"/ Convert `x` to a smaller integer type by dropping high bits.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10208223,"byte_end":10208287,"line_start":3901,"line_end":3901,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10208292,"byte_end":10208295,"line_start":3902,"line_end":3902,"column_start":5,"column_end":8}},{"value":"/ Each lane in `x` is converted to a smaller integer type by discarding","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10208300,"byte_end":10208373,"line_start":3903,"line_end":3903,"column_start":5,"column_end":78}},{"value":"/ the most significant bits. This is the same as reducing modulo","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10208378,"byte_end":10208444,"line_start":3904,"line_end":3904,"column_start":5,"column_end":71}},{"value":"/ `2^n`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10208449,"byte_end":10208459,"line_start":3905,"line_end":3905,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10208464,"byte_end":10208467,"line_start":3906,"line_end":3906,"column_start":5,"column_end":8}},{"value":"/ The result type must have the same number of vector lanes as the input,","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10208472,"byte_end":10208547,"line_start":3907,"line_end":3907,"column_start":5,"column_end":80}},{"value":"/ and each lane must not have more bits that the input lanes. If the","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10208552,"byte_end":10208622,"line_start":3908,"line_end":3908,"column_start":5,"column_end":75}},{"value":"/ input and output types are the same, this is a no-op.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10208627,"byte_end":10208684,"line_start":3909,"line_end":3909,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10208689,"byte_end":10208692,"line_start":3910,"line_end":3910,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10208697,"byte_end":10208708,"line_start":3911,"line_end":3911,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10208713,"byte_end":10208716,"line_start":3912,"line_end":3912,"column_start":5,"column_end":8}},{"value":"/ - IntTo (controlling type variable): A smaller integer type with the same number of lanes","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10208721,"byte_end":10208814,"line_start":3913,"line_end":3913,"column_start":5,"column_end":98}},{"value":"/ - x: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10208819,"byte_end":10208859,"line_start":3914,"line_end":3914,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10208864,"byte_end":10208867,"line_start":3915,"line_end":3915,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10208872,"byte_end":10208884,"line_start":3916,"line_end":3916,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10208889,"byte_end":10208892,"line_start":3917,"line_end":3917,"column_start":5,"column_end":8}},{"value":"/ - a: A smaller integer type with the same number of lanes","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10208897,"byte_end":10208958,"line_start":3918,"line_end":3918,"column_start":5,"column_end":66}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10208963,"byte_end":10208987,"line_start":3919,"line_end":3919,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5377},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10209959,"byte_end":10209966,"line_start":3944,"line_end":3944,"column_start":8,"column_end":15},"name":"uextend","qualname":"::ir::builder::InstBuilder::uextend","value":"fn (self, IntTo: crate::ir::Type, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Convert `x` to a larger integer type by zero-extending.","sig":null,"attributes":[{"value":"/ Convert `x` to a larger integer type by zero-extending.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10209165,"byte_end":10209224,"line_start":3925,"line_end":3925,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10209229,"byte_end":10209232,"line_start":3926,"line_end":3926,"column_start":5,"column_end":8}},{"value":"/ Each lane in `x` is converted to a larger integer type by adding","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10209237,"byte_end":10209305,"line_start":3927,"line_end":3927,"column_start":5,"column_end":73}},{"value":"/ zeroes. The result has the same numerical value as `x` when both are","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10209310,"byte_end":10209382,"line_start":3928,"line_end":3928,"column_start":5,"column_end":77}},{"value":"/ interpreted as unsigned integers.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10209387,"byte_end":10209424,"line_start":3929,"line_end":3929,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10209429,"byte_end":10209432,"line_start":3930,"line_end":3930,"column_start":5,"column_end":8}},{"value":"/ The result type must have the same number of vector lanes as the input,","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10209437,"byte_end":10209512,"line_start":3931,"line_end":3931,"column_start":5,"column_end":80}},{"value":"/ and each lane must not have fewer bits that the input lanes. If the","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10209517,"byte_end":10209588,"line_start":3932,"line_end":3932,"column_start":5,"column_end":76}},{"value":"/ input and output types are the same, this is a no-op.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10209593,"byte_end":10209650,"line_start":3933,"line_end":3933,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10209655,"byte_end":10209658,"line_start":3934,"line_end":3934,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10209663,"byte_end":10209674,"line_start":3935,"line_end":3935,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10209679,"byte_end":10209682,"line_start":3936,"line_end":3936,"column_start":5,"column_end":8}},{"value":"/ - IntTo (controlling type variable): A larger integer type with the same number of lanes","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10209687,"byte_end":10209779,"line_start":3937,"line_end":3937,"column_start":5,"column_end":97}},{"value":"/ - x: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10209784,"byte_end":10209824,"line_start":3938,"line_end":3938,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10209829,"byte_end":10209832,"line_start":3939,"line_end":3939,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10209837,"byte_end":10209849,"line_start":3940,"line_end":3940,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10209854,"byte_end":10209857,"line_start":3941,"line_end":3941,"column_start":5,"column_end":8}},{"value":"/ - a: A larger integer type with the same number of lanes","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10209862,"byte_end":10209922,"line_start":3942,"line_end":3942,"column_start":5,"column_end":65}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10209927,"byte_end":10209951,"line_start":3943,"line_end":3943,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5378},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10210932,"byte_end":10210939,"line_start":3968,"line_end":3968,"column_start":8,"column_end":15},"name":"sextend","qualname":"::ir::builder::InstBuilder::sextend","value":"fn (self, IntTo: crate::ir::Type, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Convert `x` to a larger integer type by sign-extending.","sig":null,"attributes":[{"value":"/ Convert `x` to a larger integer type by sign-extending.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10210129,"byte_end":10210188,"line_start":3949,"line_end":3949,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10210193,"byte_end":10210196,"line_start":3950,"line_end":3950,"column_start":5,"column_end":8}},{"value":"/ Each lane in `x` is converted to a larger integer type by replicating","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10210201,"byte_end":10210274,"line_start":3951,"line_end":3951,"column_start":5,"column_end":78}},{"value":"/ the sign bit. The result has the same numerical value as `x` when both","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10210279,"byte_end":10210353,"line_start":3952,"line_end":3952,"column_start":5,"column_end":79}},{"value":"/ are interpreted as signed integers.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10210358,"byte_end":10210397,"line_start":3953,"line_end":3953,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10210402,"byte_end":10210405,"line_start":3954,"line_end":3954,"column_start":5,"column_end":8}},{"value":"/ The result type must have the same number of vector lanes as the input,","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10210410,"byte_end":10210485,"line_start":3955,"line_end":3955,"column_start":5,"column_end":80}},{"value":"/ and each lane must not have fewer bits that the input lanes. If the","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10210490,"byte_end":10210561,"line_start":3956,"line_end":3956,"column_start":5,"column_end":76}},{"value":"/ input and output types are the same, this is a no-op.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10210566,"byte_end":10210623,"line_start":3957,"line_end":3957,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10210628,"byte_end":10210631,"line_start":3958,"line_end":3958,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10210636,"byte_end":10210647,"line_start":3959,"line_end":3959,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10210652,"byte_end":10210655,"line_start":3960,"line_end":3960,"column_start":5,"column_end":8}},{"value":"/ - IntTo (controlling type variable): A larger integer type with the same number of lanes","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10210660,"byte_end":10210752,"line_start":3961,"line_end":3961,"column_start":5,"column_end":97}},{"value":"/ - x: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10210757,"byte_end":10210797,"line_start":3962,"line_end":3962,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10210802,"byte_end":10210805,"line_start":3963,"line_end":3963,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10210810,"byte_end":10210822,"line_start":3964,"line_end":3964,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10210827,"byte_end":10210830,"line_start":3965,"line_end":3965,"column_start":5,"column_end":8}},{"value":"/ - a: A larger integer type with the same number of lanes","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10210835,"byte_end":10210895,"line_start":3966,"line_end":3966,"column_start":5,"column_end":65}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10210900,"byte_end":10210924,"line_start":3967,"line_end":3967,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5379},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10211942,"byte_end":10211950,"line_start":3994,"line_end":3994,"column_start":8,"column_end":16},"name":"fpromote","qualname":"::ir::builder::InstBuilder::fpromote","value":"fn (self, FloatTo: crate::ir::Type, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Convert `x` to a larger floating point format.","sig":null,"attributes":[{"value":"/ Convert `x` to a larger floating point format.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10211102,"byte_end":10211152,"line_start":3973,"line_end":3973,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10211157,"byte_end":10211160,"line_start":3974,"line_end":3974,"column_start":5,"column_end":8}},{"value":"/ Each lane in `x` is converted to the destination floating point format.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10211165,"byte_end":10211240,"line_start":3975,"line_end":3975,"column_start":5,"column_end":80}},{"value":"/ This is an exact operation.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10211245,"byte_end":10211276,"line_start":3976,"line_end":3976,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10211281,"byte_end":10211284,"line_start":3977,"line_end":3977,"column_start":5,"column_end":8}},{"value":"/ Cranelift currently only supports two floating point formats","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10211289,"byte_end":10211353,"line_start":3978,"line_end":3978,"column_start":5,"column_end":69}},{"value":"/ - `f32` and `f64`. This may change in the future.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10211358,"byte_end":10211411,"line_start":3979,"line_end":3979,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10211416,"byte_end":10211419,"line_start":3980,"line_end":3980,"column_start":5,"column_end":8}},{"value":"/ The result type must have the same number of vector lanes as the input,","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10211424,"byte_end":10211499,"line_start":3981,"line_end":3981,"column_start":5,"column_end":80}},{"value":"/ and the result lanes must not have fewer bits than the input lanes. If","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10211504,"byte_end":10211578,"line_start":3982,"line_end":3982,"column_start":5,"column_end":79}},{"value":"/ the input and output types are the same, this is a no-op.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10211583,"byte_end":10211644,"line_start":3983,"line_end":3983,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10211649,"byte_end":10211652,"line_start":3984,"line_end":3984,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10211657,"byte_end":10211668,"line_start":3985,"line_end":3985,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10211673,"byte_end":10211676,"line_start":3986,"line_end":3986,"column_start":5,"column_end":8}},{"value":"/ - FloatTo (controlling type variable): A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10211681,"byte_end":10211764,"line_start":3987,"line_end":3987,"column_start":5,"column_end":88}},{"value":"/ - x: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10211769,"byte_end":10211818,"line_start":3988,"line_end":3988,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10211823,"byte_end":10211826,"line_start":3989,"line_end":3989,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10211831,"byte_end":10211843,"line_start":3990,"line_end":3990,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10211848,"byte_end":10211851,"line_start":3991,"line_end":3991,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10211856,"byte_end":10211905,"line_start":3992,"line_end":3992,"column_start":5,"column_end":54}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10211910,"byte_end":10211934,"line_start":3993,"line_end":3993,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5380},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10212967,"byte_end":10212974,"line_start":4020,"line_end":4020,"column_start":8,"column_end":15},"name":"fdemote","qualname":"::ir::builder::InstBuilder::fdemote","value":"fn (self, FloatTo: crate::ir::Type, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Convert `x` to a smaller floating point format.","sig":null,"attributes":[{"value":"/ Convert `x` to a smaller floating point format.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10212118,"byte_end":10212169,"line_start":3999,"line_end":3999,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10212174,"byte_end":10212177,"line_start":4000,"line_end":4000,"column_start":5,"column_end":8}},{"value":"/ Each lane in `x` is converted to the destination floating point format","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10212182,"byte_end":10212256,"line_start":4001,"line_end":4001,"column_start":5,"column_end":79}},{"value":"/ by rounding to nearest, ties to even.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10212261,"byte_end":10212302,"line_start":4002,"line_end":4002,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10212307,"byte_end":10212310,"line_start":4003,"line_end":4003,"column_start":5,"column_end":8}},{"value":"/ Cranelift currently only supports two floating point formats","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10212315,"byte_end":10212379,"line_start":4004,"line_end":4004,"column_start":5,"column_end":69}},{"value":"/ - `f32` and `f64`. This may change in the future.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10212384,"byte_end":10212437,"line_start":4005,"line_end":4005,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10212442,"byte_end":10212445,"line_start":4006,"line_end":4006,"column_start":5,"column_end":8}},{"value":"/ The result type must have the same number of vector lanes as the input,","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10212450,"byte_end":10212525,"line_start":4007,"line_end":4007,"column_start":5,"column_end":80}},{"value":"/ and the result lanes must not have more bits than the input lanes. If","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10212530,"byte_end":10212603,"line_start":4008,"line_end":4008,"column_start":5,"column_end":78}},{"value":"/ the input and output types are the same, this is a no-op.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10212608,"byte_end":10212669,"line_start":4009,"line_end":4009,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10212674,"byte_end":10212677,"line_start":4010,"line_end":4010,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10212682,"byte_end":10212693,"line_start":4011,"line_end":4011,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10212698,"byte_end":10212701,"line_start":4012,"line_end":4012,"column_start":5,"column_end":8}},{"value":"/ - FloatTo (controlling type variable): A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10212706,"byte_end":10212789,"line_start":4013,"line_end":4013,"column_start":5,"column_end":88}},{"value":"/ - x: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10212794,"byte_end":10212843,"line_start":4014,"line_end":4014,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10212848,"byte_end":10212851,"line_start":4015,"line_end":4015,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10212856,"byte_end":10212868,"line_start":4016,"line_end":4016,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10212873,"byte_end":10212876,"line_start":4017,"line_end":4017,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10212881,"byte_end":10212930,"line_start":4018,"line_end":4018,"column_start":5,"column_end":54}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10212935,"byte_end":10212959,"line_start":4019,"line_end":4019,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5381},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10213819,"byte_end":10213831,"line_start":4042,"line_end":4042,"column_start":8,"column_end":20},"name":"fcvt_to_uint","qualname":"::ir::builder::InstBuilder::fcvt_to_uint","value":"fn (self, IntTo: crate::ir::Type, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Convert floating point to unsigned integer.","sig":null,"attributes":[{"value":"/ Convert floating point to unsigned integer.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10213141,"byte_end":10213188,"line_start":4025,"line_end":4025,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10213193,"byte_end":10213196,"line_start":4026,"line_end":4026,"column_start":5,"column_end":8}},{"value":"/ Each lane in `x` is converted to an unsigned integer by rounding","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10213201,"byte_end":10213269,"line_start":4027,"line_end":4027,"column_start":5,"column_end":73}},{"value":"/ towards zero. If `x` is NaN or if the unsigned integral value cannot be","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10213274,"byte_end":10213349,"line_start":4028,"line_end":4028,"column_start":5,"column_end":80}},{"value":"/ represented in the result type, this instruction traps.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10213354,"byte_end":10213413,"line_start":4029,"line_end":4029,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10213418,"byte_end":10213421,"line_start":4030,"line_end":4030,"column_start":5,"column_end":8}},{"value":"/ The result type must have the same number of vector lanes as the input.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10213426,"byte_end":10213501,"line_start":4031,"line_end":4031,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10213506,"byte_end":10213509,"line_start":4032,"line_end":4032,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10213514,"byte_end":10213525,"line_start":4033,"line_end":4033,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10213530,"byte_end":10213533,"line_start":4034,"line_end":4034,"column_start":5,"column_end":8}},{"value":"/ - IntTo (controlling type variable): A larger integer type with the same number of lanes","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10213538,"byte_end":10213630,"line_start":4035,"line_end":4035,"column_start":5,"column_end":97}},{"value":"/ - x: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10213635,"byte_end":10213684,"line_start":4036,"line_end":4036,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10213689,"byte_end":10213692,"line_start":4037,"line_end":4037,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10213697,"byte_end":10213709,"line_start":4038,"line_end":4038,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10213714,"byte_end":10213717,"line_start":4039,"line_end":4039,"column_start":5,"column_end":8}},{"value":"/ - a: A larger integer type with the same number of lanes","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10213722,"byte_end":10213782,"line_start":4040,"line_end":4040,"column_start":5,"column_end":65}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10213787,"byte_end":10213811,"line_start":4041,"line_end":4041,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5382},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10214488,"byte_end":10214504,"line_start":4060,"line_end":4060,"column_start":8,"column_end":24},"name":"fcvt_to_uint_sat","qualname":"::ir::builder::InstBuilder::fcvt_to_uint_sat","value":"fn (self, IntTo: crate::ir::Type, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Convert floating point to unsigned integer as fcvt_to_uint does, but\n saturates the input instead of trapping. NaN and negative values are\n converted to 0.","sig":null,"attributes":[{"value":"/ Convert floating point to unsigned integer as fcvt_to_uint does, but","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10213997,"byte_end":10214069,"line_start":4047,"line_end":4047,"column_start":5,"column_end":77}},{"value":"/ saturates the input instead of trapping. NaN and negative values are","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10214074,"byte_end":10214146,"line_start":4048,"line_end":4048,"column_start":5,"column_end":77}},{"value":"/ converted to 0.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10214151,"byte_end":10214170,"line_start":4049,"line_end":4049,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10214175,"byte_end":10214178,"line_start":4050,"line_end":4050,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10214183,"byte_end":10214194,"line_start":4051,"line_end":4051,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10214199,"byte_end":10214202,"line_start":4052,"line_end":4052,"column_start":5,"column_end":8}},{"value":"/ - IntTo (controlling type variable): A larger integer type with the same number of lanes","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10214207,"byte_end":10214299,"line_start":4053,"line_end":4053,"column_start":5,"column_end":97}},{"value":"/ - x: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10214304,"byte_end":10214353,"line_start":4054,"line_end":4054,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10214358,"byte_end":10214361,"line_start":4055,"line_end":4055,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10214366,"byte_end":10214378,"line_start":4056,"line_end":4056,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10214383,"byte_end":10214386,"line_start":4057,"line_end":4057,"column_start":5,"column_end":8}},{"value":"/ - a: A larger integer type with the same number of lanes","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10214391,"byte_end":10214451,"line_start":4058,"line_end":4058,"column_start":5,"column_end":65}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10214456,"byte_end":10214480,"line_start":4059,"line_end":4059,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5383},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10215344,"byte_end":10215356,"line_start":4082,"line_end":4082,"column_start":8,"column_end":20},"name":"fcvt_to_sint","qualname":"::ir::builder::InstBuilder::fcvt_to_sint","value":"fn (self, IntTo: crate::ir::Type, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Convert floating point to signed integer.","sig":null,"attributes":[{"value":"/ Convert floating point to signed integer.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10214673,"byte_end":10214718,"line_start":4065,"line_end":4065,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10214723,"byte_end":10214726,"line_start":4066,"line_end":4066,"column_start":5,"column_end":8}},{"value":"/ Each lane in `x` is converted to a signed integer by rounding towards","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10214731,"byte_end":10214804,"line_start":4067,"line_end":4067,"column_start":5,"column_end":78}},{"value":"/ zero. If `x` is NaN or if the signed integral value cannot be","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10214809,"byte_end":10214874,"line_start":4068,"line_end":4068,"column_start":5,"column_end":70}},{"value":"/ represented in the result type, this instruction traps.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10214879,"byte_end":10214938,"line_start":4069,"line_end":4069,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10214943,"byte_end":10214946,"line_start":4070,"line_end":4070,"column_start":5,"column_end":8}},{"value":"/ The result type must have the same number of vector lanes as the input.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10214951,"byte_end":10215026,"line_start":4071,"line_end":4071,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10215031,"byte_end":10215034,"line_start":4072,"line_end":4072,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10215039,"byte_end":10215050,"line_start":4073,"line_end":4073,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10215055,"byte_end":10215058,"line_start":4074,"line_end":4074,"column_start":5,"column_end":8}},{"value":"/ - IntTo (controlling type variable): A larger integer type with the same number of lanes","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10215063,"byte_end":10215155,"line_start":4075,"line_end":4075,"column_start":5,"column_end":97}},{"value":"/ - x: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10215160,"byte_end":10215209,"line_start":4076,"line_end":4076,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10215214,"byte_end":10215217,"line_start":4077,"line_end":4077,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10215222,"byte_end":10215234,"line_start":4078,"line_end":4078,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10215239,"byte_end":10215242,"line_start":4079,"line_end":4079,"column_start":5,"column_end":8}},{"value":"/ - a: A larger integer type with the same number of lanes","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10215247,"byte_end":10215307,"line_start":4080,"line_end":4080,"column_start":5,"column_end":65}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10215312,"byte_end":10215336,"line_start":4081,"line_end":4081,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5384},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10215990,"byte_end":10216006,"line_start":4099,"line_end":4099,"column_start":8,"column_end":24},"name":"fcvt_to_sint_sat","qualname":"::ir::builder::InstBuilder::fcvt_to_sint_sat","value":"fn (self, IntTo: crate::ir::Type, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Convert floating point to signed integer as fcvt_to_sint does, but\n saturates the input instead of trapping. NaN values are converted to 0.","sig":null,"attributes":[{"value":"/ Convert floating point to signed integer as fcvt_to_sint does, but","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10215522,"byte_end":10215592,"line_start":4087,"line_end":4087,"column_start":5,"column_end":75}},{"value":"/ saturates the input instead of trapping. NaN values are converted to 0.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10215597,"byte_end":10215672,"line_start":4088,"line_end":4088,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10215677,"byte_end":10215680,"line_start":4089,"line_end":4089,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10215685,"byte_end":10215696,"line_start":4090,"line_end":4090,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10215701,"byte_end":10215704,"line_start":4091,"line_end":4091,"column_start":5,"column_end":8}},{"value":"/ - IntTo (controlling type variable): A larger integer type with the same number of lanes","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10215709,"byte_end":10215801,"line_start":4092,"line_end":4092,"column_start":5,"column_end":97}},{"value":"/ - x: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10215806,"byte_end":10215855,"line_start":4093,"line_end":4093,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10215860,"byte_end":10215863,"line_start":4094,"line_end":4094,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10215868,"byte_end":10215880,"line_start":4095,"line_end":4095,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10215885,"byte_end":10215888,"line_start":4096,"line_end":4096,"column_start":5,"column_end":8}},{"value":"/ - a: A larger integer type with the same number of lanes","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10215893,"byte_end":10215953,"line_start":4097,"line_end":4097,"column_start":5,"column_end":65}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10215958,"byte_end":10215982,"line_start":4098,"line_end":4098,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5385},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10216748,"byte_end":10216762,"line_start":4120,"line_end":4120,"column_start":8,"column_end":22},"name":"fcvt_from_uint","qualname":"::ir::builder::InstBuilder::fcvt_from_uint","value":"fn (self, FloatTo: crate::ir::Type, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Convert unsigned integer to floating point.","sig":null,"attributes":[{"value":"/ Convert unsigned integer to floating point.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10216175,"byte_end":10216222,"line_start":4104,"line_end":4104,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10216227,"byte_end":10216230,"line_start":4105,"line_end":4105,"column_start":5,"column_end":8}},{"value":"/ Each lane in `x` is interpreted as an unsigned integer and converted to","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10216235,"byte_end":10216310,"line_start":4106,"line_end":4106,"column_start":5,"column_end":80}},{"value":"/ floating point using round to nearest, ties to even.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10216315,"byte_end":10216371,"line_start":4107,"line_end":4107,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10216376,"byte_end":10216379,"line_start":4108,"line_end":4108,"column_start":5,"column_end":8}},{"value":"/ The result type must have the same number of vector lanes as the input.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10216384,"byte_end":10216459,"line_start":4109,"line_end":4109,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10216464,"byte_end":10216467,"line_start":4110,"line_end":4110,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10216472,"byte_end":10216483,"line_start":4111,"line_end":4111,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10216488,"byte_end":10216491,"line_start":4112,"line_end":4112,"column_start":5,"column_end":8}},{"value":"/ - FloatTo (controlling type variable): A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10216496,"byte_end":10216579,"line_start":4113,"line_end":4113,"column_start":5,"column_end":88}},{"value":"/ - x: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10216584,"byte_end":10216624,"line_start":4114,"line_end":4114,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10216629,"byte_end":10216632,"line_start":4115,"line_end":4115,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10216637,"byte_end":10216649,"line_start":4116,"line_end":4116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10216654,"byte_end":10216657,"line_start":4117,"line_end":4117,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10216662,"byte_end":10216711,"line_start":4118,"line_end":4118,"column_start":5,"column_end":54}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10216716,"byte_end":10216740,"line_start":4119,"line_end":4119,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5386},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10217502,"byte_end":10217516,"line_start":4141,"line_end":4141,"column_start":8,"column_end":22},"name":"fcvt_from_sint","qualname":"::ir::builder::InstBuilder::fcvt_from_sint","value":"fn (self, FloatTo: crate::ir::Type, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Convert signed integer to floating point.","sig":null,"attributes":[{"value":"/ Convert signed integer to floating point.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10216934,"byte_end":10216979,"line_start":4125,"line_end":4125,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10216984,"byte_end":10216987,"line_start":4126,"line_end":4126,"column_start":5,"column_end":8}},{"value":"/ Each lane in `x` is interpreted as a signed integer and converted to","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10216992,"byte_end":10217064,"line_start":4127,"line_end":4127,"column_start":5,"column_end":77}},{"value":"/ floating point using round to nearest, ties to even.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10217069,"byte_end":10217125,"line_start":4128,"line_end":4128,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10217130,"byte_end":10217133,"line_start":4129,"line_end":4129,"column_start":5,"column_end":8}},{"value":"/ The result type must have the same number of vector lanes as the input.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10217138,"byte_end":10217213,"line_start":4130,"line_end":4130,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10217218,"byte_end":10217221,"line_start":4131,"line_end":4131,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10217226,"byte_end":10217237,"line_start":4132,"line_end":4132,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10217242,"byte_end":10217245,"line_start":4133,"line_end":4133,"column_start":5,"column_end":8}},{"value":"/ - FloatTo (controlling type variable): A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10217250,"byte_end":10217333,"line_start":4134,"line_end":4134,"column_start":5,"column_end":88}},{"value":"/ - x: A scalar or vector integer type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10217338,"byte_end":10217378,"line_start":4135,"line_end":4135,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10217383,"byte_end":10217386,"line_start":4136,"line_end":4136,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10217391,"byte_end":10217403,"line_start":4137,"line_end":4137,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10217408,"byte_end":10217411,"line_start":4138,"line_end":4138,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10217416,"byte_end":10217465,"line_start":4139,"line_end":4139,"column_start":5,"column_end":54}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10217470,"byte_end":10217494,"line_start":4140,"line_end":4140,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5387},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10218224,"byte_end":10218230,"line_start":4163,"line_end":4163,"column_start":8,"column_end":14},"name":"isplit","qualname":"::ir::builder::InstBuilder::isplit","value":"fn (self, x: ir::Value) -> (Value, Value)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Split an integer into low and high parts.","sig":null,"attributes":[{"value":"/ Split an integer into low and high parts.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10217688,"byte_end":10217733,"line_start":4146,"line_end":4146,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10217738,"byte_end":10217741,"line_start":4147,"line_end":4147,"column_start":5,"column_end":8}},{"value":"/ Vectors of integers are split lane-wise, so the results have the same","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10217746,"byte_end":10217819,"line_start":4148,"line_end":4148,"column_start":5,"column_end":78}},{"value":"/ number of lanes as the input, but the lanes are half the size.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10217824,"byte_end":10217890,"line_start":4149,"line_end":4149,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10217895,"byte_end":10217898,"line_start":4150,"line_end":4150,"column_start":5,"column_end":8}},{"value":"/ Returns the low half of `x` and the high half of `x` as two independent","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10217903,"byte_end":10217978,"line_start":4151,"line_end":4151,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10217983,"byte_end":10217994,"line_start":4152,"line_end":4152,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10217999,"byte_end":10218002,"line_start":4153,"line_end":4153,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10218007,"byte_end":10218018,"line_start":4154,"line_end":4154,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10218023,"byte_end":10218026,"line_start":4155,"line_end":4155,"column_start":5,"column_end":8}},{"value":"/ - x: An integer type with lanes from `i16` upwards","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10218031,"byte_end":10218085,"line_start":4156,"line_end":4156,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10218090,"byte_end":10218093,"line_start":4157,"line_end":4157,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10218098,"byte_end":10218110,"line_start":4158,"line_end":4158,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10218115,"byte_end":10218118,"line_start":4159,"line_end":4159,"column_start":5,"column_end":8}},{"value":"/ - lo: The low bits of `x`","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10218123,"byte_end":10218152,"line_start":4160,"line_end":4160,"column_start":5,"column_end":34}},{"value":"/ - hi: The high bits of `x`","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10218157,"byte_end":10218187,"line_start":4161,"line_end":4161,"column_start":5,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10218192,"byte_end":10218216,"line_start":4162,"line_end":4162,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5388},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10219006,"byte_end":10219013,"line_start":4185,"line_end":4185,"column_start":8,"column_end":15},"name":"iconcat","qualname":"::ir::builder::InstBuilder::iconcat","value":"fn (self, lo: ir::Value, hi: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Concatenate low and high bits to form a larger integer type.","sig":null,"attributes":[{"value":"/ Concatenate low and high bits to form a larger integer type.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10218504,"byte_end":10218568,"line_start":4170,"line_end":4170,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10218573,"byte_end":10218576,"line_start":4171,"line_end":4171,"column_start":5,"column_end":8}},{"value":"/ Vectors of integers are concatenated lane-wise such that the result has","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10218581,"byte_end":10218656,"line_start":4172,"line_end":4172,"column_start":5,"column_end":80}},{"value":"/ the same number of lanes as the inputs, but the lanes are twice the","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10218661,"byte_end":10218732,"line_start":4173,"line_end":4173,"column_start":5,"column_end":76}},{"value":"/ size.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10218737,"byte_end":10218746,"line_start":4174,"line_end":4174,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10218751,"byte_end":10218754,"line_start":4175,"line_end":4175,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10218759,"byte_end":10218770,"line_start":4176,"line_end":4176,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10218775,"byte_end":10218778,"line_start":4177,"line_end":4177,"column_start":5,"column_end":8}},{"value":"/ - lo: An integer type with lanes type to `i64`","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10218783,"byte_end":10218833,"line_start":4178,"line_end":4178,"column_start":5,"column_end":55}},{"value":"/ - hi: An integer type with lanes type to `i64`","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10218838,"byte_end":10218888,"line_start":4179,"line_end":4179,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10218893,"byte_end":10218896,"line_start":4180,"line_end":4180,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10218901,"byte_end":10218913,"line_start":4181,"line_end":4181,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10218918,"byte_end":10218921,"line_start":4182,"line_end":4182,"column_start":5,"column_end":8}},{"value":"/ - a: The concatenation of `lo` and `hi`","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10218926,"byte_end":10218969,"line_start":4183,"line_end":4183,"column_start":5,"column_end":48}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10218974,"byte_end":10218998,"line_start":4184,"line_end":4184,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5389},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10219846,"byte_end":10219858,"line_start":4211,"line_end":4211,"column_start":8,"column_end":20},"name":"x86_udivmodx","qualname":"::ir::builder::InstBuilder::x86_udivmodx","value":"fn (self, nlo: ir::Value, nhi: ir::Value, d: ir::Value) -> (Value, Value)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Extended unsigned division.","sig":null,"attributes":[{"value":"/ Extended unsigned division.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10219247,"byte_end":10219278,"line_start":4191,"line_end":4191,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10219283,"byte_end":10219286,"line_start":4192,"line_end":4192,"column_start":5,"column_end":8}},{"value":"/ Concatenate the bits in `nhi` and `nlo` to form the numerator.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10219291,"byte_end":10219357,"line_start":4193,"line_end":4193,"column_start":5,"column_end":71}},{"value":"/ Interpret the bits as an unsigned number and divide by the unsigned","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10219362,"byte_end":10219433,"line_start":4194,"line_end":4194,"column_start":5,"column_end":76}},{"value":"/ denominator `d`. Trap when `d` is zero or if the quotient is larger","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10219438,"byte_end":10219509,"line_start":4195,"line_end":4195,"column_start":5,"column_end":76}},{"value":"/ than the range of the output.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10219514,"byte_end":10219547,"line_start":4196,"line_end":4196,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10219552,"byte_end":10219555,"line_start":4197,"line_end":4197,"column_start":5,"column_end":8}},{"value":"/ Return both quotient and remainder.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10219560,"byte_end":10219599,"line_start":4198,"line_end":4198,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10219604,"byte_end":10219607,"line_start":4199,"line_end":4199,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10219612,"byte_end":10219623,"line_start":4200,"line_end":4200,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10219628,"byte_end":10219631,"line_start":4201,"line_end":4201,"column_start":5,"column_end":8}},{"value":"/ - nlo: Low part of numerator","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10219636,"byte_end":10219668,"line_start":4202,"line_end":4202,"column_start":5,"column_end":37}},{"value":"/ - nhi: High part of numerator","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10219673,"byte_end":10219706,"line_start":4203,"line_end":4203,"column_start":5,"column_end":38}},{"value":"/ - d: Denominator","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10219711,"byte_end":10219731,"line_start":4204,"line_end":4204,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10219736,"byte_end":10219739,"line_start":4205,"line_end":4205,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10219744,"byte_end":10219756,"line_start":4206,"line_end":4206,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10219761,"byte_end":10219764,"line_start":4207,"line_end":4207,"column_start":5,"column_end":8}},{"value":"/ - q: Quotient","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10219769,"byte_end":10219786,"line_start":4208,"line_end":4208,"column_start":5,"column_end":22}},{"value":"/ - r: Remainder","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10219791,"byte_end":10219809,"line_start":4209,"line_end":4209,"column_start":5,"column_end":23}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10219814,"byte_end":10219838,"line_start":4210,"line_end":4210,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5390},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10220771,"byte_end":10220783,"line_start":4238,"line_end":4238,"column_start":8,"column_end":20},"name":"x86_sdivmodx","qualname":"::ir::builder::InstBuilder::x86_sdivmodx","value":"fn (self, nlo: ir::Value, nhi: ir::Value, d: ir::Value) -> (Value, Value)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Extended signed division.","sig":null,"attributes":[{"value":"/ Extended signed division.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10220183,"byte_end":10220212,"line_start":4218,"line_end":4218,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10220217,"byte_end":10220220,"line_start":4219,"line_end":4219,"column_start":5,"column_end":8}},{"value":"/ Concatenate the bits in `nhi` and `nlo` to form the numerator.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10220225,"byte_end":10220291,"line_start":4220,"line_end":4220,"column_start":5,"column_end":71}},{"value":"/ Interpret the bits as a signed number and divide by the signed","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10220296,"byte_end":10220362,"line_start":4221,"line_end":4221,"column_start":5,"column_end":71}},{"value":"/ denominator `d`. Trap when `d` is zero or if the quotient is outside","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10220367,"byte_end":10220439,"line_start":4222,"line_end":4222,"column_start":5,"column_end":77}},{"value":"/ the range of the output.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10220444,"byte_end":10220472,"line_start":4223,"line_end":4223,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10220477,"byte_end":10220480,"line_start":4224,"line_end":4224,"column_start":5,"column_end":8}},{"value":"/ Return both quotient and remainder.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10220485,"byte_end":10220524,"line_start":4225,"line_end":4225,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10220529,"byte_end":10220532,"line_start":4226,"line_end":4226,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10220537,"byte_end":10220548,"line_start":4227,"line_end":4227,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10220553,"byte_end":10220556,"line_start":4228,"line_end":4228,"column_start":5,"column_end":8}},{"value":"/ - nlo: Low part of numerator","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10220561,"byte_end":10220593,"line_start":4229,"line_end":4229,"column_start":5,"column_end":37}},{"value":"/ - nhi: High part of numerator","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10220598,"byte_end":10220631,"line_start":4230,"line_end":4230,"column_start":5,"column_end":38}},{"value":"/ - d: Denominator","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10220636,"byte_end":10220656,"line_start":4231,"line_end":4231,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10220661,"byte_end":10220664,"line_start":4232,"line_end":4232,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10220669,"byte_end":10220681,"line_start":4233,"line_end":4233,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10220686,"byte_end":10220689,"line_start":4234,"line_end":4234,"column_start":5,"column_end":8}},{"value":"/ - q: Quotient","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10220694,"byte_end":10220711,"line_start":4235,"line_end":4235,"column_start":5,"column_end":22}},{"value":"/ - r: Remainder","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10220716,"byte_end":10220734,"line_start":4236,"line_end":4236,"column_start":5,"column_end":23}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10220739,"byte_end":10220763,"line_start":4237,"line_end":4237,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5391},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10221568,"byte_end":10221577,"line_start":4260,"line_end":4260,"column_start":8,"column_end":17},"name":"x86_umulx","qualname":"::ir::builder::InstBuilder::x86_umulx","value":"fn (self, argL: ir::Value, argR: ir::Value) -> (Value, Value)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Unsigned integer multiplication, producing a double-length result.","sig":null,"attributes":[{"value":"/ Unsigned integer multiplication, producing a double-length result.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10221108,"byte_end":10221178,"line_start":4245,"line_end":4245,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10221183,"byte_end":10221186,"line_start":4246,"line_end":4246,"column_start":5,"column_end":8}},{"value":"/ Polymorphic over all scalar integer types, but does not support vector","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10221191,"byte_end":10221265,"line_start":4247,"line_end":4247,"column_start":5,"column_end":79}},{"value":"/ types.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10221270,"byte_end":10221280,"line_start":4248,"line_end":4248,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10221285,"byte_end":10221288,"line_start":4249,"line_end":4249,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10221293,"byte_end":10221304,"line_start":4250,"line_end":4250,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10221309,"byte_end":10221312,"line_start":4251,"line_end":4251,"column_start":5,"column_end":8}},{"value":"/ - argL: A scalar integer machine word","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10221317,"byte_end":10221358,"line_start":4252,"line_end":4252,"column_start":5,"column_end":46}},{"value":"/ - argR: A scalar integer machine word","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10221363,"byte_end":10221404,"line_start":4253,"line_end":4253,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10221409,"byte_end":10221412,"line_start":4254,"line_end":4254,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10221417,"byte_end":10221429,"line_start":4255,"line_end":4255,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10221434,"byte_end":10221437,"line_start":4256,"line_end":4256,"column_start":5,"column_end":8}},{"value":"/ - resLo: A scalar integer machine word","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10221442,"byte_end":10221484,"line_start":4257,"line_end":4257,"column_start":5,"column_end":47}},{"value":"/ - resHi: A scalar integer machine word","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10221489,"byte_end":10221531,"line_start":4258,"line_end":4258,"column_start":5,"column_end":47}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10221536,"byte_end":10221560,"line_start":4259,"line_end":4259,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5392},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10222344,"byte_end":10222353,"line_start":4282,"line_end":4282,"column_start":8,"column_end":17},"name":"x86_smulx","qualname":"::ir::builder::InstBuilder::x86_smulx","value":"fn (self, argL: ir::Value, argR: ir::Value) -> (Value, Value)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Signed integer multiplication, producing a double-length result.","sig":null,"attributes":[{"value":"/ Signed integer multiplication, producing a double-length result.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10221886,"byte_end":10221954,"line_start":4267,"line_end":4267,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10221959,"byte_end":10221962,"line_start":4268,"line_end":4268,"column_start":5,"column_end":8}},{"value":"/ Polymorphic over all scalar integer types, but does not support vector","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10221967,"byte_end":10222041,"line_start":4269,"line_end":4269,"column_start":5,"column_end":79}},{"value":"/ types.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10222046,"byte_end":10222056,"line_start":4270,"line_end":4270,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10222061,"byte_end":10222064,"line_start":4271,"line_end":4271,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10222069,"byte_end":10222080,"line_start":4272,"line_end":4272,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10222085,"byte_end":10222088,"line_start":4273,"line_end":4273,"column_start":5,"column_end":8}},{"value":"/ - argL: A scalar integer machine word","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10222093,"byte_end":10222134,"line_start":4274,"line_end":4274,"column_start":5,"column_end":46}},{"value":"/ - argR: A scalar integer machine word","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10222139,"byte_end":10222180,"line_start":4275,"line_end":4275,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10222185,"byte_end":10222188,"line_start":4276,"line_end":4276,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10222193,"byte_end":10222205,"line_start":4277,"line_end":4277,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10222210,"byte_end":10222213,"line_start":4278,"line_end":4278,"column_start":5,"column_end":8}},{"value":"/ - resLo: A scalar integer machine word","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10222218,"byte_end":10222260,"line_start":4279,"line_end":4279,"column_start":5,"column_end":47}},{"value":"/ - resHi: A scalar integer machine word","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10222265,"byte_end":10222307,"line_start":4280,"line_end":4280,"column_start":5,"column_end":47}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10222312,"byte_end":10222336,"line_start":4281,"line_end":4281,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5393},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10223322,"byte_end":10223333,"line_start":4306,"line_end":4306,"column_start":8,"column_end":19},"name":"x86_cvtt2si","qualname":"::ir::builder::InstBuilder::x86_cvtt2si","value":"fn (self, IntTo: crate::ir::Type, x: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Convert with truncation floating point to signed integer.","sig":null,"attributes":[{"value":"/ Convert with truncation floating point to signed integer.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10222662,"byte_end":10222723,"line_start":4289,"line_end":4289,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10222728,"byte_end":10222731,"line_start":4290,"line_end":4290,"column_start":5,"column_end":8}},{"value":"/ The source floating point operand is converted to a signed integer by","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10222736,"byte_end":10222809,"line_start":4291,"line_end":4291,"column_start":5,"column_end":78}},{"value":"/ rounding towards zero. If the result can't be represented in the output","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10222814,"byte_end":10222889,"line_start":4292,"line_end":4292,"column_start":5,"column_end":80}},{"value":"/ type, returns the smallest signed value the output type can represent.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10222894,"byte_end":10222968,"line_start":4293,"line_end":4293,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10222973,"byte_end":10222976,"line_start":4294,"line_end":4294,"column_start":5,"column_end":8}},{"value":"/ This instruction does not trap.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10222981,"byte_end":10223016,"line_start":4295,"line_end":4295,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10223021,"byte_end":10223024,"line_start":4296,"line_end":4296,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10223029,"byte_end":10223040,"line_start":4297,"line_end":4297,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10223045,"byte_end":10223048,"line_start":4298,"line_end":4298,"column_start":5,"column_end":8}},{"value":"/ - IntTo (controlling type variable): An integer type with the same number of lanes","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10223053,"byte_end":10223139,"line_start":4299,"line_end":4299,"column_start":5,"column_end":91}},{"value":"/ - x: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10223144,"byte_end":10223193,"line_start":4300,"line_end":4300,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10223198,"byte_end":10223201,"line_start":4301,"line_end":4301,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10223206,"byte_end":10223218,"line_start":4302,"line_end":4302,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10223223,"byte_end":10223226,"line_start":4303,"line_end":4303,"column_start":5,"column_end":8}},{"value":"/ - a: An integer type with the same number of lanes","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10223231,"byte_end":10223285,"line_start":4304,"line_end":4304,"column_start":5,"column_end":59}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10223290,"byte_end":10223314,"line_start":4305,"line_end":4305,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5394},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10224113,"byte_end":10224121,"line_start":4329,"line_end":4329,"column_start":8,"column_end":16},"name":"x86_fmin","qualname":"::ir::builder::InstBuilder::x86_fmin","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Floating point minimum with x86 semantics.","sig":null,"attributes":[{"value":"/ Floating point minimum with x86 semantics.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10223499,"byte_end":10223545,"line_start":4311,"line_end":4311,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10223550,"byte_end":10223553,"line_start":4312,"line_end":4312,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the C ternary operator `x < y ? x : y` which","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10223558,"byte_end":10223628,"line_start":4313,"line_end":4313,"column_start":5,"column_end":75}},{"value":"/ differs from `fmin` when either operand is NaN or when comparing","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10223633,"byte_end":10223701,"line_start":4314,"line_end":4314,"column_start":5,"column_end":73}},{"value":"/ +0.0 to -0.0.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10223706,"byte_end":10223723,"line_start":4315,"line_end":4315,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10223728,"byte_end":10223731,"line_start":4316,"line_end":4316,"column_start":5,"column_end":8}},{"value":"/ When the two operands don't compare as LT, `y` is returned unchanged,","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10223736,"byte_end":10223809,"line_start":4317,"line_end":4317,"column_start":5,"column_end":78}},{"value":"/ even if it is a signalling NaN.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10223814,"byte_end":10223849,"line_start":4318,"line_end":4318,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10223854,"byte_end":10223857,"line_start":4319,"line_end":4319,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10223862,"byte_end":10223873,"line_start":4320,"line_end":4320,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10223878,"byte_end":10223881,"line_start":4321,"line_end":4321,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10223886,"byte_end":10223935,"line_start":4322,"line_end":4322,"column_start":5,"column_end":54}},{"value":"/ - y: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10223940,"byte_end":10223989,"line_start":4323,"line_end":4323,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10223994,"byte_end":10223997,"line_start":4324,"line_end":4324,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10224002,"byte_end":10224014,"line_start":4325,"line_end":4325,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10224019,"byte_end":10224022,"line_start":4326,"line_end":4326,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10224027,"byte_end":10224076,"line_start":4327,"line_end":4327,"column_start":5,"column_end":54}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10224081,"byte_end":10224105,"line_start":4328,"line_end":4328,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5395},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10224964,"byte_end":10224972,"line_start":4353,"line_end":4353,"column_start":8,"column_end":16},"name":"x86_fmax","qualname":"::ir::builder::InstBuilder::x86_fmax","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Floating point maximum with x86 semantics.","sig":null,"attributes":[{"value":"/ Floating point maximum with x86 semantics.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10224350,"byte_end":10224396,"line_start":4335,"line_end":4335,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10224401,"byte_end":10224404,"line_start":4336,"line_end":4336,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the C ternary operator `x > y ? x : y` which","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10224409,"byte_end":10224479,"line_start":4337,"line_end":4337,"column_start":5,"column_end":75}},{"value":"/ differs from `fmax` when either operand is NaN or when comparing","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10224484,"byte_end":10224552,"line_start":4338,"line_end":4338,"column_start":5,"column_end":73}},{"value":"/ +0.0 to -0.0.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10224557,"byte_end":10224574,"line_start":4339,"line_end":4339,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10224579,"byte_end":10224582,"line_start":4340,"line_end":4340,"column_start":5,"column_end":8}},{"value":"/ When the two operands don't compare as GT, `y` is returned unchanged,","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10224587,"byte_end":10224660,"line_start":4341,"line_end":4341,"column_start":5,"column_end":78}},{"value":"/ even if it is a signalling NaN.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10224665,"byte_end":10224700,"line_start":4342,"line_end":4342,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10224705,"byte_end":10224708,"line_start":4343,"line_end":4343,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10224713,"byte_end":10224724,"line_start":4344,"line_end":4344,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10224729,"byte_end":10224732,"line_start":4345,"line_end":4345,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10224737,"byte_end":10224786,"line_start":4346,"line_end":4346,"column_start":5,"column_end":54}},{"value":"/ - y: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10224791,"byte_end":10224840,"line_start":4347,"line_end":4347,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10224845,"byte_end":10224848,"line_start":4348,"line_end":4348,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10224853,"byte_end":10224865,"line_start":4349,"line_end":4349,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10224870,"byte_end":10224873,"line_start":4350,"line_end":4350,"column_start":5,"column_end":8}},{"value":"/ - a: A scalar or vector floating point number","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10224878,"byte_end":10224927,"line_start":4351,"line_end":4351,"column_start":5,"column_end":54}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10224932,"byte_end":10224956,"line_start":4352,"line_end":4352,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5396},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10225587,"byte_end":10225595,"line_start":4370,"line_end":4370,"column_start":8,"column_end":16},"name":"x86_push","qualname":"::ir::builder::InstBuilder::x86_push","value":"fn (self, x: ir::Value) -> Inst","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Pushes a value onto the stack.","sig":null,"attributes":[{"value":"/ Pushes a value onto the stack.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10225201,"byte_end":10225235,"line_start":4359,"line_end":4359,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10225240,"byte_end":10225243,"line_start":4360,"line_end":4360,"column_start":5,"column_end":8}},{"value":"/ Decrements the stack pointer and stores the specified value on to the top.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10225248,"byte_end":10225326,"line_start":4361,"line_end":4361,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10225331,"byte_end":10225334,"line_start":4362,"line_end":4362,"column_start":5,"column_end":8}},{"value":"/ This is polymorphic in i32 and i64. However, it is only implemented for i64","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10225339,"byte_end":10225418,"line_start":4363,"line_end":4363,"column_start":5,"column_end":84}},{"value":"/ in 64-bit mode, and only for i32 in 32-bit mode.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10225423,"byte_end":10225475,"line_start":4364,"line_end":4364,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10225480,"byte_end":10225483,"line_start":4365,"line_end":4365,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10225488,"byte_end":10225499,"line_start":4366,"line_end":4366,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10225504,"byte_end":10225507,"line_start":4367,"line_end":4367,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar integer machine word","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10225512,"byte_end":10225550,"line_start":4368,"line_end":4368,"column_start":5,"column_end":43}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10225555,"byte_end":10225579,"line_start":4369,"line_end":4369,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5397},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10226261,"byte_end":10226268,"line_start":4391,"line_end":4391,"column_start":8,"column_end":15},"name":"x86_pop","qualname":"::ir::builder::InstBuilder::x86_pop","value":"fn (self, iWord: crate::ir::Type) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Pops a value from the stack.","sig":null,"attributes":[{"value":"/ Pops a value from the stack.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10225757,"byte_end":10225789,"line_start":4375,"line_end":4375,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10225794,"byte_end":10225797,"line_start":4376,"line_end":4376,"column_start":5,"column_end":8}},{"value":"/ Loads a value from the top of the stack and then increments the stack","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10225802,"byte_end":10225875,"line_start":4377,"line_end":4377,"column_start":5,"column_end":78}},{"value":"/ pointer.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10225880,"byte_end":10225892,"line_start":4378,"line_end":4378,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10225897,"byte_end":10225900,"line_start":4379,"line_end":4379,"column_start":5,"column_end":8}},{"value":"/ This is polymorphic in i32 and i64. However, it is only implemented for i64","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10225905,"byte_end":10225984,"line_start":4380,"line_end":4380,"column_start":5,"column_end":84}},{"value":"/ in 64-bit mode, and only for i32 in 32-bit mode.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10225989,"byte_end":10226041,"line_start":4381,"line_end":4381,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10226046,"byte_end":10226049,"line_start":4382,"line_end":4382,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10226054,"byte_end":10226065,"line_start":4383,"line_end":4383,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10226070,"byte_end":10226073,"line_start":4384,"line_end":4384,"column_start":5,"column_end":8}},{"value":"/ - iWord (controlling type variable): A scalar integer machine word","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10226078,"byte_end":10226148,"line_start":4385,"line_end":4385,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10226153,"byte_end":10226156,"line_start":4386,"line_end":4386,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10226161,"byte_end":10226173,"line_start":4387,"line_end":4387,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10226178,"byte_end":10226181,"line_start":4388,"line_end":4388,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar integer machine word","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10226186,"byte_end":10226224,"line_start":4389,"line_end":4389,"column_start":5,"column_end":43}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10226229,"byte_end":10226253,"line_start":4390,"line_end":4390,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5398},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10227164,"byte_end":10227171,"line_start":4414,"line_end":4414,"column_start":8,"column_end":15},"name":"x86_bsr","qualname":"::ir::builder::InstBuilder::x86_bsr","value":"fn (self, x: ir::Value) -> (Value, Value)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Bit Scan Reverse -- returns the bit-index of the most significant 1\n in the word. Result is undefined if the argument is zero. However, it\n sets the Z flag depending on the argument, so it is at least easy to\n detect and handle that case.","sig":null,"attributes":[{"value":"/ Bit Scan Reverse -- returns the bit-index of the most significant 1","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10226415,"byte_end":10226486,"line_start":4396,"line_end":4396,"column_start":5,"column_end":76}},{"value":"/ in the word. Result is undefined if the argument is zero. However, it","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10226491,"byte_end":10226564,"line_start":4397,"line_end":4397,"column_start":5,"column_end":78}},{"value":"/ sets the Z flag depending on the argument, so it is at least easy to","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10226569,"byte_end":10226641,"line_start":4398,"line_end":4398,"column_start":5,"column_end":77}},{"value":"/ detect and handle that case.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10226646,"byte_end":10226678,"line_start":4399,"line_end":4399,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10226683,"byte_end":10226686,"line_start":4400,"line_end":4400,"column_start":5,"column_end":8}},{"value":"/ This is polymorphic in i32 and i64. It is implemented for both i64 and","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10226691,"byte_end":10226765,"line_start":4401,"line_end":4401,"column_start":5,"column_end":79}},{"value":"/ i32 in 64-bit mode, and only for i32 in 32-bit mode.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10226770,"byte_end":10226826,"line_start":4402,"line_end":4402,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10226831,"byte_end":10226834,"line_start":4403,"line_end":4403,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10226839,"byte_end":10226850,"line_start":4404,"line_end":4404,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10226855,"byte_end":10226858,"line_start":4405,"line_end":4405,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar integer machine word","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10226863,"byte_end":10226901,"line_start":4406,"line_end":4406,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10226906,"byte_end":10226909,"line_start":4407,"line_end":4407,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10226914,"byte_end":10226926,"line_start":4408,"line_end":4408,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10226931,"byte_end":10226934,"line_start":4409,"line_end":4409,"column_start":5,"column_end":8}},{"value":"/ - y: A scalar integer machine word","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10226939,"byte_end":10226977,"line_start":4410,"line_end":4410,"column_start":5,"column_end":43}},{"value":"/ - rflags: CPU flags representing the result of an integer comparison. These flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10226982,"byte_end":10227067,"line_start":4411,"line_end":4411,"column_start":5,"column_end":90}},{"value":"/ can be tested with an :type:`intcc` condition code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10227072,"byte_end":10227127,"line_start":4412,"line_end":4412,"column_start":5,"column_end":60}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10227132,"byte_end":10227156,"line_start":4413,"line_end":4413,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5399},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10227922,"byte_end":10227929,"line_start":4434,"line_end":4434,"column_start":8,"column_end":15},"name":"x86_bsf","qualname":"::ir::builder::InstBuilder::x86_bsf","value":"fn (self, x: ir::Value) -> (Value, Value)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Bit Scan Forwards -- returns the bit-index of the least significant 1\n in the word. Is otherwise identical to 'bsr', just above.","sig":null,"attributes":[{"value":"/ Bit Scan Forwards -- returns the bit-index of the least significant 1","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10227445,"byte_end":10227518,"line_start":4421,"line_end":4421,"column_start":5,"column_end":78}},{"value":"/ in the word. Is otherwise identical to 'bsr', just above.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10227523,"byte_end":10227584,"line_start":4422,"line_end":4422,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10227589,"byte_end":10227592,"line_start":4423,"line_end":4423,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10227597,"byte_end":10227608,"line_start":4424,"line_end":4424,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10227613,"byte_end":10227616,"line_start":4425,"line_end":4425,"column_start":5,"column_end":8}},{"value":"/ - x: A scalar integer machine word","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10227621,"byte_end":10227659,"line_start":4426,"line_end":4426,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10227664,"byte_end":10227667,"line_start":4427,"line_end":4427,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10227672,"byte_end":10227684,"line_start":4428,"line_end":4428,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10227689,"byte_end":10227692,"line_start":4429,"line_end":4429,"column_start":5,"column_end":8}},{"value":"/ - y: A scalar integer machine word","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10227697,"byte_end":10227735,"line_start":4430,"line_end":4430,"column_start":5,"column_end":43}},{"value":"/ - rflags: CPU flags representing the result of an integer comparison. These flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10227740,"byte_end":10227825,"line_start":4431,"line_end":4431,"column_start":5,"column_end":90}},{"value":"/ can be tested with an :type:`intcc` condition code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10227830,"byte_end":10227885,"line_start":4432,"line_end":4432,"column_start":5,"column_end":60}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10227890,"byte_end":10227914,"line_start":4433,"line_end":4433,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5400},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10228731,"byte_end":10228741,"line_start":4453,"line_end":4453,"column_start":8,"column_end":18},"name":"x86_pshufd","qualname":"::ir::builder::InstBuilder::x86_pshufd","value":"fn <T1> (self, a: ir::Value, i: T1) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Packed Shuffle Doublewords -- copies data from either memory or lanes in an extended\n register and re-orders the data according to the passed immediate byte.","sig":null,"attributes":[{"value":"/ Packed Shuffle Doublewords -- copies data from either memory or lanes in an extended","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10228203,"byte_end":10228291,"line_start":4441,"line_end":4441,"column_start":5,"column_end":93}},{"value":"/ register and re-orders the data according to the passed immediate byte.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10228296,"byte_end":10228371,"line_start":4442,"line_end":4442,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10228376,"byte_end":10228379,"line_start":4443,"line_end":4443,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10228384,"byte_end":10228395,"line_start":4444,"line_end":4444,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10228400,"byte_end":10228403,"line_start":4445,"line_end":4445,"column_start":5,"column_end":8}},{"value":"/ - a: A vector value (i.e. held in an XMM register)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10228408,"byte_end":10228462,"line_start":4446,"line_end":4446,"column_start":5,"column_end":59}},{"value":"/ - i: An ordering operand controlling the copying of data from the source to the destination; see PSHUFD in Intel manual for details","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10228467,"byte_end":10228602,"line_start":4447,"line_end":4447,"column_start":5,"column_end":140}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10228607,"byte_end":10228610,"line_start":4448,"line_end":4448,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10228615,"byte_end":10228627,"line_start":4449,"line_end":4449,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10228632,"byte_end":10228635,"line_start":4450,"line_end":4450,"column_start":5,"column_end":8}},{"value":"/ - a: A vector value (i.e. held in an XMM register)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10228640,"byte_end":10228694,"line_start":4451,"line_end":4451,"column_start":5,"column_end":59}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10228699,"byte_end":10228723,"line_start":4452,"line_end":4452,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5402},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10229451,"byte_end":10229461,"line_start":4472,"line_end":4472,"column_start":8,"column_end":18},"name":"x86_pshufb","qualname":"::ir::builder::InstBuilder::x86_pshufb","value":"fn (self, a: ir::Value, b: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Packed Shuffle Bytes -- re-orders data in an extended register using a shuffle\n mask from either memory or another extended register","sig":null,"attributes":[{"value":"/ Packed Shuffle Bytes -- re-orders data in an extended register using a shuffle","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10229029,"byte_end":10229111,"line_start":4460,"line_end":4460,"column_start":5,"column_end":87}},{"value":"/ mask from either memory or another extended register","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10229116,"byte_end":10229172,"line_start":4461,"line_end":4461,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10229177,"byte_end":10229180,"line_start":4462,"line_end":4462,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10229185,"byte_end":10229196,"line_start":4463,"line_end":4463,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10229201,"byte_end":10229204,"line_start":4464,"line_end":4464,"column_start":5,"column_end":8}},{"value":"/ - a: A vector value (i.e. held in an XMM register)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10229209,"byte_end":10229263,"line_start":4465,"line_end":4465,"column_start":5,"column_end":59}},{"value":"/ - b: A vector value (i.e. held in an XMM register)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10229268,"byte_end":10229322,"line_start":4466,"line_end":4466,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10229327,"byte_end":10229330,"line_start":4467,"line_end":4467,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10229335,"byte_end":10229347,"line_start":4468,"line_end":4468,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10229352,"byte_end":10229355,"line_start":4469,"line_end":4469,"column_start":5,"column_end":8}},{"value":"/ - a: A vector value (i.e. held in an XMM register)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10229360,"byte_end":10229414,"line_start":4470,"line_end":4470,"column_start":5,"column_end":59}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10229419,"byte_end":10229443,"line_start":4471,"line_end":4471,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5403},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10230042,"byte_end":10230051,"line_start":4491,"line_end":4491,"column_start":8,"column_end":17},"name":"x86_pextr","qualname":"::ir::builder::InstBuilder::x86_pextr","value":"fn <T1> (self, x: ir::Value, Idx: T1) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Extract lane ``Idx`` from ``x``.\n The lane index, ``Idx``, is an immediate value, not an SSA value. It\n must indicate a valid lane index for the type of ``x``.","sig":null,"attributes":[{"value":"/ Extract lane ``Idx`` from ``x``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10229692,"byte_end":10229728,"line_start":4478,"line_end":4478,"column_start":5,"column_end":41}},{"value":"/ The lane index, ``Idx``, is an immediate value, not an SSA value. It","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10229733,"byte_end":10229805,"line_start":4479,"line_end":4479,"column_start":5,"column_end":77}},{"value":"/ must indicate a valid lane index for the type of ``x``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10229810,"byte_end":10229869,"line_start":4480,"line_end":4480,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10229874,"byte_end":10229877,"line_start":4481,"line_end":4481,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10229882,"byte_end":10229893,"line_start":4482,"line_end":4482,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10229898,"byte_end":10229901,"line_start":4483,"line_end":4483,"column_start":5,"column_end":8}},{"value":"/ - x: A SIMD vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10229906,"byte_end":10229933,"line_start":4484,"line_end":4484,"column_start":5,"column_end":32}},{"value":"/ - Idx: Lane index","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10229938,"byte_end":10229959,"line_start":4485,"line_end":4485,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10229964,"byte_end":10229967,"line_start":4486,"line_end":4486,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10229972,"byte_end":10229984,"line_start":4487,"line_end":4487,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10229989,"byte_end":10229992,"line_start":4488,"line_end":4488,"column_start":5,"column_end":8}},{"value":"/ - a:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10229997,"byte_end":10230005,"line_start":4489,"line_end":4489,"column_start":5,"column_end":13}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10230010,"byte_end":10230034,"line_start":4490,"line_end":4490,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5405},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10230827,"byte_end":10230836,"line_start":4512,"line_end":4512,"column_start":8,"column_end":17},"name":"x86_pinsr","qualname":"::ir::builder::InstBuilder::x86_pinsr","value":"fn <T1> (self, x: ir::Value, Idx: T1, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Insert ``y`` into ``x`` at lane ``Idx``.\n The lane index, ``Idx``, is an immediate value, not an SSA value. It\n must indicate a valid lane index for the type of ``x``.","sig":null,"attributes":[{"value":"/ Insert ``y`` into ``x`` at lane ``Idx``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10230346,"byte_end":10230390,"line_start":4498,"line_end":4498,"column_start":5,"column_end":49}},{"value":"/ The lane index, ``Idx``, is an immediate value, not an SSA value. It","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10230395,"byte_end":10230467,"line_start":4499,"line_end":4499,"column_start":5,"column_end":77}},{"value":"/ must indicate a valid lane index for the type of ``x``.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10230472,"byte_end":10230531,"line_start":4500,"line_end":4500,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10230536,"byte_end":10230539,"line_start":4501,"line_end":4501,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10230544,"byte_end":10230555,"line_start":4502,"line_end":4502,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10230560,"byte_end":10230563,"line_start":4503,"line_end":4503,"column_start":5,"column_end":8}},{"value":"/ - x: A SIMD vector type containing only booleans and integers","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10230568,"byte_end":10230633,"line_start":4504,"line_end":4504,"column_start":5,"column_end":70}},{"value":"/ - Idx: Lane index","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10230638,"byte_end":10230659,"line_start":4505,"line_end":4505,"column_start":5,"column_end":26}},{"value":"/ - y: New lane value","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10230664,"byte_end":10230687,"line_start":4506,"line_end":4506,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10230692,"byte_end":10230695,"line_start":4507,"line_end":4507,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10230700,"byte_end":10230712,"line_start":4508,"line_end":4508,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10230717,"byte_end":10230720,"line_start":4509,"line_end":4509,"column_start":5,"column_end":8}},{"value":"/ - a: A SIMD vector type containing only booleans and integers","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10230725,"byte_end":10230790,"line_start":4510,"line_end":4510,"column_start":5,"column_end":70}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10230795,"byte_end":10230819,"line_start":4511,"line_end":4511,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5407},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10231650,"byte_end":10231662,"line_start":4533,"line_end":4533,"column_start":8,"column_end":20},"name":"x86_insertps","qualname":"::ir::builder::InstBuilder::x86_insertps","value":"fn <T1> (self, x: ir::Value, Idx: T1, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Insert a lane of ``y`` into ``x`` at using ``Idx`` to encode both which lane the value is\n extracted from and which it is inserted to. This is similar to x86_pinsr but inserts\n floats, which are already stored in an XMM register.","sig":null,"attributes":[{"value":"/ Insert a lane of ``y`` into ``x`` at using ``Idx`` to encode both which lane the value is","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10231147,"byte_end":10231240,"line_start":4519,"line_end":4519,"column_start":5,"column_end":98}},{"value":"/ extracted from and which it is inserted to. This is similar to x86_pinsr but inserts","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10231245,"byte_end":10231333,"line_start":4520,"line_end":4520,"column_start":5,"column_end":93}},{"value":"/ floats, which are already stored in an XMM register.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10231338,"byte_end":10231394,"line_start":4521,"line_end":4521,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10231399,"byte_end":10231402,"line_start":4522,"line_end":4522,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10231407,"byte_end":10231418,"line_start":4523,"line_end":4523,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10231423,"byte_end":10231426,"line_start":4524,"line_end":4524,"column_start":5,"column_end":8}},{"value":"/ - x: A SIMD vector type containing floats","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10231431,"byte_end":10231476,"line_start":4525,"line_end":4525,"column_start":5,"column_end":50}},{"value":"/ - Idx: Lane index","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10231481,"byte_end":10231502,"line_start":4526,"line_end":4526,"column_start":5,"column_end":26}},{"value":"/ - y: New lane value","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10231507,"byte_end":10231530,"line_start":4527,"line_end":4527,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10231535,"byte_end":10231538,"line_start":4528,"line_end":4528,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10231543,"byte_end":10231555,"line_start":4529,"line_end":4529,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10231560,"byte_end":10231563,"line_start":4530,"line_end":4530,"column_start":5,"column_end":8}},{"value":"/ - a: A SIMD vector type containing floats","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10231568,"byte_end":10231613,"line_start":4531,"line_end":4531,"column_start":5,"column_end":50}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10231618,"byte_end":10231642,"line_start":4532,"line_end":4532,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5409},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10232319,"byte_end":10232328,"line_start":4551,"line_end":4551,"column_start":8,"column_end":17},"name":"x86_movsd","qualname":"::ir::builder::InstBuilder::x86_movsd","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Move the low 64 bits of the float vector ``y`` to the low 64 bits of float vector ``x``","sig":null,"attributes":[{"value":"/ Move the low 64 bits of the float vector ``y`` to the low 64 bits of float vector ``x``","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10231976,"byte_end":10232067,"line_start":4540,"line_end":4540,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10232072,"byte_end":10232075,"line_start":4541,"line_end":4541,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10232080,"byte_end":10232091,"line_start":4542,"line_end":4542,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10232096,"byte_end":10232099,"line_start":4543,"line_end":4543,"column_start":5,"column_end":8}},{"value":"/ - x: A SIMD vector type containing floats","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10232104,"byte_end":10232149,"line_start":4544,"line_end":4544,"column_start":5,"column_end":50}},{"value":"/ - y: A SIMD vector type containing floats","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10232154,"byte_end":10232199,"line_start":4545,"line_end":4545,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10232204,"byte_end":10232207,"line_start":4546,"line_end":4546,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10232212,"byte_end":10232224,"line_start":4547,"line_end":4547,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10232229,"byte_end":10232232,"line_start":4548,"line_end":4548,"column_start":5,"column_end":8}},{"value":"/ - a: A SIMD vector type containing floats","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10232237,"byte_end":10232282,"line_start":4549,"line_end":4549,"column_start":5,"column_end":50}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10232287,"byte_end":10232311,"line_start":4550,"line_end":4550,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5410},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10232902,"byte_end":10232913,"line_start":4568,"line_end":4568,"column_start":8,"column_end":19},"name":"x86_movlhps","qualname":"::ir::builder::InstBuilder::x86_movlhps","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Move the low 64 bits of the float vector ``y`` to the high 64 bits of float vector ``x``","sig":null,"attributes":[{"value":"/ Move the low 64 bits of the float vector ``y`` to the high 64 bits of float vector ``x``","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10232558,"byte_end":10232650,"line_start":4557,"line_end":4557,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10232655,"byte_end":10232658,"line_start":4558,"line_end":4558,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10232663,"byte_end":10232674,"line_start":4559,"line_end":4559,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10232679,"byte_end":10232682,"line_start":4560,"line_end":4560,"column_start":5,"column_end":8}},{"value":"/ - x: A SIMD vector type containing floats","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10232687,"byte_end":10232732,"line_start":4561,"line_end":4561,"column_start":5,"column_end":50}},{"value":"/ - y: A SIMD vector type containing floats","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10232737,"byte_end":10232782,"line_start":4562,"line_end":4562,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10232787,"byte_end":10232790,"line_start":4563,"line_end":4563,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10232795,"byte_end":10232807,"line_start":4564,"line_end":4564,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10232812,"byte_end":10232815,"line_start":4565,"line_end":4565,"column_start":5,"column_end":8}},{"value":"/ - a: A SIMD vector type containing floats","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10232820,"byte_end":10232865,"line_start":4566,"line_end":4566,"column_start":5,"column_end":50}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10232870,"byte_end":10232894,"line_start":4567,"line_end":4567,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5411},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10233593,"byte_end":10233601,"line_start":4587,"line_end":4587,"column_start":8,"column_end":16},"name":"x86_psll","qualname":"::ir::builder::InstBuilder::x86_psll","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Shift Packed Data Left Logical -- This implements the behavior of the shared instruction\n ``ishl`` but alters the shift operand to live in an XMM register as expected by the PSLL*\n family of instructions.","sig":null,"attributes":[{"value":"/ Shift Packed Data Left Logical -- This implements the behavior of the shared instruction","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10233145,"byte_end":10233237,"line_start":4574,"line_end":4574,"column_start":5,"column_end":97}},{"value":"/ ``ishl`` but alters the shift operand to live in an XMM register as expected by the PSLL*","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10233242,"byte_end":10233335,"line_start":4575,"line_end":4575,"column_start":5,"column_end":98}},{"value":"/ family of instructions.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10233340,"byte_end":10233367,"line_start":4576,"line_end":4576,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10233372,"byte_end":10233375,"line_start":4577,"line_end":4577,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10233380,"byte_end":10233391,"line_start":4578,"line_end":4578,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10233396,"byte_end":10233399,"line_start":4579,"line_end":4579,"column_start":5,"column_end":8}},{"value":"/ - x: Vector value to shift","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10233404,"byte_end":10233434,"line_start":4580,"line_end":4580,"column_start":5,"column_end":35}},{"value":"/ - y: Number of bits to shift","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10233439,"byte_end":10233471,"line_start":4581,"line_end":4581,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10233476,"byte_end":10233479,"line_start":4582,"line_end":4582,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10233484,"byte_end":10233496,"line_start":4583,"line_end":4583,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10233501,"byte_end":10233504,"line_start":4584,"line_end":4584,"column_start":5,"column_end":8}},{"value":"/ - a: A SIMD vector type containing integers","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10233509,"byte_end":10233556,"line_start":4585,"line_end":4585,"column_start":5,"column_end":52}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10233561,"byte_end":10233585,"line_start":4586,"line_end":4586,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5412},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10234279,"byte_end":10234287,"line_start":4606,"line_end":4606,"column_start":8,"column_end":16},"name":"x86_psrl","qualname":"::ir::builder::InstBuilder::x86_psrl","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Shift Packed Data Right Logical -- This implements the behavior of the shared instruction\n ``ushr`` but alters the shift operand to live in an XMM register as expected by the PSRL*\n family of instructions.","sig":null,"attributes":[{"value":"/ Shift Packed Data Right Logical -- This implements the behavior of the shared instruction","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10233830,"byte_end":10233923,"line_start":4593,"line_end":4593,"column_start":5,"column_end":98}},{"value":"/ ``ushr`` but alters the shift operand to live in an XMM register as expected by the PSRL*","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10233928,"byte_end":10234021,"line_start":4594,"line_end":4594,"column_start":5,"column_end":98}},{"value":"/ family of instructions.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10234026,"byte_end":10234053,"line_start":4595,"line_end":4595,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10234058,"byte_end":10234061,"line_start":4596,"line_end":4596,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10234066,"byte_end":10234077,"line_start":4597,"line_end":4597,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10234082,"byte_end":10234085,"line_start":4598,"line_end":4598,"column_start":5,"column_end":8}},{"value":"/ - x: Vector value to shift","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10234090,"byte_end":10234120,"line_start":4599,"line_end":4599,"column_start":5,"column_end":35}},{"value":"/ - y: Number of bits to shift","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10234125,"byte_end":10234157,"line_start":4600,"line_end":4600,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10234162,"byte_end":10234165,"line_start":4601,"line_end":4601,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10234170,"byte_end":10234182,"line_start":4602,"line_end":4602,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10234187,"byte_end":10234190,"line_start":4603,"line_end":4603,"column_start":5,"column_end":8}},{"value":"/ - a: A SIMD vector type containing integers","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10234195,"byte_end":10234242,"line_start":4604,"line_end":4604,"column_start":5,"column_end":52}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10234247,"byte_end":10234271,"line_start":4605,"line_end":4605,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5413},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10234968,"byte_end":10234976,"line_start":4625,"line_end":4625,"column_start":8,"column_end":16},"name":"x86_psra","qualname":"::ir::builder::InstBuilder::x86_psra","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Shift Packed Data Right Arithmetic -- This implements the behavior of the shared\n instruction ``sshr`` but alters the shift operand to live in an XMM register as expected by\n the PSRA* family of instructions.","sig":null,"attributes":[{"value":"/ Shift Packed Data Right Arithmetic -- This implements the behavior of the shared","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10234516,"byte_end":10234600,"line_start":4612,"line_end":4612,"column_start":5,"column_end":89}},{"value":"/ instruction ``sshr`` but alters the shift operand to live in an XMM register as expected by","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10234605,"byte_end":10234700,"line_start":4613,"line_end":4613,"column_start":5,"column_end":100}},{"value":"/ the PSRA* family of instructions.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10234705,"byte_end":10234742,"line_start":4614,"line_end":4614,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10234747,"byte_end":10234750,"line_start":4615,"line_end":4615,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10234755,"byte_end":10234766,"line_start":4616,"line_end":4616,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10234771,"byte_end":10234774,"line_start":4617,"line_end":4617,"column_start":5,"column_end":8}},{"value":"/ - x: Vector value to shift","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10234779,"byte_end":10234809,"line_start":4618,"line_end":4618,"column_start":5,"column_end":35}},{"value":"/ - y: Number of bits to shift","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10234814,"byte_end":10234846,"line_start":4619,"line_end":4619,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10234851,"byte_end":10234854,"line_start":4620,"line_end":4620,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10234859,"byte_end":10234871,"line_start":4621,"line_end":4621,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10234876,"byte_end":10234879,"line_start":4622,"line_end":4622,"column_start":5,"column_end":8}},{"value":"/ - a: A SIMD vector type containing integers","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10234884,"byte_end":10234931,"line_start":4623,"line_end":4623,"column_start":5,"column_end":52}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10234936,"byte_end":10234960,"line_start":4624,"line_end":4624,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5414},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10235924,"byte_end":10235933,"line_start":4647,"line_end":4647,"column_start":8,"column_end":17},"name":"x86_ptest","qualname":"::ir::builder::InstBuilder::x86_ptest","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Logical Compare -- PTEST will set the ZF flag if all bits in the result are 0 of the\n bitwise AND of the first source operand (first operand) and the second source operand\n (second operand). PTEST sets the CF flag if all bits in the result are 0 of the bitwise\n AND of the second source operand (second operand) and the logical NOT of the destination\n operand (first operand).","sig":null,"attributes":[{"value":"/ Logical Compare -- PTEST will set the ZF flag if all bits in the result are 0 of the","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10235205,"byte_end":10235293,"line_start":4631,"line_end":4631,"column_start":5,"column_end":93}},{"value":"/ bitwise AND of the first source operand (first operand) and the second source operand","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10235298,"byte_end":10235387,"line_start":4632,"line_end":4632,"column_start":5,"column_end":94}},{"value":"/ (second operand). PTEST sets the CF flag if all bits in the result are 0 of the bitwise","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10235392,"byte_end":10235483,"line_start":4633,"line_end":4633,"column_start":5,"column_end":96}},{"value":"/ AND of the second source operand (second operand) and the logical NOT of the destination","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10235488,"byte_end":10235580,"line_start":4634,"line_end":4634,"column_start":5,"column_end":97}},{"value":"/ operand (first operand).","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10235585,"byte_end":10235613,"line_start":4635,"line_end":4635,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10235618,"byte_end":10235621,"line_start":4636,"line_end":4636,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10235626,"byte_end":10235637,"line_start":4637,"line_end":4637,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10235642,"byte_end":10235645,"line_start":4638,"line_end":4638,"column_start":5,"column_end":8}},{"value":"/ - x: A SIMD vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10235650,"byte_end":10235677,"line_start":4639,"line_end":4639,"column_start":5,"column_end":32}},{"value":"/ - y: A SIMD vector type","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10235682,"byte_end":10235709,"line_start":4640,"line_end":4640,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10235714,"byte_end":10235717,"line_start":4641,"line_end":4641,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10235722,"byte_end":10235734,"line_start":4642,"line_end":4642,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10235739,"byte_end":10235742,"line_start":4643,"line_end":4643,"column_start":5,"column_end":8}},{"value":"/ - f: CPU flags representing the result of an integer comparison. These flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10235747,"byte_end":10235827,"line_start":4644,"line_end":4644,"column_start":5,"column_end":85}},{"value":"/ can be tested with an :type:`intcc` condition code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10235832,"byte_end":10235887,"line_start":4645,"line_end":4645,"column_start":5,"column_end":60}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10235892,"byte_end":10235916,"line_start":4646,"line_end":4646,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5415},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10236556,"byte_end":10236565,"line_start":4665,"line_end":4665,"column_start":8,"column_end":17},"name":"x86_pmaxs","qualname":"::ir::builder::InstBuilder::x86_pmaxs","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Maximum of Packed Signed Integers -- Compare signed integers in the first and second\n operand and return the maximum values.","sig":null,"attributes":[{"value":"/ Maximum of Packed Signed Integers -- Compare signed integers in the first and second","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10236163,"byte_end":10236251,"line_start":4653,"line_end":4653,"column_start":5,"column_end":93}},{"value":"/ operand and return the maximum values.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10236256,"byte_end":10236298,"line_start":4654,"line_end":4654,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10236303,"byte_end":10236306,"line_start":4655,"line_end":4655,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10236311,"byte_end":10236322,"line_start":4656,"line_end":4656,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10236327,"byte_end":10236330,"line_start":4657,"line_end":4657,"column_start":5,"column_end":8}},{"value":"/ - x: A SIMD vector type containing integers","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10236335,"byte_end":10236382,"line_start":4658,"line_end":4658,"column_start":5,"column_end":52}},{"value":"/ - y: A SIMD vector type containing integers","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10236387,"byte_end":10236434,"line_start":4659,"line_end":4659,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10236439,"byte_end":10236442,"line_start":4660,"line_end":4660,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10236447,"byte_end":10236459,"line_start":4661,"line_end":4661,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10236464,"byte_end":10236467,"line_start":4662,"line_end":4662,"column_start":5,"column_end":8}},{"value":"/ - a: A SIMD vector type containing integers","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10236472,"byte_end":10236519,"line_start":4663,"line_end":4663,"column_start":5,"column_end":52}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10236524,"byte_end":10236548,"line_start":4664,"line_end":4664,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5416},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10237192,"byte_end":10237201,"line_start":4683,"line_end":4683,"column_start":8,"column_end":17},"name":"x86_pmaxu","qualname":"::ir::builder::InstBuilder::x86_pmaxu","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Maximum of Packed Unsigned Integers -- Compare unsigned integers in the first and second\n operand and return the maximum values.","sig":null,"attributes":[{"value":"/ Maximum of Packed Unsigned Integers -- Compare unsigned integers in the first and second","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10236795,"byte_end":10236887,"line_start":4671,"line_end":4671,"column_start":5,"column_end":97}},{"value":"/ operand and return the maximum values.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10236892,"byte_end":10236934,"line_start":4672,"line_end":4672,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10236939,"byte_end":10236942,"line_start":4673,"line_end":4673,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10236947,"byte_end":10236958,"line_start":4674,"line_end":4674,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10236963,"byte_end":10236966,"line_start":4675,"line_end":4675,"column_start":5,"column_end":8}},{"value":"/ - x: A SIMD vector type containing integers","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10236971,"byte_end":10237018,"line_start":4676,"line_end":4676,"column_start":5,"column_end":52}},{"value":"/ - y: A SIMD vector type containing integers","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10237023,"byte_end":10237070,"line_start":4677,"line_end":4677,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10237075,"byte_end":10237078,"line_start":4678,"line_end":4678,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10237083,"byte_end":10237095,"line_start":4679,"line_end":4679,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10237100,"byte_end":10237103,"line_start":4680,"line_end":4680,"column_start":5,"column_end":8}},{"value":"/ - a: A SIMD vector type containing integers","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10237108,"byte_end":10237155,"line_start":4681,"line_end":4681,"column_start":5,"column_end":52}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10237160,"byte_end":10237184,"line_start":4682,"line_end":4682,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5417},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10237824,"byte_end":10237833,"line_start":4701,"line_end":4701,"column_start":8,"column_end":17},"name":"x86_pmins","qualname":"::ir::builder::InstBuilder::x86_pmins","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Minimum of Packed Signed Integers -- Compare signed integers in the first and second\n operand and return the minimum values.","sig":null,"attributes":[{"value":"/ Minimum of Packed Signed Integers -- Compare signed integers in the first and second","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10237431,"byte_end":10237519,"line_start":4689,"line_end":4689,"column_start":5,"column_end":93}},{"value":"/ operand and return the minimum values.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10237524,"byte_end":10237566,"line_start":4690,"line_end":4690,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10237571,"byte_end":10237574,"line_start":4691,"line_end":4691,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10237579,"byte_end":10237590,"line_start":4692,"line_end":4692,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10237595,"byte_end":10237598,"line_start":4693,"line_end":4693,"column_start":5,"column_end":8}},{"value":"/ - x: A SIMD vector type containing integers","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10237603,"byte_end":10237650,"line_start":4694,"line_end":4694,"column_start":5,"column_end":52}},{"value":"/ - y: A SIMD vector type containing integers","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10237655,"byte_end":10237702,"line_start":4695,"line_end":4695,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10237707,"byte_end":10237710,"line_start":4696,"line_end":4696,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10237715,"byte_end":10237727,"line_start":4697,"line_end":4697,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10237732,"byte_end":10237735,"line_start":4698,"line_end":4698,"column_start":5,"column_end":8}},{"value":"/ - a: A SIMD vector type containing integers","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10237740,"byte_end":10237787,"line_start":4699,"line_end":4699,"column_start":5,"column_end":52}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10237792,"byte_end":10237816,"line_start":4700,"line_end":4700,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5418},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10238460,"byte_end":10238469,"line_start":4719,"line_end":4719,"column_start":8,"column_end":17},"name":"x86_pminu","qualname":"::ir::builder::InstBuilder::x86_pminu","value":"fn (self, x: ir::Value, y: ir::Value) -> Value","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Minimum of Packed Unsigned Integers -- Compare unsigned integers in the first and second\n operand and return the minimum values.","sig":null,"attributes":[{"value":"/ Minimum of Packed Unsigned Integers -- Compare unsigned integers in the first and second","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10238063,"byte_end":10238155,"line_start":4707,"line_end":4707,"column_start":5,"column_end":97}},{"value":"/ operand and return the minimum values.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10238160,"byte_end":10238202,"line_start":4708,"line_end":4708,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10238207,"byte_end":10238210,"line_start":4709,"line_end":4709,"column_start":5,"column_end":8}},{"value":"/ Inputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10238215,"byte_end":10238226,"line_start":4710,"line_end":4710,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10238231,"byte_end":10238234,"line_start":4711,"line_end":4711,"column_start":5,"column_end":8}},{"value":"/ - x: A SIMD vector type containing integers","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10238239,"byte_end":10238286,"line_start":4712,"line_end":4712,"column_start":5,"column_end":52}},{"value":"/ - y: A SIMD vector type containing integers","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10238291,"byte_end":10238338,"line_start":4713,"line_end":4713,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10238343,"byte_end":10238346,"line_start":4714,"line_end":4714,"column_start":5,"column_end":8}},{"value":"/ Outputs:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10238351,"byte_end":10238363,"line_start":4715,"line_end":4715,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10238368,"byte_end":10238371,"line_start":4716,"line_end":4716,"column_start":5,"column_end":8}},{"value":"/ - a: A SIMD vector type containing integers","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10238376,"byte_end":10238423,"line_start":4717,"line_end":4717,"column_start":5,"column_end":52}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10238428,"byte_end":10238452,"line_start":4718,"line_end":4718,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5419},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10238763,"byte_end":10238769,"line_start":4727,"line_end":4727,"column_start":8,"column_end":14},"name":"Binary","qualname":"::ir::builder::InstBuilder::Binary","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, arg0: Value, arg1: Value) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Binary(imms=(), vals=2)\n","sig":null,"attributes":[{"value":"/ Binary(imms=(), vals=2)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10238699,"byte_end":10238726,"line_start":4725,"line_end":4725,"column_start":5,"column_end":32}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10238731,"byte_end":10238755,"line_start":4726,"line_end":4726,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5420},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10239132,"byte_end":10239141,"line_start":4737,"line_end":4737,"column_start":8,"column_end":17},"name":"BinaryImm","qualname":"::ir::builder::InstBuilder::BinaryImm","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, imm: ir::immediates::Imm64, arg0: Value) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" BinaryImm(imms=(imm: ir::immediates::Imm64), vals=1)\n","sig":null,"attributes":[{"value":"/ BinaryImm(imms=(imm: ir::immediates::Imm64), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10239039,"byte_end":10239095,"line_start":4735,"line_end":4735,"column_start":5,"column_end":61}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10239100,"byte_end":10239124,"line_start":4736,"line_end":4736,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5421},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10239523,"byte_end":10239529,"line_start":4748,"line_end":4748,"column_start":8,"column_end":14},"name":"Branch","qualname":"::ir::builder::InstBuilder::Branch","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, destination: ir::Block, args: ir::ValueList) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Branch(imms=(destination: ir::Block), vals=1)\n","sig":null,"attributes":[{"value":"/ Branch(imms=(destination: ir::Block), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10239437,"byte_end":10239486,"line_start":4746,"line_end":4746,"column_start":5,"column_end":54}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10239491,"byte_end":10239515,"line_start":4747,"line_end":4747,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5422},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10239950,"byte_end":10239961,"line_start":4759,"line_end":4759,"column_start":8,"column_end":19},"name":"BranchFloat","qualname":"::ir::builder::InstBuilder::BranchFloat","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, cond: ir::condcodes::FloatCC, destination: ir::Block, args: ir::ValueList) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" BranchFloat(imms=(cond: ir::condcodes::FloatCC, destination: ir::Block), vals=1)\n","sig":null,"attributes":[{"value":"/ BranchFloat(imms=(cond: ir::condcodes::FloatCC, destination: ir::Block), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10239829,"byte_end":10239913,"line_start":4757,"line_end":4757,"column_start":5,"column_end":89}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10239918,"byte_end":10239942,"line_start":4758,"line_end":4758,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5423},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10240432,"byte_end":10240442,"line_start":4771,"line_end":4771,"column_start":8,"column_end":18},"name":"BranchIcmp","qualname":"::ir::builder::InstBuilder::BranchIcmp","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, cond: ir::condcodes::IntCC, destination: ir::Block, args: ir::ValueList) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" BranchIcmp(imms=(cond: ir::condcodes::IntCC, destination: ir::Block), vals=2)\n","sig":null,"attributes":[{"value":"/ BranchIcmp(imms=(cond: ir::condcodes::IntCC, destination: ir::Block), vals=2)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10240314,"byte_end":10240395,"line_start":4769,"line_end":4769,"column_start":5,"column_end":86}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10240400,"byte_end":10240424,"line_start":4770,"line_end":4770,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5424},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10240909,"byte_end":10240918,"line_start":4783,"line_end":4783,"column_start":8,"column_end":17},"name":"BranchInt","qualname":"::ir::builder::InstBuilder::BranchInt","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, cond: ir::condcodes::IntCC, destination: ir::Block, args: ir::ValueList) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" BranchInt(imms=(cond: ir::condcodes::IntCC, destination: ir::Block), vals=1)\n","sig":null,"attributes":[{"value":"/ BranchInt(imms=(cond: ir::condcodes::IntCC, destination: ir::Block), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10240792,"byte_end":10240872,"line_start":4781,"line_end":4781,"column_start":5,"column_end":85}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10240877,"byte_end":10240901,"line_start":4782,"line_end":4782,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5425},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10241380,"byte_end":10241391,"line_start":4795,"line_end":4795,"column_start":8,"column_end":19},"name":"BranchTable","qualname":"::ir::builder::InstBuilder::BranchTable","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, destination: ir::Block, table: ir::JumpTable, arg0: Value) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" BranchTable(imms=(destination: ir::Block, table: ir::JumpTable), vals=1)\n","sig":null,"attributes":[{"value":"/ BranchTable(imms=(destination: ir::Block, table: ir::JumpTable), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10241267,"byte_end":10241343,"line_start":4793,"line_end":4793,"column_start":5,"column_end":81}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10241348,"byte_end":10241372,"line_start":4794,"line_end":4794,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5426},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10241827,"byte_end":10241842,"line_start":4807,"line_end":4807,"column_start":8,"column_end":23},"name":"BranchTableBase","qualname":"::ir::builder::InstBuilder::BranchTableBase","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, table: ir::JumpTable) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" BranchTableBase(imms=(table: ir::JumpTable), vals=0)\n","sig":null,"attributes":[{"value":"/ BranchTableBase(imms=(table: ir::JumpTable), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10241734,"byte_end":10241790,"line_start":4805,"line_end":4805,"column_start":5,"column_end":61}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10241795,"byte_end":10241819,"line_start":4806,"line_end":4806,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5427},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10242226,"byte_end":10242242,"line_start":4817,"line_end":4817,"column_start":8,"column_end":24},"name":"BranchTableEntry","qualname":"::ir::builder::InstBuilder::BranchTableEntry","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, imm: ir::immediates::Uimm8, table: ir::JumpTable, arg0: Value, arg1: Value) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" BranchTableEntry(imms=(imm: ir::immediates::Uimm8, table: ir::JumpTable), vals=2)\n","sig":null,"attributes":[{"value":"/ BranchTableEntry(imms=(imm: ir::immediates::Uimm8, table: ir::JumpTable), vals=2)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10242104,"byte_end":10242189,"line_start":4815,"line_end":4815,"column_start":5,"column_end":90}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10242194,"byte_end":10242218,"line_start":4816,"line_end":4816,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5428},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10242691,"byte_end":10242695,"line_start":4829,"line_end":4829,"column_start":8,"column_end":12},"name":"Call","qualname":"::ir::builder::InstBuilder::Call","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, func_ref: ir::FuncRef, args: ir::ValueList) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Call(imms=(func_ref: ir::FuncRef), vals=0)\n","sig":null,"attributes":[{"value":"/ Call(imms=(func_ref: ir::FuncRef), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10242608,"byte_end":10242654,"line_start":4827,"line_end":4827,"column_start":5,"column_end":51}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10242659,"byte_end":10242683,"line_start":4828,"line_end":4828,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5429},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10243078,"byte_end":10243090,"line_start":4840,"line_end":4840,"column_start":8,"column_end":20},"name":"CallIndirect","qualname":"::ir::builder::InstBuilder::CallIndirect","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, sig_ref: ir::SigRef, args: ir::ValueList) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" CallIndirect(imms=(sig_ref: ir::SigRef), vals=1)\n","sig":null,"attributes":[{"value":"/ CallIndirect(imms=(sig_ref: ir::SigRef), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10242989,"byte_end":10243041,"line_start":4838,"line_end":4838,"column_start":5,"column_end":57}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10243046,"byte_end":10243070,"line_start":4839,"line_end":4839,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5430},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10243473,"byte_end":10243481,"line_start":4851,"line_end":4851,"column_start":8,"column_end":16},"name":"CondTrap","qualname":"::ir::builder::InstBuilder::CondTrap","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, code: ir::TrapCode, arg0: Value) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" CondTrap(imms=(code: ir::TrapCode), vals=1)\n","sig":null,"attributes":[{"value":"/ CondTrap(imms=(code: ir::TrapCode), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10243389,"byte_end":10243436,"line_start":4849,"line_end":4849,"column_start":5,"column_end":52}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10243441,"byte_end":10243465,"line_start":4850,"line_end":4850,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5431},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10243874,"byte_end":10243885,"line_start":4862,"line_end":4862,"column_start":8,"column_end":19},"name":"CopySpecial","qualname":"::ir::builder::InstBuilder::CopySpecial","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, src: isa::RegUnit, dst: isa::RegUnit) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" CopySpecial(imms=(src: isa::RegUnit, dst: isa::RegUnit), vals=0)\n","sig":null,"attributes":[{"value":"/ CopySpecial(imms=(src: isa::RegUnit, dst: isa::RegUnit), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10243769,"byte_end":10243837,"line_start":4860,"line_end":4860,"column_start":5,"column_end":73}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10243842,"byte_end":10243866,"line_start":4861,"line_end":4861,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5432},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10244258,"byte_end":10244267,"line_start":4873,"line_end":4873,"column_start":8,"column_end":17},"name":"CopyToSsa","qualname":"::ir::builder::InstBuilder::CopyToSsa","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, src: isa::RegUnit) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" CopyToSsa(imms=(src: isa::RegUnit), vals=0)\n","sig":null,"attributes":[{"value":"/ CopyToSsa(imms=(src: isa::RegUnit), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10244174,"byte_end":10244221,"line_start":4871,"line_end":4871,"column_start":5,"column_end":52}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10244226,"byte_end":10244250,"line_start":4872,"line_end":4872,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5433},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10244614,"byte_end":10244625,"line_start":4883,"line_end":4883,"column_start":8,"column_end":19},"name":"ExtractLane","qualname":"::ir::builder::InstBuilder::ExtractLane","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, lane: ir::immediates::Uimm8, arg0: Value) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" ExtractLane(imms=(lane: ir::immediates::Uimm8), vals=1)\n","sig":null,"attributes":[{"value":"/ ExtractLane(imms=(lane: ir::immediates::Uimm8), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10244518,"byte_end":10244577,"line_start":4881,"line_end":4881,"column_start":5,"column_end":64}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10244582,"byte_end":10244606,"line_start":4882,"line_end":4882,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5434},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10245023,"byte_end":10245035,"line_start":4894,"line_end":4894,"column_start":8,"column_end":20},"name":"FloatCompare","qualname":"::ir::builder::InstBuilder::FloatCompare","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, cond: ir::condcodes::FloatCC, arg0: Value, arg1: Value) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" FloatCompare(imms=(cond: ir::condcodes::FloatCC), vals=2)\n","sig":null,"attributes":[{"value":"/ FloatCompare(imms=(cond: ir::condcodes::FloatCC), vals=2)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10244925,"byte_end":10244986,"line_start":4892,"line_end":4892,"column_start":5,"column_end":66}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10244991,"byte_end":10245015,"line_start":4893,"line_end":4893,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5435},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10245454,"byte_end":10245463,"line_start":4905,"line_end":4905,"column_start":8,"column_end":17},"name":"FloatCond","qualname":"::ir::builder::InstBuilder::FloatCond","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, cond: ir::condcodes::FloatCC, arg0: Value) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" FloatCond(imms=(cond: ir::condcodes::FloatCC), vals=1)\n","sig":null,"attributes":[{"value":"/ FloatCond(imms=(cond: ir::condcodes::FloatCC), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10245359,"byte_end":10245417,"line_start":4903,"line_end":4903,"column_start":5,"column_end":63}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10245422,"byte_end":10245446,"line_start":4904,"line_end":4904,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5436},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10245881,"byte_end":10245894,"line_start":4916,"line_end":4916,"column_start":8,"column_end":21},"name":"FloatCondTrap","qualname":"::ir::builder::InstBuilder::FloatCondTrap","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, cond: ir::condcodes::FloatCC, code: ir::TrapCode, arg0: Value) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" FloatCondTrap(imms=(cond: ir::condcodes::FloatCC, code: ir::TrapCode), vals=1)\n","sig":null,"attributes":[{"value":"/ FloatCondTrap(imms=(cond: ir::condcodes::FloatCC, code: ir::TrapCode), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10245762,"byte_end":10245844,"line_start":4914,"line_end":4914,"column_start":5,"column_end":87}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10245849,"byte_end":10245873,"line_start":4915,"line_end":4915,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5437},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10246322,"byte_end":10246330,"line_start":4928,"line_end":4928,"column_start":8,"column_end":16},"name":"FuncAddr","qualname":"::ir::builder::InstBuilder::FuncAddr","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, func_ref: ir::FuncRef) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" FuncAddr(imms=(func_ref: ir::FuncRef), vals=0)\n","sig":null,"attributes":[{"value":"/ FuncAddr(imms=(func_ref: ir::FuncRef), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10246235,"byte_end":10246285,"line_start":4926,"line_end":4926,"column_start":5,"column_end":55}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10246290,"byte_end":10246314,"line_start":4927,"line_end":4927,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5438},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10246698,"byte_end":10246706,"line_start":4938,"line_end":4938,"column_start":8,"column_end":16},"name":"HeapAddr","qualname":"::ir::builder::InstBuilder::HeapAddr","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, heap: ir::Heap, imm: ir::immediates::Uimm32, arg0: Value) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" HeapAddr(imms=(heap: ir::Heap, imm: ir::immediates::Uimm32), vals=1)\n","sig":null,"attributes":[{"value":"/ HeapAddr(imms=(heap: ir::Heap, imm: ir::immediates::Uimm32), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10246589,"byte_end":10246661,"line_start":4936,"line_end":4936,"column_start":5,"column_end":77}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10246666,"byte_end":10246690,"line_start":4937,"line_end":4937,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5439},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10247126,"byte_end":10247138,"line_start":4950,"line_end":4950,"column_start":8,"column_end":20},"name":"IndirectJump","qualname":"::ir::builder::InstBuilder::IndirectJump","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, table: ir::JumpTable, arg0: Value) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" IndirectJump(imms=(table: ir::JumpTable), vals=1)\n","sig":null,"attributes":[{"value":"/ IndirectJump(imms=(table: ir::JumpTable), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10247036,"byte_end":10247089,"line_start":4948,"line_end":4948,"column_start":5,"column_end":58}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10247094,"byte_end":10247118,"line_start":4949,"line_end":4949,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5440},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10247528,"byte_end":10247538,"line_start":4961,"line_end":4961,"column_start":8,"column_end":18},"name":"InsertLane","qualname":"::ir::builder::InstBuilder::InsertLane","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, lane: ir::immediates::Uimm8, arg0: Value, arg1: Value) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" InsertLane(imms=(lane: ir::immediates::Uimm8), vals=2)\n","sig":null,"attributes":[{"value":"/ InsertLane(imms=(lane: ir::immediates::Uimm8), vals=2)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10247433,"byte_end":10247491,"line_start":4959,"line_end":4959,"column_start":5,"column_end":63}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10247496,"byte_end":10247520,"line_start":4960,"line_end":4960,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5441},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10247953,"byte_end":10247963,"line_start":4972,"line_end":4972,"column_start":8,"column_end":18},"name":"IntCompare","qualname":"::ir::builder::InstBuilder::IntCompare","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, cond: ir::condcodes::IntCC, arg0: Value, arg1: Value) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" IntCompare(imms=(cond: ir::condcodes::IntCC), vals=2)\n","sig":null,"attributes":[{"value":"/ IntCompare(imms=(cond: ir::condcodes::IntCC), vals=2)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10247859,"byte_end":10247916,"line_start":4970,"line_end":4970,"column_start":5,"column_end":62}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10247921,"byte_end":10247945,"line_start":4971,"line_end":4971,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5442},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10248408,"byte_end":10248421,"line_start":4983,"line_end":4983,"column_start":8,"column_end":21},"name":"IntCompareImm","qualname":"::ir::builder::InstBuilder::IntCompareImm","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, cond: ir::condcodes::IntCC, imm: ir::immediates::Imm64, arg0: Value) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" IntCompareImm(imms=(cond: ir::condcodes::IntCC, imm: ir::immediates::Imm64), vals=1)\n","sig":null,"attributes":[{"value":"/ IntCompareImm(imms=(cond: ir::condcodes::IntCC, imm: ir::immediates::Imm64), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10248283,"byte_end":10248371,"line_start":4981,"line_end":4981,"column_start":5,"column_end":93}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10248376,"byte_end":10248400,"line_start":4982,"line_end":4982,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5443},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10248858,"byte_end":10248865,"line_start":4995,"line_end":4995,"column_start":8,"column_end":15},"name":"IntCond","qualname":"::ir::builder::InstBuilder::IntCond","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, cond: ir::condcodes::IntCC, arg0: Value) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" IntCond(imms=(cond: ir::condcodes::IntCC), vals=1)\n","sig":null,"attributes":[{"value":"/ IntCond(imms=(cond: ir::condcodes::IntCC), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10248767,"byte_end":10248821,"line_start":4993,"line_end":4993,"column_start":5,"column_end":59}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10248826,"byte_end":10248850,"line_start":4994,"line_end":4994,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5444},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10249275,"byte_end":10249286,"line_start":5006,"line_end":5006,"column_start":8,"column_end":19},"name":"IntCondTrap","qualname":"::ir::builder::InstBuilder::IntCondTrap","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, cond: ir::condcodes::IntCC, code: ir::TrapCode, arg0: Value) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" IntCondTrap(imms=(cond: ir::condcodes::IntCC, code: ir::TrapCode), vals=1)\n","sig":null,"attributes":[{"value":"/ IntCondTrap(imms=(cond: ir::condcodes::IntCC, code: ir::TrapCode), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10249160,"byte_end":10249238,"line_start":5004,"line_end":5004,"column_start":5,"column_end":83}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10249243,"byte_end":10249267,"line_start":5005,"line_end":5005,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5445},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10249716,"byte_end":10249725,"line_start":5018,"line_end":5018,"column_start":8,"column_end":17},"name":"IntSelect","qualname":"::ir::builder::InstBuilder::IntSelect","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, cond: ir::condcodes::IntCC, arg0: Value, arg1: Value, arg2: Value) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" IntSelect(imms=(cond: ir::condcodes::IntCC), vals=3)\n","sig":null,"attributes":[{"value":"/ IntSelect(imms=(cond: ir::condcodes::IntCC), vals=3)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10249623,"byte_end":10249679,"line_start":5016,"line_end":5016,"column_start":5,"column_end":61}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10249684,"byte_end":10249708,"line_start":5017,"line_end":5017,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5446},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10250147,"byte_end":10250151,"line_start":5029,"line_end":5029,"column_start":8,"column_end":12},"name":"Jump","qualname":"::ir::builder::InstBuilder::Jump","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, destination: ir::Block, args: ir::ValueList) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Jump(imms=(destination: ir::Block), vals=0)\n","sig":null,"attributes":[{"value":"/ Jump(imms=(destination: ir::Block), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10250063,"byte_end":10250110,"line_start":5027,"line_end":5027,"column_start":5,"column_end":52}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10250115,"byte_end":10250139,"line_start":5028,"line_end":5028,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5447},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10250564,"byte_end":10250568,"line_start":5040,"line_end":5040,"column_start":8,"column_end":12},"name":"Load","qualname":"::ir::builder::InstBuilder::Load","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, flags: ir::MemFlags, offset: ir::immediates::Offset32, arg0: Value) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Load(imms=(flags: ir::MemFlags, offset: ir::immediates::Offset32), vals=1)\n","sig":null,"attributes":[{"value":"/ Load(imms=(flags: ir::MemFlags, offset: ir::immediates::Offset32), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10250449,"byte_end":10250527,"line_start":5038,"line_end":5038,"column_start":5,"column_end":83}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10250532,"byte_end":10250556,"line_start":5039,"line_end":5039,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5448},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10251030,"byte_end":10251041,"line_start":5052,"line_end":5052,"column_start":8,"column_end":19},"name":"LoadComplex","qualname":"::ir::builder::InstBuilder::LoadComplex","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, flags: ir::MemFlags, offset: ir::immediates::Offset32, args: ir::ValueList) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" LoadComplex(imms=(flags: ir::MemFlags, offset: ir::immediates::Offset32), vals=0)\n","sig":null,"attributes":[{"value":"/ LoadComplex(imms=(flags: ir::MemFlags, offset: ir::immediates::Offset32), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10250908,"byte_end":10250993,"line_start":5050,"line_end":5050,"column_start":5,"column_end":90}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10250998,"byte_end":10251022,"line_start":5051,"line_end":5051,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5449},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10251457,"byte_end":10251465,"line_start":5064,"line_end":5064,"column_start":8,"column_end":16},"name":"MultiAry","qualname":"::ir::builder::InstBuilder::MultiAry","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, args: ir::ValueList) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" MultiAry(imms=(), vals=0)\n","sig":null,"attributes":[{"value":"/ MultiAry(imms=(), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10251391,"byte_end":10251420,"line_start":5062,"line_end":5062,"column_start":5,"column_end":34}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10251425,"byte_end":10251449,"line_start":5063,"line_end":5063,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5450},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10251783,"byte_end":10251790,"line_start":5074,"line_end":5074,"column_start":8,"column_end":15},"name":"NullAry","qualname":"::ir::builder::InstBuilder::NullAry","value":"fn (self, opcode: Opcode, ctrl_typevar: Type) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" NullAry(imms=(), vals=0)\n","sig":null,"attributes":[{"value":"/ NullAry(imms=(), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10251718,"byte_end":10251746,"line_start":5072,"line_end":5072,"column_start":5,"column_end":33}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10251751,"byte_end":10251775,"line_start":5073,"line_end":5073,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5451},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10252105,"byte_end":10252112,"line_start":5083,"line_end":5083,"column_start":8,"column_end":15},"name":"RegFill","qualname":"::ir::builder::InstBuilder::RegFill","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, src: ir::StackSlot, dst: isa::RegUnit, arg0: Value) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" RegFill(imms=(src: ir::StackSlot, dst: isa::RegUnit), vals=1)\n","sig":null,"attributes":[{"value":"/ RegFill(imms=(src: ir::StackSlot, dst: isa::RegUnit), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10252003,"byte_end":10252068,"line_start":5081,"line_end":5081,"column_start":5,"column_end":70}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10252073,"byte_end":10252097,"line_start":5082,"line_end":5082,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5452},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10252535,"byte_end":10252542,"line_start":5095,"line_end":5095,"column_start":8,"column_end":15},"name":"RegMove","qualname":"::ir::builder::InstBuilder::RegMove","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, src: isa::RegUnit, dst: isa::RegUnit, arg0: Value) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" RegMove(imms=(src: isa::RegUnit, dst: isa::RegUnit), vals=1)\n","sig":null,"attributes":[{"value":"/ RegMove(imms=(src: isa::RegUnit, dst: isa::RegUnit), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10252434,"byte_end":10252498,"line_start":5093,"line_end":5093,"column_start":5,"column_end":69}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10252503,"byte_end":10252527,"line_start":5094,"line_end":5094,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5453},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10252966,"byte_end":10252974,"line_start":5107,"line_end":5107,"column_start":8,"column_end":16},"name":"RegSpill","qualname":"::ir::builder::InstBuilder::RegSpill","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, src: isa::RegUnit, dst: ir::StackSlot, arg0: Value) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" RegSpill(imms=(src: isa::RegUnit, dst: ir::StackSlot), vals=1)\n","sig":null,"attributes":[{"value":"/ RegSpill(imms=(src: isa::RegUnit, dst: ir::StackSlot), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10252863,"byte_end":10252929,"line_start":5105,"line_end":5105,"column_start":5,"column_end":71}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10252934,"byte_end":10252958,"line_start":5106,"line_end":5106,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5454},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10253381,"byte_end":10253388,"line_start":5119,"line_end":5119,"column_start":8,"column_end":15},"name":"Shuffle","qualname":"::ir::builder::InstBuilder::Shuffle","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, mask: ir::Immediate, arg0: Value, arg1: Value) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Shuffle(imms=(mask: ir::Immediate), vals=2)\n","sig":null,"attributes":[{"value":"/ Shuffle(imms=(mask: ir::Immediate), vals=2)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10253297,"byte_end":10253344,"line_start":5117,"line_end":5117,"column_start":5,"column_end":52}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10253349,"byte_end":10253373,"line_start":5118,"line_end":5118,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5455},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10253824,"byte_end":10253833,"line_start":5130,"line_end":5130,"column_start":8,"column_end":17},"name":"StackLoad","qualname":"::ir::builder::InstBuilder::StackLoad","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, stack_slot: ir::StackSlot, offset: ir::immediates::Offset32) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" StackLoad(imms=(stack_slot: ir::StackSlot, offset: ir::immediates::Offset32), vals=0)\n","sig":null,"attributes":[{"value":"/ StackLoad(imms=(stack_slot: ir::StackSlot, offset: ir::immediates::Offset32), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10253698,"byte_end":10253787,"line_start":5128,"line_end":5128,"column_start":5,"column_end":94}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10253792,"byte_end":10253816,"line_start":5129,"line_end":5129,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5456},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10254280,"byte_end":10254290,"line_start":5141,"line_end":5141,"column_start":8,"column_end":18},"name":"StackStore","qualname":"::ir::builder::InstBuilder::StackStore","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, stack_slot: ir::StackSlot, offset: ir::immediates::Offset32, arg0: Value) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" StackStore(imms=(stack_slot: ir::StackSlot, offset: ir::immediates::Offset32), vals=1)\n","sig":null,"attributes":[{"value":"/ StackStore(imms=(stack_slot: ir::StackSlot, offset: ir::immediates::Offset32), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10254153,"byte_end":10254243,"line_start":5139,"line_end":5139,"column_start":5,"column_end":95}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10254248,"byte_end":10254272,"line_start":5140,"line_end":5140,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5457},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10254763,"byte_end":10254768,"line_start":5153,"line_end":5153,"column_start":8,"column_end":13},"name":"Store","qualname":"::ir::builder::InstBuilder::Store","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, flags: ir::MemFlags, offset: ir::immediates::Offset32, arg0: Value, arg1: Value) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Store(imms=(flags: ir::MemFlags, offset: ir::immediates::Offset32), vals=2)\n","sig":null,"attributes":[{"value":"/ Store(imms=(flags: ir::MemFlags, offset: ir::immediates::Offset32), vals=2)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10254647,"byte_end":10254726,"line_start":5151,"line_end":5151,"column_start":5,"column_end":84}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10254731,"byte_end":10254755,"line_start":5152,"line_end":5152,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5458},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10255254,"byte_end":10255266,"line_start":5165,"line_end":5165,"column_start":8,"column_end":20},"name":"StoreComplex","qualname":"::ir::builder::InstBuilder::StoreComplex","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, flags: ir::MemFlags, offset: ir::immediates::Offset32, args: ir::ValueList) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" StoreComplex(imms=(flags: ir::MemFlags, offset: ir::immediates::Offset32), vals=1)\n","sig":null,"attributes":[{"value":"/ StoreComplex(imms=(flags: ir::MemFlags, offset: ir::immediates::Offset32), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10255131,"byte_end":10255217,"line_start":5163,"line_end":5163,"column_start":5,"column_end":91}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10255222,"byte_end":10255246,"line_start":5164,"line_end":5164,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5459},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10255734,"byte_end":10255743,"line_start":5177,"line_end":5177,"column_start":8,"column_end":17},"name":"TableAddr","qualname":"::ir::builder::InstBuilder::TableAddr","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, table: ir::Table, offset: ir::immediates::Offset32, arg0: Value) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" TableAddr(imms=(table: ir::Table, offset: ir::immediates::Offset32), vals=1)\n","sig":null,"attributes":[{"value":"/ TableAddr(imms=(table: ir::Table, offset: ir::immediates::Offset32), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10255617,"byte_end":10255697,"line_start":5175,"line_end":5175,"column_start":5,"column_end":85}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10255702,"byte_end":10255726,"line_start":5176,"line_end":5176,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5460},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10256150,"byte_end":10256157,"line_start":5189,"line_end":5189,"column_start":8,"column_end":15},"name":"Ternary","qualname":"::ir::builder::InstBuilder::Ternary","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, arg0: Value, arg1: Value, arg2: Value) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Ternary(imms=(), vals=3)\n","sig":null,"attributes":[{"value":"/ Ternary(imms=(), vals=3)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10256085,"byte_end":10256113,"line_start":5187,"line_end":5187,"column_start":5,"column_end":33}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10256118,"byte_end":10256142,"line_start":5188,"line_end":5188,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5461},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10256527,"byte_end":10256531,"line_start":5199,"line_end":5199,"column_start":8,"column_end":12},"name":"Trap","qualname":"::ir::builder::InstBuilder::Trap","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, code: ir::TrapCode) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Trap(imms=(code: ir::TrapCode), vals=0)\n","sig":null,"attributes":[{"value":"/ Trap(imms=(code: ir::TrapCode), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10256447,"byte_end":10256490,"line_start":5197,"line_end":5197,"column_start":5,"column_end":48}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10256495,"byte_end":10256519,"line_start":5198,"line_end":5198,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5462},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10256842,"byte_end":10256847,"line_start":5209,"line_end":5209,"column_start":8,"column_end":13},"name":"Unary","qualname":"::ir::builder::InstBuilder::Unary","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, arg0: Value) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" Unary(imms=(), vals=1)\n","sig":null,"attributes":[{"value":"/ Unary(imms=(), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10256779,"byte_end":10256805,"line_start":5207,"line_end":5207,"column_start":5,"column_end":31}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10256810,"byte_end":10256834,"line_start":5208,"line_end":5208,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5463},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10257170,"byte_end":10257179,"line_start":5219,"line_end":5219,"column_start":8,"column_end":17},"name":"UnaryBool","qualname":"::ir::builder::InstBuilder::UnaryBool","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, imm: bool) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" UnaryBool(imms=(imm: bool), vals=0)\n","sig":null,"attributes":[{"value":"/ UnaryBool(imms=(imm: bool), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10257094,"byte_end":10257133,"line_start":5217,"line_end":5217,"column_start":5,"column_end":44}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10257138,"byte_end":10257162,"line_start":5218,"line_end":5218,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5464},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10257519,"byte_end":10257529,"line_start":5229,"line_end":5229,"column_start":8,"column_end":18},"name":"UnaryConst","qualname":"::ir::builder::InstBuilder::UnaryConst","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, constant_handle: ir::Constant) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" UnaryConst(imms=(constant_handle: ir::Constant), vals=0)\n","sig":null,"attributes":[{"value":"/ UnaryConst(imms=(constant_handle: ir::Constant), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10257422,"byte_end":10257482,"line_start":5227,"line_end":5227,"column_start":5,"column_end":65}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10257487,"byte_end":10257511,"line_start":5228,"line_end":5228,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5465},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10257908,"byte_end":10257924,"line_start":5239,"line_end":5239,"column_start":8,"column_end":24},"name":"UnaryGlobalValue","qualname":"::ir::builder::InstBuilder::UnaryGlobalValue","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, global_value: ir::GlobalValue) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" UnaryGlobalValue(imms=(global_value: ir::GlobalValue), vals=0)\n","sig":null,"attributes":[{"value":"/ UnaryGlobalValue(imms=(global_value: ir::GlobalValue), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10257805,"byte_end":10257871,"line_start":5237,"line_end":5237,"column_start":5,"column_end":71}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10257876,"byte_end":10257900,"line_start":5238,"line_end":5238,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5466},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10258299,"byte_end":10258310,"line_start":5249,"line_end":5249,"column_start":8,"column_end":19},"name":"UnaryIeee32","qualname":"::ir::builder::InstBuilder::UnaryIeee32","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, imm: ir::immediates::Ieee32) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" UnaryIeee32(imms=(imm: ir::immediates::Ieee32), vals=0)\n","sig":null,"attributes":[{"value":"/ UnaryIeee32(imms=(imm: ir::immediates::Ieee32), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10258203,"byte_end":10258262,"line_start":5247,"line_end":5247,"column_start":5,"column_end":64}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10258267,"byte_end":10258291,"line_start":5248,"line_end":5248,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5467},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10258669,"byte_end":10258680,"line_start":5259,"line_end":5259,"column_start":8,"column_end":19},"name":"UnaryIeee64","qualname":"::ir::builder::InstBuilder::UnaryIeee64","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, imm: ir::immediates::Ieee64) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" UnaryIeee64(imms=(imm: ir::immediates::Ieee64), vals=0)\n","sig":null,"attributes":[{"value":"/ UnaryIeee64(imms=(imm: ir::immediates::Ieee64), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10258573,"byte_end":10258632,"line_start":5257,"line_end":5257,"column_start":5,"column_end":64}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10258637,"byte_end":10258661,"line_start":5258,"line_end":5258,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5468},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10259035,"byte_end":10259043,"line_start":5269,"line_end":5269,"column_start":8,"column_end":16},"name":"UnaryImm","qualname":"::ir::builder::InstBuilder::UnaryImm","value":"fn (self, opcode: Opcode, ctrl_typevar: Type, imm: ir::immediates::Imm64) -> (Inst, &'f mut ir::DataFlowGraph)","parent":{"krate":0,"index":5090},"children":[],"decl_id":null,"docs":" UnaryImm(imms=(imm: ir::immediates::Imm64), vals=0)\n","sig":null,"attributes":[{"value":"/ UnaryImm(imms=(imm: ir::immediates::Imm64), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10258943,"byte_end":10258998,"line_start":5267,"line_end":5267,"column_start":5,"column_end":60}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10259003,"byte_end":10259027,"line_start":5268,"line_end":5268,"column_start":5,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":477},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":124122,"byte_end":124138,"line_start":51,"line_end":51,"column_start":11,"column_end":27},"name":"InstInserterBase","qualname":"::ir::builder::InstInserterBase","value":"InstInserterBase<'f>: Sized","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481}],"decl_id":null,"docs":" Base trait for instruction inserters.","sig":null,"attributes":[{"value":"/ Base trait for instruction inserters.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":123696,"byte_end":123737,"line_start":44,"line_end":44,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":123738,"byte_end":123741,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ This is an alternative base trait for an instruction builder to implement.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":123742,"byte_end":123820,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":123821,"byte_end":123824,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ An instruction inserter can be adapted into an instruction builder by wrapping it in an","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":123825,"byte_end":123916,"line_start":48,"line_end":48,"column_start":1,"column_end":92}},{"value":"/ `InsertBuilder`. This provides some common functionality for instruction builders that insert","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":123917,"byte_end":124014,"line_start":49,"line_end":49,"column_start":1,"column_end":98}},{"value":"/ new instructions, as opposed to the `ReplaceBuilder` which overwrites existing instructions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":124015,"byte_end":124111,"line_start":50,"line_end":50,"column_start":1,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":124218,"byte_end":124233,"line_start":53,"line_end":53,"column_start":8,"column_end":23},"name":"data_flow_graph","qualname":"::ir::builder::InstInserterBase::data_flow_graph","value":"fn (&self) -> &DataFlowGraph","parent":{"krate":0,"index":477},"children":[],"decl_id":null,"docs":" Get an immutable reference to the data flow graph.\n","sig":null,"attributes":[{"value":"/ Get an immutable reference to the data flow graph.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":124156,"byte_end":124210,"line_start":52,"line_end":52,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":124324,"byte_end":124343,"line_start":56,"line_end":56,"column_start":8,"column_end":27},"name":"data_flow_graph_mut","qualname":"::ir::builder::InstInserterBase::data_flow_graph_mut","value":"fn (&mut self) -> &mut DataFlowGraph","parent":{"krate":0,"index":477},"children":[],"decl_id":null,"docs":" Get a mutable reference to the data flow graph.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the data flow graph.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":124265,"byte_end":124316,"line_start":55,"line_end":55,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":124445,"byte_end":124462,"line_start":59,"line_end":59,"column_start":8,"column_end":25},"name":"insert_built_inst","qualname":"::ir::builder::InstInserterBase::insert_built_inst","value":"fn (self, inst: Inst, ctrl_typevar: Type) -> &'f mut DataFlowGraph","parent":{"krate":0,"index":477},"children":[],"decl_id":null,"docs":" Insert a new instruction which belongs to the DFG.\n","sig":null,"attributes":[{"value":"/ Insert a new instruction which belongs to the DFG.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":124383,"byte_end":124437,"line_start":58,"line_end":58,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":483},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":124857,"byte_end":124870,"line_start":69,"line_end":69,"column_start":12,"column_end":25},"name":"InsertBuilder","qualname":"::ir::builder::InsertBuilder","value":"InsertBuilder {  }","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":487}],"decl_id":null,"docs":" Builder that inserts an instruction at the current position.","sig":null,"attributes":[{"value":"/ Builder that inserts an instruction at the current position.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":124562,"byte_end":124626,"line_start":64,"line_end":64,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":124627,"byte_end":124630,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ An `InsertBuilder` is a wrapper for an `InstInserterBase` that turns it into an instruction","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":124631,"byte_end":124726,"line_start":66,"line_end":66,"column_start":1,"column_end":96}},{"value":"/ builder with some additional facilities for creating instructions that reuse existing values as","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":124727,"byte_end":124826,"line_start":67,"line_end":67,"column_start":1,"column_end":100}},{"value":"/ their results.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":124827,"byte_end":124845,"line_start":68,"line_end":68,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":125180,"byte_end":125183,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"new","qualname":"<InsertBuilder>::new","value":"fn (inserter: IIB) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new builder which inserts instructions at `pos`.\n The `dfg` and `pos.layout` references should be from the same `Function`.\n","sig":null,"attributes":[{"value":"/ Create a new builder which inserts instructions at `pos`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":125025,"byte_end":125086,"line_start":75,"line_end":75,"column_start":5,"column_end":66}},{"value":"/ The `dfg` and `pos.layout` references should be from the same `Function`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":125091,"byte_end":125168,"line_start":76,"line_end":76,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":125687,"byte_end":125699,"line_start":91,"line_end":91,"column_start":12,"column_end":24},"name":"with_results","qualname":"<InsertBuilder>::with_results","value":"fn <Array> (self, reuse: Array) -> InsertReuseBuilder<'f, IIB, Array>","parent":null,"children":[],"decl_id":null,"docs":" Reuse result values in `reuse`.","sig":null,"attributes":[{"value":"/ Reuse result values in `reuse`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":125300,"byte_end":125335,"line_start":84,"line_end":84,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":125340,"byte_end":125343,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Convert this builder into one that will reuse the provided result values instead of","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":125348,"byte_end":125435,"line_start":86,"line_end":86,"column_start":5,"column_end":92}},{"value":"/ allocating new ones. The provided values for reuse must not be attached to anything. Any","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":125440,"byte_end":125532,"line_start":87,"line_end":87,"column_start":5,"column_end":97}},{"value":"/ missing result values will be allocated as normal.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":125537,"byte_end":125591,"line_start":88,"line_end":88,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":125596,"byte_end":125599,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ The `reuse` argument is expected to be an array of `Option<Value>`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":125604,"byte_end":125675,"line_start":90,"line_end":90,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":126323,"byte_end":126334,"line_start":109,"line_end":109,"column_start":12,"column_end":23},"name":"with_result","qualname":"<InsertBuilder>::with_result","value":"fn (self, v: Value) -> InsertReuseBuilder<'f, IIB, [Option<Value>; 1]>","parent":null,"children":[],"decl_id":null,"docs":" Reuse a single result value.","sig":null,"attributes":[{"value":"/ Reuse a single result value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":125959,"byte_end":125991,"line_start":102,"line_end":102,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":125996,"byte_end":125999,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Convert this into a builder that will reuse `v` as the single result value. The reused","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":126004,"byte_end":126094,"line_start":104,"line_end":104,"column_start":5,"column_end":95}},{"value":"/ result value `v` must not be attached to anything.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":126099,"byte_end":126153,"line_start":105,"line_end":105,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":126158,"byte_end":126161,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This method should only be used when building an instruction with exactly one result. Use","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":126166,"byte_end":126259,"line_start":107,"line_end":107,"column_start":5,"column_end":98}},{"value":"/ `with_results()` for the more general case.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":126264,"byte_end":126311,"line_start":108,"line_end":108,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":502},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":127365,"byte_end":127383,"line_start":137,"line_end":137,"column_start":12,"column_end":30},"name":"InsertReuseBuilder","qualname":"::ir::builder::InsertReuseBuilder","value":"InsertReuseBuilder {  }","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508}],"decl_id":null,"docs":" Builder that inserts a new instruction like `InsertBuilder`, but reusing result values.\n","sig":null,"attributes":[{"value":"/ Builder that inserts a new instruction like `InsertBuilder`, but reusing result values.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":127262,"byte_end":127353,"line_start":136,"line_end":136,"column_start":1,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":516},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":128903,"byte_end":128917,"line_start":181,"line_end":181,"column_start":12,"column_end":26},"name":"ReplaceBuilder","qualname":"::ir::builder::ReplaceBuilder","value":"ReplaceBuilder {  }","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":519}],"decl_id":null,"docs":" Instruction builder that replaces an existing instruction.","sig":null,"attributes":[{"value":"/ Instruction builder that replaces an existing instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":128409,"byte_end":128471,"line_start":173,"line_end":173,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":128472,"byte_end":128475,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ The inserted instruction will have the same `Inst` number as the old one.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":128476,"byte_end":128553,"line_start":175,"line_end":175,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":128554,"byte_end":128557,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ If the old instruction still has result values attached, it is assumed that the new instruction","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":128558,"byte_end":128657,"line_start":177,"line_end":177,"column_start":1,"column_end":100}},{"value":"/ produces the same number and types of results. The old result values are preserved. If the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":128658,"byte_end":128752,"line_start":178,"line_end":178,"column_start":1,"column_end":95}},{"value":"/ replacement instruction format does not support multiple results, the builder panics. It is a","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":128753,"byte_end":128850,"line_start":179,"line_end":179,"column_start":1,"column_end":98}},{"value":"/ bug to leave result values dangling.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":128851,"byte_end":128891,"line_start":180,"line_end":180,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":129078,"byte_end":129081,"line_start":188,"line_end":188,"column_start":12,"column_end":15},"name":"new","qualname":"<ReplaceBuilder>::new","value":"fn (dfg: &'f mut DataFlowGraph, inst: Inst) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `ReplaceBuilder` that will overwrite `inst`.\n","sig":null,"attributes":[{"value":"/ Create a `ReplaceBuilder` that will overwrite `inst`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":129009,"byte_end":129066,"line_start":187,"line_end":187,"column_start":5,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":528},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"constant","qualname":"::ir::constant","value":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":542},{"krate":0,"index":5469},{"krate":0,"index":5486},{"krate":0,"index":5483},{"krate":0,"index":5480},{"krate":0,"index":5481},{"krate":0,"index":5476},{"krate":0,"index":5477},{"krate":0,"index":5474},{"krate":0,"index":5472},{"krate":0,"index":543},{"krate":0,"index":546},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":552},{"krate":0,"index":559},{"krate":0,"index":562},{"krate":0,"index":568},{"krate":0,"index":5488},{"krate":0,"index":5491},{"krate":0,"index":569},{"krate":0,"index":5493},{"krate":0,"index":5496},{"krate":0,"index":573}],"decl_id":null,"docs":" Constants","sig":null,"attributes":[{"value":"! Constants","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":131589,"byte_end":131602,"line_start":1,"line_end":1,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":131603,"byte_end":131606,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The constant pool defined here allows Cranelift to avoid emitting the same constant multiple","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":131607,"byte_end":131703,"line_start":3,"line_end":3,"column_start":1,"column_end":97}},{"value":"! times. As constants are inserted in the pool, a handle is returned; the handle is a Cranelift","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":131704,"byte_end":131801,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"! Entity. Inserting the same data multiple times will always return the same handle.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":131802,"byte_end":131888,"line_start":5,"line_end":5,"column_start":1,"column_end":87}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":131889,"byte_end":131892,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! Future work could include:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":131893,"byte_end":131923,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"! - ensuring alignment of constants within the pool,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":131924,"byte_end":131978,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"! - bucketing constants by size.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":131979,"byte_end":132013,"line_start":9,"line_end":9,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5469},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":132720,"byte_end":132732,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"ConstantData","qualname":"::ir::constant::ConstantData","value":"","parent":null,"children":[],"decl_id":null,"docs":" This type describes the actual constant data. Note that the bytes stored in this structure are\n expected to be in little-endian order; this is due to ease-of-use when interacting with\n WebAssembly values, which are [little-endian by design].","sig":null,"attributes":[{"value":"/ This type describes the actual constant data. Note that the bytes stored in this structure are","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":132303,"byte_end":132401,"line_start":22,"line_end":22,"column_start":1,"column_end":99}},{"value":"/ expected to be in little-endian order; this is due to ease-of-use when interacting with","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":132402,"byte_end":132493,"line_start":23,"line_end":23,"column_start":1,"column_end":92}},{"value":"/ WebAssembly values, which are [little-endian by design].","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":132494,"byte_end":132554,"line_start":24,"line_end":24,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":132555,"byte_end":132558,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [little-endian by design]: https://github.com/WebAssembly/design/blob/master/Portability.md","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":132559,"byte_end":132654,"line_start":26,"line_end":26,"column_start":1,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":133306,"byte_end":133309,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"len","qualname":"<ConstantData>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of bytes in the constant.\n","sig":null,"attributes":[{"value":"/ Return the number of bytes in the constant.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":133247,"byte_end":133294,"line_start":56,"line_end":56,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":133405,"byte_end":133413,"line_start":62,"line_end":62,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<ConstantData>::into_vec","value":"fn (self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Convert the data to a vector.\n","sig":null,"attributes":[{"value":"/ Convert the data to a vector.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":133360,"byte_end":133393,"line_start":61,"line_end":61,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":133509,"byte_end":133513,"line_start":67,"line_end":67,"column_start":12,"column_end":16},"name":"iter","qualname":"<ConstantData>::iter","value":"fn (&self) -> Iter<u8>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the constant's bytes.\n","sig":null,"attributes":[{"value":"/ Iterate over the constant's bytes.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":133459,"byte_end":133497,"line_start":66,"line_end":66,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":133619,"byte_end":133625,"line_start":72,"line_end":72,"column_start":12,"column_end":18},"name":"append","qualname":"<ConstantData>::append","value":"fn (mut self, bytes: impl IntoBytes) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add new bytes to the constant data.\n","sig":null,"attributes":[{"value":"/ Add new bytes to the constant data.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":133568,"byte_end":133607,"line_start":71,"line_end":71,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":133916,"byte_end":133925,"line_start":80,"line_end":80,"column_start":12,"column_end":21},"name":"expand_to","qualname":"<ConstantData>::expand_to","value":"fn (mut self, expected_size: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Expand the size of the constant data to `expected_size` number of bytes by adding zeroes\n in the high-order byte slots.\n","sig":null,"attributes":[{"value":"/ Expand the size of the constant data to `expected_size` number of bytes by adding zeroes","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":133774,"byte_end":133866,"line_start":78,"line_end":78,"column_start":5,"column_end":97}},{"value":"/ in the high-order byte slots.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":133871,"byte_end":133904,"line_start":79,"line_end":79,"column_start":5,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":568},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":136855,"byte_end":136869,"line_start":161,"line_end":161,"column_start":10,"column_end":24},"name":"ConstantOffset","qualname":"::ir::constant::ConstantOffset","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" This type describes an offset in bytes within a constant pool.\n","sig":null,"attributes":[{"value":"/ This type describes an offset in bytes within a constant pool.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":136779,"byte_end":136845,"line_start":160,"line_end":160,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":5488},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":137394,"byte_end":137411,"line_start":170,"line_end":170,"column_start":12,"column_end":29},"name":"ConstantPoolEntry","qualname":"::ir::constant::ConstantPoolEntry","value":"ConstantPoolEntry {  }","parent":null,"children":[{"krate":0,"index":5489},{"krate":0,"index":5490}],"decl_id":null,"docs":" Inner type for storing data and offset together in the constant pool. The offset is optional\n because it must be set relative to the function code size (i.e. constants are emitted after the\n function body); because the function is not yet compiled when constants are inserted,\n [`set_offset`](crate::ir::ConstantPool::set_offset) must be called once a constant's offset\n from the beginning of the function is known (see\n [`relaxation.rs`](crate::binemit::relaxation)).\n","sig":null,"attributes":[{"value":"/ Inner type for storing data and offset together in the constant pool. The offset is optional","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":136878,"byte_end":136974,"line_start":163,"line_end":163,"column_start":1,"column_end":97}},{"value":"/ because it must be set relative to the function code size (i.e. constants are emitted after the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":136975,"byte_end":137074,"line_start":164,"line_end":164,"column_start":1,"column_end":100}},{"value":"/ function body); because the function is not yet compiled when constants are inserted,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":137075,"byte_end":137164,"line_start":165,"line_end":165,"column_start":1,"column_end":90}},{"value":"/ [`set_offset`](crate::ir::ConstantPool::set_offset) must be called once a constant's offset","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":137165,"byte_end":137260,"line_start":166,"line_end":166,"column_start":1,"column_end":96}},{"value":"/ from the beginning of the function is known (see","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":137261,"byte_end":137313,"line_start":167,"line_end":167,"column_start":1,"column_end":53}},{"value":"/ [`relaxation.rs`](crate::binemit::relaxation)).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":137314,"byte_end":137365,"line_start":168,"line_end":168,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":137652,"byte_end":137655,"line_start":181,"line_end":181,"column_start":12,"column_end":15},"name":"len","qualname":"<ConstantPoolEntry>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the size of the constant at this entry.\n","sig":null,"attributes":[{"value":"/ Return the size of the constant at this entry.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":137590,"byte_end":137640,"line_start":180,"line_end":180,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":137775,"byte_end":137785,"line_start":186,"line_end":186,"column_start":12,"column_end":22},"name":"set_offset","qualname":"<ConstantPoolEntry>::set_offset","value":"fn (&mut self, offset: ConstantOffset) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Assign a new offset to the constant at this entry.\n","sig":null,"attributes":[{"value":"/ Assign a new offset to the constant at this entry.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":137709,"byte_end":137763,"line_start":185,"line_end":185,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":5493},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":138066,"byte_end":138078,"line_start":194,"line_end":194,"column_start":12,"column_end":24},"name":"ConstantPool","qualname":"::ir::constant::ConstantPool","value":"ConstantPool {  }","parent":null,"children":[{"krate":0,"index":5494},{"krate":0,"index":5495}],"decl_id":null,"docs":" Maintains the mapping between a constant handle (i.e.  [`Constant`](crate::ir::Constant)) and\n its constant data (i.e.  [`ConstantData`](crate::ir::ConstantData)).\n","sig":null,"attributes":[{"value":"/ Maintains the mapping between a constant handle (i.e.  [`Constant`](crate::ir::Constant)) and","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":137867,"byte_end":137964,"line_start":191,"line_end":191,"column_start":1,"column_end":98}},{"value":"/ its constant data (i.e.  [`ConstantData`](crate::ir::ConstantData)).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":137965,"byte_end":138037,"line_start":192,"line_end":192,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":138541,"byte_end":138544,"line_start":206,"line_end":206,"column_start":12,"column_end":15},"name":"new","qualname":"<ConstantPool>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new constant pool instance.\n","sig":null,"attributes":[{"value":"/ Create a new constant pool instance.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":138489,"byte_end":138529,"line_start":205,"line_end":205,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":138740,"byte_end":138745,"line_start":214,"line_end":214,"column_start":12,"column_end":17},"name":"clear","qualname":"<ConstantPool>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Empty the constant pool of all data.\n","sig":null,"attributes":[{"value":"/ Empty the constant pool of all data.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":138688,"byte_end":138728,"line_start":213,"line_end":213,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":139075,"byte_end":139081,"line_start":222,"line_end":222,"column_start":12,"column_end":18},"name":"insert","qualname":"<ConstantPool>::insert","value":"fn (&mut self, constant_value: ConstantData) -> Constant","parent":null,"children":[],"decl_id":null,"docs":" Insert constant data into the pool, returning a handle for later referencing; when constant\n data is inserted that is a duplicate of previous constant data, the existing handle will be\n returned.\n","sig":null,"attributes":[{"value":"/ Insert constant data into the pool, returning a handle for later referencing; when constant","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":138850,"byte_end":138945,"line_start":219,"line_end":219,"column_start":5,"column_end":100}},{"value":"/ data is inserted that is a duplicate of previous constant data, the existing handle will be","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":138950,"byte_end":139045,"line_start":220,"line_end":220,"column_start":5,"column_end":100}},{"value":"/ returned.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":139050,"byte_end":139063,"line_start":221,"line_end":221,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":139672,"byte_end":139675,"line_start":236,"line_end":236,"column_start":12,"column_end":15},"name":"get","qualname":"<ConstantPool>::get","value":"fn (&self, constant_handle: Constant) -> &ConstantData","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the constant data given a handle.\n","sig":null,"attributes":[{"value":"/ Retrieve the constant data given a handle.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":139614,"byte_end":139660,"line_start":235,"line_end":235,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":140071,"byte_end":140081,"line_start":243,"line_end":243,"column_start":12,"column_end":22},"name":"set_offset","qualname":"<ConstantPool>::set_offset","value":"fn (&mut self, constant_handle: Constant, constant_offset: ConstantOffset) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Assign an offset to a given constant, where the offset is the number of bytes from the\n beginning of the function to the beginning of the constant data inside the pool.\n","sig":null,"attributes":[{"value":"/ Assign an offset to a given constant, where the offset is the number of bytes from the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":139880,"byte_end":139970,"line_start":241,"line_end":241,"column_start":5,"column_end":95}},{"value":"/ beginning of the function to the beginning of the constant data inside the pool.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":139975,"byte_end":140059,"line_start":242,"line_end":242,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":140736,"byte_end":140746,"line_start":256,"line_end":256,"column_start":12,"column_end":22},"name":"get_offset","qualname":"<ConstantPool>::get_offset","value":"fn (&self, constant_handle: Constant) -> ConstantOffset","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the offset of a given constant, where the offset is the number of bytes from the\n beginning of the function to the beginning of the constant data inside the pool.\n","sig":null,"attributes":[{"value":"/ Retrieve the offset of a given constant, where the offset is the number of bytes from the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":140542,"byte_end":140635,"line_start":254,"line_end":254,"column_start":5,"column_end":98}},{"value":"/ beginning of the function to the beginning of the constant data inside the pool.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":140640,"byte_end":140724,"line_start":255,"line_end":255,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":141316,"byte_end":141320,"line_start":271,"line_end":271,"column_start":12,"column_end":16},"name":"iter","qualname":"<ConstantPool>::iter","value":"fn (&self) -> impl Iterator<Item = (&Constant, &ConstantData)>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the constants in insertion order.\n","sig":null,"attributes":[{"value":"/ Iterate over the constants in insertion order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":141254,"byte_end":141304,"line_start":270,"line_end":270,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":141543,"byte_end":141554,"line_start":276,"line_end":276,"column_start":12,"column_end":23},"name":"entries_mut","qualname":"<ConstantPool>::entries_mut","value":"fn (&mut self) -> impl Iterator<Item = &mut ConstantPoolEntry>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over mutable entries in the constant pool in insertion order.\n","sig":null,"attributes":[{"value":"/ Iterate over mutable entries in the constant pool in insertion order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":141458,"byte_end":141531,"line_start":275,"line_end":275,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":141730,"byte_end":141733,"line_start":281,"line_end":281,"column_start":12,"column_end":15},"name":"len","qualname":"<ConstantPool>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of constants in the pool.\n","sig":null,"attributes":[{"value":"/ Return the number of constants in the pool.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":141671,"byte_end":141718,"line_start":280,"line_end":280,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":141883,"byte_end":141892,"line_start":286,"line_end":286,"column_start":12,"column_end":21},"name":"byte_size","qualname":"<ConstantPool>::byte_size","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the combined size of all of the constant values in the pool.\n","sig":null,"attributes":[{"value":"/ Return the combined size of all of the constant values in the pool.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":141800,"byte_end":141871,"line_start":285,"line_end":285,"column_start":5,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":589},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dfg","qualname":"::ir::dfg","value":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":601},{"krate":0,"index":606},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":628},{"krate":0,"index":5498},{"krate":0,"index":5510},{"krate":0,"index":629},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":650},{"krate":0,"index":5512},{"krate":0,"index":5531},{"krate":0,"index":5530},{"krate":0,"index":5528},{"krate":0,"index":5524},{"krate":0,"index":5525},{"krate":0,"index":5521},{"krate":0,"index":5522},{"krate":0,"index":663},{"krate":0,"index":5533},{"krate":0,"index":5547},{"krate":0,"index":5545},{"krate":0,"index":668},{"krate":0,"index":698},{"krate":0,"index":701},{"krate":0,"index":703},{"krate":0,"index":5549},{"krate":0,"index":5551},{"krate":0,"index":715},{"krate":0,"index":717},{"krate":0,"index":723},{"krate":0,"index":726}],"decl_id":null,"docs":" Data flow graph tracking Instructions, Values, and blocks.\n","sig":null,"attributes":[{"value":"! Data flow graph tracking Instructions, Values, and blocks.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":148175,"byte_end":148237,"line_start":1,"line_end":1,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":5498},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":149330,"byte_end":149343,"line_start":32,"line_end":32,"column_start":12,"column_end":25},"name":"DataFlowGraph","qualname":"::ir::dfg::DataFlowGraph","value":"DataFlowGraph { value_lists, signatures, old_signatures, ext_funcs, values_labels, constants, immediates }","parent":null,"children":[{"krate":0,"index":5499},{"krate":0,"index":5500},{"krate":0,"index":5501},{"krate":0,"index":5502},{"krate":0,"index":5503},{"krate":0,"index":5504},{"krate":0,"index":5505},{"krate":0,"index":5506},{"krate":0,"index":5507},{"krate":0,"index":5508},{"krate":0,"index":5509}],"decl_id":null,"docs":" A data flow graph defines all instructions and basic blocks in a function as well as\n the data flow dependencies between them. The DFG also tracks values which can be either\n instruction results or block parameters.","sig":null,"attributes":[{"value":"/ A data flow graph defines all instructions and basic blocks in a function as well as","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":148887,"byte_end":148975,"line_start":24,"line_end":24,"column_start":1,"column_end":89}},{"value":"/ the data flow dependencies between them. The DFG also tracks values which can be either","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":148976,"byte_end":149067,"line_start":25,"line_end":25,"column_start":1,"column_end":92}},{"value":"/ instruction results or block parameters.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":149068,"byte_end":149112,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":149113,"byte_end":149116,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ The layout of blocks in the function and of instructions in each block is recorded by the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":149117,"byte_end":149210,"line_start":28,"line_end":28,"column_start":1,"column_end":94}},{"value":"/ `Layout` data structure which forms the other half of the function representation.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":149211,"byte_end":149297,"line_start":29,"line_end":29,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":149298,"byte_end":149301,"line_start":30,"line_end":30,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":5502},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":150433,"byte_end":150444,"line_start":57,"line_end":57,"column_start":9,"column_end":20},"name":"value_lists","qualname":"::ir::dfg::DataFlowGraph::value_lists","value":"cranelift_entity::list::ListPool<ir::entities::Value>","parent":{"krate":0,"index":5498},"children":[],"decl_id":null,"docs":" Memory pool of value lists.","sig":null,"attributes":[{"value":"/ Memory pool of value lists.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":150120,"byte_end":150151,"line_start":50,"line_end":50,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":150156,"byte_end":150159,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ The `ValueList` references into this pool appear in many places:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":150164,"byte_end":150232,"line_start":52,"line_end":52,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":150237,"byte_end":150240,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ - Instructions in `insts` that don't have room for their entire argument list inline.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":150245,"byte_end":150334,"line_start":54,"line_end":54,"column_start":5,"column_end":94}},{"value":"/ - Instruction result values in `results`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":150339,"byte_end":150384,"line_start":55,"line_end":55,"column_start":5,"column_end":50}},{"value":"/ - block parameters in `blocks`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":150389,"byte_end":150424,"line_start":56,"line_end":56,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":5504},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":150719,"byte_end":150729,"line_start":64,"line_end":64,"column_start":9,"column_end":19},"name":"signatures","qualname":"::ir::dfg::DataFlowGraph::signatures","value":"cranelift_entity::primary::PrimaryMap<ir::entities::SigRef, ir::extfunc::Signature>","parent":{"krate":0,"index":5498},"children":[],"decl_id":null,"docs":" Function signature table. These signatures are referenced by indirect call instructions as\n well as the external function references.\n","sig":null,"attributes":[{"value":"/ Function signature table. These signatures are referenced by indirect call instructions as","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":150566,"byte_end":150660,"line_start":62,"line_end":62,"column_start":5,"column_end":99}},{"value":"/ well as the external function references.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":150665,"byte_end":150710,"line_start":63,"line_end":63,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":5505},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":150850,"byte_end":150864,"line_start":67,"line_end":67,"column_start":9,"column_end":23},"name":"old_signatures","qualname":"::ir::dfg::DataFlowGraph::old_signatures","value":"cranelift_entity::map::SecondaryMap<ir::entities::SigRef, core::option::Option<ir::extfunc::Signature>>","parent":{"krate":0,"index":5498},"children":[],"decl_id":null,"docs":" The pre-legalization signature for each entry in `signatures`, if any.\n","sig":null,"attributes":[{"value":"/ The pre-legalization signature for each entry in `signatures`, if any.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":150767,"byte_end":150841,"line_start":66,"line_end":66,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":5506},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":151003,"byte_end":151012,"line_start":70,"line_end":70,"column_start":9,"column_end":18},"name":"ext_funcs","qualname":"::ir::dfg::DataFlowGraph::ext_funcs","value":"cranelift_entity::primary::PrimaryMap<ir::entities::FuncRef, ir::extfunc::ExtFuncData>","parent":{"krate":0,"index":5498},"children":[],"decl_id":null,"docs":" External function references. These are functions that can be called directly.\n","sig":null,"attributes":[{"value":"/ External function references. These are functions that can be called directly.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":150912,"byte_end":150994,"line_start":69,"line_end":69,"column_start":5,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":5507},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":151085,"byte_end":151098,"line_start":73,"line_end":73,"column_start":9,"column_end":22},"name":"values_labels","qualname":"::ir::dfg::DataFlowGraph::values_labels","value":"core::option::Option<std::collections::HashMap<ir::entities::Value, ir::ValueLabelAssignments>>","parent":{"krate":0,"index":5498},"children":[],"decl_id":null,"docs":" Saves Value labels.\n","sig":null,"attributes":[{"value":"/ Saves Value labels.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":151053,"byte_end":151076,"line_start":72,"line_end":72,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5508},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":151199,"byte_end":151208,"line_start":76,"line_end":76,"column_start":9,"column_end":18},"name":"constants","qualname":"::ir::dfg::DataFlowGraph::constants","value":"ir::constant::ConstantPool","parent":{"krate":0,"index":5498},"children":[],"decl_id":null,"docs":" Constants used within the function\n","sig":null,"attributes":[{"value":"/ Constants used within the function","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":151152,"byte_end":151190,"line_start":75,"line_end":75,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":5509},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":151312,"byte_end":151322,"line_start":79,"line_end":79,"column_start":9,"column_end":19},"name":"immediates","qualname":"::ir::dfg::DataFlowGraph::immediates","value":"cranelift_entity::primary::PrimaryMap<ir::entities::Immediate, ir::constant::ConstantData>","parent":{"krate":0,"index":5498},"children":[],"decl_id":null,"docs":" Stores large immediates that otherwise will not fit on InstructionData\n","sig":null,"attributes":[{"value":"/ Stores large immediates that otherwise will not fit on InstructionData","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":151229,"byte_end":151303,"line_start":78,"line_end":78,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":151440,"byte_end":151443,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"new","qualname":"<DataFlowGraph>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty `DataFlowGraph`.\n","sig":null,"attributes":[{"value":"/ Create a new empty `DataFlowGraph`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":151389,"byte_end":151428,"line_start":83,"line_end":83,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":151984,"byte_end":151989,"line_start":101,"line_end":101,"column_start":12,"column_end":17},"name":"clear","qualname":"<DataFlowGraph>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear everything.\n","sig":null,"attributes":[{"value":"/ Clear everything.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":151951,"byte_end":151972,"line_start":100,"line_end":100,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":152587,"byte_end":152596,"line_start":119,"line_end":119,"column_start":12,"column_end":21},"name":"num_insts","qualname":"<DataFlowGraph>::num_insts","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the total number of instructions created in this function, whether they are currently\n inserted in the layout or not.","sig":null,"attributes":[{"value":"/ Get the total number of instructions created in this function, whether they are currently","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":152366,"byte_end":152459,"line_start":115,"line_end":115,"column_start":5,"column_end":98}},{"value":"/ inserted in the layout or not.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":152464,"byte_end":152498,"line_start":116,"line_end":116,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":152503,"byte_end":152506,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This is intended for use with `SecondaryMap::with_capacity`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":152511,"byte_end":152575,"line_start":118,"line_end":118,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":152726,"byte_end":152739,"line_start":124,"line_end":124,"column_start":12,"column_end":25},"name":"inst_is_valid","qualname":"<DataFlowGraph>::inst_is_valid","value":"fn (&self, inst: Inst) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the given instruction reference is valid.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the given instruction reference is valid.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":152651,"byte_end":152714,"line_start":123,"line_end":123,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":153035,"byte_end":153045,"line_start":132,"line_end":132,"column_start":12,"column_end":22},"name":"num_blocks","qualname":"<DataFlowGraph>::num_blocks","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the total number of basic blocks created in this function, whether they are\n currently inserted in the layout or not.","sig":null,"attributes":[{"value":"/ Get the total number of basic blocks created in this function, whether they are","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":152814,"byte_end":152897,"line_start":128,"line_end":128,"column_start":5,"column_end":88}},{"value":"/ currently inserted in the layout or not.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":152902,"byte_end":152946,"line_start":129,"line_end":129,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":152951,"byte_end":152954,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ This is intended for use with `SecondaryMap::with_capacity`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":152959,"byte_end":153023,"line_start":131,"line_end":131,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":153170,"byte_end":153184,"line_start":137,"line_end":137,"column_start":12,"column_end":26},"name":"block_is_valid","qualname":"<DataFlowGraph>::block_is_valid","value":"fn (&self, block: Block) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the given block reference is valid.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the given block reference is valid.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":153101,"byte_end":153158,"line_start":136,"line_end":136,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":153310,"byte_end":153320,"line_start":142,"line_end":142,"column_start":12,"column_end":22},"name":"num_values","qualname":"<DataFlowGraph>::num_values","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the total number of values.\n","sig":null,"attributes":[{"value":"/ Get the total number of values.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":153263,"byte_end":153298,"line_start":141,"line_end":141,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":153431,"byte_end":153449,"line_start":147,"line_end":147,"column_start":12,"column_end":30},"name":"collect_debug_info","qualname":"<DataFlowGraph>::collect_debug_info","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Starts collection of debug information.\n","sig":null,"attributes":[{"value":"/ Starts collection of debug information.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":153376,"byte_end":153419,"line_start":146,"line_end":146,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":640},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":154434,"byte_end":154440,"line_start":185,"line_end":185,"column_start":12,"column_end":18},"name":"Values","qualname":"::ir::dfg::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":642}],"decl_id":null,"docs":" Iterator over all Values in a DFG\n","sig":null,"attributes":[{"value":"/ Iterator over all Values in a DFG","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":154385,"byte_end":154422,"line_start":184,"line_end":184,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":155296,"byte_end":155302,"line_start":224,"line_end":224,"column_start":12,"column_end":18},"name":"values","qualname":"<DataFlowGraph>::values","value":"fn <'a> (&'a self) -> Values","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over all values.\n","sig":null,"attributes":[{"value":"/ Get an iterator over all values.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":155248,"byte_end":155284,"line_start":223,"line_end":223,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":155458,"byte_end":155472,"line_start":231,"line_end":231,"column_start":12,"column_end":26},"name":"value_is_valid","qualname":"<DataFlowGraph>::value_is_valid","value":"fn (&self, v: Value) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a value reference is valid.\n","sig":null,"attributes":[{"value":"/ Check if a value reference is valid.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":155406,"byte_end":155446,"line_start":230,"line_end":230,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":155583,"byte_end":155593,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"value_type","qualname":"<DataFlowGraph>::value_type","value":"fn (&self, v: Value) -> Type","parent":null,"children":[],"decl_id":null,"docs":" Get the type of a value.\n","sig":null,"attributes":[{"value":"/ Get the type of a value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":155543,"byte_end":155571,"line_start":235,"line_end":235,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":155969,"byte_end":155978,"line_start":248,"line_end":248,"column_start":12,"column_end":21},"name":"value_def","qualname":"<DataFlowGraph>::value_def","value":"fn (&self, v: Value) -> ValueDef","parent":null,"children":[],"decl_id":null,"docs":" Get the definition of a value.","sig":null,"attributes":[{"value":"/ Get the definition of a value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":155803,"byte_end":155837,"line_start":244,"line_end":244,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":155842,"byte_end":155845,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ This is either the instruction that defined it or the Block that has the value as an","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":155850,"byte_end":155938,"line_start":246,"line_end":246,"column_start":5,"column_end":93}},{"value":"/ parameter.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":155943,"byte_end":155957,"line_start":247,"line_end":247,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":156877,"byte_end":156894,"line_start":266,"line_end":266,"column_start":12,"column_end":29},"name":"value_is_attached","qualname":"<DataFlowGraph>::value_is_attached","value":"fn (&self, v: Value) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determine if `v` is an attached instruction result / block parameter.","sig":null,"attributes":[{"value":"/ Determine if `v` is an attached instruction result / block parameter.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":156527,"byte_end":156600,"line_start":260,"line_end":260,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":156605,"byte_end":156608,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ An attached value can't be attached to something else without first being detached.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":156613,"byte_end":156700,"line_start":262,"line_end":262,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":156705,"byte_end":156708,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ Value aliases are not considered to be attached to anything. Use `resolve_aliases()` to","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":156713,"byte_end":156804,"line_start":264,"line_end":264,"column_start":5,"column_end":96}},{"value":"/ determine if the original aliased value is attached.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":156809,"byte_end":156865,"line_start":265,"line_end":265,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":157334,"byte_end":157349,"line_start":278,"line_end":278,"column_start":12,"column_end":27},"name":"resolve_aliases","qualname":"<DataFlowGraph>::resolve_aliases","value":"fn (&self, value: Value) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Resolve value aliases.","sig":null,"attributes":[{"value":"/ Resolve value aliases.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":157230,"byte_end":157256,"line_start":275,"line_end":275,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":157261,"byte_end":157264,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ Find the original SSA value that `value` aliases.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":157269,"byte_end":157322,"line_start":277,"line_end":277,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":157619,"byte_end":157647,"line_start":286,"line_end":286,"column_start":12,"column_end":40},"name":"resolve_aliases_in_arguments","qualname":"<DataFlowGraph>::resolve_aliases_in_arguments","value":"fn (&mut self, inst: Inst) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resolve all aliases among inst's arguments.","sig":null,"attributes":[{"value":"/ Resolve all aliases among inst's arguments.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":157438,"byte_end":157485,"line_start":282,"line_end":282,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":157490,"byte_end":157493,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ For each argument of inst which is defined by an alias, replace the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":157498,"byte_end":157569,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ alias with the aliased value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":157574,"byte_end":157607,"line_start":285,"line_end":285,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":158208,"byte_end":158223,"line_start":301,"line_end":301,"column_start":12,"column_end":27},"name":"change_to_alias","qualname":"<DataFlowGraph>::change_to_alias","value":"fn (&mut self, dest: Value, src: Value) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Turn a value into an alias of another.","sig":null,"attributes":[{"value":"/ Turn a value into an alias of another.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":157914,"byte_end":157956,"line_start":295,"line_end":295,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":157961,"byte_end":157964,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ Change the `dest` value to behave as an alias of `src`. This means that all uses of `dest`","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":157969,"byte_end":158063,"line_start":297,"line_end":297,"column_start":5,"column_end":99}},{"value":"/ will behave as if they used that value `src`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":158068,"byte_end":158117,"line_start":298,"line_end":298,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":158122,"byte_end":158125,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ The `dest` value can't be attached to an instruction or block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":158130,"byte_end":158196,"line_start":300,"line_end":300,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":159466,"byte_end":159486,"line_start":335,"line_end":335,"column_start":12,"column_end":32},"name":"replace_with_aliases","qualname":"<DataFlowGraph>::replace_with_aliases","value":"fn (&mut self, dest_inst: Inst, src_inst: Inst) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replace the results of one instruction with aliases to the results of another.","sig":null,"attributes":[{"value":"/ Replace the results of one instruction with aliases to the results of another.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":159041,"byte_end":159123,"line_start":326,"line_end":326,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":159128,"byte_end":159131,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ Change all the results of `dest_inst` to behave as aliases of","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":159136,"byte_end":159201,"line_start":328,"line_end":328,"column_start":5,"column_end":70}},{"value":"/ corresponding results of `src_inst`, as if calling change_to_alias for","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":159206,"byte_end":159280,"line_start":329,"line_end":329,"column_start":5,"column_end":79}},{"value":"/ each.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":159285,"byte_end":159294,"line_start":330,"line_end":330,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":159299,"byte_end":159302,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ After calling this instruction, `dest_inst` will have had its results","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":159307,"byte_end":159380,"line_start":332,"line_end":332,"column_start":5,"column_end":78}},{"value":"/ cleared, so it likely needs to be removed from the graph.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":159385,"byte_end":159446,"line_start":333,"line_end":333,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":159451,"byte_end":159454,"line_start":334,"line_end":334,"column_start":5,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5513},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":160844,"byte_end":160850,"line_start":378,"line_end":378,"column_start":5,"column_end":11},"name":"Result","qualname":"::ir::dfg::ValueDef::Result","value":"ValueDef::Result(Inst, usize)","parent":{"krate":0,"index":5512},"children":[],"decl_id":null,"docs":" Value is the n'th result of an instruction.\n","sig":null,"attributes":[{"value":"/ Value is the n'th result of an instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":160792,"byte_end":160839,"line_start":377,"line_end":377,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5517},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":160918,"byte_end":160923,"line_start":380,"line_end":380,"column_start":5,"column_end":10},"name":"Param","qualname":"::ir::dfg::ValueDef::Param","value":"ValueDef::Param(Block, usize)","parent":{"krate":0,"index":5512},"children":[],"decl_id":null,"docs":" Value is the n'th parameter to an block.\n","sig":null,"attributes":[{"value":"/ Value is the n'th parameter to an block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":160869,"byte_end":160913,"line_start":379,"line_end":379,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":5512},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":160777,"byte_end":160785,"line_start":376,"line_end":376,"column_start":10,"column_end":18},"name":"ValueDef","qualname":"::ir::dfg::ValueDef","value":"ValueDef::{Result, Param}","parent":null,"children":[{"krate":0,"index":5513},{"krate":0,"index":5517}],"decl_id":null,"docs":" Where did a value come from?\n","sig":null,"attributes":[{"value":"/ Where did a value come from?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":160690,"byte_end":160722,"line_start":374,"line_end":374,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":161039,"byte_end":161050,"line_start":385,"line_end":385,"column_start":12,"column_end":23},"name":"unwrap_inst","qualname":"<ValueDef>::unwrap_inst","value":"fn (&self) -> Inst","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the instruction where the value was defined, or panic.\n","sig":null,"attributes":[{"value":"/ Unwrap the instruction where the value was defined, or panic.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":160962,"byte_end":161027,"line_start":384,"line_end":384,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":161291,"byte_end":161303,"line_start":393,"line_end":393,"column_start":12,"column_end":24},"name":"unwrap_block","qualname":"<ValueDef>::unwrap_block","value":"fn (&self) -> Block","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the block there the parameter is defined, or panic.\n","sig":null,"attributes":[{"value":"/ Unwrap the block there the parameter is defined, or panic.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":161217,"byte_end":161279,"line_start":392,"line_end":392,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":161535,"byte_end":161537,"line_start":401,"line_end":401,"column_start":12,"column_end":14},"name":"pp","qualname":"<ValueDef>::pp","value":"fn (self) -> ir::ExpandedProgramPoint","parent":null,"children":[],"decl_id":null,"docs":" Get the program point where the value was defined.\n","sig":null,"attributes":[{"value":"/ Get the program point where the value was defined.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":161469,"byte_end":161523,"line_start":400,"line_end":400,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":161789,"byte_end":161792,"line_start":409,"line_end":409,"column_start":12,"column_end":15},"name":"num","qualname":"<ValueDef>::num","value":"fn (self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the number component of this definition.","sig":null,"attributes":[{"value":"/ Get the number component of this definition.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":161605,"byte_end":161653,"line_start":405,"line_end":405,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":161658,"byte_end":161661,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ When multiple values are defined at the same program point, this indicates the index of","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":161666,"byte_end":161757,"line_start":407,"line_end":407,"column_start":5,"column_end":96}},{"value":"/ this value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":161762,"byte_end":161777,"line_start":408,"line_end":408,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":162728,"byte_end":162737,"line_start":438,"line_end":438,"column_start":12,"column_end":21},"name":"make_inst","qualname":"<DataFlowGraph>::make_inst","value":"fn (&mut self, data: InstructionData) -> Inst","parent":null,"children":[],"decl_id":null,"docs":" Create a new instruction.","sig":null,"attributes":[{"value":"/ Create a new instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":162498,"byte_end":162527,"line_start":434,"line_end":434,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":162532,"byte_end":162535,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ The type of the first result is indicated by `data.ty`. If the instruction produces","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":162540,"byte_end":162627,"line_start":436,"line_end":436,"column_start":5,"column_end":92}},{"value":"/ multiple results, also call `make_inst_results` to allocate value table entries.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":162632,"byte_end":162716,"line_start":437,"line_end":437,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":162948,"byte_end":162960,"line_start":445,"line_end":445,"column_start":12,"column_end":24},"name":"display_inst","qualname":"<DataFlowGraph>::display_inst","value":"fn <'a, I> (&'a self, inst: Inst, isa: I) -> DisplayInst<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns an object that displays `inst`.\n","sig":null,"attributes":[{"value":"/ Returns an object that displays `inst`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":162893,"byte_end":162936,"line_start":444,"line_end":444,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":163199,"byte_end":163208,"line_start":454,"line_end":454,"column_start":12,"column_end":21},"name":"inst_args","qualname":"<DataFlowGraph>::inst_args","value":"fn (&self, inst: Inst) -> &[Value]","parent":null,"children":[],"decl_id":null,"docs":" Get all value arguments on `inst` as a slice.\n","sig":null,"attributes":[{"value":"/ Get all value arguments on `inst` as a slice.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":163138,"byte_end":163187,"line_start":453,"line_end":453,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":163376,"byte_end":163389,"line_start":459,"line_end":459,"column_start":12,"column_end":25},"name":"inst_args_mut","qualname":"<DataFlowGraph>::inst_args_mut","value":"fn (&mut self, inst: Inst) -> &mut [Value]","parent":null,"children":[],"decl_id":null,"docs":" Get all value arguments on `inst` as a mutable slice.\n","sig":null,"attributes":[{"value":"/ Get all value arguments on `inst` as a mutable slice.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":163307,"byte_end":163364,"line_start":458,"line_end":458,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":163571,"byte_end":163586,"line_start":464,"line_end":464,"column_start":12,"column_end":27},"name":"inst_fixed_args","qualname":"<DataFlowGraph>::inst_fixed_args","value":"fn (&self, inst: Inst) -> &[Value]","parent":null,"children":[],"decl_id":null,"docs":" Get the fixed value arguments on `inst` as a slice.\n","sig":null,"attributes":[{"value":"/ Get the fixed value arguments on `inst` as a slice.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":163504,"byte_end":163559,"line_start":463,"line_end":463,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":163885,"byte_end":163904,"line_start":473,"line_end":473,"column_start":12,"column_end":31},"name":"inst_fixed_args_mut","qualname":"<DataFlowGraph>::inst_fixed_args_mut","value":"fn (&mut self, inst: Inst) -> &mut [Value]","parent":null,"children":[],"decl_id":null,"docs":" Get the fixed value arguments on `inst` as a mutable slice.\n","sig":null,"attributes":[{"value":"/ Get the fixed value arguments on `inst` as a mutable slice.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":163810,"byte_end":163873,"line_start":472,"line_end":472,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":164214,"byte_end":164232,"line_start":482,"line_end":482,"column_start":12,"column_end":30},"name":"inst_variable_args","qualname":"<DataFlowGraph>::inst_variable_args","value":"fn (&self, inst: Inst) -> &[Value]","parent":null,"children":[],"decl_id":null,"docs":" Get the variable value arguments on `inst` as a slice.\n","sig":null,"attributes":[{"value":"/ Get the variable value arguments on `inst` as a slice.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":164144,"byte_end":164202,"line_start":481,"line_end":481,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":164534,"byte_end":164556,"line_start":491,"line_end":491,"column_start":12,"column_end":34},"name":"inst_variable_args_mut","qualname":"<DataFlowGraph>::inst_variable_args_mut","value":"fn (&mut self, inst: Inst) -> &mut [Value]","parent":null,"children":[],"decl_id":null,"docs":" Get the variable value arguments on `inst` as a mutable slice.\n","sig":null,"attributes":[{"value":"/ Get the variable value arguments on `inst` as a mutable slice.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":164456,"byte_end":164522,"line_start":490,"line_end":490,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":165588,"byte_end":165605,"line_start":511,"line_end":511,"column_start":12,"column_end":29},"name":"make_inst_results","qualname":"<DataFlowGraph>::make_inst_results","value":"fn (&mut self, inst: Inst, ctrl_typevar: Type) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Create result values for an instruction that produces multiple results.","sig":null,"attributes":[{"value":"/ Create result values for an instruction that produces multiple results.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":164796,"byte_end":164871,"line_start":499,"line_end":499,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":164876,"byte_end":164879,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ Instructions that produce no result values only need to be created with `make_inst`,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":164884,"byte_end":164972,"line_start":501,"line_end":501,"column_start":5,"column_end":93}},{"value":"/ otherwise call `make_inst_results` to allocate value table entries for the results.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":164977,"byte_end":165064,"line_start":502,"line_end":502,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":165069,"byte_end":165072,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ The result value types are determined from the instruction's value type constraints and the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":165077,"byte_end":165172,"line_start":504,"line_end":504,"column_start":5,"column_end":100}},{"value":"/ provided `ctrl_typevar` type for polymorphic instructions. For non-polymorphic","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":165177,"byte_end":165259,"line_start":505,"line_end":505,"column_start":5,"column_end":87}},{"value":"/ instructions, `ctrl_typevar` is ignored, and `INVALID` can be used.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":165264,"byte_end":165335,"line_start":506,"line_end":506,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":165340,"byte_end":165343,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ The type of the first result value is also set, even if it was already set in the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":165348,"byte_end":165433,"line_start":508,"line_end":508,"column_start":5,"column_end":90}},{"value":"/ `InstructionData` passed to `make_inst`. If this function is called with a single-result","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":165438,"byte_end":165530,"line_start":509,"line_end":509,"column_start":5,"column_end":97}},{"value":"/ instruction, that is the only effect.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":165535,"byte_end":165576,"line_start":510,"line_end":510,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":166085,"byte_end":166110,"line_start":520,"line_end":520,"column_start":12,"column_end":37},"name":"make_inst_results_reusing","qualname":"<DataFlowGraph>::make_inst_results_reusing","value":"fn <I> (&mut self, inst: Inst, ctrl_typevar: Type, reuse: I) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Create result values for `inst`, reusing the provided detached values.","sig":null,"attributes":[{"value":"/ Create result values for `inst`, reusing the provided detached values.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":165745,"byte_end":165819,"line_start":515,"line_end":515,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":165824,"byte_end":165827,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ Create a new set of result values for `inst` using `ctrl_typevar` to determine the result","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":165832,"byte_end":165925,"line_start":517,"line_end":517,"column_start":5,"column_end":98}},{"value":"/ types. Any values provided by `reuse` will be reused. When `reuse` is exhausted or when it","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":165930,"byte_end":166024,"line_start":518,"line_end":518,"column_start":5,"column_end":99}},{"value":"/ produces `None`, a new value is created.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":166029,"byte_end":166073,"line_start":519,"line_end":519,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":168010,"byte_end":168017,"line_start":569,"line_end":569,"column_start":12,"column_end":19},"name":"replace","qualname":"<DataFlowGraph>::replace","value":"fn (&mut self, inst: Inst) -> ReplaceBuilder","parent":null,"children":[],"decl_id":null,"docs":" Create a `ReplaceBuilder` that will replace `inst` with a new instruction in place.\n","sig":null,"attributes":[{"value":"/ Create a `ReplaceBuilder` that will replace `inst` with a new instruction in place.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":167911,"byte_end":167998,"line_start":568,"line_end":568,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":168360,"byte_end":168374,"line_start":577,"line_end":577,"column_start":12,"column_end":26},"name":"detach_results","qualname":"<DataFlowGraph>::detach_results","value":"fn (&mut self, inst: Inst) -> ValueList","parent":null,"children":[],"decl_id":null,"docs":" Detach the list of result values from `inst` and return it.","sig":null,"attributes":[{"value":"/ Detach the list of result values from `inst` and return it.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":168112,"byte_end":168175,"line_start":573,"line_end":573,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":168180,"byte_end":168183,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ This leaves `inst` without any result values. New result values can be created by calling","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":168188,"byte_end":168281,"line_start":575,"line_end":575,"column_start":5,"column_end":98}},{"value":"/ `make_inst_results` or by using a `replace(inst)` builder.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":168286,"byte_end":168348,"line_start":576,"line_end":576,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":168691,"byte_end":168704,"line_start":585,"line_end":585,"column_start":12,"column_end":25},"name":"clear_results","qualname":"<DataFlowGraph>::clear_results","value":"fn (&mut self, inst: Inst) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear the list of result values from `inst`.","sig":null,"attributes":[{"value":"/ Clear the list of result values from `inst`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":168458,"byte_end":168506,"line_start":581,"line_end":581,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":168511,"byte_end":168514,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ This leaves `inst` without any result values. New result values can be created by calling","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":168519,"byte_end":168612,"line_start":583,"line_end":583,"column_start":5,"column_end":98}},{"value":"/ `make_inst_results` or by using a `replace(inst)` builder.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":168617,"byte_end":168679,"line_start":584,"line_end":584,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":169143,"byte_end":169156,"line_start":595,"line_end":595,"column_start":12,"column_end":25},"name":"attach_result","qualname":"<DataFlowGraph>::attach_result","value":"fn (&mut self, inst: Inst, res: Value) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Attach an existing value to the result value list for `inst`.","sig":null,"attributes":[{"value":"/ Attach an existing value to the result value list for `inst`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":168797,"byte_end":168862,"line_start":589,"line_end":589,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":168867,"byte_end":168870,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ The `res` value is appended to the end of the result list.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":168875,"byte_end":168937,"line_start":591,"line_end":591,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":168942,"byte_end":168945,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ This is a very low-level operation. Usually, instruction results with the correct types are","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":168950,"byte_end":169045,"line_start":593,"line_end":593,"column_start":5,"column_end":100}},{"value":"/ created automatically. The `res` value must not be attached to anything else.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":169050,"byte_end":169131,"line_start":594,"line_end":594,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":169857,"byte_end":169871,"line_start":614,"line_end":614,"column_start":12,"column_end":26},"name":"replace_result","qualname":"<DataFlowGraph>::replace_result","value":"fn (&mut self, old_value: Value, new_type: Type) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Replace an instruction result with a new value of type `new_type`.","sig":null,"attributes":[{"value":"/ Replace an instruction result with a new value of type `new_type`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":169562,"byte_end":169632,"line_start":607,"line_end":607,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":169637,"byte_end":169640,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ The `old_value` must be an attached instruction result.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":169645,"byte_end":169704,"line_start":609,"line_end":609,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":169709,"byte_end":169712,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ The old value is left detached, so it should probably be changed into something else.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":169717,"byte_end":169806,"line_start":611,"line_end":611,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":169811,"byte_end":169814,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ Returns the new value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":169819,"byte_end":169845,"line_start":613,"line_end":613,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":170789,"byte_end":170802,"line_start":642,"line_end":642,"column_start":12,"column_end":25},"name":"append_result","qualname":"<DataFlowGraph>::append_result","value":"fn (&mut self, inst: Inst, ty: Type) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Append a new instruction result value to `inst`.\n","sig":null,"attributes":[{"value":"/ Append a new instruction result value to `inst`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":170725,"byte_end":170777,"line_start":641,"line_end":641,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":171293,"byte_end":171308,"line_start":656,"line_end":656,"column_start":12,"column_end":27},"name":"append_inst_arg","qualname":"<DataFlowGraph>::append_inst_arg","value":"fn (&mut self, inst: Inst, new_arg: Value) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Append a new value argument to an instruction.","sig":null,"attributes":[{"value":"/ Append a new value argument to an instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":171162,"byte_end":171212,"line_start":653,"line_end":653,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":171217,"byte_end":171220,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ Panics if the instruction doesn't support arguments.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":171225,"byte_end":171281,"line_start":655,"line_end":655,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":171761,"byte_end":171773,"line_start":667,"line_end":667,"column_start":12,"column_end":24},"name":"first_result","qualname":"<DataFlowGraph>::first_result","value":"fn (&self, inst: Inst) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Get the first result of an instruction.","sig":null,"attributes":[{"value":"/ Get the first result of an instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":171625,"byte_end":171668,"line_start":664,"line_end":664,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":171673,"byte_end":171676,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ This function panics if the instruction doesn't have any result.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":171681,"byte_end":171749,"line_start":666,"line_end":666,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":171993,"byte_end":172004,"line_start":674,"line_end":674,"column_start":12,"column_end":23},"name":"has_results","qualname":"<DataFlowGraph>::has_results","value":"fn (&self, inst: Inst) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test if `inst` has any result values currently.\n","sig":null,"attributes":[{"value":"/ Test if `inst` has any result values currently.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":171930,"byte_end":171981,"line_start":673,"line_end":673,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":172141,"byte_end":172153,"line_start":679,"line_end":679,"column_start":12,"column_end":24},"name":"inst_results","qualname":"<DataFlowGraph>::inst_results","value":"fn (&self, inst: Inst) -> &[Value]","parent":null,"children":[],"decl_id":null,"docs":" Return all the results of an instruction.\n","sig":null,"attributes":[{"value":"/ Return all the results of an instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":172084,"byte_end":172129,"line_start":678,"line_end":678,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":172393,"byte_end":172407,"line_start":685,"line_end":685,"column_start":12,"column_end":26},"name":"call_signature","qualname":"<DataFlowGraph>::call_signature","value":"fn (&self, inst: Inst) -> Option<SigRef>","parent":null,"children":[],"decl_id":null,"docs":" Get the call signature of a direct or indirect call instruction.\n Returns `None` if `inst` is not a call instruction.\n","sig":null,"attributes":[{"value":"/ Get the call signature of a direct or indirect call instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":172253,"byte_end":172321,"line_start":683,"line_end":683,"column_start":5,"column_end":73}},{"value":"/ Returns `None` if `inst` is not a call instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":172326,"byte_end":172381,"line_start":684,"line_end":684,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":172739,"byte_end":172753,"line_start":694,"line_end":694,"column_start":12,"column_end":26},"name":"analyze_branch","qualname":"<DataFlowGraph>::analyze_branch","value":"fn (&self, inst: Inst) -> BranchInfo","parent":null,"children":[],"decl_id":null,"docs":" Check if `inst` is a branch.\n","sig":null,"attributes":[{"value":"/ Check if `inst` is a branch.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":172695,"byte_end":172727,"line_start":693,"line_end":693,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":173265,"byte_end":173284,"line_start":705,"line_end":705,"column_start":12,"column_end":31},"name":"compute_result_type","qualname":"<DataFlowGraph>::compute_result_type","value":"fn (&self, inst: Inst, result_idx: usize, ctrl_typevar: Type) -> Option<Type>","parent":null,"children":[],"decl_id":null,"docs":" Compute the type of an instruction result from opcode constraints and call signatures.","sig":null,"attributes":[{"value":"/ Compute the type of an instruction result from opcode constraints and call signatures.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":172859,"byte_end":172949,"line_start":698,"line_end":698,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":172954,"byte_end":172957,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ This computes the same sequence of result types that `make_inst_results()` above would","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":172962,"byte_end":173052,"line_start":700,"line_end":700,"column_start":5,"column_end":95}},{"value":"/ assign to the created result values, but it does not depend on `make_inst_results()` being","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":173057,"byte_end":173151,"line_start":701,"line_end":701,"column_start":5,"column_end":99}},{"value":"/ called first.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":173156,"byte_end":173173,"line_start":702,"line_end":702,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":173178,"byte_end":173181,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if asked about a result index that is too large.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":173186,"byte_end":173253,"line_start":704,"line_end":704,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":174075,"byte_end":174087,"line_start":728,"line_end":728,"column_start":12,"column_end":24},"name":"ctrl_typevar","qualname":"<DataFlowGraph>::ctrl_typevar","value":"fn (&self, inst: Inst) -> Type","parent":null,"children":[],"decl_id":null,"docs":" Get the controlling type variable, or `INVALID` if `inst` isn't polymorphic.\n","sig":null,"attributes":[{"value":"/ Get the controlling type variable, or `INVALID` if `inst` isn't polymorphic.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":173983,"byte_end":174063,"line_start":727,"line_end":727,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":175277,"byte_end":175287,"line_start":766,"line_end":766,"column_start":12,"column_end":22},"name":"make_block","qualname":"<DataFlowGraph>::make_block","value":"fn (&mut self) -> Block","parent":null,"children":[],"decl_id":null,"docs":" Create a new basic block.\n","sig":null,"attributes":[{"value":"/ Create a new basic block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":175236,"byte_end":175265,"line_start":765,"line_end":765,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":175420,"byte_end":175436,"line_start":771,"line_end":771,"column_start":12,"column_end":28},"name":"num_block_params","qualname":"<DataFlowGraph>::num_block_params","value":"fn (&self, block: Block) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the number of parameters on `block`.\n","sig":null,"attributes":[{"value":"/ Get the number of parameters on `block`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":175364,"byte_end":175408,"line_start":770,"line_end":770,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":175583,"byte_end":175595,"line_start":776,"line_end":776,"column_start":12,"column_end":24},"name":"block_params","qualname":"<DataFlowGraph>::block_params","value":"fn (&self, block: Block) -> &[Value]","parent":null,"children":[],"decl_id":null,"docs":" Get the parameters on `block`.\n","sig":null,"attributes":[{"value":"/ Get the parameters on `block`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":175537,"byte_end":175571,"line_start":775,"line_end":775,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":175763,"byte_end":175780,"line_start":781,"line_end":781,"column_start":12,"column_end":29},"name":"block_param_types","qualname":"<DataFlowGraph>::block_param_types","value":"fn (&self, block: Block) -> Vec<Type>","parent":null,"children":[],"decl_id":null,"docs":" Get the types of the parameters on `block`.\n","sig":null,"attributes":[{"value":"/ Get the types of the parameters on `block`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":175704,"byte_end":175751,"line_start":780,"line_end":780,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":176007,"byte_end":176025,"line_start":789,"line_end":789,"column_start":12,"column_end":30},"name":"append_block_param","qualname":"<DataFlowGraph>::append_block_param","value":"fn (&mut self, block: Block, ty: Type) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Append a parameter with type `ty` to `block`.\n","sig":null,"attributes":[{"value":"/ Append a parameter with type `ty` to `block`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":175946,"byte_end":175995,"line_start":788,"line_end":788,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":176906,"byte_end":176929,"line_start":808,"line_end":808,"column_start":12,"column_end":35},"name":"swap_remove_block_param","qualname":"<DataFlowGraph>::swap_remove_block_param","value":"fn (&mut self, val: Value) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Removes `val` from `block`'s parameters by swapping it with the last parameter on `block`.\n Returns the position of `val` before removal.","sig":null,"attributes":[{"value":"/ Removes `val` from `block`'s parameters by swapping it with the last parameter on `block`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":176406,"byte_end":176500,"line_start":800,"line_end":800,"column_start":5,"column_end":99}},{"value":"/ Returns the position of `val` before removal.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":176505,"byte_end":176554,"line_start":801,"line_end":801,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":176559,"byte_end":176562,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ *Important*: to ensure O(1) deletion, this method swaps the removed parameter with the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":176567,"byte_end":176657,"line_start":803,"line_end":803,"column_start":5,"column_end":95}},{"value":"/ last `block` parameter. This can disrupt all the branch instructions jumping to this","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":176662,"byte_end":176750,"line_start":804,"line_end":804,"column_start":5,"column_end":93}},{"value":"/ `block` for which you have to change the branch argument order if necessary.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":176755,"byte_end":176835,"line_start":805,"line_end":805,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":176840,"byte_end":176843,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ Panics if `val` is not an block parameter.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":176848,"byte_end":176894,"line_start":807,"line_end":807,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":177962,"byte_end":177980,"line_start":837,"line_end":837,"column_start":12,"column_end":30},"name":"remove_block_param","qualname":"<DataFlowGraph>::remove_block_param","value":"fn (&mut self, val: Value) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes `val` from `block`'s parameters by a standard linear time list removal which\n preserves ordering. Also updates the values' data.\n","sig":null,"attributes":[{"value":"/ Removes `val` from `block`'s parameters by a standard linear time list removal which","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":177803,"byte_end":177891,"line_start":835,"line_end":835,"column_start":5,"column_end":93}},{"value":"/ preserves ordering. Also updates the values' data.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":177896,"byte_end":177950,"line_start":836,"line_end":836,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":179210,"byte_end":179228,"line_start":871,"line_end":871,"column_start":12,"column_end":30},"name":"attach_block_param","qualname":"<DataFlowGraph>::attach_block_param","value":"fn (&mut self, block: Block, param: Value) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Append an existing value to `block`'s parameters.","sig":null,"attributes":[{"value":"/ Append an existing value to `block`'s parameters.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":178961,"byte_end":179014,"line_start":866,"line_end":866,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":179019,"byte_end":179022,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ The appended value can't already be attached to something else.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":179027,"byte_end":179094,"line_start":868,"line_end":868,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":179099,"byte_end":179102,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ In almost all cases, you should be using `append_block_param()` instead of this method.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":179107,"byte_end":179198,"line_start":870,"line_end":870,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":180153,"byte_end":180172,"line_start":892,"line_end":892,"column_start":12,"column_end":31},"name":"replace_block_param","qualname":"<DataFlowGraph>::replace_block_param","value":"fn (&mut self, old_value: Value, new_type: Type) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Replace an block parameter with a new value of type `ty`.","sig":null,"attributes":[{"value":"/ Replace an block parameter with a new value of type `ty`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":179661,"byte_end":179722,"line_start":883,"line_end":883,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":179727,"byte_end":179730,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ The `old_value` must be an attached block parameter. It is removed from its place in the list","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":179735,"byte_end":179832,"line_start":885,"line_end":885,"column_start":5,"column_end":102}},{"value":"/ of parameters and replaced by a new value of type `new_type`. The new value gets the same","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":179837,"byte_end":179930,"line_start":886,"line_end":886,"column_start":5,"column_end":98}},{"value":"/ position in the list, and other parameters are not disturbed.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":179935,"byte_end":180000,"line_start":887,"line_end":887,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":180005,"byte_end":180008,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ The old value is left detached, so it should probably be changed into something else.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":180013,"byte_end":180102,"line_start":889,"line_end":889,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":180107,"byte_end":180110,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ Returns the new value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":180115,"byte_end":180141,"line_start":891,"line_end":891,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":181131,"byte_end":181150,"line_start":916,"line_end":916,"column_start":12,"column_end":31},"name":"detach_block_params","qualname":"<DataFlowGraph>::detach_block_params","value":"fn (&mut self, block: Block) -> ValueList","parent":null,"children":[],"decl_id":null,"docs":" Detach all the parameters from `block` and return them as a `ValueList`.","sig":null,"attributes":[{"value":"/ Detach all the parameters from `block` and return them as a `ValueList`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":180797,"byte_end":180873,"line_start":911,"line_end":911,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":180878,"byte_end":180881,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ This is a quite low-level operation. Sensible things to do with the detached block parameters","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":180886,"byte_end":180983,"line_start":913,"line_end":913,"column_start":5,"column_end":102}},{"value":"/ is to put them back on the same block with `attach_block_param()` or change them into aliases","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":180988,"byte_end":181085,"line_start":914,"line_end":914,"column_start":5,"column_end":102}},{"value":"/ with `change_to_alias()`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":181090,"byte_end":181119,"line_start":915,"line_end":915,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":717},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":181769,"byte_end":181780,"line_start":941,"line_end":941,"column_start":12,"column_end":23},"name":"DisplayInst","qualname":"::ir::dfg::DisplayInst","value":"","parent":null,"children":[],"decl_id":null,"docs":" Object that can display an instruction.\n","sig":null,"attributes":[{"value":"/ Object that can display an instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":181714,"byte_end":181757,"line_start":940,"line_end":940,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":183500,"byte_end":183528,"line_start":989,"line_end":989,"column_start":12,"column_end":40},"name":"make_inst_results_for_parser","qualname":"<DataFlowGraph>::make_inst_results_for_parser","value":"fn (&mut self, inst: Inst, ctrl_typevar: Type, reuse: &[Value]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Create result values for `inst`, reusing the provided detached values.\n This is similar to `make_inst_results_reusing` except it's only for use\n in the parser, which needs to reuse previously invalid values.\n","sig":null,"attributes":[{"value":"/ Create result values for `inst`, reusing the provided detached values.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":183251,"byte_end":183325,"line_start":985,"line_end":985,"column_start":5,"column_end":79}},{"value":"/ This is similar to `make_inst_results_reusing` except it's only for use","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":183330,"byte_end":183405,"line_start":986,"line_end":986,"column_start":5,"column_end":80}},{"value":"/ in the parser, which needs to reuse previously invalid values.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":183410,"byte_end":183476,"line_start":987,"line_end":987,"column_start":5,"column_end":71}},{"value":"cold","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":183481,"byte_end":183488,"line_start":988,"line_end":988,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":184885,"byte_end":184914,"line_start":1024,"line_end":1024,"column_start":12,"column_end":41},"name":"append_block_param_for_parser","qualname":"<DataFlowGraph>::append_block_param_for_parser","value":"fn (&mut self, block: Block, ty: Type, val: Value) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Similar to `append_block_param`, append a parameter with type `ty` to\n `block`, but using value `val`. This is only for use by the parser to\n create parameters with specific values.\n","sig":null,"attributes":[{"value":"/ Similar to `append_block_param`, append a parameter with type `ty` to","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":184662,"byte_end":184735,"line_start":1020,"line_end":1020,"column_start":5,"column_end":78}},{"value":"/ `block`, but using value `val`. This is only for use by the parser to","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":184740,"byte_end":184813,"line_start":1021,"line_end":1021,"column_start":5,"column_end":78}},{"value":"/ create parameters with specific values.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":184818,"byte_end":184861,"line_start":1022,"line_end":1022,"column_start":5,"column_end":48}},{"value":"cold","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":184866,"byte_end":184873,"line_start":1023,"line_end":1023,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":185414,"byte_end":185448,"line_start":1037,"line_end":1037,"column_start":12,"column_end":46},"name":"make_value_alias_for_serialization","qualname":"<DataFlowGraph>::make_value_alias_for_serialization","value":"fn (&mut self, src: Value, dest: Value) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Create a new value alias. This is only for use by the parser to create\n aliases with specific values, and the printer for testing.\n","sig":null,"attributes":[{"value":"/ Create a new value alias. This is only for use by the parser to create","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":185249,"byte_end":185323,"line_start":1034,"line_end":1034,"column_start":5,"column_end":79}},{"value":"/ aliases with specific values, and the printer for testing.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":185328,"byte_end":185390,"line_start":1035,"line_end":1035,"column_start":5,"column_end":67}},{"value":"cold","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":185395,"byte_end":185402,"line_start":1036,"line_end":1036,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":186234,"byte_end":186268,"line_start":1056,"line_end":1056,"column_start":12,"column_end":46},"name":"value_alias_dest_for_serialization","qualname":"<DataFlowGraph>::value_alias_dest_for_serialization","value":"fn (&self, v: Value) -> Option<Value>","parent":null,"children":[],"decl_id":null,"docs":" If `v` is already defined as an alias, return its destination value.\n Otherwise return None. This allows the parser to coalesce identical\n alias definitions, and the printer to identify an alias's immediate target.\n","sig":null,"attributes":[{"value":"/ If `v` is already defined as an alias, return its destination value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":185978,"byte_end":186050,"line_start":1052,"line_end":1052,"column_start":5,"column_end":77}},{"value":"/ Otherwise return None. This allows the parser to coalesce identical","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":186055,"byte_end":186126,"line_start":1053,"line_end":1053,"column_start":5,"column_end":76}},{"value":"/ alias definitions, and the printer to identify an alias's immediate target.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":186131,"byte_end":186210,"line_start":1054,"line_end":1054,"column_start":5,"column_end":84}},{"value":"cold","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":186215,"byte_end":186222,"line_start":1055,"line_end":1055,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":186605,"byte_end":186630,"line_start":1067,"line_end":1067,"column_start":12,"column_end":37},"name":"set_alias_type_for_parser","qualname":"<DataFlowGraph>::set_alias_type_for_parser","value":"fn (&mut self, v: Value) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Compute the type of an alias. This is only for use in the parser.\n Returns false if an alias cycle was encountered.\n","sig":null,"attributes":[{"value":"/ Compute the type of an alias. This is only for use in the parser.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":186455,"byte_end":186524,"line_start":1064,"line_end":1064,"column_start":5,"column_end":74}},{"value":"/ Returns false if an alias cycle was encountered.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":186529,"byte_end":186581,"line_start":1065,"line_end":1065,"column_start":5,"column_end":57}},{"value":"cold","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":186586,"byte_end":186593,"line_start":1066,"line_end":1066,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":187238,"byte_end":187267,"line_start":1085,"line_end":1085,"column_start":12,"column_end":41},"name":"make_invalid_value_for_parser","qualname":"<DataFlowGraph>::make_invalid_value_for_parser","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Create an invalid value, to pad the index space. This is only for use by\n the parser to pad out the value index space.\n","sig":null,"attributes":[{"value":"/ Create an invalid value, to pad the index space. This is only for use by","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":187085,"byte_end":187161,"line_start":1082,"line_end":1082,"column_start":5,"column_end":81}},{"value":"/ the parser to pad out the value index space.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":187166,"byte_end":187214,"line_start":1083,"line_end":1083,"column_start":5,"column_end":53}},{"value":"cold","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":187219,"byte_end":187226,"line_start":1084,"line_end":1084,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":187591,"byte_end":187616,"line_start":1096,"line_end":1096,"column_start":12,"column_end":37},"name":"value_is_valid_for_parser","qualname":"<DataFlowGraph>::value_is_valid_for_parser","value":"fn (&self, v: Value) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a value reference is valid, while being aware of aliases which\n may be unresolved while parsing.\n","sig":null,"attributes":[{"value":"/ Check if a value reference is valid, while being aware of aliases which","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":187451,"byte_end":187526,"line_start":1093,"line_end":1093,"column_start":5,"column_end":80}},{"value":"/ may be unresolved while parsing.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":187531,"byte_end":187567,"line_start":1094,"line_end":1094,"column_start":5,"column_end":41}},{"value":"cold","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":187572,"byte_end":187579,"line_start":1095,"line_end":1095,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":736},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"entities","qualname":"::ir::entities","value":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","parent":null,"children":[{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":5553},{"krate":0,"index":5576},{"krate":0,"index":5574},{"krate":0,"index":5570},{"krate":0,"index":5571},{"krate":0,"index":5567},{"krate":0,"index":5568},{"krate":0,"index":5564},{"krate":0,"index":5558},{"krate":0,"index":5556},{"krate":0,"index":5581},{"krate":0,"index":5584},{"krate":0,"index":5586},{"krate":0,"index":5577},{"krate":0,"index":5579},{"krate":0,"index":740},{"krate":0,"index":5589},{"krate":0,"index":5612},{"krate":0,"index":5610},{"krate":0,"index":5606},{"krate":0,"index":5607},{"krate":0,"index":5603},{"krate":0,"index":5604},{"krate":0,"index":5600},{"krate":0,"index":5594},{"krate":0,"index":5592},{"krate":0,"index":5617},{"krate":0,"index":5620},{"krate":0,"index":5622},{"krate":0,"index":5613},{"krate":0,"index":5615},{"krate":0,"index":742},{"krate":0,"index":5625},{"krate":0,"index":5648},{"krate":0,"index":5646},{"krate":0,"index":5642},{"krate":0,"index":5643},{"krate":0,"index":5639},{"krate":0,"index":5640},{"krate":0,"index":5636},{"krate":0,"index":5630},{"krate":0,"index":5628},{"krate":0,"index":5653},{"krate":0,"index":5656},{"krate":0,"index":5658},{"krate":0,"index":5649},{"krate":0,"index":5651},{"krate":0,"index":5661},{"krate":0,"index":5684},{"krate":0,"index":5682},{"krate":0,"index":5678},{"krate":0,"index":5679},{"krate":0,"index":5675},{"krate":0,"index":5676},{"krate":0,"index":5672},{"krate":0,"index":5666},{"krate":0,"index":5664},{"krate":0,"index":5689},{"krate":0,"index":5692},{"krate":0,"index":5694},{"krate":0,"index":5685},{"krate":0,"index":5687},{"krate":0,"index":744},{"krate":0,"index":5697},{"krate":0,"index":5720},{"krate":0,"index":5718},{"krate":0,"index":5714},{"krate":0,"index":5715},{"krate":0,"index":5711},{"krate":0,"index":5712},{"krate":0,"index":5708},{"krate":0,"index":5702},{"krate":0,"index":5700},{"krate":0,"index":5725},{"krate":0,"index":5728},{"krate":0,"index":5730},{"krate":0,"index":5721},{"krate":0,"index":5723},{"krate":0,"index":746},{"krate":0,"index":5733},{"krate":0,"index":5756},{"krate":0,"index":5754},{"krate":0,"index":5750},{"krate":0,"index":5751},{"krate":0,"index":5747},{"krate":0,"index":5748},{"krate":0,"index":5744},{"krate":0,"index":5742},{"krate":0,"index":5736},{"krate":0,"index":5761},{"krate":0,"index":5764},{"krate":0,"index":5766},{"krate":0,"index":5757},{"krate":0,"index":5759},{"krate":0,"index":748},{"krate":0,"index":5769},{"krate":0,"index":5792},{"krate":0,"index":5790},{"krate":0,"index":5786},{"krate":0,"index":5787},{"krate":0,"index":5783},{"krate":0,"index":5784},{"krate":0,"index":5780},{"krate":0,"index":5774},{"krate":0,"index":5772},{"krate":0,"index":5797},{"krate":0,"index":5800},{"krate":0,"index":5802},{"krate":0,"index":5793},{"krate":0,"index":5795},{"krate":0,"index":750},{"krate":0,"index":5805},{"krate":0,"index":5828},{"krate":0,"index":5826},{"krate":0,"index":5822},{"krate":0,"index":5823},{"krate":0,"index":5819},{"krate":0,"index":5820},{"krate":0,"index":5816},{"krate":0,"index":5810},{"krate":0,"index":5808},{"krate":0,"index":5833},{"krate":0,"index":5836},{"krate":0,"index":5838},{"krate":0,"index":5829},{"krate":0,"index":5831},{"krate":0,"index":752},{"krate":0,"index":5841},{"krate":0,"index":5864},{"krate":0,"index":5862},{"krate":0,"index":5858},{"krate":0,"index":5859},{"krate":0,"index":5855},{"krate":0,"index":5856},{"krate":0,"index":5852},{"krate":0,"index":5846},{"krate":0,"index":5844},{"krate":0,"index":5869},{"krate":0,"index":5872},{"krate":0,"index":5874},{"krate":0,"index":5865},{"krate":0,"index":5867},{"krate":0,"index":754},{"krate":0,"index":5877},{"krate":0,"index":5900},{"krate":0,"index":5898},{"krate":0,"index":5894},{"krate":0,"index":5895},{"krate":0,"index":5891},{"krate":0,"index":5892},{"krate":0,"index":5888},{"krate":0,"index":5882},{"krate":0,"index":5880},{"krate":0,"index":5905},{"krate":0,"index":5908},{"krate":0,"index":5910},{"krate":0,"index":5901},{"krate":0,"index":5903},{"krate":0,"index":756},{"krate":0,"index":5913},{"krate":0,"index":5936},{"krate":0,"index":5934},{"krate":0,"index":5930},{"krate":0,"index":5931},{"krate":0,"index":5927},{"krate":0,"index":5928},{"krate":0,"index":5924},{"krate":0,"index":5918},{"krate":0,"index":5916},{"krate":0,"index":5941},{"krate":0,"index":5944},{"krate":0,"index":5946},{"krate":0,"index":5937},{"krate":0,"index":5939},{"krate":0,"index":758},{"krate":0,"index":5949},{"krate":0,"index":5972},{"krate":0,"index":5970},{"krate":0,"index":5966},{"krate":0,"index":5967},{"krate":0,"index":5963},{"krate":0,"index":5964},{"krate":0,"index":5960},{"krate":0,"index":5954},{"krate":0,"index":5952},{"krate":0,"index":5977},{"krate":0,"index":5980},{"krate":0,"index":5982},{"krate":0,"index":5973},{"krate":0,"index":5975},{"krate":0,"index":760},{"krate":0,"index":5985},{"krate":0,"index":6038},{"krate":0,"index":6036},{"krate":0,"index":6032},{"krate":0,"index":6033},{"krate":0,"index":6029},{"krate":0,"index":6030},{"krate":0,"index":6026},{"krate":0,"index":6020},{"krate":0,"index":6018},{"krate":0,"index":762},{"krate":0,"index":764},{"krate":0,"index":766},{"krate":0,"index":768},{"krate":0,"index":770},{"krate":0,"index":772},{"krate":0,"index":774},{"krate":0,"index":776},{"krate":0,"index":778},{"krate":0,"index":780},{"krate":0,"index":782},{"krate":0,"index":784}],"decl_id":null,"docs":" Cranelift IR entity references.","sig":null,"attributes":[{"value":"! Cranelift IR entity references.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":194905,"byte_end":194940,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":194941,"byte_end":194944,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Instructions in Cranelift IR need to reference other entities in the function. This can be other","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":194945,"byte_end":195045,"line_start":3,"line_end":3,"column_start":1,"column_end":101}},{"value":"! parts of the function like basic blocks or stack slots, or it can be external entities","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":195046,"byte_end":195136,"line_start":4,"line_end":4,"column_start":1,"column_end":91}},{"value":"! that are declared in the function preamble in the text format.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":195137,"byte_end":195203,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":195204,"byte_end":195207,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! These entity references in instruction operands are not implemented as Rust references both","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":195208,"byte_end":195303,"line_start":7,"line_end":7,"column_start":1,"column_end":96}},{"value":"! because Rust's ownership and mutability rules make it difficult, and because 64-bit pointers","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":195304,"byte_end":195400,"line_start":8,"line_end":8,"column_start":1,"column_end":97}},{"value":"! take up a lot of space, and we want a compact in-memory representation. Instead, entity","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":195401,"byte_end":195492,"line_start":9,"line_end":9,"column_start":1,"column_end":92}},{"value":"! references are structs wrapping a `u32` index into a table in the `Function` main data","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":195493,"byte_end":195583,"line_start":10,"line_end":10,"column_start":1,"column_end":91}},{"value":"! structure. There is a separate index type for each entity type, so we don't lose type safety.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":195584,"byte_end":195681,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":195682,"byte_end":195685,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! The `entities` module defines public types for the entity references along with constants","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":195686,"byte_end":195779,"line_start":13,"line_end":13,"column_start":1,"column_end":94}},{"value":"! representing an invalid reference. We prefer to use `Option<EntityRef>` whenever possible, but","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":195780,"byte_end":195878,"line_start":14,"line_end":14,"column_start":1,"column_end":99}},{"value":"! unfortunately that type is twice as large as the 32-bit index type on its own. Thus, compact","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":195879,"byte_end":195975,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"! data structures use the `PackedOption<EntityRef>` representation, while function arguments and","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":195976,"byte_end":196074,"line_start":16,"line_end":16,"column_start":1,"column_end":99}},{"value":"! return values prefer the more Rust-like `Option<EntityRef>` variant.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":196075,"byte_end":196147,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":196148,"byte_end":196151,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! The entity references all implement the `Display` trait in a way that matches the textual IR","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":196152,"byte_end":196248,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"! format.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":196249,"byte_end":196260,"line_start":20,"line_end":20,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5553},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":196885,"byte_end":196890,"line_start":36,"line_end":36,"column_start":12,"column_end":17},"name":"Block","qualname":"::ir::entities::Block","value":"","parent":null,"children":[],"decl_id":null,"docs":" An opaque reference to a [basic block](https://en.wikipedia.org/wiki/Basic_block) in a\n [`Function`](super::function::Function).","sig":null,"attributes":[{"value":"/ An opaque reference to a [basic block](https://en.wikipedia.org/wiki/Basic_block) in a","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":196395,"byte_end":196485,"line_start":28,"line_end":28,"column_start":1,"column_end":91}},{"value":"/ [`Function`](super::function::Function).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":196486,"byte_end":196530,"line_start":29,"line_end":29,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":196531,"byte_end":196534,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ You can get a `Block` using","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":196535,"byte_end":196566,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/ [`FunctionBuilder::create_block`](https://docs.rs/cranelift-frontend/*/cranelift_frontend/struct.FunctionBuilder.html#method.create_block)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":196567,"byte_end":196709,"line_start":32,"line_end":32,"column_start":1,"column_end":143}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":196710,"byte_end":196713,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ While the order is stable, it is arbitrary and does not necessarily resemble the layout order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":196714,"byte_end":196812,"line_start":34,"line_end":34,"column_start":1,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":197110,"byte_end":197121,"line_start":43,"line_end":43,"column_start":12,"column_end":23},"name":"with_number","qualname":"<Block>::with_number","value":"fn (n: u32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new block reference from its number. This corresponds to the `blockNN` representation.","sig":null,"attributes":[{"value":"/ Create a new block reference from its number. This corresponds to the `blockNN` representation.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":196945,"byte_end":197044,"line_start":40,"line_end":40,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":197049,"byte_end":197052,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This method is for use by the parser.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":197057,"byte_end":197098,"line_start":42,"line_end":42,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5589},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":198041,"byte_end":198046,"line_start":68,"line_end":68,"column_start":12,"column_end":17},"name":"Value","qualname":"::ir::entities::Value","value":"","parent":null,"children":[],"decl_id":null,"docs":" An opaque reference to an SSA value.","sig":null,"attributes":[{"value":"/ An opaque reference to an SSA value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":197253,"byte_end":197293,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":197294,"byte_end":197297,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ You can get a constant `Value` from the following","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":197298,"byte_end":197351,"line_start":54,"line_end":54,"column_start":1,"column_end":54}},{"value":"/ [`InstBuilder`](super::InstBuilder) instructions:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":197352,"byte_end":197405,"line_start":55,"line_end":55,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":197406,"byte_end":197409,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ - [`iconst`](super::InstBuilder::iconst) for integer constants","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":197410,"byte_end":197476,"line_start":57,"line_end":57,"column_start":1,"column_end":67}},{"value":"/ - [`f32const`](super::InstBuilder::f32const) for 32-bit float constants","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":197477,"byte_end":197552,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ - [`f64const`](super::InstBuilder::f64const) for 64-bit float constants","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":197553,"byte_end":197628,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ - [`bconst`](super::InstBuilder::bconst) for boolean constants","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":197629,"byte_end":197695,"line_start":60,"line_end":60,"column_start":1,"column_end":67}},{"value":"/ - [`vconst`](super::InstBuilder::vconst) for vector constants","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":197696,"byte_end":197761,"line_start":61,"line_end":61,"column_start":1,"column_end":66}},{"value":"/ - [`null`](super::InstBuilder::null) for null reference constants","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":197762,"byte_end":197831,"line_start":62,"line_end":62,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":197832,"byte_end":197835,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Any `InstBuilder` instruction that has an output will also return a `Value`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":197836,"byte_end":197916,"line_start":64,"line_end":64,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":197917,"byte_end":197920,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ While the order is stable, it is arbitrary.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":197921,"byte_end":197968,"line_start":66,"line_end":66,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":198263,"byte_end":198274,"line_start":76,"line_end":76,"column_start":12,"column_end":23},"name":"with_number","qualname":"<Value>::with_number","value":"fn (n: u32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a value from its number representation.\n This is the number in the `vNN` notation.","sig":null,"attributes":[{"value":"/ Create a value from its number representation.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":198097,"byte_end":198147,"line_start":72,"line_end":72,"column_start":5,"column_end":55}},{"value":"/ This is the number in the `vNN` notation.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":198152,"byte_end":198197,"line_start":73,"line_end":73,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":198202,"byte_end":198205,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This method is for use by the parser.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":198210,"byte_end":198251,"line_start":75,"line_end":75,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5625},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":199282,"byte_end":199286,"line_start":100,"line_end":100,"column_start":12,"column_end":16},"name":"Inst","qualname":"::ir::entities::Inst","value":"","parent":null,"children":[],"decl_id":null,"docs":" An opaque reference to an instruction in a [`Function`](super::Function).","sig":null,"attributes":[{"value":"/ An opaque reference to an instruction in a [`Function`](super::Function).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":198410,"byte_end":198487,"line_start":85,"line_end":85,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":198488,"byte_end":198491,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Most usage of `Inst` is internal. `Inst`ructions are returned by","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":198492,"byte_end":198560,"line_start":87,"line_end":87,"column_start":1,"column_end":69}},{"value":"/ [`InstBuilder`](super::InstBuilder) instructions that do not return a","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":198561,"byte_end":198634,"line_start":88,"line_end":88,"column_start":1,"column_end":74}},{"value":"/ [`Value`], such as control flow and trap instructions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":198635,"byte_end":198693,"line_start":89,"line_end":89,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":198694,"byte_end":198697,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ If you look around the API, you can find many inventive uses for `Inst`,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":198698,"byte_end":198774,"line_start":91,"line_end":91,"column_start":1,"column_end":77}},{"value":"/ such as [annotating specific instructions with a comment][inst_comment]","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":198775,"byte_end":198850,"line_start":92,"line_end":92,"column_start":1,"column_end":76}},{"value":"/ or [performing reflection at compile time](super::DataFlowGraph::analyze_branch)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":198851,"byte_end":198935,"line_start":93,"line_end":93,"column_start":1,"column_end":85}},{"value":"/ on the type of instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":198936,"byte_end":198967,"line_start":94,"line_end":94,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":198968,"byte_end":198971,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [inst_comment]: https://github.com/bjorn3/rustc_codegen_cranelift/blob/0f8814fd6da3d436a90549d4bb19b94034f2b19c/src/pretty_clif.rs","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":198972,"byte_end":199106,"line_start":96,"line_end":96,"column_start":1,"column_end":135}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":199107,"byte_end":199110,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ While the order is stable, it is arbitrary and does not necessarily resemble the layout order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":199111,"byte_end":199209,"line_start":98,"line_end":98,"column_start":1,"column_end":99}}]},{"kind":"Struct","id":{"krate":0,"index":5661},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":200117,"byte_end":200126,"line_start":119,"line_end":119,"column_start":12,"column_end":21},"name":"StackSlot","qualname":"::ir::entities::StackSlot","value":"","parent":null,"children":[],"decl_id":null,"docs":" An opaque reference to a stack slot.","sig":null,"attributes":[{"value":"/ An opaque reference to a stack slot.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":199322,"byte_end":199362,"line_start":103,"line_end":103,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":199363,"byte_end":199366,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ Stack slots represent an address on the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":199367,"byte_end":199410,"line_start":105,"line_end":105,"column_start":1,"column_end":44}},{"value":"/ [call stack](https://en.wikipedia.org/wiki/Call_stack).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":199411,"byte_end":199470,"line_start":106,"line_end":106,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":199471,"byte_end":199474,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ `StackSlot`s can be created with","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":199475,"byte_end":199511,"line_start":108,"line_end":108,"column_start":1,"column_end":37}},{"value":"/ [`FunctionBuilder::create_stackslot`](https://docs.rs/cranelift-frontend/*/cranelift_frontend/struct.FunctionBuilder.html#method.create_stack_slot).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":199512,"byte_end":199664,"line_start":109,"line_end":109,"column_start":1,"column_end":153}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":199665,"byte_end":199668,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ `StackSlot`s are most often used with","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":199669,"byte_end":199710,"line_start":111,"line_end":111,"column_start":1,"column_end":42}},{"value":"/ [`stack_addr`](super::InstBuilder::stack_addr),","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":199711,"byte_end":199762,"line_start":112,"line_end":112,"column_start":1,"column_end":52}},{"value":"/ [`stack_load`](super::InstBuilder::stack_load), and","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":199763,"byte_end":199818,"line_start":113,"line_end":113,"column_start":1,"column_end":56}},{"value":"/ [`stack_store`](super::InstBuilder::stack_store).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":199819,"byte_end":199872,"line_start":114,"line_end":114,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":199873,"byte_end":199876,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ While the order is stable, it is arbitrary and does not necessarily resemble the stack order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":199877,"byte_end":199974,"line_start":116,"line_end":116,"column_start":1,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":200306,"byte_end":200317,"line_start":126,"line_end":126,"column_start":12,"column_end":23},"name":"with_number","qualname":"<StackSlot>::with_number","value":"fn (n: u32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new stack slot reference from its number.","sig":null,"attributes":[{"value":"/ Create a new stack slot reference from its number.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":200186,"byte_end":200240,"line_start":123,"line_end":123,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":200245,"byte_end":200248,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ This method is for use by the parser.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":200253,"byte_end":200294,"line_start":125,"line_end":125,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5697},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":201649,"byte_end":201660,"line_start":155,"line_end":155,"column_start":12,"column_end":23},"name":"GlobalValue","qualname":"::ir::entities::GlobalValue","value":"","parent":null,"children":[],"decl_id":null,"docs":" An opaque reference to a global value.","sig":null,"attributes":[{"value":"/ An opaque reference to a global value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":200449,"byte_end":200491,"line_start":135,"line_end":135,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":200492,"byte_end":200495,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ A `GlobalValue` is a [`Value`](Value) that will be live across the entire","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":200496,"byte_end":200573,"line_start":137,"line_end":137,"column_start":1,"column_end":78}},{"value":"/ function lifetime. It can be preloaded from other global values.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":200574,"byte_end":200642,"line_start":138,"line_end":138,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":200643,"byte_end":200646,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ You can create a `GlobalValue` in the following ways:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":200647,"byte_end":200704,"line_start":140,"line_end":140,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":200705,"byte_end":200708,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ - When compiling to WASM, you can use it to load values from a","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":200709,"byte_end":200775,"line_start":142,"line_end":142,"column_start":1,"column_end":67}},{"value":"/ [`VmContext`](super::GlobalValueData::VMContext) using","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":200776,"byte_end":200834,"line_start":143,"line_end":143,"column_start":1,"column_end":59}},{"value":"/ [`FuncEnvironment::make_global`](https://docs.rs/cranelift-wasm/*/cranelift_wasm/trait.FuncEnvironment.html#tymethod.make_global).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":200835,"byte_end":200969,"line_start":144,"line_end":144,"column_start":1,"column_end":135}},{"value":"/ - When compiling to native code, you can use it for objects in static memory with","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":200970,"byte_end":201055,"line_start":145,"line_end":145,"column_start":1,"column_end":86}},{"value":"/ [`Module::declare_data_in_func`](https://docs.rs/cranelift-module/*/cranelift_module/struct.Module.html#method.declare_data_in_func).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":201056,"byte_end":201193,"line_start":146,"line_end":146,"column_start":1,"column_end":138}},{"value":"/ - For any compilation target, it can be registered with","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":201194,"byte_end":201253,"line_start":147,"line_end":147,"column_start":1,"column_end":60}},{"value":"/ [`FunctionBuilder::create_global_value`](https://docs.rs/cranelift-frontend/*/cranelift_frontend/struct.FunctionBuilder.html#method.create_global_value).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":201254,"byte_end":201411,"line_start":148,"line_end":148,"column_start":1,"column_end":158}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":201412,"byte_end":201415,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ `GlobalValue`s can be retrieved with","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":201416,"byte_end":201456,"line_start":150,"line_end":150,"column_start":1,"column_end":41}},{"value":"/ [`InstBuilder:global_value`](super::InstBuilder::global_value).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":201457,"byte_end":201524,"line_start":151,"line_end":151,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":201525,"byte_end":201528,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ While the order is stable, it is arbitrary.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":201529,"byte_end":201576,"line_start":153,"line_end":153,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":201846,"byte_end":201857,"line_start":162,"line_end":162,"column_start":12,"column_end":23},"name":"with_number","qualname":"<GlobalValue>::with_number","value":"fn (n: u32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new global value reference from its number.","sig":null,"attributes":[{"value":"/ Create a new global value reference from its number.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":201724,"byte_end":201780,"line_start":159,"line_end":159,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":201785,"byte_end":201788,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ This method is for use by the parser.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":201793,"byte_end":201834,"line_start":161,"line_end":161,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5733},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":202463,"byte_end":202471,"line_start":180,"line_end":180,"column_start":12,"column_end":20},"name":"Constant","qualname":"::ir::entities::Constant","value":"","parent":null,"children":[],"decl_id":null,"docs":" An opaque reference to a constant.","sig":null,"attributes":[{"value":"/ An opaque reference to a constant.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":201989,"byte_end":202027,"line_start":171,"line_end":171,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":202028,"byte_end":202031,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ You can store [`ConstantData`](super::ConstantData) in a","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":202032,"byte_end":202092,"line_start":173,"line_end":173,"column_start":1,"column_end":61}},{"value":"/ [`ConstantPool`](super::ConstantPool) for efficient storage and retrieval.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":202093,"byte_end":202171,"line_start":174,"line_end":174,"column_start":1,"column_end":79}},{"value":"/ See [`ConstantPool::insert`](super::ConstantPool::insert).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":202172,"byte_end":202234,"line_start":175,"line_end":175,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":202235,"byte_end":202238,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ While the order is stable, it is arbitrary and does not necessarily resemble the order in which","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":202239,"byte_end":202338,"line_start":177,"line_end":177,"column_start":1,"column_end":100}},{"value":"/ the constants are written in the constant pool.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":202339,"byte_end":202390,"line_start":178,"line_end":178,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":202643,"byte_end":202654,"line_start":187,"line_end":187,"column_start":12,"column_end":23},"name":"with_number","qualname":"<Constant>::with_number","value":"fn (n: u32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a const reference from its number.","sig":null,"attributes":[{"value":"/ Create a const reference from its number.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":202532,"byte_end":202577,"line_start":184,"line_end":184,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":202582,"byte_end":202585,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ This method is for use by the parser.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":202590,"byte_end":202631,"line_start":186,"line_end":186,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5769},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":203271,"byte_end":203280,"line_start":205,"line_end":205,"column_start":12,"column_end":21},"name":"Immediate","qualname":"::ir::entities::Immediate","value":"","parent":null,"children":[],"decl_id":null,"docs":" An opaque reference to an immediate.","sig":null,"attributes":[{"value":"/ An opaque reference to an immediate.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":202786,"byte_end":202826,"line_start":196,"line_end":196,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":202827,"byte_end":202830,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ Some immediates (e.g. SIMD shuffle masks) are too large to store in the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":202831,"byte_end":202906,"line_start":198,"line_end":198,"column_start":1,"column_end":76}},{"value":"/ [`InstructionData`](super::instructions::InstructionData) struct and therefore must be","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":202907,"byte_end":202997,"line_start":199,"line_end":199,"column_start":1,"column_end":91}},{"value":"/ tracked separately in [`DataFlowGraph::immediates`](super::dfg::DataFlowGraph). `Immediate`","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":202998,"byte_end":203093,"line_start":200,"line_end":200,"column_start":1,"column_end":96}},{"value":"/ provides a way to reference values stored there.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":203094,"byte_end":203146,"line_start":201,"line_end":201,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":203147,"byte_end":203150,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ While the order is stable, it is arbitrary.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":203151,"byte_end":203198,"line_start":203,"line_end":203,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":203457,"byte_end":203468,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"with_number","qualname":"<Immediate>::with_number","value":"fn (n: u32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create an immediate reference from its number.","sig":null,"attributes":[{"value":"/ Create an immediate reference from its number.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":203341,"byte_end":203391,"line_start":209,"line_end":209,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":203396,"byte_end":203399,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ This method is for use by the parser.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":203404,"byte_end":203445,"line_start":211,"line_end":211,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5805},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":204437,"byte_end":204446,"line_start":235,"line_end":235,"column_start":12,"column_end":21},"name":"JumpTable","qualname":"::ir::entities::JumpTable","value":"","parent":null,"children":[],"decl_id":null,"docs":" An opaque reference to a [jump table](https://en.wikipedia.org/wiki/Branch_table).","sig":null,"attributes":[{"value":"/ An opaque reference to a [jump table](https://en.wikipedia.org/wiki/Branch_table).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":203600,"byte_end":203686,"line_start":221,"line_end":221,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":203687,"byte_end":203690,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ `JumpTable`s are used for indirect branching and are specialized for dense,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":203691,"byte_end":203770,"line_start":223,"line_end":223,"column_start":1,"column_end":80}},{"value":"/ 0-based jump offsets. If you want a jump table which doesn't start at 0,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":203771,"byte_end":203847,"line_start":224,"line_end":224,"column_start":1,"column_end":77}},{"value":"/ or is not contiguous, consider using a [`Switch`](https://docs.rs/cranelift-frontend/*/cranelift_frontend/struct.Switch.html) instead.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":203848,"byte_end":203986,"line_start":225,"line_end":225,"column_start":1,"column_end":139}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":203987,"byte_end":203990,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ `JumpTable` are used with [`br_table`](super::InstBuilder::br_table).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":203991,"byte_end":204064,"line_start":227,"line_end":227,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":204065,"byte_end":204068,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ `JumpTable`s can be created with","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":204069,"byte_end":204105,"line_start":229,"line_end":229,"column_start":1,"column_end":37}},{"value":"/ [`create_jump_table`](https://docs.rs/cranelift-frontend/*/cranelift_frontend/struct.FunctionBuilder.html#method.create_jump_table).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":204106,"byte_end":204242,"line_start":230,"line_end":230,"column_start":1,"column_end":137}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":204243,"byte_end":204246,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ While the order is stable, it is arbitrary.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":204247,"byte_end":204294,"line_start":232,"line_end":232,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":204626,"byte_end":204637,"line_start":242,"line_end":242,"column_start":12,"column_end":23},"name":"with_number","qualname":"<JumpTable>::with_number","value":"fn (n: u32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new jump table reference from its number.","sig":null,"attributes":[{"value":"/ Create a new jump table reference from its number.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":204506,"byte_end":204560,"line_start":239,"line_end":239,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":204565,"byte_end":204568,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ This method is for use by the parser.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":204573,"byte_end":204614,"line_start":241,"line_end":241,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5841},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":206000,"byte_end":206007,"line_start":270,"line_end":270,"column_start":12,"column_end":19},"name":"FuncRef","qualname":"::ir::entities::FuncRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" An opaque reference to another [`Function`](super::Function).","sig":null,"attributes":[{"value":"/ An opaque reference to another [`Function`](super::Function).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":204769,"byte_end":204834,"line_start":251,"line_end":251,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":204835,"byte_end":204838,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ `FuncRef`s are used for [direct](super::InstBuilder::call) function calls","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":204839,"byte_end":204916,"line_start":253,"line_end":253,"column_start":1,"column_end":78}},{"value":"/ and by [`func_addr`](super::InstBuilder::func_addr) for use in","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":204917,"byte_end":204983,"line_start":254,"line_end":254,"column_start":1,"column_end":67}},{"value":"/ [indirect](super::InstBuilder::call_indirect) function calls.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":204984,"byte_end":205049,"line_start":255,"line_end":255,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":205050,"byte_end":205053,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ `FuncRef`s can be created with","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":205054,"byte_end":205088,"line_start":257,"line_end":257,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":205089,"byte_end":205092,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ - [`FunctionBuilder::import_function`](https://docs.rs/cranelift-frontend/*/cranelift_frontend/struct.FunctionBuilder.html#method.import_function)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":205093,"byte_end":205243,"line_start":259,"line_end":259,"column_start":1,"column_end":151}},{"value":"/ for external functions","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":205244,"byte_end":205270,"line_start":260,"line_end":260,"column_start":1,"column_end":27}},{"value":"/ - [`Module::declare_func_in_func`](https://docs.rs/cranelift-module/*/cranelift_module/struct.Module.html#method.declare_func_in_func)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":205271,"byte_end":205409,"line_start":261,"line_end":261,"column_start":1,"column_end":139}},{"value":"/ for functions declared elsewhere in the same native","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":205410,"byte_end":205465,"line_start":262,"line_end":262,"column_start":1,"column_end":56}},{"value":"/ [`Module`](https://docs.rs/cranelift-module/*/cranelift_module/struct.Module.html)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":205466,"byte_end":205552,"line_start":263,"line_end":263,"column_start":1,"column_end":87}},{"value":"/ - [`FuncEnvironment::make_direct_func`](https://docs.rs/cranelift-wasm/*/cranelift_wasm/trait.FuncEnvironment.html#tymethod.make_direct_func)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":205553,"byte_end":205698,"line_start":264,"line_end":264,"column_start":1,"column_end":146}},{"value":"/ for functions declared in the same WebAssembly","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":205699,"byte_end":205749,"line_start":265,"line_end":265,"column_start":1,"column_end":51}},{"value":"/ [`FuncEnvironment`](https://docs.rs/cranelift-wasm/*/cranelift_wasm/trait.FuncEnvironment.html#tymethod.make_direct_func)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":205750,"byte_end":205875,"line_start":266,"line_end":266,"column_start":1,"column_end":126}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":205876,"byte_end":205879,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ While the order is stable, it is arbitrary.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":205880,"byte_end":205927,"line_start":268,"line_end":268,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":206190,"byte_end":206201,"line_start":277,"line_end":277,"column_start":12,"column_end":23},"name":"with_number","qualname":"<FuncRef>::with_number","value":"fn (n: u32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new external function reference from its number.","sig":null,"attributes":[{"value":"/ Create a new external function reference from its number.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":206063,"byte_end":206124,"line_start":274,"line_end":274,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":206129,"byte_end":206132,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ This method is for use by the parser.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":206137,"byte_end":206178,"line_start":276,"line_end":276,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5877},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":207316,"byte_end":207322,"line_start":301,"line_end":301,"column_start":12,"column_end":18},"name":"SigRef","qualname":"::ir::entities::SigRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" An opaque reference to a function [`Signature`](super::Signature).","sig":null,"attributes":[{"value":"/ An opaque reference to a function [`Signature`](super::Signature).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":206333,"byte_end":206403,"line_start":286,"line_end":286,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":206404,"byte_end":206407,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ `SigRef`s are used to declare a function with","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":206408,"byte_end":206457,"line_start":288,"line_end":288,"column_start":1,"column_end":50}},{"value":"/ [`FunctionBuiler::import_function`](https://docs.rs/cranelift-frontend/*/cranelift_frontend/struct.FunctionBuilder.html#method.import_function)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":206458,"byte_end":206605,"line_start":289,"line_end":289,"column_start":1,"column_end":148}},{"value":"/ as well as to make an [indirect function call](super::InstBuilder::call_indirect).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":206606,"byte_end":206692,"line_start":290,"line_end":290,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":206693,"byte_end":206696,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ `SigRef`s can be created with","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":206697,"byte_end":206730,"line_start":292,"line_end":292,"column_start":1,"column_end":34}},{"value":"/ [`FunctionBuilder::import_signature`](https://docs.rs/cranelift-frontend/*/cranelift_frontend/struct.FunctionBuilder.html#method.import_signature).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":206731,"byte_end":206882,"line_start":293,"line_end":293,"column_start":1,"column_end":152}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":206883,"byte_end":206886,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ You can retrieve the [`Signature`](super::Signature) that was used to create a `SigRef` with","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":206887,"byte_end":206983,"line_start":295,"line_end":295,"column_start":1,"column_end":97}},{"value":"/ [`FunctionBuilder::signature`](https://docs.rs/cranelift-frontend/*/cranelift_frontend/struct.FunctionBuilder.html#method.signature) or","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":206984,"byte_end":207123,"line_start":296,"line_end":296,"column_start":1,"column_end":140}},{"value":"/ [`func.dfg.signatures`](super::dfg::DataFlowGraph::signatures).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":207124,"byte_end":207191,"line_start":297,"line_end":297,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":207192,"byte_end":207195,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ While the order is stable, it is arbitrary.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":207196,"byte_end":207243,"line_start":299,"line_end":299,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":207505,"byte_end":207516,"line_start":308,"line_end":308,"column_start":12,"column_end":23},"name":"with_number","qualname":"<SigRef>::with_number","value":"fn (n: u32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new function signature reference from its number.","sig":null,"attributes":[{"value":"/ Create a new function signature reference from its number.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":207377,"byte_end":207439,"line_start":305,"line_end":305,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":207444,"byte_end":207447,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ This method is for use by the parser.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":207452,"byte_end":207493,"line_start":307,"line_end":307,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5913},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":208154,"byte_end":208158,"line_start":326,"line_end":326,"column_start":12,"column_end":16},"name":"Heap","qualname":"::ir::entities::Heap","value":"","parent":null,"children":[],"decl_id":null,"docs":" An opaque reference to a [heap](https://en.wikipedia.org/wiki/Memory_management#DYNAMIC).","sig":null,"attributes":[{"value":"/ An opaque reference to a [heap](https://en.wikipedia.org/wiki/Memory_management#DYNAMIC).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":207648,"byte_end":207741,"line_start":317,"line_end":317,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":207742,"byte_end":207745,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ Heaps are used to access dynamically allocated memory through","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":207746,"byte_end":207811,"line_start":319,"line_end":319,"column_start":1,"column_end":66}},{"value":"/ [`heap_addr`](super::InstBuilder::heap_addr).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":207812,"byte_end":207861,"line_start":320,"line_end":320,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":207862,"byte_end":207865,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ To create a heap, use [`FunctionBuilder::create_heap`](https://docs.rs/cranelift-frontend/*/cranelift_frontend/struct.FunctionBuilder.html#method.create_heap).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":207866,"byte_end":208029,"line_start":322,"line_end":322,"column_start":1,"column_end":164}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":208030,"byte_end":208033,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ While the order is stable, it is arbitrary.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":208034,"byte_end":208081,"line_start":324,"line_end":324,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":208324,"byte_end":208335,"line_start":333,"line_end":333,"column_start":12,"column_end":23},"name":"with_number","qualname":"<Heap>::with_number","value":"fn (n: u32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new heap reference from its number.","sig":null,"attributes":[{"value":"/ Create a new heap reference from its number.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":208210,"byte_end":208258,"line_start":330,"line_end":330,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":208263,"byte_end":208266,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This method is for use by the parser.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":208271,"byte_end":208312,"line_start":332,"line_end":332,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5949},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":209157,"byte_end":209162,"line_start":352,"line_end":352,"column_start":12,"column_end":17},"name":"Table","qualname":"::ir::entities::Table","value":"","parent":null,"children":[],"decl_id":null,"docs":" An opaque reference to a [WebAssembly\n table](https://developer.mozilla.org/en-US/docs/WebAssembly/Understanding_the_text_format#WebAssembly_tables).","sig":null,"attributes":[{"value":"/ An opaque reference to a [WebAssembly","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":208467,"byte_end":208508,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/ table](https://developer.mozilla.org/en-US/docs/WebAssembly/Understanding_the_text_format#WebAssembly_tables).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":208509,"byte_end":208623,"line_start":343,"line_end":343,"column_start":1,"column_end":115}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":208624,"byte_end":208627,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ `Table`s are used to store a list of function references.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":208628,"byte_end":208689,"line_start":345,"line_end":345,"column_start":1,"column_end":62}},{"value":"/ They can be created with [`FuncEnvironment::make_table`](https://docs.rs/cranelift-wasm/*/cranelift_wasm/trait.FuncEnvironment.html#tymethod.make_table).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":208690,"byte_end":208847,"line_start":346,"line_end":346,"column_start":1,"column_end":158}},{"value":"/ They can be used with","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":208848,"byte_end":208873,"line_start":347,"line_end":347,"column_start":1,"column_end":26}},{"value":"/ [`FuncEnvironment::translate_call_indirect`](https://docs.rs/cranelift-wasm/*/cranelift_wasm/trait.FuncEnvironment.html#tymethod.translate_call_indirect).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":208874,"byte_end":209032,"line_start":348,"line_end":348,"column_start":1,"column_end":159}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":209033,"byte_end":209036,"line_start":349,"line_end":349,"column_start":1,"column_end":4}},{"value":"/ While the order is stable, it is arbitrary.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":209037,"byte_end":209084,"line_start":350,"line_end":350,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":209332,"byte_end":209343,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"name":"with_number","qualname":"<Table>::with_number","value":"fn (n: u32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new table reference from its number.","sig":null,"attributes":[{"value":"/ Create a new table reference from its number.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":209217,"byte_end":209266,"line_start":356,"line_end":356,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":209271,"byte_end":209274,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This method is for use by the parser.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":209279,"byte_end":209320,"line_start":358,"line_end":358,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5986},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":209687,"byte_end":209695,"line_start":372,"line_end":372,"column_start":5,"column_end":13},"name":"Function","qualname":"::ir::entities::AnyEntity::Function","value":"AnyEntity::Function","parent":{"krate":0,"index":5985},"children":[],"decl_id":null,"docs":" The whole function.\n","sig":null,"attributes":[{"value":"/ The whole function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":209659,"byte_end":209682,"line_start":371,"line_end":371,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5988},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":209724,"byte_end":209729,"line_start":374,"line_end":374,"column_start":5,"column_end":10},"name":"Block","qualname":"::ir::entities::AnyEntity::Block","value":"AnyEntity::Block(Block)","parent":{"krate":0,"index":5985},"children":[],"decl_id":null,"docs":" a basic block.\n","sig":null,"attributes":[{"value":"/ a basic block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":209701,"byte_end":209719,"line_start":373,"line_end":373,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5991},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":209766,"byte_end":209770,"line_start":376,"line_end":376,"column_start":5,"column_end":9},"name":"Inst","qualname":"::ir::entities::AnyEntity::Inst","value":"AnyEntity::Inst(Inst)","parent":{"krate":0,"index":5985},"children":[],"decl_id":null,"docs":" An instruction.\n","sig":null,"attributes":[{"value":"/ An instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":209742,"byte_end":209761,"line_start":375,"line_end":375,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5994},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":209804,"byte_end":209809,"line_start":378,"line_end":378,"column_start":5,"column_end":10},"name":"Value","qualname":"::ir::entities::AnyEntity::Value","value":"AnyEntity::Value(Value)","parent":{"krate":0,"index":5985},"children":[],"decl_id":null,"docs":" An SSA value.\n","sig":null,"attributes":[{"value":"/ An SSA value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":209782,"byte_end":209799,"line_start":377,"line_end":377,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5997},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":209844,"byte_end":209853,"line_start":380,"line_end":380,"column_start":5,"column_end":14},"name":"StackSlot","qualname":"::ir::entities::AnyEntity::StackSlot","value":"AnyEntity::StackSlot(StackSlot)","parent":{"krate":0,"index":5985},"children":[],"decl_id":null,"docs":" A stack slot.\n","sig":null,"attributes":[{"value":"/ A stack slot.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":209822,"byte_end":209839,"line_start":379,"line_end":379,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6000},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":209894,"byte_end":209905,"line_start":382,"line_end":382,"column_start":5,"column_end":16},"name":"GlobalValue","qualname":"::ir::entities::AnyEntity::GlobalValue","value":"AnyEntity::GlobalValue(GlobalValue)","parent":{"krate":0,"index":5985},"children":[],"decl_id":null,"docs":" A Global value.\n","sig":null,"attributes":[{"value":"/ A Global value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":209870,"byte_end":209889,"line_start":381,"line_end":381,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6003},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":209946,"byte_end":209955,"line_start":384,"line_end":384,"column_start":5,"column_end":14},"name":"JumpTable","qualname":"::ir::entities::AnyEntity::JumpTable","value":"AnyEntity::JumpTable(JumpTable)","parent":{"krate":0,"index":5985},"children":[],"decl_id":null,"docs":" A jump table.\n","sig":null,"attributes":[{"value":"/ A jump table.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":209924,"byte_end":209941,"line_start":383,"line_end":383,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6006},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":210002,"byte_end":210009,"line_start":386,"line_end":386,"column_start":5,"column_end":12},"name":"FuncRef","qualname":"::ir::entities::AnyEntity::FuncRef","value":"AnyEntity::FuncRef(FuncRef)","parent":{"krate":0,"index":5985},"children":[],"decl_id":null,"docs":" An external function.\n","sig":null,"attributes":[{"value":"/ An external function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":209972,"byte_end":209997,"line_start":385,"line_end":385,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6009},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":210059,"byte_end":210065,"line_start":388,"line_end":388,"column_start":5,"column_end":11},"name":"SigRef","qualname":"::ir::entities::AnyEntity::SigRef","value":"AnyEntity::SigRef(SigRef)","parent":{"krate":0,"index":5985},"children":[],"decl_id":null,"docs":" A function call signature.\n","sig":null,"attributes":[{"value":"/ A function call signature.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":210024,"byte_end":210054,"line_start":387,"line_end":387,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6012},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":210095,"byte_end":210099,"line_start":390,"line_end":390,"column_start":5,"column_end":9},"name":"Heap","qualname":"::ir::entities::AnyEntity::Heap","value":"AnyEntity::Heap(Heap)","parent":{"krate":0,"index":5985},"children":[],"decl_id":null,"docs":" A heap.\n","sig":null,"attributes":[{"value":"/ A heap.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":210079,"byte_end":210090,"line_start":389,"line_end":389,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6015},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":210128,"byte_end":210133,"line_start":392,"line_end":392,"column_start":5,"column_end":10},"name":"Table","qualname":"::ir::entities::AnyEntity::Table","value":"AnyEntity::Table(Table)","parent":{"krate":0,"index":5985},"children":[],"decl_id":null,"docs":" A table.\n","sig":null,"attributes":[{"value":"/ A table.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":210111,"byte_end":210123,"line_start":391,"line_end":391,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":5985},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":209643,"byte_end":209652,"line_start":370,"line_end":370,"column_start":10,"column_end":19},"name":"AnyEntity","qualname":"::ir::entities::AnyEntity","value":"AnyEntity::{Function, Block, Inst, Value, StackSlot, GlobalValue, JumpTable, FuncRef, SigRef, Heap, Table}","parent":null,"children":[{"krate":0,"index":5986},{"krate":0,"index":5988},{"krate":0,"index":5991},{"krate":0,"index":5994},{"krate":0,"index":5997},{"krate":0,"index":6000},{"krate":0,"index":6003},{"krate":0,"index":6006},{"krate":0,"index":6009},{"krate":0,"index":6012},{"krate":0,"index":6015}],"decl_id":null,"docs":" An opaque reference to any of the entities defined in this module that can appear in CLIF IR.\n","sig":null,"attributes":[{"value":"/ An opaque reference to any of the entities defined in this module that can appear in CLIF IR.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":209475,"byte_end":209572,"line_start":368,"line_end":368,"column_start":1,"column_end":98}}]},{"kind":"Struct","id":{"krate":0,"index":6039},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":213661,"byte_end":213670,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Signature","qualname":"::ir::extfunc::Signature","value":"Signature { params, returns, call_conv }","parent":null,"children":[{"krate":0,"index":6040},{"krate":0,"index":6041},{"krate":0,"index":6042}],"decl_id":null,"docs":" Function signature.","sig":null,"attributes":[{"value":"/ Function signature.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":213272,"byte_end":213295,"line_start":14,"line_end":14,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":213296,"byte_end":213299,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The function signature describes the types of formal parameters and return values along with","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":213300,"byte_end":213396,"line_start":16,"line_end":16,"column_start":1,"column_end":97}},{"value":"/ other details that are needed to call a function correctly.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":213397,"byte_end":213460,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":213461,"byte_end":213464,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ A signature can optionally include ISA-specific ABI information which specifies exactly how","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":213465,"byte_end":213560,"line_start":19,"line_end":19,"column_start":1,"column_end":96}},{"value":"/ arguments and return values are passed.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":213561,"byte_end":213604,"line_start":20,"line_end":20,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":6040},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":213727,"byte_end":213733,"line_start":24,"line_end":24,"column_start":9,"column_end":15},"name":"params","qualname":"::ir::extfunc::Signature::params","value":"alloc::vec::Vec<ir::extfunc::AbiParam>","parent":{"krate":0,"index":6039},"children":[],"decl_id":null,"docs":" The arguments passed to the function.\n","sig":null,"attributes":[{"value":"/ The arguments passed to the function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":213677,"byte_end":213718,"line_start":23,"line_end":23,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":6041},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":213801,"byte_end":213808,"line_start":26,"line_end":26,"column_start":9,"column_end":16},"name":"returns","qualname":"::ir::extfunc::Signature::returns","value":"alloc::vec::Vec<ir::extfunc::AbiParam>","parent":{"krate":0,"index":6039},"children":[],"decl_id":null,"docs":" Values returned from the function.\n","sig":null,"attributes":[{"value":"/ Values returned from the function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":213754,"byte_end":213792,"line_start":25,"line_end":25,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":6042},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":213862,"byte_end":213871,"line_start":29,"line_end":29,"column_start":9,"column_end":18},"name":"call_conv","qualname":"::ir::extfunc::Signature::call_conv","value":"isa::call_conv::CallConv","parent":{"krate":0,"index":6039},"children":[],"decl_id":null,"docs":" Calling convention.\n","sig":null,"attributes":[{"value":"/ Calling convention.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":213830,"byte_end":213853,"line_start":28,"line_end":28,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":213952,"byte_end":213955,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"new","qualname":"<Signature>::new","value":"fn (call_conv: CallConv) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new blank signature.\n","sig":null,"attributes":[{"value":"/ Create a new blank signature.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":213907,"byte_end":213940,"line_start":33,"line_end":33,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":214201,"byte_end":214206,"line_start":43,"line_end":43,"column_start":12,"column_end":17},"name":"clear","qualname":"<Signature>::clear","value":"fn (&mut self, call_conv: CallConv) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear the signature so it is identical to a fresh one returned by `new()`.\n","sig":null,"attributes":[{"value":"/ Clear the signature so it is identical to a fresh one returned by `new()`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":214111,"byte_end":214189,"line_start":42,"line_end":42,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":214432,"byte_end":214439,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"display","qualname":"<Signature>::display","value":"fn <'a, R> (&'a self, regs: R) -> DisplaySignature<'a>","parent":null,"children":[],"decl_id":null,"docs":" Return an object that can display `self` with correct register names.\n","sig":null,"attributes":[{"value":"/ Return an object that can display `self` with correct register names.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":214347,"byte_end":214420,"line_start":49,"line_end":49,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":214652,"byte_end":214671,"line_start":55,"line_end":55,"column_start":12,"column_end":31},"name":"special_param_index","qualname":"<Signature>::special_param_index","value":"fn (&self, purpose: ArgumentPurpose) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Find the index of a presumed unique special-purpose parameter.\n","sig":null,"attributes":[{"value":"/ Find the index of a presumed unique special-purpose parameter.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":214574,"byte_end":214640,"line_start":54,"line_end":54,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":214880,"byte_end":214900,"line_start":60,"line_end":60,"column_start":12,"column_end":32},"name":"special_return_index","qualname":"<Signature>::special_return_index","value":"fn (&self, purpose: ArgumentPurpose) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Find the index of a presumed unique special-purpose parameter.\n","sig":null,"attributes":[{"value":"/ Find the index of a presumed unique special-purpose parameter.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":214802,"byte_end":214868,"line_start":59,"line_end":59,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":215130,"byte_end":215148,"line_start":66,"line_end":66,"column_start":12,"column_end":30},"name":"uses_special_param","qualname":"<Signature>::uses_special_param","value":"fn (&self, purpose: ArgumentPurpose) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does this signature have a parameter whose `ArgumentPurpose` is\n `purpose`?\n","sig":null,"attributes":[{"value":"/ Does this signature have a parameter whose `ArgumentPurpose` is","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":215032,"byte_end":215099,"line_start":64,"line_end":64,"column_start":5,"column_end":72}},{"value":"/ `purpose`?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":215104,"byte_end":215118,"line_start":65,"line_end":65,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":215342,"byte_end":215361,"line_start":71,"line_end":71,"column_start":12,"column_end":31},"name":"uses_special_return","qualname":"<Signature>::uses_special_return","value":"fn (&self, purpose: ArgumentPurpose) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does this signature have a return whose `ArgumentPurpose` is `purpose`?\n","sig":null,"attributes":[{"value":"/ Does this signature have a return whose `ArgumentPurpose` is `purpose`?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":215255,"byte_end":215330,"line_start":70,"line_end":70,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":215537,"byte_end":215555,"line_start":76,"line_end":76,"column_start":12,"column_end":30},"name":"num_special_params","qualname":"<Signature>::num_special_params","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" How many special parameters does this function have?\n","sig":null,"attributes":[{"value":"/ How many special parameters does this function have?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":215469,"byte_end":215525,"line_start":75,"line_end":75,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":215773,"byte_end":215792,"line_start":84,"line_end":84,"column_start":12,"column_end":31},"name":"num_special_returns","qualname":"<Signature>::num_special_returns","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" How many special returns does this function have?\n","sig":null,"attributes":[{"value":"/ How many special returns does this function have?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":215708,"byte_end":215761,"line_start":83,"line_end":83,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":216022,"byte_end":216046,"line_start":92,"line_end":92,"column_start":12,"column_end":36},"name":"uses_struct_return_param","qualname":"<Signature>::uses_struct_return_param","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does this signature take an struct return pointer parameter?\n","sig":null,"attributes":[{"value":"/ Does this signature take an struct return pointer parameter?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":215946,"byte_end":216010,"line_start":91,"line_end":91,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":216239,"byte_end":216254,"line_start":98,"line_end":98,"column_start":12,"column_end":27},"name":"is_multi_return","qualname":"<Signature>::is_multi_return","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does this return more than one normal value? (Pre-struct return\n legalization)\n","sig":null,"attributes":[{"value":"/ Does this return more than one normal value? (Pre-struct return","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":216138,"byte_end":216205,"line_start":96,"line_end":96,"column_start":5,"column_end":72}},{"value":"/ legalization)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":216210,"byte_end":216227,"line_start":97,"line_end":97,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":818},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":216514,"byte_end":216530,"line_start":108,"line_end":108,"column_start":12,"column_end":28},"name":"DisplaySignature","qualname":"::ir::extfunc::DisplaySignature","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper type capable of displaying a `Signature` with correct register names.\n","sig":null,"attributes":[{"value":"/ Wrapper type capable of displaying a `Signature` with correct register names.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":216421,"byte_end":216502,"line_start":107,"line_end":107,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":6057},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":217710,"byte_end":217718,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"name":"AbiParam","qualname":"::ir::extfunc::AbiParam","value":"AbiParam { value_type, purpose, extension, location }","parent":null,"children":[{"krate":0,"index":6058},{"krate":0,"index":6059},{"krate":0,"index":6060},{"krate":0,"index":6061}],"decl_id":null,"docs":" Function parameter or return value descriptor.","sig":null,"attributes":[{"value":"/ Function parameter or return value descriptor.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":217463,"byte_end":217513,"line_start":142,"line_end":142,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":217514,"byte_end":217517,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ This describes the value type being passed to or from a function along with flags that affect","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":217518,"byte_end":217615,"line_start":144,"line_end":144,"column_start":1,"column_end":98}},{"value":"/ how the argument is passed.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":217616,"byte_end":217647,"line_start":145,"line_end":145,"column_start":1,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":6058},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":217765,"byte_end":217775,"line_start":149,"line_end":149,"column_start":9,"column_end":19},"name":"value_type","qualname":"::ir::extfunc::AbiParam::value_type","value":"ir::types::Type","parent":{"krate":0,"index":6057},"children":[],"decl_id":null,"docs":" Type of the argument value.\n","sig":null,"attributes":[{"value":"/ Type of the argument value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":217725,"byte_end":217756,"line_start":148,"line_end":148,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":6059},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":217841,"byte_end":217848,"line_start":151,"line_end":151,"column_start":9,"column_end":16},"name":"purpose","qualname":"::ir::extfunc::AbiParam::purpose","value":"ir::extfunc::ArgumentPurpose","parent":{"krate":0,"index":6057},"children":[],"decl_id":null,"docs":" Special purpose of argument, or `Normal`.\n","sig":null,"attributes":[{"value":"/ Special purpose of argument, or `Normal`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":217787,"byte_end":217832,"line_start":150,"line_end":150,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":6060},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":217933,"byte_end":217942,"line_start":153,"line_end":153,"column_start":9,"column_end":18},"name":"extension","qualname":"::ir::extfunc::AbiParam::extension","value":"ir::extfunc::ArgumentExtension","parent":{"krate":0,"index":6057},"children":[],"decl_id":null,"docs":" Method for extending argument to a full register.\n","sig":null,"attributes":[{"value":"/ Method for extending argument to a full register.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":217871,"byte_end":217924,"line_start":152,"line_end":152,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":6061},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":218092,"byte_end":218100,"line_start":157,"line_end":157,"column_start":9,"column_end":17},"name":"location","qualname":"::ir::extfunc::AbiParam::location","value":"ir::valueloc::ArgumentLoc","parent":{"krate":0,"index":6057},"children":[],"decl_id":null,"docs":" ABI-specific location of this argument, or `Unassigned` for arguments that have not yet\n been legalized.\n","sig":null,"attributes":[{"value":"/ ABI-specific location of this argument, or `Unassigned` for arguments that have not yet","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":217968,"byte_end":218059,"line_start":155,"line_end":155,"column_start":5,"column_end":96}},{"value":"/ been legalized.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":218064,"byte_end":218083,"line_start":156,"line_end":156,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":218192,"byte_end":218195,"line_start":162,"line_end":162,"column_start":12,"column_end":15},"name":"new","qualname":"<AbiParam>::new","value":"fn (vt: Type) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a parameter with default flags.\n","sig":null,"attributes":[{"value":"/ Create a parameter with default flags.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":218138,"byte_end":218180,"line_start":161,"line_end":161,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":218514,"byte_end":218521,"line_start":172,"line_end":172,"column_start":12,"column_end":19},"name":"special","qualname":"<AbiParam>::special","value":"fn (vt: Type, purpose: ArgumentPurpose) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a special-purpose parameter that is not (yet) bound to a specific register.\n","sig":null,"attributes":[{"value":"/ Create a special-purpose parameter that is not (yet) bound to a specific register.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":218416,"byte_end":218502,"line_start":171,"line_end":171,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":218809,"byte_end":218820,"line_start":182,"line_end":182,"column_start":12,"column_end":23},"name":"special_reg","qualname":"<AbiParam>::special_reg","value":"fn (vt: Type, purpose: ArgumentPurpose, regunit: RegUnit) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a parameter for a special-purpose register.\n","sig":null,"attributes":[{"value":"/ Create a parameter for a special-purpose register.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":218743,"byte_end":218797,"line_start":181,"line_end":181,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":219138,"byte_end":219142,"line_start":192,"line_end":192,"column_start":12,"column_end":16},"name":"uext","qualname":"<AbiParam>::uext","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert `self` to a parameter with the `uext` flag set.\n","sig":null,"attributes":[{"value":"/ Convert `self` to a parameter with the `uext` flag set.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":219067,"byte_end":219126,"line_start":191,"line_end":191,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":219422,"byte_end":219426,"line_start":201,"line_end":201,"column_start":12,"column_end":16},"name":"sext","qualname":"<AbiParam>::sext","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert `self` to a parameter type with the `sext` flag set.\n","sig":null,"attributes":[{"value":"/ Convert `self` to a parameter type with the `sext` flag set.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":219346,"byte_end":219410,"line_start":200,"line_end":200,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":219715,"byte_end":219722,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"display","qualname":"<AbiParam>::display","value":"fn <'a, R> (&'a self, regs: R) -> DisplayAbiParam<'a>","parent":null,"children":[],"decl_id":null,"docs":" Return an object that can display `self` with correct register names.\n","sig":null,"attributes":[{"value":"/ Return an object that can display `self` with correct register names.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":219630,"byte_end":219703,"line_start":209,"line_end":209,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":838},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":219945,"byte_end":219960,"line_start":216,"line_end":216,"column_start":12,"column_end":27},"name":"DisplayAbiParam","qualname":"::ir::extfunc::DisplayAbiParam","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper type capable of displaying a `AbiParam` with correct register names.\n","sig":null,"attributes":[{"value":"/ Wrapper type capable of displaying a `AbiParam` with correct register names.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":219853,"byte_end":219933,"line_start":215,"line_end":215,"column_start":1,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6078},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":221052,"byte_end":221056,"line_start":251,"line_end":251,"column_start":5,"column_end":9},"name":"None","qualname":"::ir::extfunc::ArgumentExtension::None","value":"ArgumentExtension::None","parent":{"krate":0,"index":6077},"children":[],"decl_id":null,"docs":" No extension, high bits are indeterminate.\n","sig":null,"attributes":[{"value":"/ No extension, high bits are indeterminate.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":221001,"byte_end":221047,"line_start":250,"line_end":250,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6080},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":221119,"byte_end":221123,"line_start":253,"line_end":253,"column_start":5,"column_end":9},"name":"Uext","qualname":"::ir::extfunc::ArgumentExtension::Uext","value":"ArgumentExtension::Uext","parent":{"krate":0,"index":6077},"children":[],"decl_id":null,"docs":" Unsigned extension: high bits in register are 0.\n","sig":null,"attributes":[{"value":"/ Unsigned extension: high bits in register are 0.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":221062,"byte_end":221114,"line_start":252,"line_end":252,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6082},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":221197,"byte_end":221201,"line_start":255,"line_end":255,"column_start":5,"column_end":9},"name":"Sext","qualname":"::ir::extfunc::ArgumentExtension::Sext","value":"ArgumentExtension::Sext","parent":{"krate":0,"index":6077},"children":[],"decl_id":null,"docs":" Signed extension: high bits in register replicate sign bit.\n","sig":null,"attributes":[{"value":"/ Signed extension: high bits in register replicate sign bit.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":221129,"byte_end":221192,"line_start":254,"line_end":254,"column_start":5,"column_end":68}}]},{"kind":"Enum","id":{"krate":0,"index":6077},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":220977,"byte_end":220994,"line_start":249,"line_end":249,"column_start":10,"column_end":27},"name":"ArgumentExtension","qualname":"::ir::extfunc::ArgumentExtension","value":"ArgumentExtension::{None, Uext, Sext}","parent":null,"children":[{"krate":0,"index":6078},{"krate":0,"index":6080},{"krate":0,"index":6082}],"decl_id":null,"docs":" Function argument extension options.","sig":null,"attributes":[{"value":"/ Function argument extension options.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":220751,"byte_end":220791,"line_start":244,"line_end":244,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":220792,"byte_end":220795,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ On some architectures, small integer function arguments are extended to the width of a","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":220796,"byte_end":220886,"line_start":246,"line_end":246,"column_start":1,"column_end":91}},{"value":"/ general-purpose register.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":220887,"byte_end":220916,"line_start":247,"line_end":247,"column_start":1,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6099},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":221746,"byte_end":221752,"line_start":268,"line_end":268,"column_start":5,"column_end":11},"name":"Normal","qualname":"::ir::extfunc::ArgumentPurpose::Normal","value":"ArgumentPurpose::Normal","parent":{"krate":0,"index":6098},"children":[],"decl_id":null,"docs":" A normal user program value passed to or from a function.\n","sig":null,"attributes":[{"value":"/ A normal user program value passed to or from a function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":221680,"byte_end":221741,"line_start":267,"line_end":267,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6101},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":222247,"byte_end":222259,"line_start":278,"line_end":278,"column_start":5,"column_end":17},"name":"StructReturn","qualname":"::ir::extfunc::ArgumentPurpose::StructReturn","value":"ArgumentPurpose::StructReturn","parent":{"krate":0,"index":6098},"children":[],"decl_id":null,"docs":" Struct return pointer.","sig":null,"attributes":[{"value":"/ Struct return pointer.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":221759,"byte_end":221785,"line_start":270,"line_end":270,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":221790,"byte_end":221793,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ When a function needs to return more data than will fit in registers, the caller passes a","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":221798,"byte_end":221891,"line_start":272,"line_end":272,"column_start":5,"column_end":98}},{"value":"/ pointer to a memory location where the return value can be written. In some ABIs, this","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":221896,"byte_end":221986,"line_start":273,"line_end":273,"column_start":5,"column_end":95}},{"value":"/ struct return pointer is passed in a specific register.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":221991,"byte_end":222050,"line_start":274,"line_end":274,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":222055,"byte_end":222058,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ This argument kind can also appear as a return value for ABIs that require a function with","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":222063,"byte_end":222157,"line_start":276,"line_end":276,"column_start":5,"column_end":99}},{"value":"/ a `StructReturn` pointer argument to also return that pointer in a register.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":222162,"byte_end":222242,"line_start":277,"line_end":277,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6103},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":222630,"byte_end":222634,"line_start":287,"line_end":287,"column_start":5,"column_end":9},"name":"Link","qualname":"::ir::extfunc::ArgumentPurpose::Link","value":"ArgumentPurpose::Link","parent":{"krate":0,"index":6098},"children":[],"decl_id":null,"docs":" The link register.","sig":null,"attributes":[{"value":"/ The link register.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":222266,"byte_end":222288,"line_start":280,"line_end":280,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":222293,"byte_end":222296,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Most RISC architectures implement calls by saving the return address in a designated","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":222301,"byte_end":222389,"line_start":282,"line_end":282,"column_start":5,"column_end":93}},{"value":"/ register rather than pushing it on the stack. This is represented with a `Link` argument.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":222394,"byte_end":222487,"line_start":283,"line_end":283,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":222492,"byte_end":222495,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Similarly, some return instructions expect the return address in a register represented as","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":222500,"byte_end":222594,"line_start":285,"line_end":285,"column_start":5,"column_end":99}},{"value":"/ a `Link` return value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":222599,"byte_end":222625,"line_start":286,"line_end":286,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6105},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":222892,"byte_end":222904,"line_start":295,"line_end":295,"column_start":5,"column_end":17},"name":"FramePointer","qualname":"::ir::extfunc::ArgumentPurpose::FramePointer","value":"ArgumentPurpose::FramePointer","parent":{"krate":0,"index":6098},"children":[],"decl_id":null,"docs":" The frame pointer.","sig":null,"attributes":[{"value":"/ The frame pointer.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":222641,"byte_end":222663,"line_start":289,"line_end":289,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":222668,"byte_end":222671,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This indicates the frame pointer register which has a special meaning in some ABIs.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":222676,"byte_end":222763,"line_start":291,"line_end":291,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":222768,"byte_end":222771,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ The frame pointer appears as an argument and as a return value since it is a callee-saved","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":222776,"byte_end":222869,"line_start":293,"line_end":293,"column_start":5,"column_end":98}},{"value":"/ register.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":222874,"byte_end":222887,"line_start":294,"line_end":294,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6107},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":223120,"byte_end":223131,"line_start":301,"line_end":301,"column_start":5,"column_end":16},"name":"CalleeSaved","qualname":"::ir::extfunc::ArgumentPurpose::CalleeSaved","value":"ArgumentPurpose::CalleeSaved","parent":{"krate":0,"index":6098},"children":[],"decl_id":null,"docs":" A callee-saved register.","sig":null,"attributes":[{"value":"/ A callee-saved register.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":222911,"byte_end":222939,"line_start":297,"line_end":297,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":222944,"byte_end":222947,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ Some calling conventions have registers that must be saved by the callee. These registers","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":222952,"byte_end":223045,"line_start":299,"line_end":299,"column_start":5,"column_end":98}},{"value":"/ are represented as `CalleeSaved` arguments and return values.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":223050,"byte_end":223115,"line_start":300,"line_end":300,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6109},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":223332,"byte_end":223341,"line_start":307,"line_end":307,"column_start":5,"column_end":14},"name":"VMContext","qualname":"::ir::extfunc::ArgumentPurpose::VMContext","value":"ArgumentPurpose::VMContext","parent":{"krate":0,"index":6098},"children":[],"decl_id":null,"docs":" A VM context pointer.","sig":null,"attributes":[{"value":"/ A VM context pointer.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":223138,"byte_end":223163,"line_start":303,"line_end":303,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":223168,"byte_end":223171,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ This is a pointer to a context struct containing details about the current sandbox. It is","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":223176,"byte_end":223269,"line_start":305,"line_end":305,"column_start":5,"column_end":98}},{"value":"/ used as a base pointer for `vmctx` global values.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":223274,"byte_end":223327,"line_start":306,"line_end":306,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6111},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":223585,"byte_end":223596,"line_start":313,"line_end":313,"column_start":5,"column_end":16},"name":"SignatureId","qualname":"::ir::extfunc::ArgumentPurpose::SignatureId","value":"ArgumentPurpose::SignatureId","parent":{"krate":0,"index":6098},"children":[],"decl_id":null,"docs":" A signature identifier.","sig":null,"attributes":[{"value":"/ A signature identifier.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":223348,"byte_end":223375,"line_start":309,"line_end":309,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":223380,"byte_end":223383,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ This is a special-purpose argument used to identify the calling convention expected by the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":223388,"byte_end":223482,"line_start":311,"line_end":311,"column_start":5,"column_end":99}},{"value":"/ caller in an indirect call. The callee can verify that the expected signature ID matches.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":223487,"byte_end":223580,"line_start":312,"line_end":312,"column_start":5,"column_end":98}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6113},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":223786,"byte_end":223796,"line_start":319,"line_end":319,"column_start":5,"column_end":15},"name":"StackLimit","qualname":"::ir::extfunc::ArgumentPurpose::StackLimit","value":"ArgumentPurpose::StackLimit","parent":{"krate":0,"index":6098},"children":[],"decl_id":null,"docs":" A stack limit pointer.","sig":null,"attributes":[{"value":"/ A stack limit pointer.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":223603,"byte_end":223629,"line_start":315,"line_end":315,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":223634,"byte_end":223637,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ This is a pointer to a stack limit. It is used to check the current stack pointer","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":223642,"byte_end":223727,"line_start":317,"line_end":317,"column_start":5,"column_end":90}},{"value":"/ against. Can only appear once in a signature.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":223732,"byte_end":223781,"line_start":318,"line_end":318,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":6098},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":221658,"byte_end":221673,"line_start":266,"line_end":266,"column_start":10,"column_end":25},"name":"ArgumentPurpose","qualname":"::ir::extfunc::ArgumentPurpose","value":"ArgumentPurpose::{Normal, StructReturn, Link, FramePointer, CalleeSaved, VMContext, SignatureId, StackLimit}","parent":null,"children":[{"krate":0,"index":6099},{"krate":0,"index":6101},{"krate":0,"index":6103},{"krate":0,"index":6105},{"krate":0,"index":6107},{"krate":0,"index":6109},{"krate":0,"index":6111},{"krate":0,"index":6113}],"decl_id":null,"docs":" The special purpose of a function argument.","sig":null,"attributes":[{"value":"/ The special purpose of a function argument.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":221206,"byte_end":221253,"line_start":258,"line_end":258,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":221254,"byte_end":221257,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ Function arguments and return values are used to pass user program values between functions,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":221258,"byte_end":221354,"line_start":260,"line_end":260,"column_start":1,"column_end":97}},{"value":"/ but they are also used to represent special registers with significance to the ABI such as","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":221355,"byte_end":221449,"line_start":261,"line_end":261,"column_start":1,"column_end":95}},{"value":"/ frame pointers and callee-saved registers.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":221450,"byte_end":221496,"line_start":262,"line_end":262,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":221497,"byte_end":221500,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ The argument purpose is used to indicate any special meaning of an argument or return value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":221501,"byte_end":221597,"line_start":264,"line_end":264,"column_start":1,"column_end":97}}]},{"kind":"Struct","id":{"krate":0,"index":6129},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":224840,"byte_end":224851,"line_start":361,"line_end":361,"column_start":12,"column_end":23},"name":"ExtFuncData","qualname":"::ir::extfunc::ExtFuncData","value":"ExtFuncData { name, signature, colocated }","parent":null,"children":[{"krate":0,"index":6130},{"krate":0,"index":6131},{"krate":0,"index":6132}],"decl_id":null,"docs":" An external function.","sig":null,"attributes":[{"value":"/ An external function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":224680,"byte_end":224705,"line_start":357,"line_end":357,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":224706,"byte_end":224709,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ Information about a function that can be called directly with a direct `call` instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":224710,"byte_end":224804,"line_start":359,"line_end":359,"column_start":1,"column_end":95}}]},{"kind":"Field","id":{"krate":0,"index":6130},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":224901,"byte_end":224905,"line_start":363,"line_end":363,"column_start":9,"column_end":13},"name":"name","qualname":"::ir::extfunc::ExtFuncData::name","value":"ir::extname::ExternalName","parent":{"krate":0,"index":6129},"children":[],"decl_id":null,"docs":" Name of the external function.\n","sig":null,"attributes":[{"value":"/ Name of the external function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":224858,"byte_end":224892,"line_start":362,"line_end":362,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":6131},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":224965,"byte_end":224974,"line_start":365,"line_end":365,"column_start":9,"column_end":18},"name":"signature","qualname":"::ir::extfunc::ExtFuncData::signature","value":"ir::entities::SigRef","parent":{"krate":0,"index":6129},"children":[],"decl_id":null,"docs":" Call signature of function.\n","sig":null,"attributes":[{"value":"/ Call signature of function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":224925,"byte_end":224956,"line_start":364,"line_end":364,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":6132},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":225258,"byte_end":225267,"line_start":369,"line_end":369,"column_start":9,"column_end":18},"name":"colocated","qualname":"::ir::extfunc::ExtFuncData::colocated","value":"bool","parent":{"krate":0,"index":6129},"children":[],"decl_id":null,"docs":" Will this function be defined nearby, such that it will always be a certain distance away,\n after linking? If so, references to it can avoid going through a GOT or PLT. Note that\n symbols meant to be preemptible cannot be considered colocated.\n","sig":null,"attributes":[{"value":"/ Will this function be defined nearby, such that it will always be a certain distance away,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":224988,"byte_end":225082,"line_start":366,"line_end":366,"column_start":5,"column_end":99}},{"value":"/ after linking? If so, references to it can avoid going through a GOT or PLT. Note that","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":225087,"byte_end":225177,"line_start":367,"line_end":367,"column_start":5,"column_end":95}},{"value":"/ symbols meant to be preemptible cannot be considered colocated.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":225182,"byte_end":225249,"line_start":368,"line_end":368,"column_start":5,"column_end":72}}]},{"kind":"StructVariant","id":{"krate":0,"index":6138},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":229003,"byte_end":229007,"line_start":29,"line_end":29,"column_start":5,"column_end":9},"name":"User","qualname":"::ir::extname::ExternalName::User","value":"ExternalName::User { namespace, index }","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" A name in a user-defined symbol table. Cranelift does not interpret\n these numbers in any way.\n","sig":null,"attributes":[{"value":"/ A name in a user-defined symbol table. Cranelift does not interpret","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":228893,"byte_end":228964,"line_start":27,"line_end":27,"column_start":5,"column_end":76}},{"value":"/ these numbers in any way.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":228969,"byte_end":228998,"line_start":28,"line_end":28,"column_start":5,"column_end":34}}]},{"kind":"StructVariant","id":{"krate":0,"index":6141},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":229254,"byte_end":229262,"line_start":37,"line_end":37,"column_start":5,"column_end":13},"name":"TestCase","qualname":"::ir::extname::ExternalName::TestCase","value":"ExternalName::TestCase { length, ascii }","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" A test case function name of up to a hardcoded amount of ascii\n characters. This is not intended to be used outside test cases.\n","sig":null,"attributes":[{"value":"/ A test case function name of up to a hardcoded amount of ascii","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":229111,"byte_end":229177,"line_start":35,"line_end":35,"column_start":5,"column_end":71}},{"value":"/ characters. This is not intended to be used outside test cases.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":229182,"byte_end":229249,"line_start":36,"line_end":36,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6145},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":229479,"byte_end":229486,"line_start":44,"line_end":44,"column_start":5,"column_end":12},"name":"LibCall","qualname":"::ir::extname::ExternalName::LibCall","value":"ExternalName::LibCall(LibCall)","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" A well-known runtime library function.\n","sig":null,"attributes":[{"value":"/ A well-known runtime library function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":229432,"byte_end":229474,"line_start":43,"line_end":43,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":6137},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":228874,"byte_end":228886,"line_start":26,"line_end":26,"column_start":10,"column_end":22},"name":"ExternalName","qualname":"::ir::extname::ExternalName","value":"ExternalName::{User, TestCase, LibCall}","parent":null,"children":[{"krate":0,"index":6138},{"krate":0,"index":6141},{"krate":0,"index":6145}],"decl_id":null,"docs":" The name of an external is either a reference to a user-defined symbol\n table, or a short sequence of ascii bytes so that test cases do not have\n to keep track of a symbol table.","sig":null,"attributes":[{"value":"/ The name of an external is either a reference to a user-defined symbol","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":228296,"byte_end":228370,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ table, or a short sequence of ascii bytes so that test cases do not have","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":228371,"byte_end":228447,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ to keep track of a symbol table.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":228448,"byte_end":228484,"line_start":16,"line_end":16,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":228485,"byte_end":228488,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ External names are primarily used as keys by code using Cranelift to map","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":228489,"byte_end":228565,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ from a `cranelift_codegen::ir::FuncRef` or similar to additional associated","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":228566,"byte_end":228645,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ data.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":228646,"byte_end":228655,"line_start":20,"line_end":20,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":228656,"byte_end":228659,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ External names can also serve as a primitive testing and debugging tool.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":228660,"byte_end":228736,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ In particular, many `.clif` test files use function names to identify","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":228737,"byte_end":228810,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/ functions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":228811,"byte_end":228825,"line_start":24,"line_end":24,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":229937,"byte_end":229945,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"testcase","qualname":"<ExternalName>::testcase","value":"fn <T> (v: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new external name from a sequence of bytes. Caller is expected\n to guarantee bytes are only ascii alphanumeric or `_`.","sig":null,"attributes":[{"value":"/ Creates a new external name from a sequence of bytes. Caller is expected","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":229524,"byte_end":229600,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ to guarantee bytes are only ascii alphanumeric or `_`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":229605,"byte_end":229663,"line_start":49,"line_end":49,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":229668,"byte_end":229671,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":229676,"byte_end":229690,"line_start":51,"line_end":51,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":229695,"byte_end":229698,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":229703,"byte_end":229714,"line_start":53,"line_end":53,"column_start":5,"column_end":16}},{"value":"/ # use cranelift_codegen::ir::ExternalName;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":229719,"byte_end":229765,"line_start":54,"line_end":54,"column_start":5,"column_end":51}},{"value":"/ // Create `ExternalName` from a string.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":229770,"byte_end":229813,"line_start":55,"line_end":55,"column_start":5,"column_end":48}},{"value":"/ let name = ExternalName::testcase(\"hello\");","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":229818,"byte_end":229865,"line_start":56,"line_end":56,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(name.to_string(), \"%hello\");","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":229870,"byte_end":229913,"line_start":57,"line_end":57,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":229918,"byte_end":229925,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":230616,"byte_end":230620,"line_start":80,"line_end":80,"column_start":12,"column_end":16},"name":"user","qualname":"<ExternalName>::user","value":"fn (namespace: u32, index: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new external name from user-provided integer indices.","sig":null,"attributes":[{"value":"/ Create a new external name from user-provided integer indices.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":230279,"byte_end":230345,"line_start":71,"line_end":71,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":230350,"byte_end":230353,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":230358,"byte_end":230372,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/ ```rust","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":230377,"byte_end":230388,"line_start":74,"line_end":74,"column_start":5,"column_end":16}},{"value":"/ # use cranelift_codegen::ir::ExternalName;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":230393,"byte_end":230439,"line_start":75,"line_end":75,"column_start":5,"column_end":51}},{"value":"/ // Create `ExternalName` from integer indices","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":230444,"byte_end":230493,"line_start":76,"line_end":76,"column_start":5,"column_end":54}},{"value":"/ let name = ExternalName::user(123, 456);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":230498,"byte_end":230542,"line_start":77,"line_end":77,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(name.to_string(), \"u123:456\");","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":230547,"byte_end":230592,"line_start":78,"line_end":78,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":230597,"byte_end":230604,"line_start":79,"line_end":79,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":6161},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/framelayout.rs","byte_start":233297,"byte_end":233315,"line_start":13,"line_end":13,"column_start":5,"column_end":23},"name":"CallFrameAddressAt","qualname":"::ir::framelayout::FrameLayoutChange::CallFrameAddressAt","value":"FrameLayoutChange::CallFrameAddressAt { reg, offset }","parent":{"krate":0,"index":6160},"children":[],"decl_id":null,"docs":" Base CallFrameAddress (CFA) pointer moved to different register/offset.\n","sig":null,"attributes":[{"value":"/ Base CallFrameAddress (CFA) pointer moved to different register/offset.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/framelayout.rs","byte_start":233217,"byte_end":233292,"line_start":12,"line_end":12,"column_start":5,"column_end":80}}]},{"kind":"StructVariant","id":{"krate":0,"index":6164},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/framelayout.rs","byte_start":233451,"byte_end":233456,"line_start":20,"line_end":20,"column_start":5,"column_end":10},"name":"RegAt","qualname":"::ir::framelayout::FrameLayoutChange::RegAt","value":"FrameLayoutChange::RegAt { reg, cfa_offset }","parent":{"krate":0,"index":6160},"children":[],"decl_id":null,"docs":" Register saved at.\n","sig":null,"attributes":[{"value":"/ Register saved at.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/framelayout.rs","byte_start":233424,"byte_end":233446,"line_start":19,"line_end":19,"column_start":5,"column_end":27}}]},{"kind":"StructVariant","id":{"krate":0,"index":6167},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/framelayout.rs","byte_start":233631,"byte_end":233646,"line_start":27,"line_end":27,"column_start":5,"column_end":20},"name":"ReturnAddressAt","qualname":"::ir::framelayout::FrameLayoutChange::ReturnAddressAt","value":"FrameLayoutChange::ReturnAddressAt { cfa_offset }","parent":{"krate":0,"index":6160},"children":[],"decl_id":null,"docs":" Return address saved at.\n","sig":null,"attributes":[{"value":"/ Return address saved at.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/framelayout.rs","byte_start":233598,"byte_end":233626,"line_start":26,"line_end":26,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6169},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/framelayout.rs","byte_start":233950,"byte_end":233958,"line_start":35,"line_end":35,"column_start":5,"column_end":13},"name":"Preserve","qualname":"::ir::framelayout::FrameLayoutChange::Preserve","value":"FrameLayoutChange::Preserve","parent":{"krate":0,"index":6160},"children":[],"decl_id":null,"docs":" The entire frame layout must be preserved somewhere to be restored at a corresponding\n `Restore` change.","sig":null,"attributes":[{"value":"/ The entire frame layout must be preserved somewhere to be restored at a corresponding","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/framelayout.rs","byte_start":233738,"byte_end":233827,"line_start":31,"line_end":31,"column_start":5,"column_end":94}},{"value":"/ `Restore` change.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/framelayout.rs","byte_start":233832,"byte_end":233853,"line_start":32,"line_end":32,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/framelayout.rs","byte_start":233858,"byte_end":233861,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This likely maps to the DWARF call frame instruction `.cfa_remember_state`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/framelayout.rs","byte_start":233866,"byte_end":233945,"line_start":34,"line_end":34,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6171},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/framelayout.rs","byte_start":234147,"byte_end":234154,"line_start":39,"line_end":39,"column_start":5,"column_end":12},"name":"Restore","qualname":"::ir::framelayout::FrameLayoutChange::Restore","value":"FrameLayoutChange::Restore","parent":{"krate":0,"index":6160},"children":[],"decl_id":null,"docs":" Restore the entire frame layout from a corresponding prior `Preserve` frame change.","sig":null,"attributes":[{"value":"/ Restore the entire frame layout from a corresponding prior `Preserve` frame change.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/framelayout.rs","byte_start":233964,"byte_end":234051,"line_start":36,"line_end":36,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/framelayout.rs","byte_start":234056,"byte_end":234059,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ This likely maps to the DWARF call frame instruction `.cfa_restore_state`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/framelayout.rs","byte_start":234064,"byte_end":234142,"line_start":38,"line_end":38,"column_start":5,"column_end":83}}]},{"kind":"Enum","id":{"krate":0,"index":6160},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/framelayout.rs","byte_start":233193,"byte_end":233210,"line_start":11,"line_end":11,"column_start":10,"column_end":27},"name":"FrameLayoutChange","qualname":"::ir::framelayout::FrameLayoutChange","value":"FrameLayoutChange::{CallFrameAddressAt, RegAt, ReturnAddressAt, Preserve, Restore}","parent":null,"children":[{"krate":0,"index":6161},{"krate":0,"index":6164},{"krate":0,"index":6167},{"krate":0,"index":6169},{"krate":0,"index":6171}],"decl_id":null,"docs":" Change in the frame layout information.\n","sig":null,"attributes":[{"value":"/ Change in the frame layout information.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/framelayout.rs","byte_start":233089,"byte_end":233132,"line_start":9,"line_end":9,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":882},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/framelayout.rs","byte_start":234201,"byte_end":234219,"line_start":43,"line_end":43,"column_start":10,"column_end":28},"name":"FrameLayoutChanges","qualname":"::ir::framelayout::FrameLayoutChanges","value":"Box<[FrameLayoutChange]>","parent":null,"children":[],"decl_id":null,"docs":" Set of frame layout changes.\n","sig":null,"attributes":[{"value":"/ Set of frame layout changes.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/framelayout.rs","byte_start":234159,"byte_end":234191,"line_start":42,"line_end":42,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":6188},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/framelayout.rs","byte_start":234345,"byte_end":234356,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"FrameLayout","qualname":"::ir::framelayout::FrameLayout","value":"FrameLayout { initial, instructions }","parent":null,"children":[{"krate":0,"index":6189},{"krate":0,"index":6190}],"decl_id":null,"docs":" Frame items layout for (prologue/epilogue) instructions.\n","sig":null,"attributes":[{"value":"/ Frame items layout for (prologue/epilogue) instructions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/framelayout.rs","byte_start":234249,"byte_end":234309,"line_start":45,"line_end":45,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":6189},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/framelayout.rs","byte_start":234397,"byte_end":234404,"line_start":49,"line_end":49,"column_start":9,"column_end":16},"name":"initial","qualname":"::ir::framelayout::FrameLayout::initial","value":"alloc::boxed::Box<[ir::framelayout::FrameLayoutChange]>","parent":{"krate":0,"index":6188},"children":[],"decl_id":null,"docs":" Initial frame layout.\n","sig":null,"attributes":[{"value":"/ Initial frame layout.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/framelayout.rs","byte_start":234363,"byte_end":234388,"line_start":48,"line_end":48,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":6190},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/framelayout.rs","byte_start":234567,"byte_end":234579,"line_start":53,"line_end":53,"column_start":9,"column_end":21},"name":"instructions","qualname":"::ir::framelayout::FrameLayout::instructions","value":"std::collections::HashMap<ir::entities::Inst, alloc::boxed::Box<[ir::framelayout::FrameLayoutChange]>>","parent":{"krate":0,"index":6188},"children":[],"decl_id":null,"docs":" Instruction frame layout (changes). Because the map will not be dense,\n a HashMap is used instead of a SecondaryMap.\n","sig":null,"attributes":[{"value":"/ Instruction frame layout (changes). Because the map will not be dense,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/framelayout.rs","byte_start":234431,"byte_end":234505,"line_start":51,"line_end":51,"column_start":5,"column_end":79}},{"value":"/ a HashMap is used instead of a SecondaryMap.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/framelayout.rs","byte_start":234510,"byte_end":234558,"line_start":52,"line_end":52,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/framelayout.rs","byte_start":234689,"byte_end":234692,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<FrameLayout>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create instance of FrameLayout.\n","sig":null,"attributes":[{"value":"/ Create instance of FrameLayout.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/framelayout.rs","byte_start":234642,"byte_end":234677,"line_start":57,"line_end":57,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/framelayout.rs","byte_start":234867,"byte_end":234872,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"name":"clear","qualname":"<FrameLayout>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear the structure.\n","sig":null,"attributes":[{"value":"/ Clear the structure.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/framelayout.rs","byte_start":234831,"byte_end":234855,"line_start":65,"line_end":65,"column_start":5,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":886},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"function","qualname":"::ir::function","value":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","parent":null,"children":[{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":909},{"krate":0,"index":916},{"krate":0,"index":921},{"krate":0,"index":924},{"krate":0,"index":930},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":6195},{"krate":0,"index":6214},{"krate":0,"index":936},{"krate":0,"index":6216},{"krate":0,"index":6220},{"krate":0,"index":965},{"krate":0,"index":968},{"krate":0,"index":973},{"krate":0,"index":976},{"krate":0,"index":978},{"krate":0,"index":980},{"krate":0,"index":988}],"decl_id":null,"docs":" Intermediate representation of a function.","sig":null,"attributes":[{"value":"! Intermediate representation of a function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":234980,"byte_end":235026,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":235027,"byte_end":235030,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The `Function` struct defined in this module owns all of its basic blocks and","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":235031,"byte_end":235112,"line_start":3,"line_end":3,"column_start":1,"column_end":82}},{"value":"! instructions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":235113,"byte_end":235130,"line_start":4,"line_end":4,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6195},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":236034,"byte_end":236042,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"name":"Function","qualname":"::ir::function::Function","value":"Function { name, signature, old_signature, stack_slots, global_values, heaps, tables, jump_tables, dfg, layout, encodings, locations, entry_diversions, offsets, jt_offsets, srclocs, prologue_end, frame_layout }","parent":null,"children":[{"krate":0,"index":6196},{"krate":0,"index":6197},{"krate":0,"index":6198},{"krate":0,"index":6199},{"krate":0,"index":6200},{"krate":0,"index":6201},{"krate":0,"index":6202},{"krate":0,"index":6203},{"krate":0,"index":6204},{"krate":0,"index":6205},{"krate":0,"index":6206},{"krate":0,"index":6207},{"krate":0,"index":6208},{"krate":0,"index":6209},{"krate":0,"index":6210},{"krate":0,"index":6211},{"krate":0,"index":6212},{"krate":0,"index":6213}],"decl_id":null,"docs":" A function.","sig":null,"attributes":[{"value":"/ A function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":235851,"byte_end":235866,"line_start":22,"line_end":22,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":235867,"byte_end":235870,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Functions can be cloned, but it is not a very fast operation.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":235871,"byte_end":235936,"line_start":24,"line_end":24,"column_start":1,"column_end":66}},{"value":"/ The clone will have all the same entity numbers as the original.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":235937,"byte_end":236005,"line_start":25,"line_end":25,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":6196},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":236114,"byte_end":236118,"line_start":29,"line_end":29,"column_start":9,"column_end":13},"name":"name","qualname":"::ir::function::Function::name","value":"ir::extname::ExternalName","parent":{"krate":0,"index":6195},"children":[],"decl_id":null,"docs":" Name of this function. Mostly used by `.clif` files.\n","sig":null,"attributes":[{"value":"/ Name of this function. Mostly used by `.clif` files.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":236049,"byte_end":236105,"line_start":28,"line_end":28,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":6197},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":236179,"byte_end":236188,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"name":"signature","qualname":"::ir::function::Function::signature","value":"ir::extfunc::Signature","parent":{"krate":0,"index":6195},"children":[],"decl_id":null,"docs":" Signature of this function.\n","sig":null,"attributes":[{"value":"/ Signature of this function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":236139,"byte_end":236170,"line_start":31,"line_end":31,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":6198},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":236307,"byte_end":236320,"line_start":36,"line_end":36,"column_start":9,"column_end":22},"name":"old_signature","qualname":"::ir::function::Function::old_signature","value":"core::option::Option<ir::extfunc::Signature>","parent":{"krate":0,"index":6195},"children":[],"decl_id":null,"docs":" The old signature of this function, before the most recent legalization,\n if any.\n","sig":null,"attributes":[{"value":"/ The old signature of this function, before the most recent legalization,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":236206,"byte_end":236282,"line_start":34,"line_end":34,"column_start":5,"column_end":81}},{"value":"/ if any.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":236287,"byte_end":236298,"line_start":35,"line_end":35,"column_start":5,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":6199},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":236398,"byte_end":236409,"line_start":39,"line_end":39,"column_start":9,"column_end":20},"name":"stack_slots","qualname":"::ir::function::Function::stack_slots","value":"ir::stackslot::StackSlots","parent":{"krate":0,"index":6195},"children":[],"decl_id":null,"docs":" Stack slots allocated in this function.\n","sig":null,"attributes":[{"value":"/ Stack slots allocated in this function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":236346,"byte_end":236389,"line_start":38,"line_end":38,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":6200},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":236466,"byte_end":236479,"line_start":42,"line_end":42,"column_start":9,"column_end":22},"name":"global_values","qualname":"::ir::function::Function::global_values","value":"cranelift_entity::primary::PrimaryMap<ir::entities::GlobalValue, ir::globalvalue::GlobalValueData>","parent":{"krate":0,"index":6195},"children":[],"decl_id":null,"docs":" Global values referenced.\n","sig":null,"attributes":[{"value":"/ Global values referenced.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":236428,"byte_end":236457,"line_start":41,"line_end":41,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":6201},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":236566,"byte_end":236571,"line_start":45,"line_end":45,"column_start":9,"column_end":14},"name":"heaps","qualname":"::ir::function::Function::heaps","value":"cranelift_entity::primary::PrimaryMap<ir::entities::Heap, ir::heap::HeapData>","parent":{"krate":0,"index":6195},"children":[],"decl_id":null,"docs":" Heaps referenced.\n","sig":null,"attributes":[{"value":"/ Heaps referenced.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":236536,"byte_end":236557,"line_start":44,"line_end":44,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":6202},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":236645,"byte_end":236651,"line_start":48,"line_end":48,"column_start":9,"column_end":15},"name":"tables","qualname":"::ir::function::Function::tables","value":"cranelift_entity::primary::PrimaryMap<ir::entities::Table, ir::table::TableData>","parent":{"krate":0,"index":6195},"children":[],"decl_id":null,"docs":" Tables referenced.\n","sig":null,"attributes":[{"value":"/ Tables referenced.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":236614,"byte_end":236636,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":6203},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":236743,"byte_end":236754,"line_start":51,"line_end":51,"column_start":9,"column_end":20},"name":"jump_tables","qualname":"::ir::function::Function::jump_tables","value":"cranelift_entity::primary::PrimaryMap<ir::entities::JumpTable, ir::jumptable::JumpTableData>","parent":{"krate":0,"index":6195},"children":[],"decl_id":null,"docs":" Jump tables used in this function.\n","sig":null,"attributes":[{"value":"/ Jump tables used in this function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":236696,"byte_end":236734,"line_start":50,"line_end":50,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":6204},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":236875,"byte_end":236878,"line_start":54,"line_end":54,"column_start":9,"column_end":12},"name":"dfg","qualname":"::ir::function::Function::dfg","value":"ir::dfg::DataFlowGraph","parent":{"krate":0,"index":6195},"children":[],"decl_id":null,"docs":" Data flow graph containing the primary definition of all instructions, blocks and values.\n","sig":null,"attributes":[{"value":"/ Data flow graph containing the primary definition of all instructions, blocks and values.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":236773,"byte_end":236866,"line_start":53,"line_end":53,"column_start":5,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":6205},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":236968,"byte_end":236974,"line_start":57,"line_end":57,"column_start":9,"column_end":15},"name":"layout","qualname":"::ir::function::Function::layout","value":"ir::layout::Layout","parent":{"krate":0,"index":6195},"children":[],"decl_id":null,"docs":" Layout of blocks and instructions in the function body.\n","sig":null,"attributes":[{"value":"/ Layout of blocks and instructions in the function body.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":236900,"byte_end":236959,"line_start":56,"line_end":56,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":6206},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":237121,"byte_end":237130,"line_start":61,"line_end":61,"column_start":9,"column_end":18},"name":"encodings","qualname":"::ir::function::Function::encodings","value":"cranelift_entity::map::SecondaryMap<ir::entities::Inst, isa::encoding::Encoding>","parent":{"krate":0,"index":6195},"children":[],"decl_id":null,"docs":" Encoding recipe and bits for the legal instructions.\n Illegal instructions have the `Encoding::default()` value.\n","sig":null,"attributes":[{"value":"/ Encoding recipe and bits for the legal instructions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":236989,"byte_end":237045,"line_start":59,"line_end":59,"column_start":5,"column_end":61}},{"value":"/ Illegal instructions have the `Encoding::default()` value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":237050,"byte_end":237112,"line_start":60,"line_end":60,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":6207},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":237198,"byte_end":237207,"line_start":64,"line_end":64,"column_start":9,"column_end":18},"name":"locations","qualname":"::ir::function::Function::locations","value":"cranelift_entity::map::SecondaryMap<ir::entities::Value, ir::valueloc::ValueLoc>","parent":{"krate":0,"index":6195},"children":[],"decl_id":null,"docs":" Location assigned to every value.\n","sig":null,"attributes":[{"value":"/ Location assigned to every value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":237152,"byte_end":237189,"line_start":63,"line_end":63,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":6208},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":237504,"byte_end":237520,"line_start":70,"line_end":70,"column_start":9,"column_end":25},"name":"entry_diversions","qualname":"::ir::function::Function::entry_diversions","value":"regalloc::diversion::EntryRegDiversions","parent":{"krate":0,"index":6195},"children":[],"decl_id":null,"docs":" Non-default locations assigned to value at the entry of basic blocks.","sig":null,"attributes":[{"value":"/ Non-default locations assigned to value at the entry of basic blocks.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":237230,"byte_end":237303,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":237308,"byte_end":237311,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ At the entry of each basic block, we might have values which are not in their default","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":237316,"byte_end":237405,"line_start":68,"line_end":68,"column_start":5,"column_end":94}},{"value":"/ ValueLocation. This field records these register-to-register moves as Diversions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":237410,"byte_end":237495,"line_start":69,"line_end":69,"column_start":5,"column_end":90}}]},{"kind":"Field","id":{"krate":0,"index":6209},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":237834,"byte_end":237841,"line_start":77,"line_end":77,"column_start":9,"column_end":16},"name":"offsets","qualname":"::ir::function::Function::offsets","value":"cranelift_entity::map::SecondaryMap<ir::entities::Block, u32>","parent":{"krate":0,"index":6195},"children":[],"decl_id":null,"docs":" Code offsets of the block headers.","sig":null,"attributes":[{"value":"/ Code offsets of the block headers.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":237547,"byte_end":237585,"line_start":72,"line_end":72,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":237590,"byte_end":237593,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This information is only transiently available after the `binemit::relax_branches` function","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":237598,"byte_end":237693,"line_start":74,"line_end":74,"column_start":5,"column_end":100}},{"value":"/ computes it, and it can easily be recomputed by calling that function. It is not included","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":237698,"byte_end":237791,"line_start":75,"line_end":75,"column_start":5,"column_end":98}},{"value":"/ in the textual IR format.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":237796,"byte_end":237825,"line_start":76,"line_end":76,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":6210},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":237910,"byte_end":237920,"line_start":80,"line_end":80,"column_start":9,"column_end":19},"name":"jt_offsets","qualname":"::ir::function::Function::jt_offsets","value":"cranelift_entity::map::SecondaryMap<ir::entities::JumpTable, u32>","parent":{"krate":0,"index":6195},"children":[],"decl_id":null,"docs":" Code offsets of Jump Table headers.\n","sig":null,"attributes":[{"value":"/ Code offsets of Jump Table headers.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":237862,"byte_end":237901,"line_start":79,"line_end":79,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":6211},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":238127,"byte_end":238134,"line_start":86,"line_end":86,"column_start":9,"column_end":16},"name":"srclocs","qualname":"::ir::function::Function::srclocs","value":"cranelift_entity::map::SecondaryMap<ir::entities::Inst, ir::sourceloc::SourceLoc>","parent":{"krate":0,"index":6195},"children":[],"decl_id":null,"docs":" Source locations.","sig":null,"attributes":[{"value":"/ Source locations.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":237945,"byte_end":237966,"line_start":82,"line_end":82,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":237971,"byte_end":237974,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Track the original source location for each instruction. The source locations are not","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":237979,"byte_end":238068,"line_start":84,"line_end":84,"column_start":5,"column_end":94}},{"value":"/ interpreted by Cranelift, only preserved.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":238073,"byte_end":238118,"line_start":85,"line_end":85,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":6212},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":238334,"byte_end":238346,"line_start":91,"line_end":91,"column_start":9,"column_end":21},"name":"prologue_end","qualname":"::ir::function::Function::prologue_end","value":"core::option::Option<ir::entities::Inst>","parent":{"krate":0,"index":6195},"children":[],"decl_id":null,"docs":" Instruction that marks the end (inclusive) of the function's prologue.","sig":null,"attributes":[{"value":"/ Instruction that marks the end (inclusive) of the function's prologue.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":238153,"byte_end":238227,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":238232,"byte_end":238235,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ This is used for some calling conventions to track the end of unwind information.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":238240,"byte_end":238325,"line_start":90,"line_end":90,"column_start":5,"column_end":90}}]},{"kind":"Field","id":{"krate":0,"index":6213},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":238625,"byte_end":238637,"line_start":98,"line_end":98,"column_start":9,"column_end":21},"name":"frame_layout","qualname":"::ir::function::Function::frame_layout","value":"core::option::Option<ir::framelayout::FrameLayout>","parent":{"krate":0,"index":6195},"children":[],"decl_id":null,"docs":" Frame layout for the instructions.","sig":null,"attributes":[{"value":"/ Frame layout for the instructions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":238367,"byte_end":238405,"line_start":93,"line_end":93,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":238410,"byte_end":238413,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ The stack unwinding requires to have information about which registers and where they","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":238418,"byte_end":238507,"line_start":95,"line_end":95,"column_start":5,"column_end":94}},{"value":"/ are saved in the frame. This information is created during the prologue and epilogue","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":238512,"byte_end":238600,"line_start":96,"line_end":96,"column_start":5,"column_end":93}},{"value":"/ passes.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":238605,"byte_end":238616,"line_start":97,"line_end":97,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":238751,"byte_end":238770,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"with_name_signature","qualname":"<Function>::with_name_signature","value":"fn (name: ExternalName, sig: Signature) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a function with the given name and signature.\n","sig":null,"attributes":[{"value":"/ Create a function with the given name and signature.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":238683,"byte_end":238739,"line_start":102,"line_end":102,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":239614,"byte_end":239619,"line_start":127,"line_end":127,"column_start":12,"column_end":17},"name":"clear","qualname":"<Function>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear all data structures in this function.\n","sig":null,"attributes":[{"value":"/ Clear all data structures in this function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":239555,"byte_end":239602,"line_start":126,"line_end":126,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":240256,"byte_end":240259,"line_start":147,"line_end":147,"column_start":12,"column_end":15},"name":"new","qualname":"<Function>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty, anonymous function with a Fast calling convention.\n","sig":null,"attributes":[{"value":"/ Create a new empty, anonymous function with a Fast calling convention.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":240170,"byte_end":240244,"line_start":146,"line_end":146,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":240466,"byte_end":240483,"line_start":152,"line_end":152,"column_start":12,"column_end":29},"name":"create_jump_table","qualname":"<Function>::create_jump_table","value":"fn (&mut self, data: JumpTableData) -> JumpTable","parent":null,"children":[],"decl_id":null,"docs":" Creates a jump table in the function, to be used by `br_table` instructions.\n","sig":null,"attributes":[{"value":"/ Creates a jump table in the function, to be used by `br_table` instructions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":240374,"byte_end":240454,"line_start":151,"line_end":151,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":240712,"byte_end":240729,"line_start":158,"line_end":158,"column_start":12,"column_end":29},"name":"create_stack_slot","qualname":"<Function>::create_stack_slot","value":"fn (&mut self, data: StackSlotData) -> StackSlot","parent":null,"children":[],"decl_id":null,"docs":" Creates a stack slot in the function, to be used by `stack_load`, `stack_store` and\n `stack_addr` instructions.\n","sig":null,"attributes":[{"value":"/ Creates a stack slot in the function, to be used by `stack_load`, `stack_store` and","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":240578,"byte_end":240665,"line_start":156,"line_end":156,"column_start":5,"column_end":92}},{"value":"/ `stack_addr` instructions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":240670,"byte_end":240700,"line_start":157,"line_end":157,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":240920,"byte_end":240936,"line_start":163,"line_end":163,"column_start":12,"column_end":28},"name":"import_signature","qualname":"<Function>::import_signature","value":"fn (&mut self, signature: Signature) -> SigRef","parent":null,"children":[],"decl_id":null,"docs":" Adds a signature which can later be used to declare an external function import.\n","sig":null,"attributes":[{"value":"/ Adds a signature which can later be used to declare an external function import.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":240824,"byte_end":240908,"line_start":162,"line_end":162,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":241089,"byte_end":241104,"line_start":168,"line_end":168,"column_start":12,"column_end":27},"name":"import_function","qualname":"<Function>::import_function","value":"fn (&mut self, data: ExtFuncData) -> FuncRef","parent":null,"children":[],"decl_id":null,"docs":" Declare an external function import.\n","sig":null,"attributes":[{"value":"/ Declare an external function import.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":241037,"byte_end":241077,"line_start":167,"line_end":167,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":241264,"byte_end":241283,"line_start":173,"line_end":173,"column_start":12,"column_end":31},"name":"create_global_value","qualname":"<Function>::create_global_value","value":"fn (&mut self, data: GlobalValueData) -> GlobalValue","parent":null,"children":[],"decl_id":null,"docs":" Declares a global value accessible to the function.\n","sig":null,"attributes":[{"value":"/ Declares a global value accessible to the function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":241197,"byte_end":241252,"line_start":172,"line_end":172,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":241443,"byte_end":241454,"line_start":178,"line_end":178,"column_start":12,"column_end":23},"name":"create_heap","qualname":"<Function>::create_heap","value":"fn (&mut self, data: HeapData) -> Heap","parent":null,"children":[],"decl_id":null,"docs":" Declares a heap accessible to the function.\n","sig":null,"attributes":[{"value":"/ Declares a heap accessible to the function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":241384,"byte_end":241431,"line_start":177,"line_end":177,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":241593,"byte_end":241605,"line_start":183,"line_end":183,"column_start":12,"column_end":24},"name":"create_table","qualname":"<Function>::create_table","value":"fn (&mut self, data: TableData) -> Table","parent":null,"children":[],"decl_id":null,"docs":" Declares a table accessible to the function.\n","sig":null,"attributes":[{"value":"/ Declares a table accessible to the function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":241533,"byte_end":241581,"line_start":182,"line_end":182,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":241789,"byte_end":241796,"line_start":188,"line_end":188,"column_start":12,"column_end":19},"name":"display","qualname":"<Function>::display","value":"fn <'a, I> (&'a self, isa: I) -> DisplayFunction<'a>","parent":null,"children":[],"decl_id":null,"docs":" Return an object that can display this function with correct ISA-specific annotations.\n","sig":null,"attributes":[{"value":"/ Return an object that can display this function with correct ISA-specific annotations.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":241687,"byte_end":241777,"line_start":187,"line_end":187,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":242065,"byte_end":242077,"line_start":196,"line_end":196,"column_start":12,"column_end":24},"name":"display_with","qualname":"<Function>::display_with","value":"fn <'a> (&'a self, annotations: DisplayFunctionAnnotations<'a>) -> DisplayFunction<'a>","parent":null,"children":[],"decl_id":null,"docs":" Return an object that can display this function with correct ISA-specific annotations.\n","sig":null,"attributes":[{"value":"/ Return an object that can display this function with correct ISA-specific annotations.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":241963,"byte_end":242053,"line_start":195,"line_end":195,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":242425,"byte_end":242438,"line_start":206,"line_end":206,"column_start":12,"column_end":25},"name":"special_param","qualname":"<Function>::special_param","value":"fn (&self, purpose: ir::ArgumentPurpose) -> Option<ir::Value>","parent":null,"children":[],"decl_id":null,"docs":" Find a presumed unique special-purpose function parameter value.","sig":null,"attributes":[{"value":"/ Find a presumed unique special-purpose function parameter value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":242239,"byte_end":242307,"line_start":203,"line_end":203,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":242312,"byte_end":242315,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Returns the value of the last `purpose` parameter, or `None` if no such parameter exists.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":242320,"byte_end":242413,"line_start":205,"line_end":205,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":243228,"byte_end":243240,"line_start":222,"line_end":222,"column_start":12,"column_end":24},"name":"inst_offsets","qualname":"<Function>::inst_offsets","value":"fn <'a> (&'a self, block: Block, encinfo: &EncInfo) -> InstOffsetIter<'a>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over the instructions in `block`, including offsets and encoded instruction\n sizes.","sig":null,"attributes":[{"value":"/ Get an iterator over the instructions in `block`, including offsets and encoded instruction","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":242704,"byte_end":242799,"line_start":213,"line_end":213,"column_start":5,"column_end":100}},{"value":"/ sizes.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":242804,"byte_end":242814,"line_start":214,"line_end":214,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":242819,"byte_end":242822,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ The iterator returns `(offset, inst, size)` tuples, where `offset` if the offset in bytes","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":242827,"byte_end":242920,"line_start":216,"line_end":216,"column_start":5,"column_end":98}},{"value":"/ from the beginning of the function to the instruction, and `size` is the size of the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":242925,"byte_end":243013,"line_start":217,"line_end":217,"column_start":5,"column_end":93}},{"value":"/ instruction in bytes, or 0 for unencoded instructions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":243018,"byte_end":243076,"line_start":218,"line_end":218,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":243081,"byte_end":243084,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ This function can only be used after the code layout has been computed by the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":243089,"byte_end":243170,"line_start":220,"line_end":220,"column_start":5,"column_end":86}},{"value":"/ `binemit::relax_branches()` function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":243175,"byte_end":243216,"line_start":221,"line_end":221,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":243873,"byte_end":243888,"line_start":240,"line_end":240,"column_start":12,"column_end":27},"name":"update_encoding","qualname":"<Function>::update_encoding","value":"fn (&mut self, inst: ir::Inst, isa: &dyn TargetIsa) -> Result<(), Legalize>","parent":null,"children":[],"decl_id":null,"docs":" Wrapper around `encode` which assigns `inst` the resulting encoding.\n","sig":null,"attributes":[{"value":"/ Wrapper around `encode` which assigns `inst` the resulting encoding.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":243789,"byte_end":243861,"line_start":239,"line_end":239,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":244153,"byte_end":244159,"line_start":246,"line_end":246,"column_start":12,"column_end":18},"name":"encode","qualname":"<Function>::encode","value":"fn (&self, inst: ir::Inst, isa: &dyn TargetIsa) -> Result<Encoding, Legalize>","parent":null,"children":[],"decl_id":null,"docs":" Wrapper around `TargetIsa::encode` for encoding an existing instruction\n in the `Function`.\n","sig":null,"attributes":[{"value":"/ Wrapper around `TargetIsa::encode` for encoding an existing instruction","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":244039,"byte_end":244114,"line_start":244,"line_end":244,"column_start":5,"column_end":80}},{"value":"/ in the `Function`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":244119,"byte_end":244141,"line_start":245,"line_end":245,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":244374,"byte_end":244392,"line_start":251,"line_end":251,"column_start":12,"column_end":30},"name":"collect_debug_info","qualname":"<Function>::collect_debug_info","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Starts collection of debug information.\n","sig":null,"attributes":[{"value":"/ Starts collection of debug information.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":244319,"byte_end":244362,"line_start":250,"line_end":250,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":244560,"byte_end":244585,"line_start":257,"line_end":257,"column_start":12,"column_end":37},"name":"collect_frame_layout_info","qualname":"<Function>::collect_frame_layout_info","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Starts collection of frame layout information.\n","sig":null,"attributes":[{"value":"/ Starts collection of frame layout information.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":244498,"byte_end":244548,"line_start":256,"line_end":256,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":244810,"byte_end":244835,"line_start":263,"line_end":263,"column_start":12,"column_end":37},"name":"change_branch_destination","qualname":"<Function>::change_branch_destination","value":"fn (&mut self, inst: Inst, new_dest: Block) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Changes the destination of a jump or branch instruction.\n Does nothing if called with a non-jump or non-branch instruction.\n","sig":null,"attributes":[{"value":"/ Changes the destination of a jump or branch instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":244664,"byte_end":244724,"line_start":261,"line_end":261,"column_start":5,"column_end":65}},{"value":"/ Does nothing if called with a non-jump or non-branch instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":244729,"byte_end":244798,"line_start":262,"line_end":262,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":245199,"byte_end":245213,"line_start":273,"line_end":273,"column_start":12,"column_end":26},"name":"is_block_basic","qualname":"<Function>::is_block_basic","value":"fn (&self, block: Block) -> Result<(), (Inst, &'static str)>","parent":null,"children":[],"decl_id":null,"docs":" Checks that the specified block can be encoded as a basic block.","sig":null,"attributes":[{"value":"/ Checks that the specified block can be encoded as a basic block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":245033,"byte_end":245101,"line_start":270,"line_end":270,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":245106,"byte_end":245109,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ On error, returns the first invalid instruction and an error message.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":245114,"byte_end":245187,"line_start":272,"line_end":272,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":246200,"byte_end":246207,"line_start":296,"line_end":296,"column_start":12,"column_end":19},"name":"is_leaf","qualname":"<Function>::is_leaf","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the function is function that doesn't call any other functions. This is not\n to be confused with a \"leaf function\" in Windows terminology.\n","sig":null,"attributes":[{"value":"/ Returns true if the function is function that doesn't call any other functions. This is not","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":246023,"byte_end":246118,"line_start":294,"line_end":294,"column_start":5,"column_end":100}},{"value":"/ to be confused with a \"leaf function\" in Windows terminology.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":246123,"byte_end":246188,"line_start":295,"line_end":295,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":6216},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":246492,"byte_end":246518,"line_start":305,"line_end":305,"column_start":12,"column_end":38},"name":"DisplayFunctionAnnotations","qualname":"::ir::function::DisplayFunctionAnnotations","value":"DisplayFunctionAnnotations { isa, value_ranges }","parent":null,"children":[{"krate":0,"index":6218},{"krate":0,"index":6219}],"decl_id":null,"docs":" Additional annotations for function display.\n","sig":null,"attributes":[{"value":"/ Additional annotations for function display.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":246413,"byte_end":246461,"line_start":303,"line_end":303,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":6218},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":246565,"byte_end":246568,"line_start":307,"line_end":307,"column_start":9,"column_end":12},"name":"isa","qualname":"::ir::function::DisplayFunctionAnnotations::isa","value":"core::option::Option<&'a (dyn isa::TargetIsa + 'a)>","parent":{"krate":0,"index":6216},"children":[],"decl_id":null,"docs":" Enable ISA annotations.\n","sig":null,"attributes":[{"value":"/ Enable ISA annotations.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":246529,"byte_end":246556,"line_start":306,"line_end":306,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":6219},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":246647,"byte_end":246659,"line_start":310,"line_end":310,"column_start":9,"column_end":21},"name":"value_ranges","qualname":"::ir::function::DisplayFunctionAnnotations::value_ranges","value":"core::option::Option<&'a std::collections::HashMap<ir::ValueLabel, alloc::vec::Vec<value_label::ValueLocRange>>>","parent":{"krate":0,"index":6216},"children":[],"decl_id":null,"docs":" Enable value labels annotations.\n","sig":null,"attributes":[{"value":"/ Enable value labels annotations.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":246602,"byte_end":246638,"line_start":309,"line_end":309,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":968},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":247047,"byte_end":247062,"line_start":323,"line_end":323,"column_start":12,"column_end":27},"name":"DisplayFunction","qualname":"::ir::function::DisplayFunction","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper type capable of displaying a `Function` with correct ISA annotations.\n","sig":null,"attributes":[{"value":"/ Wrapper type capable of displaying a `Function` with correct ISA annotations.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":246954,"byte_end":247035,"line_start":322,"line_end":322,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":980},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":247719,"byte_end":247733,"line_start":344,"line_end":344,"column_start":12,"column_end":26},"name":"InstOffsetIter","qualname":"::ir::function::InstOffsetIter","value":"InstOffsetIter {  }","parent":null,"children":[{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987}],"decl_id":null,"docs":" Iterator returning instruction offsets and sizes: `(offset, inst, size)`.\n","sig":null,"attributes":[{"value":"/ Iterator returning instruction offsets and sizes: `(offset, inst, size)`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":247630,"byte_end":247707,"line_start":343,"line_end":343,"column_start":1,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6224},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/globalvalue.rs","byte_start":248729,"byte_end":248738,"line_start":12,"line_end":12,"column_start":5,"column_end":14},"name":"VMContext","qualname":"::ir::globalvalue::GlobalValueData::VMContext","value":"GlobalValueData::VMContext","parent":{"krate":0,"index":6223},"children":[],"decl_id":null,"docs":" Value is the address of the VM context struct.\n","sig":null,"attributes":[{"value":"/ Value is the address of the VM context struct.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/globalvalue.rs","byte_start":248674,"byte_end":248724,"line_start":11,"line_end":11,"column_start":5,"column_end":55}}]},{"kind":"StructVariant","id":{"krate":0,"index":6226},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/globalvalue.rs","byte_start":249146,"byte_end":249150,"line_start":20,"line_end":20,"column_start":5,"column_end":9},"name":"Load","qualname":"::ir::globalvalue::GlobalValueData::Load","value":"GlobalValueData::Load { base, offset, global_type, readonly }","parent":{"krate":0,"index":6223},"children":[],"decl_id":null,"docs":" Value is pointed to by another global value.","sig":null,"attributes":[{"value":"/ Value is pointed to by another global value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/globalvalue.rs","byte_start":248745,"byte_end":248793,"line_start":14,"line_end":14,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/globalvalue.rs","byte_start":248798,"byte_end":248801,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ The `base` global value is assumed to contain a pointer. This global value is computed","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/globalvalue.rs","byte_start":248806,"byte_end":248896,"line_start":16,"line_end":16,"column_start":5,"column_end":95}},{"value":"/ by loading from memory at that pointer value. The memory must be accessible, and","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/globalvalue.rs","byte_start":248901,"byte_end":248985,"line_start":17,"line_end":17,"column_start":5,"column_end":89}},{"value":"/ naturally aligned to hold a value of the type. The data at this address is assumed","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/globalvalue.rs","byte_start":248990,"byte_end":249076,"line_start":18,"line_end":18,"column_start":5,"column_end":91}},{"value":"/ to never change while the current function is executing.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/globalvalue.rs","byte_start":249081,"byte_end":249141,"line_start":19,"line_end":19,"column_start":5,"column_end":65}}]},{"kind":"StructVariant","id":{"krate":0,"index":6231},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/globalvalue.rs","byte_start":249610,"byte_end":249617,"line_start":36,"line_end":36,"column_start":5,"column_end":12},"name":"IAddImm","qualname":"::ir::globalvalue::GlobalValueData::IAddImm","value":"GlobalValueData::IAddImm { base, offset, global_type }","parent":{"krate":0,"index":6223},"children":[],"decl_id":null,"docs":" Value is an offset from another global value.\n","sig":null,"attributes":[{"value":"/ Value is an offset from another global value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/globalvalue.rs","byte_start":249556,"byte_end":249605,"line_start":35,"line_end":35,"column_start":5,"column_end":54}}]},{"kind":"StructVariant","id":{"krate":0,"index":6235},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/globalvalue.rs","byte_start":250253,"byte_end":250259,"line_start":54,"line_end":54,"column_start":5,"column_end":11},"name":"Symbol","qualname":"::ir::globalvalue::GlobalValueData::Symbol","value":"GlobalValueData::Symbol { name, offset, colocated }","parent":{"krate":0,"index":6223},"children":[],"decl_id":null,"docs":" Value is symbolic, meaning it's a name which will be resolved to an\n actual value later (eg. by linking). Cranelift itself does not interpret\n this name; it's used by embedders to link with other data structures.","sig":null,"attributes":[{"value":"/ Value is symbolic, meaning it's a name which will be resolved to an","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/globalvalue.rs","byte_start":249834,"byte_end":249905,"line_start":47,"line_end":47,"column_start":5,"column_end":76}},{"value":"/ actual value later (eg. by linking). Cranelift itself does not interpret","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/globalvalue.rs","byte_start":249910,"byte_end":249986,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ this name; it's used by embedders to link with other data structures.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/globalvalue.rs","byte_start":249991,"byte_end":250064,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/globalvalue.rs","byte_start":250069,"byte_end":250072,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ For now, symbolic values always have pointer type, and represent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/globalvalue.rs","byte_start":250077,"byte_end":250145,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ addresses, however in the future they could be used to represent other","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/globalvalue.rs","byte_start":250150,"byte_end":250224,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ things as well.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/globalvalue.rs","byte_start":250229,"byte_end":250248,"line_start":53,"line_end":53,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":6223},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/globalvalue.rs","byte_start":248652,"byte_end":248667,"line_start":10,"line_end":10,"column_start":10,"column_end":25},"name":"GlobalValueData","qualname":"::ir::globalvalue::GlobalValueData","value":"GlobalValueData::{VMContext, Load, IAddImm, Symbol}","parent":null,"children":[{"krate":0,"index":6224},{"krate":0,"index":6226},{"krate":0,"index":6231},{"krate":0,"index":6235}],"decl_id":null,"docs":" Information about a global value declaration.\n","sig":null,"attributes":[{"value":"/ Information about a global value declaration.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/globalvalue.rs","byte_start":248576,"byte_end":248625,"line_start":8,"line_end":8,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/globalvalue.rs","byte_start":250883,"byte_end":250894,"line_start":71,"line_end":71,"column_start":12,"column_end":23},"name":"symbol_name","qualname":"<GlobalValueData>::symbol_name","value":"fn (&self) -> &ExternalName","parent":null,"children":[],"decl_id":null,"docs":" Assume that `self` is an `GlobalValueData::Symbol` and return its name.\n","sig":null,"attributes":[{"value":"/ Assume that `self` is an `GlobalValueData::Symbol` and return its name.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/globalvalue.rs","byte_start":250796,"byte_end":250871,"line_start":70,"line_end":70,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/globalvalue.rs","byte_start":251114,"byte_end":251125,"line_start":79,"line_end":79,"column_start":12,"column_end":23},"name":"global_type","qualname":"<GlobalValueData>::global_type","value":"fn (&self, isa: &dyn TargetIsa) -> Type","parent":null,"children":[],"decl_id":null,"docs":" Return the type of this global.\n","sig":null,"attributes":[{"value":"/ Return the type of this global.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/globalvalue.rs","byte_start":251067,"byte_end":251102,"line_start":78,"line_end":78,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":6241},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/heap.rs","byte_start":252880,"byte_end":252888,"line_start":9,"line_end":9,"column_start":12,"column_end":20},"name":"HeapData","qualname":"::ir::heap::HeapData","value":"HeapData { base, min_size, offset_guard_size, style, index_type }","parent":null,"children":[{"krate":0,"index":6242},{"krate":0,"index":6243},{"krate":0,"index":6244},{"krate":0,"index":6245},{"krate":0,"index":6246}],"decl_id":null,"docs":" Information about a heap declaration.\n","sig":null,"attributes":[{"value":"/ Information about a heap declaration.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/heap.rs","byte_start":252810,"byte_end":252851,"line_start":7,"line_end":7,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":6242},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/heap.rs","byte_start":252955,"byte_end":252959,"line_start":11,"line_end":11,"column_start":9,"column_end":13},"name":"base","qualname":"::ir::heap::HeapData::base","value":"ir::entities::GlobalValue","parent":{"krate":0,"index":6241},"children":[],"decl_id":null,"docs":" The address of the start of the heap's storage.\n","sig":null,"attributes":[{"value":"/ The address of the start of the heap's storage.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/heap.rs","byte_start":252895,"byte_end":252946,"line_start":10,"line_end":10,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":6243},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/heap.rs","byte_start":253098,"byte_end":253106,"line_start":15,"line_end":15,"column_start":9,"column_end":17},"name":"min_size","qualname":"::ir::heap::HeapData::min_size","value":"ir::immediates::Uimm64","parent":{"krate":0,"index":6241},"children":[],"decl_id":null,"docs":" Guaranteed minimum heap size in bytes. Heap accesses before `min_size` don't need bounds\n checking.\n","sig":null,"attributes":[{"value":"/ Guaranteed minimum heap size in bytes. Heap accesses before `min_size` don't need bounds","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/heap.rs","byte_start":252979,"byte_end":253071,"line_start":13,"line_end":13,"column_start":5,"column_end":97}},{"value":"/ checking.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/heap.rs","byte_start":253076,"byte_end":253089,"line_start":14,"line_end":14,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":6244},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/heap.rs","byte_start":253193,"byte_end":253210,"line_start":18,"line_end":18,"column_start":9,"column_end":26},"name":"offset_guard_size","qualname":"::ir::heap::HeapData::offset_guard_size","value":"ir::immediates::Uimm64","parent":{"krate":0,"index":6241},"children":[],"decl_id":null,"docs":" Size in bytes of the offset-guard pages following the heap.\n","sig":null,"attributes":[{"value":"/ Size in bytes of the offset-guard pages following the heap.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/heap.rs","byte_start":253121,"byte_end":253184,"line_start":17,"line_end":17,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":6245},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/heap.rs","byte_start":253286,"byte_end":253291,"line_start":21,"line_end":21,"column_start":9,"column_end":14},"name":"style","qualname":"::ir::heap::HeapData::style","value":"ir::heap::HeapStyle","parent":{"krate":0,"index":6241},"children":[],"decl_id":null,"docs":" Heap style, with additional style-specific info.\n","sig":null,"attributes":[{"value":"/ Heap style, with additional style-specific info.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/heap.rs","byte_start":253225,"byte_end":253277,"line_start":20,"line_end":20,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":6246},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/heap.rs","byte_start":253350,"byte_end":253360,"line_start":24,"line_end":24,"column_start":9,"column_end":19},"name":"index_type","qualname":"::ir::heap::HeapData::index_type","value":"ir::types::Type","parent":{"krate":0,"index":6241},"children":[],"decl_id":null,"docs":" The index type for the heap.\n","sig":null,"attributes":[{"value":"/ The index type for the heap.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/heap.rs","byte_start":253309,"byte_end":253341,"line_start":23,"line_end":23,"column_start":5,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":6250},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/heap.rs","byte_start":253555,"byte_end":253562,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Dynamic","qualname":"::ir::heap::HeapStyle::Dynamic","value":"HeapStyle::Dynamic { bound_gv }","parent":{"krate":0,"index":6249},"children":[],"decl_id":null,"docs":" A dynamic heap can be relocated to a different base address when it is grown.\n","sig":null,"attributes":[{"value":"/ A dynamic heap can be relocated to a different base address when it is grown.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/heap.rs","byte_start":253469,"byte_end":253550,"line_start":30,"line_end":30,"column_start":5,"column_end":86}}]},{"kind":"StructVariant","id":{"krate":0,"index":6252},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/heap.rs","byte_start":253809,"byte_end":253815,"line_start":38,"line_end":38,"column_start":5,"column_end":11},"name":"Static","qualname":"::ir::heap::HeapStyle::Static","value":"HeapStyle::Static { bound }","parent":{"krate":0,"index":6249},"children":[],"decl_id":null,"docs":" A static heap has a fixed base address and a number of not-yet-allocated pages before the\n offset-guard pages.\n","sig":null,"attributes":[{"value":"/ A static heap has a fixed base address and a number of not-yet-allocated pages before the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/heap.rs","byte_start":253683,"byte_end":253776,"line_start":36,"line_end":36,"column_start":5,"column_end":98}},{"value":"/ offset-guard pages.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/heap.rs","byte_start":253781,"byte_end":253804,"line_start":37,"line_end":37,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":6249},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/heap.rs","byte_start":253453,"byte_end":253462,"line_start":29,"line_end":29,"column_start":10,"column_end":19},"name":"HeapStyle","qualname":"::ir::heap::HeapStyle","value":"HeapStyle::{Dynamic, Static}","parent":null,"children":[{"krate":0,"index":6250},{"krate":0,"index":6252}],"decl_id":null,"docs":" Style of heap including style-specific information.\n","sig":null,"attributes":[{"value":"/ Style of heap including style-specific information.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/heap.rs","byte_start":253371,"byte_end":253426,"line_start":27,"line_end":27,"column_start":1,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":1016},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"immediates","qualname":"::ir::immediates","value":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","parent":null,"children":[{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1030},{"krate":0,"index":1032},{"krate":0,"index":1034},{"krate":0,"index":6256},{"krate":0,"index":6273},{"krate":0,"index":6271},{"krate":0,"index":6267},{"krate":0,"index":6268},{"krate":0,"index":6264},{"krate":0,"index":6265},{"krate":0,"index":6262},{"krate":0,"index":6259},{"krate":0,"index":1036},{"krate":0,"index":1039},{"krate":0,"index":1041},{"krate":0,"index":1043},{"krate":0,"index":1045},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":6274},{"krate":0,"index":6291},{"krate":0,"index":6289},{"krate":0,"index":6285},{"krate":0,"index":6286},{"krate":0,"index":6282},{"krate":0,"index":6283},{"krate":0,"index":6280},{"krate":0,"index":6277},{"krate":0,"index":1051},{"krate":0,"index":1054},{"krate":0,"index":1056},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1065},{"krate":0,"index":6292},{"krate":0,"index":6309},{"krate":0,"index":6307},{"krate":0,"index":6303},{"krate":0,"index":6304},{"krate":0,"index":6300},{"krate":0,"index":6301},{"krate":0,"index":6298},{"krate":0,"index":6295},{"krate":0,"index":1066},{"krate":0,"index":1068},{"krate":0,"index":1070},{"krate":0,"index":1072},{"krate":0,"index":1074},{"krate":0,"index":6310},{"krate":0,"index":6330},{"krate":0,"index":6327},{"krate":0,"index":6323},{"krate":0,"index":6324},{"krate":0,"index":6319},{"krate":0,"index":6320},{"krate":0,"index":6317},{"krate":0,"index":6314},{"krate":0,"index":1078},{"krate":0,"index":1083},{"krate":0,"index":6331},{"krate":0,"index":6348},{"krate":0,"index":6346},{"krate":0,"index":6342},{"krate":0,"index":6343},{"krate":0,"index":6339},{"krate":0,"index":6340},{"krate":0,"index":6337},{"krate":0,"index":6334},{"krate":0,"index":1086},{"krate":0,"index":1090},{"krate":0,"index":1092},{"krate":0,"index":1094},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":6349},{"krate":0,"index":6366},{"krate":0,"index":6364},{"krate":0,"index":6362},{"krate":0,"index":6359},{"krate":0,"index":6360},{"krate":0,"index":6355},{"krate":0,"index":6356},{"krate":0,"index":6352},{"krate":0,"index":6367},{"krate":0,"index":6384},{"krate":0,"index":6382},{"krate":0,"index":6380},{"krate":0,"index":6377},{"krate":0,"index":6378},{"krate":0,"index":6373},{"krate":0,"index":6374},{"krate":0,"index":6370},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1113},{"krate":0,"index":1115},{"krate":0,"index":1118},{"krate":0,"index":1120},{"krate":0,"index":1122},{"krate":0,"index":1131},{"krate":0,"index":1133},{"krate":0,"index":1136},{"krate":0,"index":1138},{"krate":0,"index":1140}],"decl_id":null,"docs":" Immediate operands for Cranelift instructions","sig":null,"attributes":[{"value":"! Immediate operands for Cranelift instructions","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":254592,"byte_end":254641,"line_start":1,"line_end":1,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":254642,"byte_end":254645,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module defines the types of immediate operands that can appear on Cranelift instructions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":254646,"byte_end":254744,"line_start":3,"line_end":3,"column_start":1,"column_end":99}},{"value":"! Each type here should have a corresponding definition in the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":254745,"byte_end":254809,"line_start":4,"line_end":4,"column_start":1,"column_end":65}},{"value":"! `cranelift-codegen/meta/src/shared/immediates` crate in the meta language.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":254810,"byte_end":254888,"line_start":5,"line_end":5,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":1026},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":255172,"byte_end":255181,"line_start":14,"line_end":14,"column_start":11,"column_end":20},"name":"IntoBytes","qualname":"::ir::immediates::IntoBytes","value":"IntoBytes","parent":null,"children":[{"krate":0,"index":1027}],"decl_id":null,"docs":" Convert a type into a vector of bytes; all implementors in this file must use little-endian\n orderings of bytes to match WebAssembly's little-endianness.\n","sig":null,"attributes":[{"value":"/ Convert a type into a vector of bytes; all implementors in this file must use little-endian","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":255001,"byte_end":255096,"line_start":12,"line_end":12,"column_start":1,"column_end":96}},{"value":"/ orderings of bytes to match WebAssembly's little-endianness.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":255097,"byte_end":255161,"line_start":13,"line_end":13,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":255270,"byte_end":255280,"line_start":16,"line_end":16,"column_start":8,"column_end":18},"name":"into_bytes","qualname":"::ir::immediates::IntoBytes::into_bytes","value":"fn (self) -> Vec<u8>","parent":{"krate":0,"index":1026},"children":[],"decl_id":null,"docs":" Return the little-endian byte representation of the implementing type.\n","sig":null,"attributes":[{"value":"/ Return the little-endian byte representation of the implementing type.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":255188,"byte_end":255262,"line_start":15,"line_end":15,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":6256},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":255931,"byte_end":255936,"line_start":48,"line_end":48,"column_start":12,"column_end":17},"name":"Imm64","qualname":"::ir::immediates::Imm64","value":"","parent":null,"children":[],"decl_id":null,"docs":" 64-bit immediate signed integer operand.","sig":null,"attributes":[{"value":"/ 64-bit immediate signed integer operand.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":255693,"byte_end":255737,"line_start":43,"line_end":43,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":255738,"byte_end":255741,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ An `Imm64` operand can also be used to represent immediate values of smaller integer types by","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":255742,"byte_end":255839,"line_start":45,"line_end":45,"column_start":1,"column_end":98}},{"value":"/ sign-extending to `i64`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":255840,"byte_end":255868,"line_start":46,"line_end":46,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":256033,"byte_end":256036,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<Imm64>::new","value":"fn (x: i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Imm64` representing the signed number `x`.\n","sig":null,"attributes":[{"value":"/ Create a new `Imm64` representing the signed number `x`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":255961,"byte_end":256021,"line_start":51,"line_end":51,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":256118,"byte_end":256130,"line_start":57,"line_end":57,"column_start":12,"column_end":24},"name":"wrapping_neg","qualname":"<Imm64>::wrapping_neg","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return self negated.\n","sig":null,"attributes":[{"value":"/ Return self negated.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":256082,"byte_end":256106,"line_start":56,"line_end":56,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":6274},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":257797,"byte_end":257803,"line_start":128,"line_end":128,"column_start":12,"column_end":18},"name":"Uimm64","qualname":"::ir::immediates::Uimm64","value":"","parent":null,"children":[],"decl_id":null,"docs":" 64-bit immediate unsigned integer operand.","sig":null,"attributes":[{"value":"/ 64-bit immediate unsigned integer operand.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":257557,"byte_end":257603,"line_start":123,"line_end":123,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":257604,"byte_end":257607,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ A `Uimm64` operand can also be used to represent immediate values of smaller integer types by","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":257608,"byte_end":257705,"line_start":125,"line_end":125,"column_start":1,"column_end":98}},{"value":"/ zero-extending to `i64`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":257706,"byte_end":257734,"line_start":126,"line_end":126,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":257904,"byte_end":257907,"line_start":132,"line_end":132,"column_start":12,"column_end":15},"name":"new","qualname":"<Uimm64>::new","value":"fn (x: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Uimm64` representing the unsigned number `x`.\n","sig":null,"attributes":[{"value":"/ Create a new `Uimm64` representing the unsigned number `x`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":257829,"byte_end":257892,"line_start":131,"line_end":131,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":257989,"byte_end":258001,"line_start":137,"line_end":137,"column_start":12,"column_end":24},"name":"wrapping_neg","qualname":"<Uimm64>::wrapping_neg","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return self negated.\n","sig":null,"attributes":[{"value":"/ Return self negated.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":257953,"byte_end":257977,"line_start":136,"line_end":136,"column_start":5,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":1065},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":261198,"byte_end":261203,"line_start":253,"line_end":253,"column_start":10,"column_end":15},"name":"Uimm8","qualname":"::ir::immediates::Uimm8","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" 8-bit unsigned integer immediate operand.","sig":null,"attributes":[{"value":"/ 8-bit unsigned integer immediate operand.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":261086,"byte_end":261131,"line_start":250,"line_end":250,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":261132,"byte_end":261135,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate lane indexes typically.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":261136,"byte_end":261188,"line_start":252,"line_end":252,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":6292},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":261381,"byte_end":261387,"line_start":259,"line_end":259,"column_start":12,"column_end":18},"name":"Uimm32","qualname":"::ir::immediates::Uimm32","value":"","parent":null,"children":[],"decl_id":null,"docs":" A 32-bit unsigned integer immediate operand.","sig":null,"attributes":[{"value":"/ A 32-bit unsigned integer immediate operand.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":261211,"byte_end":261259,"line_start":255,"line_end":255,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":261260,"byte_end":261263,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ This is used to represent sizes of memory objects.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":261264,"byte_end":261318,"line_start":257,"line_end":257,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":6310},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":262434,"byte_end":262441,"line_start":308,"line_end":308,"column_start":12,"column_end":19},"name":"V128Imm","qualname":"::ir::immediates::V128Imm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A 128-bit immediate operand.","sig":null,"attributes":[{"value":"/ A 128-bit immediate operand.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":262274,"byte_end":262306,"line_start":304,"line_end":304,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":262307,"byte_end":262310,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ This is used as an immediate value in SIMD instructions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":262311,"byte_end":262371,"line_start":306,"line_end":306,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":262532,"byte_end":262537,"line_start":312,"line_end":312,"column_start":12,"column_end":17},"name":"bytes","qualname":"<V128Imm>::bytes","value":"fn (&self) -> impl Iterator<Item = &u8>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the bytes in the constant.\n","sig":null,"attributes":[{"value":"/ Iterate over the bytes in the constant.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":262477,"byte_end":262520,"line_start":311,"line_end":311,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":262661,"byte_end":262667,"line_start":317,"line_end":317,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<V128Imm>::to_vec","value":"fn (self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Convert the immediate into a vector.\n","sig":null,"attributes":[{"value":"/ Convert the immediate into a vector.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":262609,"byte_end":262649,"line_start":316,"line_end":316,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":262773,"byte_end":262781,"line_start":322,"line_end":322,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<V128Imm>::as_slice","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Convert the immediate into a slice.\n","sig":null,"attributes":[{"value":"/ Convert the immediate into a slice.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":262722,"byte_end":262761,"line_start":321,"line_end":321,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":6331},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":263293,"byte_end":263301,"line_start":341,"line_end":341,"column_start":12,"column_end":20},"name":"Offset32","qualname":"::ir::immediates::Offset32","value":"","parent":null,"children":[],"decl_id":null,"docs":" 32-bit signed immediate offset.","sig":null,"attributes":[{"value":"/ 32-bit signed immediate offset.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":263036,"byte_end":263071,"line_start":336,"line_end":336,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":263072,"byte_end":263075,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ This is used to encode an immediate offset for load/store instructions. All supported ISAs have","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":263076,"byte_end":263175,"line_start":338,"line_end":338,"column_start":1,"column_end":100}},{"value":"/ a maximum load/store offset that fits in an `i32`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":263176,"byte_end":263230,"line_start":339,"line_end":339,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":263404,"byte_end":263407,"line_start":345,"line_end":345,"column_start":12,"column_end":15},"name":"new","qualname":"<Offset32>::new","value":"fn (x: i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Offset32` representing the signed number `x`.\n","sig":null,"attributes":[{"value":"/ Create a new `Offset32` representing the signed number `x`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":263329,"byte_end":263392,"line_start":344,"line_end":344,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":263540,"byte_end":263552,"line_start":350,"line_end":350,"column_start":12,"column_end":24},"name":"try_from_i64","qualname":"<Offset32>::try_from_i64","value":"fn (x: i64) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Offset32` representing the signed number `x` if possible.\n","sig":null,"attributes":[{"value":"/ Create a new `Offset32` representing the signed number `x` if possible.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":263453,"byte_end":263528,"line_start":349,"line_end":349,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":263790,"byte_end":263801,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"name":"try_add_i64","qualname":"<Offset32>::try_add_i64","value":"fn (self, x: i64) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Add in the signed number `x` if possible.\n","sig":null,"attributes":[{"value":"/ Add in the signed number `x` if possible.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":263733,"byte_end":263778,"line_start":359,"line_end":359,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":6349},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":265478,"byte_end":265484,"line_start":430,"line_end":430,"column_start":12,"column_end":18},"name":"Ieee32","qualname":"::ir::immediates::Ieee32","value":"","parent":null,"children":[],"decl_id":null,"docs":" An IEEE binary32 immediate floating point value, represented as a u32\n containing the bit pattern.","sig":null,"attributes":[{"value":"/ An IEEE binary32 immediate floating point value, represented as a u32","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":265272,"byte_end":265345,"line_start":425,"line_end":425,"column_start":1,"column_end":74}},{"value":"/ containing the bit pattern.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":265346,"byte_end":265377,"line_start":426,"line_end":426,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":265378,"byte_end":265381,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ All bit patterns are allowed.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":265382,"byte_end":265415,"line_start":428,"line_end":428,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":6367},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":265698,"byte_end":265704,"line_start":437,"line_end":437,"column_start":12,"column_end":18},"name":"Ieee64","qualname":"::ir::immediates::Ieee64","value":"","parent":null,"children":[],"decl_id":null,"docs":" An IEEE binary64 immediate floating point value, represented as a u64\n containing the bit pattern.","sig":null,"attributes":[{"value":"/ An IEEE binary64 immediate floating point value, represented as a u64","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":265492,"byte_end":265565,"line_start":432,"line_end":432,"column_start":1,"column_end":74}},{"value":"/ containing the bit pattern.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":265566,"byte_end":265597,"line_start":433,"line_end":433,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":265598,"byte_end":265601,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ All bit patterns are allowed.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":265602,"byte_end":265635,"line_start":435,"line_end":435,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1105},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":273596,"byte_end":273605,"line_start":678,"line_end":678,"column_start":12,"column_end":21},"name":"with_bits","qualname":"<Ieee32>::with_bits","value":"fn (x: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Ieee32` containing the bits of `x`.\n","sig":null,"attributes":[{"value":"/ Create a new `Ieee32` containing the bits of `x`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":273531,"byte_end":273584,"line_start":677,"line_end":677,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":273714,"byte_end":273718,"line_start":683,"line_end":683,"column_start":12,"column_end":16},"name":"pow2","qualname":"<Ieee32>::pow2","value":"fn <I> (n: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `Ieee32` number representing `2.0^n`.\n","sig":null,"attributes":[{"value":"/ Create an `Ieee32` number representing `2.0^n`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":273651,"byte_end":273702,"line_start":682,"line_end":682,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":274197,"byte_end":274227,"line_start":696,"line_end":696,"column_start":12,"column_end":42},"name":"fcvt_to_sint_negative_overflow","qualname":"<Ieee32>::fcvt_to_sint_negative_overflow","value":"fn <I> (n: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `Ieee32` number representing the greatest negative value\n not convertable from f32 to a signed integer with width n.\n","sig":null,"attributes":[{"value":"/ Create an `Ieee32` number representing the greatest negative value","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":274048,"byte_end":274118,"line_start":694,"line_end":694,"column_start":5,"column_end":75}},{"value":"/ not convertable from f32 to a signed integer with width n.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":274123,"byte_end":274185,"line_start":695,"line_end":695,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1110},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":274493,"byte_end":274496,"line_start":704,"line_end":704,"column_start":12,"column_end":15},"name":"neg","qualname":"<Ieee32>::neg","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return self negated.\n","sig":null,"attributes":[{"value":"/ Return self negated.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":274457,"byte_end":274481,"line_start":703,"line_end":703,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1111},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":274623,"byte_end":274633,"line_start":709,"line_end":709,"column_start":12,"column_end":22},"name":"with_float","qualname":"<Ieee32>::with_float","value":"fn (x: f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Ieee32` representing the number `x`.\n","sig":null,"attributes":[{"value":"/ Create a new `Ieee32` representing the number `x`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":274557,"byte_end":274611,"line_start":708,"line_end":708,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":274736,"byte_end":274740,"line_start":714,"line_end":714,"column_start":12,"column_end":16},"name":"bits","qualname":"<Ieee32>::bits","value":"fn (self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the bitwise representation.\n","sig":null,"attributes":[{"value":"/ Get the bitwise representation.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":274689,"byte_end":274724,"line_start":713,"line_end":713,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":275480,"byte_end":275489,"line_start":751,"line_end":751,"column_start":12,"column_end":21},"name":"with_bits","qualname":"<Ieee64>::with_bits","value":"fn (x: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Ieee64` containing the bits of `x`.\n","sig":null,"attributes":[{"value":"/ Create a new `Ieee64` containing the bits of `x`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":275415,"byte_end":275468,"line_start":750,"line_end":750,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":275598,"byte_end":275602,"line_start":756,"line_end":756,"column_start":12,"column_end":16},"name":"pow2","qualname":"<Ieee64>::pow2","value":"fn <I> (n: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `Ieee64` number representing `2.0^n`.\n","sig":null,"attributes":[{"value":"/ Create an `Ieee64` number representing `2.0^n`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":275535,"byte_end":275586,"line_start":755,"line_end":755,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":276082,"byte_end":276112,"line_start":769,"line_end":769,"column_start":12,"column_end":42},"name":"fcvt_to_sint_negative_overflow","qualname":"<Ieee64>::fcvt_to_sint_negative_overflow","value":"fn <I> (n: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `Ieee64` number representing the greatest negative value\n not convertable from f64 to a signed integer with width n.\n","sig":null,"attributes":[{"value":"/ Create an `Ieee64` number representing the greatest negative value","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":275933,"byte_end":276003,"line_start":767,"line_end":767,"column_start":5,"column_end":75}},{"value":"/ not convertable from f64 to a signed integer with width n.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":276008,"byte_end":276070,"line_start":768,"line_end":768,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":276378,"byte_end":276381,"line_start":777,"line_end":777,"column_start":12,"column_end":15},"name":"neg","qualname":"<Ieee64>::neg","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return self negated.\n","sig":null,"attributes":[{"value":"/ Return self negated.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":276342,"byte_end":276366,"line_start":776,"line_end":776,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1129},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":276508,"byte_end":276518,"line_start":782,"line_end":782,"column_start":12,"column_end":22},"name":"with_float","qualname":"<Ieee64>::with_float","value":"fn (x: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Ieee64` representing the number `x`.\n","sig":null,"attributes":[{"value":"/ Create a new `Ieee64` representing the number `x`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":276442,"byte_end":276496,"line_start":781,"line_end":781,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":276621,"byte_end":276625,"line_start":787,"line_end":787,"column_start":12,"column_end":16},"name":"bits","qualname":"<Ieee64>::bits","value":"fn (self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the bitwise representation.\n","sig":null,"attributes":[{"value":"/ Get the bitwise representation.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":276574,"byte_end":276609,"line_start":786,"line_end":786,"column_start":5,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":1142},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"instructions","qualname":"::ir::instructions","value":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","parent":null,"children":[{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1148},{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":6423},{"krate":0,"index":6534},{"krate":0,"index":6532},{"krate":0,"index":6529},{"krate":0,"index":6530},{"krate":0,"index":6526},{"krate":0,"index":6527},{"krate":0,"index":6524},{"krate":0,"index":6385},{"krate":0,"index":6535},{"krate":0,"index":6749},{"krate":0,"index":6747},{"krate":0,"index":6388},{"krate":0,"index":6751},{"krate":0,"index":7210},{"krate":0,"index":7208},{"krate":0,"index":7205},{"krate":0,"index":7206},{"krate":0,"index":7202},{"krate":0,"index":7203},{"krate":0,"index":7200},{"krate":0,"index":7197},{"krate":0,"index":6400},{"krate":0,"index":6412},{"krate":0,"index":6414},{"krate":0,"index":6415},{"krate":0,"index":6417},{"krate":0,"index":6419},{"krate":0,"index":6421},{"krate":0,"index":1166},{"krate":0,"index":1168},{"krate":0,"index":1171},{"krate":0,"index":7211},{"krate":0,"index":7216},{"krate":0,"index":7214},{"krate":0,"index":1182},{"krate":0,"index":1187},{"krate":0,"index":1190},{"krate":0,"index":1192},{"krate":0,"index":1194},{"krate":0,"index":1196},{"krate":0,"index":1203},{"krate":0,"index":1215},{"krate":0,"index":7218},{"krate":0,"index":7223},{"krate":0,"index":7222},{"krate":0,"index":1227},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":7225},{"krate":0,"index":7241},{"krate":0,"index":7240},{"krate":0,"index":7238},{"krate":0,"index":7234},{"krate":0,"index":7235},{"krate":0,"index":7231},{"krate":0,"index":7232},{"krate":0,"index":1241},{"krate":0,"index":1245},{"krate":0,"index":1266},{"krate":0,"index":7243},{"krate":0,"index":7261},{"krate":0,"index":7259},{"krate":0,"index":7257},{"krate":0,"index":7253},{"krate":0,"index":7254},{"krate":0,"index":7250},{"krate":0,"index":7251}],"decl_id":null,"docs":" Instruction formats and opcodes.","sig":null,"attributes":[{"value":"! Instruction formats and opcodes.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":296820,"byte_end":296856,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":296857,"byte_end":296860,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The `instructions` module contains definitions for instruction formats, opcodes, and the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":296861,"byte_end":296953,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"! in-memory representation of IR instructions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":296954,"byte_end":297002,"line_start":4,"line_end":4,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":297003,"byte_end":297006,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! A large part of this module is auto-generated from the instruction descriptions in the meta","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":297007,"byte_end":297102,"line_start":6,"line_end":6,"column_start":1,"column_end":96}},{"value":"! directory.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":297103,"byte_end":297117,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Type","id":{"krate":0,"index":1164},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":297630,"byte_end":297639,"line_start":25,"line_end":25,"column_start":10,"column_end":19},"name":"ValueList","qualname":"::ir::instructions::ValueList","value":"entity::EntityList<Value>","parent":null,"children":[],"decl_id":null,"docs":" Some instructions use an external list of argument values because there is not enough space in\n the 16-byte `InstructionData` struct. These value lists are stored in a memory pool in\n `dfg.value_lists`.\n","sig":null,"attributes":[{"value":"/ Some instructions use an external list of argument values because there is not enough space in","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":297408,"byte_end":297506,"line_start":22,"line_end":22,"column_start":1,"column_end":99}},{"value":"/ the 16-byte `InstructionData` struct. These value lists are stored in a memory pool in","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":297507,"byte_end":297597,"line_start":23,"line_end":23,"column_start":1,"column_end":91}},{"value":"/ `dfg.value_lists`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":297598,"byte_end":297620,"line_start":24,"line_end":24,"column_start":1,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":1165},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":297737,"byte_end":297750,"line_start":28,"line_end":28,"column_start":10,"column_end":23},"name":"ValueListPool","qualname":"::ir::instructions::ValueListPool","value":"entity::ListPool<Value>","parent":null,"children":[],"decl_id":null,"docs":" Memory pool for holding value lists. See `ValueList`.\n","sig":null,"attributes":[{"value":"/ Memory pool for holding value lists. See `ValueList`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":297670,"byte_end":297727,"line_start":27,"line_end":27,"column_start":1,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6424},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10262365,"byte_end":10262371,"line_start":9,"line_end":9,"column_start":5,"column_end":11},"name":"Binary","qualname":"::ir::instructions::InstructionFormat::Binary","value":"InstructionFormat::Binary","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" Binary(imms=(), vals=2)\n","sig":null,"attributes":[{"value":"/ Binary(imms=(), vals=2)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10262333,"byte_end":10262360,"line_start":8,"line_end":8,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6426},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10262438,"byte_end":10262447,"line_start":11,"line_end":11,"column_start":5,"column_end":14},"name":"BinaryImm","qualname":"::ir::instructions::InstructionFormat::BinaryImm","value":"InstructionFormat::BinaryImm","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" BinaryImm(imms=(imm: ir::immediates::Imm64), vals=1)\n","sig":null,"attributes":[{"value":"/ BinaryImm(imms=(imm: ir::immediates::Imm64), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10262377,"byte_end":10262433,"line_start":10,"line_end":10,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6428},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10262507,"byte_end":10262513,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Branch","qualname":"::ir::instructions::InstructionFormat::Branch","value":"InstructionFormat::Branch","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" Branch(imms=(destination: ir::Block), vals=1)\n","sig":null,"attributes":[{"value":"/ Branch(imms=(destination: ir::Block), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10262453,"byte_end":10262502,"line_start":12,"line_end":12,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6430},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10262608,"byte_end":10262619,"line_start":15,"line_end":15,"column_start":5,"column_end":16},"name":"BranchFloat","qualname":"::ir::instructions::InstructionFormat::BranchFloat","value":"InstructionFormat::BranchFloat","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" BranchFloat(imms=(cond: ir::condcodes::FloatCC, destination: ir::Block), vals=1)\n","sig":null,"attributes":[{"value":"/ BranchFloat(imms=(cond: ir::condcodes::FloatCC, destination: ir::Block), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10262519,"byte_end":10262603,"line_start":14,"line_end":14,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6432},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10262711,"byte_end":10262721,"line_start":17,"line_end":17,"column_start":5,"column_end":15},"name":"BranchIcmp","qualname":"::ir::instructions::InstructionFormat::BranchIcmp","value":"InstructionFormat::BranchIcmp","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" BranchIcmp(imms=(cond: ir::condcodes::IntCC, destination: ir::Block), vals=2)\n","sig":null,"attributes":[{"value":"/ BranchIcmp(imms=(cond: ir::condcodes::IntCC, destination: ir::Block), vals=2)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10262625,"byte_end":10262706,"line_start":16,"line_end":16,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6434},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10262812,"byte_end":10262821,"line_start":19,"line_end":19,"column_start":5,"column_end":14},"name":"BranchInt","qualname":"::ir::instructions::InstructionFormat::BranchInt","value":"InstructionFormat::BranchInt","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" BranchInt(imms=(cond: ir::condcodes::IntCC, destination: ir::Block), vals=1)\n","sig":null,"attributes":[{"value":"/ BranchInt(imms=(cond: ir::condcodes::IntCC, destination: ir::Block), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10262727,"byte_end":10262807,"line_start":18,"line_end":18,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6436},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10262908,"byte_end":10262919,"line_start":21,"line_end":21,"column_start":5,"column_end":16},"name":"BranchTable","qualname":"::ir::instructions::InstructionFormat::BranchTable","value":"InstructionFormat::BranchTable","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" BranchTable(imms=(destination: ir::Block, table: ir::JumpTable), vals=1)\n","sig":null,"attributes":[{"value":"/ BranchTable(imms=(destination: ir::Block, table: ir::JumpTable), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10262827,"byte_end":10262903,"line_start":20,"line_end":20,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6438},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10262986,"byte_end":10263001,"line_start":23,"line_end":23,"column_start":5,"column_end":20},"name":"BranchTableBase","qualname":"::ir::instructions::InstructionFormat::BranchTableBase","value":"InstructionFormat::BranchTableBase","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" BranchTableBase(imms=(table: ir::JumpTable), vals=0)\n","sig":null,"attributes":[{"value":"/ BranchTableBase(imms=(table: ir::JumpTable), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10262925,"byte_end":10262981,"line_start":22,"line_end":22,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6440},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10263097,"byte_end":10263113,"line_start":25,"line_end":25,"column_start":5,"column_end":21},"name":"BranchTableEntry","qualname":"::ir::instructions::InstructionFormat::BranchTableEntry","value":"InstructionFormat::BranchTableEntry","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" BranchTableEntry(imms=(imm: ir::immediates::Uimm8, table: ir::JumpTable), vals=2)\n","sig":null,"attributes":[{"value":"/ BranchTableEntry(imms=(imm: ir::immediates::Uimm8, table: ir::JumpTable), vals=2)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10263007,"byte_end":10263092,"line_start":24,"line_end":24,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6442},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10263170,"byte_end":10263174,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"Call","qualname":"::ir::instructions::InstructionFormat::Call","value":"InstructionFormat::Call","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" Call(imms=(func_ref: ir::FuncRef), vals=0)\n","sig":null,"attributes":[{"value":"/ Call(imms=(func_ref: ir::FuncRef), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10263119,"byte_end":10263165,"line_start":26,"line_end":26,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6444},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10263237,"byte_end":10263249,"line_start":29,"line_end":29,"column_start":5,"column_end":17},"name":"CallIndirect","qualname":"::ir::instructions::InstructionFormat::CallIndirect","value":"InstructionFormat::CallIndirect","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" CallIndirect(imms=(sig_ref: ir::SigRef), vals=1)\n","sig":null,"attributes":[{"value":"/ CallIndirect(imms=(sig_ref: ir::SigRef), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10263180,"byte_end":10263232,"line_start":28,"line_end":28,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6446},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10263307,"byte_end":10263315,"line_start":31,"line_end":31,"column_start":5,"column_end":13},"name":"CondTrap","qualname":"::ir::instructions::InstructionFormat::CondTrap","value":"InstructionFormat::CondTrap","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" CondTrap(imms=(code: ir::TrapCode), vals=1)\n","sig":null,"attributes":[{"value":"/ CondTrap(imms=(code: ir::TrapCode), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10263255,"byte_end":10263302,"line_start":30,"line_end":30,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6448},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10263394,"byte_end":10263405,"line_start":33,"line_end":33,"column_start":5,"column_end":16},"name":"CopySpecial","qualname":"::ir::instructions::InstructionFormat::CopySpecial","value":"InstructionFormat::CopySpecial","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" CopySpecial(imms=(src: isa::RegUnit, dst: isa::RegUnit), vals=0)\n","sig":null,"attributes":[{"value":"/ CopySpecial(imms=(src: isa::RegUnit, dst: isa::RegUnit), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10263321,"byte_end":10263389,"line_start":32,"line_end":32,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6450},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10263463,"byte_end":10263472,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"name":"CopyToSsa","qualname":"::ir::instructions::InstructionFormat::CopyToSsa","value":"InstructionFormat::CopyToSsa","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" CopyToSsa(imms=(src: isa::RegUnit), vals=0)\n","sig":null,"attributes":[{"value":"/ CopyToSsa(imms=(src: isa::RegUnit), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10263411,"byte_end":10263458,"line_start":34,"line_end":34,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6452},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10263542,"byte_end":10263553,"line_start":37,"line_end":37,"column_start":5,"column_end":16},"name":"ExtractLane","qualname":"::ir::instructions::InstructionFormat::ExtractLane","value":"InstructionFormat::ExtractLane","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" ExtractLane(imms=(lane: ir::immediates::Uimm8), vals=1)\n","sig":null,"attributes":[{"value":"/ ExtractLane(imms=(lane: ir::immediates::Uimm8), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10263478,"byte_end":10263537,"line_start":36,"line_end":36,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6454},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10263625,"byte_end":10263637,"line_start":39,"line_end":39,"column_start":5,"column_end":17},"name":"FloatCompare","qualname":"::ir::instructions::InstructionFormat::FloatCompare","value":"InstructionFormat::FloatCompare","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" FloatCompare(imms=(cond: ir::condcodes::FloatCC), vals=2)\n","sig":null,"attributes":[{"value":"/ FloatCompare(imms=(cond: ir::condcodes::FloatCC), vals=2)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10263559,"byte_end":10263620,"line_start":38,"line_end":38,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6456},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10263706,"byte_end":10263715,"line_start":41,"line_end":41,"column_start":5,"column_end":14},"name":"FloatCond","qualname":"::ir::instructions::InstructionFormat::FloatCond","value":"InstructionFormat::FloatCond","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" FloatCond(imms=(cond: ir::condcodes::FloatCC), vals=1)\n","sig":null,"attributes":[{"value":"/ FloatCond(imms=(cond: ir::condcodes::FloatCC), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10263643,"byte_end":10263701,"line_start":40,"line_end":40,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6458},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10263808,"byte_end":10263821,"line_start":43,"line_end":43,"column_start":5,"column_end":18},"name":"FloatCondTrap","qualname":"::ir::instructions::InstructionFormat::FloatCondTrap","value":"InstructionFormat::FloatCondTrap","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" FloatCondTrap(imms=(cond: ir::condcodes::FloatCC, code: ir::TrapCode), vals=1)\n","sig":null,"attributes":[{"value":"/ FloatCondTrap(imms=(cond: ir::condcodes::FloatCC, code: ir::TrapCode), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10263721,"byte_end":10263803,"line_start":42,"line_end":42,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6460},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10263882,"byte_end":10263890,"line_start":45,"line_end":45,"column_start":5,"column_end":13},"name":"FuncAddr","qualname":"::ir::instructions::InstructionFormat::FuncAddr","value":"InstructionFormat::FuncAddr","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" FuncAddr(imms=(func_ref: ir::FuncRef), vals=0)\n","sig":null,"attributes":[{"value":"/ FuncAddr(imms=(func_ref: ir::FuncRef), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10263827,"byte_end":10263877,"line_start":44,"line_end":44,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6462},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10263973,"byte_end":10263981,"line_start":47,"line_end":47,"column_start":5,"column_end":13},"name":"HeapAddr","qualname":"::ir::instructions::InstructionFormat::HeapAddr","value":"InstructionFormat::HeapAddr","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" HeapAddr(imms=(heap: ir::Heap, imm: ir::immediates::Uimm32), vals=1)\n","sig":null,"attributes":[{"value":"/ HeapAddr(imms=(heap: ir::Heap, imm: ir::immediates::Uimm32), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10263896,"byte_end":10263968,"line_start":46,"line_end":46,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6464},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10264045,"byte_end":10264057,"line_start":49,"line_end":49,"column_start":5,"column_end":17},"name":"IndirectJump","qualname":"::ir::instructions::InstructionFormat::IndirectJump","value":"InstructionFormat::IndirectJump","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" IndirectJump(imms=(table: ir::JumpTable), vals=1)\n","sig":null,"attributes":[{"value":"/ IndirectJump(imms=(table: ir::JumpTable), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10263987,"byte_end":10264040,"line_start":48,"line_end":48,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6466},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10264126,"byte_end":10264136,"line_start":51,"line_end":51,"column_start":5,"column_end":15},"name":"InsertLane","qualname":"::ir::instructions::InstructionFormat::InsertLane","value":"InstructionFormat::InsertLane","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" InsertLane(imms=(lane: ir::immediates::Uimm8), vals=2)\n","sig":null,"attributes":[{"value":"/ InsertLane(imms=(lane: ir::immediates::Uimm8), vals=2)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10264063,"byte_end":10264121,"line_start":50,"line_end":50,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6468},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10264204,"byte_end":10264214,"line_start":53,"line_end":53,"column_start":5,"column_end":15},"name":"IntCompare","qualname":"::ir::instructions::InstructionFormat::IntCompare","value":"InstructionFormat::IntCompare","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" IntCompare(imms=(cond: ir::condcodes::IntCC), vals=2)\n","sig":null,"attributes":[{"value":"/ IntCompare(imms=(cond: ir::condcodes::IntCC), vals=2)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10264142,"byte_end":10264199,"line_start":52,"line_end":52,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6470},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10264313,"byte_end":10264326,"line_start":55,"line_end":55,"column_start":5,"column_end":18},"name":"IntCompareImm","qualname":"::ir::instructions::InstructionFormat::IntCompareImm","value":"InstructionFormat::IntCompareImm","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" IntCompareImm(imms=(cond: ir::condcodes::IntCC, imm: ir::immediates::Imm64), vals=1)\n","sig":null,"attributes":[{"value":"/ IntCompareImm(imms=(cond: ir::condcodes::IntCC, imm: ir::immediates::Imm64), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10264220,"byte_end":10264308,"line_start":54,"line_end":54,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6472},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10264391,"byte_end":10264398,"line_start":57,"line_end":57,"column_start":5,"column_end":12},"name":"IntCond","qualname":"::ir::instructions::InstructionFormat::IntCond","value":"InstructionFormat::IntCond","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" IntCond(imms=(cond: ir::condcodes::IntCC), vals=1)\n","sig":null,"attributes":[{"value":"/ IntCond(imms=(cond: ir::condcodes::IntCC), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10264332,"byte_end":10264386,"line_start":56,"line_end":56,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6474},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10264487,"byte_end":10264498,"line_start":59,"line_end":59,"column_start":5,"column_end":16},"name":"IntCondTrap","qualname":"::ir::instructions::InstructionFormat::IntCondTrap","value":"InstructionFormat::IntCondTrap","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" IntCondTrap(imms=(cond: ir::condcodes::IntCC, code: ir::TrapCode), vals=1)\n","sig":null,"attributes":[{"value":"/ IntCondTrap(imms=(cond: ir::condcodes::IntCC, code: ir::TrapCode), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10264404,"byte_end":10264482,"line_start":58,"line_end":58,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6476},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10264565,"byte_end":10264574,"line_start":61,"line_end":61,"column_start":5,"column_end":14},"name":"IntSelect","qualname":"::ir::instructions::InstructionFormat::IntSelect","value":"InstructionFormat::IntSelect","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" IntSelect(imms=(cond: ir::condcodes::IntCC), vals=3)\n","sig":null,"attributes":[{"value":"/ IntSelect(imms=(cond: ir::condcodes::IntCC), vals=3)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10264504,"byte_end":10264560,"line_start":60,"line_end":60,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6478},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10264632,"byte_end":10264636,"line_start":63,"line_end":63,"column_start":5,"column_end":9},"name":"Jump","qualname":"::ir::instructions::InstructionFormat::Jump","value":"InstructionFormat::Jump","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" Jump(imms=(destination: ir::Block), vals=0)\n","sig":null,"attributes":[{"value":"/ Jump(imms=(destination: ir::Block), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10264580,"byte_end":10264627,"line_start":62,"line_end":62,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6480},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10264725,"byte_end":10264729,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Load","qualname":"::ir::instructions::InstructionFormat::Load","value":"InstructionFormat::Load","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" Load(imms=(flags: ir::MemFlags, offset: ir::immediates::Offset32), vals=1)\n","sig":null,"attributes":[{"value":"/ Load(imms=(flags: ir::MemFlags, offset: ir::immediates::Offset32), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10264642,"byte_end":10264720,"line_start":64,"line_end":64,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6482},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10264825,"byte_end":10264836,"line_start":67,"line_end":67,"column_start":5,"column_end":16},"name":"LoadComplex","qualname":"::ir::instructions::InstructionFormat::LoadComplex","value":"InstructionFormat::LoadComplex","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" LoadComplex(imms=(flags: ir::MemFlags, offset: ir::immediates::Offset32), vals=0)\n","sig":null,"attributes":[{"value":"/ LoadComplex(imms=(flags: ir::MemFlags, offset: ir::immediates::Offset32), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10264735,"byte_end":10264820,"line_start":66,"line_end":66,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6484},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10264876,"byte_end":10264884,"line_start":69,"line_end":69,"column_start":5,"column_end":13},"name":"MultiAry","qualname":"::ir::instructions::InstructionFormat::MultiAry","value":"InstructionFormat::MultiAry","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" MultiAry(imms=(), vals=0)\n","sig":null,"attributes":[{"value":"/ MultiAry(imms=(), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10264842,"byte_end":10264871,"line_start":68,"line_end":68,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6486},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10264923,"byte_end":10264930,"line_start":71,"line_end":71,"column_start":5,"column_end":12},"name":"NullAry","qualname":"::ir::instructions::InstructionFormat::NullAry","value":"InstructionFormat::NullAry","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" NullAry(imms=(), vals=0)\n","sig":null,"attributes":[{"value":"/ NullAry(imms=(), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10264890,"byte_end":10264918,"line_start":70,"line_end":70,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6488},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10265006,"byte_end":10265013,"line_start":73,"line_end":73,"column_start":5,"column_end":12},"name":"RegFill","qualname":"::ir::instructions::InstructionFormat::RegFill","value":"InstructionFormat::RegFill","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" RegFill(imms=(src: ir::StackSlot, dst: isa::RegUnit), vals=1)\n","sig":null,"attributes":[{"value":"/ RegFill(imms=(src: ir::StackSlot, dst: isa::RegUnit), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10264936,"byte_end":10265001,"line_start":72,"line_end":72,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6490},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10265088,"byte_end":10265095,"line_start":75,"line_end":75,"column_start":5,"column_end":12},"name":"RegMove","qualname":"::ir::instructions::InstructionFormat::RegMove","value":"InstructionFormat::RegMove","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" RegMove(imms=(src: isa::RegUnit, dst: isa::RegUnit), vals=1)\n","sig":null,"attributes":[{"value":"/ RegMove(imms=(src: isa::RegUnit, dst: isa::RegUnit), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10265019,"byte_end":10265083,"line_start":74,"line_end":74,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6492},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10265172,"byte_end":10265180,"line_start":77,"line_end":77,"column_start":5,"column_end":13},"name":"RegSpill","qualname":"::ir::instructions::InstructionFormat::RegSpill","value":"InstructionFormat::RegSpill","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" RegSpill(imms=(src: isa::RegUnit, dst: ir::StackSlot), vals=1)\n","sig":null,"attributes":[{"value":"/ RegSpill(imms=(src: isa::RegUnit, dst: ir::StackSlot), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10265101,"byte_end":10265167,"line_start":76,"line_end":76,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6494},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10265238,"byte_end":10265245,"line_start":79,"line_end":79,"column_start":5,"column_end":12},"name":"Shuffle","qualname":"::ir::instructions::InstructionFormat::Shuffle","value":"InstructionFormat::Shuffle","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" Shuffle(imms=(mask: ir::Immediate), vals=2)\n","sig":null,"attributes":[{"value":"/ Shuffle(imms=(mask: ir::Immediate), vals=2)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10265186,"byte_end":10265233,"line_start":78,"line_end":78,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6496},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10265345,"byte_end":10265354,"line_start":81,"line_end":81,"column_start":5,"column_end":14},"name":"StackLoad","qualname":"::ir::instructions::InstructionFormat::StackLoad","value":"InstructionFormat::StackLoad","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" StackLoad(imms=(stack_slot: ir::StackSlot, offset: ir::immediates::Offset32), vals=0)\n","sig":null,"attributes":[{"value":"/ StackLoad(imms=(stack_slot: ir::StackSlot, offset: ir::immediates::Offset32), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10265251,"byte_end":10265340,"line_start":80,"line_end":80,"column_start":5,"column_end":94}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6498},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10265455,"byte_end":10265465,"line_start":83,"line_end":83,"column_start":5,"column_end":15},"name":"StackStore","qualname":"::ir::instructions::InstructionFormat::StackStore","value":"InstructionFormat::StackStore","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" StackStore(imms=(stack_slot: ir::StackSlot, offset: ir::immediates::Offset32), vals=1)\n","sig":null,"attributes":[{"value":"/ StackStore(imms=(stack_slot: ir::StackSlot, offset: ir::immediates::Offset32), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10265360,"byte_end":10265450,"line_start":82,"line_end":82,"column_start":5,"column_end":95}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6500},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10265555,"byte_end":10265560,"line_start":85,"line_end":85,"column_start":5,"column_end":10},"name":"Store","qualname":"::ir::instructions::InstructionFormat::Store","value":"InstructionFormat::Store","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" Store(imms=(flags: ir::MemFlags, offset: ir::immediates::Offset32), vals=2)\n","sig":null,"attributes":[{"value":"/ Store(imms=(flags: ir::MemFlags, offset: ir::immediates::Offset32), vals=2)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10265471,"byte_end":10265550,"line_start":84,"line_end":84,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6502},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10265657,"byte_end":10265669,"line_start":87,"line_end":87,"column_start":5,"column_end":17},"name":"StoreComplex","qualname":"::ir::instructions::InstructionFormat::StoreComplex","value":"InstructionFormat::StoreComplex","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" StoreComplex(imms=(flags: ir::MemFlags, offset: ir::immediates::Offset32), vals=1)\n","sig":null,"attributes":[{"value":"/ StoreComplex(imms=(flags: ir::MemFlags, offset: ir::immediates::Offset32), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10265566,"byte_end":10265652,"line_start":86,"line_end":86,"column_start":5,"column_end":91}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6504},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10265760,"byte_end":10265769,"line_start":89,"line_end":89,"column_start":5,"column_end":14},"name":"TableAddr","qualname":"::ir::instructions::InstructionFormat::TableAddr","value":"InstructionFormat::TableAddr","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" TableAddr(imms=(table: ir::Table, offset: ir::immediates::Offset32), vals=1)\n","sig":null,"attributes":[{"value":"/ TableAddr(imms=(table: ir::Table, offset: ir::immediates::Offset32), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10265675,"byte_end":10265755,"line_start":88,"line_end":88,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6506},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10265808,"byte_end":10265815,"line_start":91,"line_end":91,"column_start":5,"column_end":12},"name":"Ternary","qualname":"::ir::instructions::InstructionFormat::Ternary","value":"InstructionFormat::Ternary","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" Ternary(imms=(), vals=3)\n","sig":null,"attributes":[{"value":"/ Ternary(imms=(), vals=3)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10265775,"byte_end":10265803,"line_start":90,"line_end":90,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6508},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10265869,"byte_end":10265873,"line_start":93,"line_end":93,"column_start":5,"column_end":9},"name":"Trap","qualname":"::ir::instructions::InstructionFormat::Trap","value":"InstructionFormat::Trap","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" Trap(imms=(code: ir::TrapCode), vals=0)\n","sig":null,"attributes":[{"value":"/ Trap(imms=(code: ir::TrapCode), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10265821,"byte_end":10265864,"line_start":92,"line_end":92,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6510},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10265910,"byte_end":10265915,"line_start":95,"line_end":95,"column_start":5,"column_end":10},"name":"Unary","qualname":"::ir::instructions::InstructionFormat::Unary","value":"InstructionFormat::Unary","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" Unary(imms=(), vals=1)\n","sig":null,"attributes":[{"value":"/ Unary(imms=(), vals=1)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10265879,"byte_end":10265905,"line_start":94,"line_end":94,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6512},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10265965,"byte_end":10265974,"line_start":97,"line_end":97,"column_start":5,"column_end":14},"name":"UnaryBool","qualname":"::ir::instructions::InstructionFormat::UnaryBool","value":"InstructionFormat::UnaryBool","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" UnaryBool(imms=(imm: bool), vals=0)\n","sig":null,"attributes":[{"value":"/ UnaryBool(imms=(imm: bool), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10265921,"byte_end":10265960,"line_start":96,"line_end":96,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6514},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10266045,"byte_end":10266055,"line_start":99,"line_end":99,"column_start":5,"column_end":15},"name":"UnaryConst","qualname":"::ir::instructions::InstructionFormat::UnaryConst","value":"InstructionFormat::UnaryConst","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" UnaryConst(imms=(constant_handle: ir::Constant), vals=0)\n","sig":null,"attributes":[{"value":"/ UnaryConst(imms=(constant_handle: ir::Constant), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10265980,"byte_end":10266040,"line_start":98,"line_end":98,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6516},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10266132,"byte_end":10266148,"line_start":101,"line_end":101,"column_start":5,"column_end":21},"name":"UnaryGlobalValue","qualname":"::ir::instructions::InstructionFormat::UnaryGlobalValue","value":"InstructionFormat::UnaryGlobalValue","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" UnaryGlobalValue(imms=(global_value: ir::GlobalValue), vals=0)\n","sig":null,"attributes":[{"value":"/ UnaryGlobalValue(imms=(global_value: ir::GlobalValue), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10266061,"byte_end":10266127,"line_start":100,"line_end":100,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6518},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10266218,"byte_end":10266229,"line_start":103,"line_end":103,"column_start":5,"column_end":16},"name":"UnaryIeee32","qualname":"::ir::instructions::InstructionFormat::UnaryIeee32","value":"InstructionFormat::UnaryIeee32","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" UnaryIeee32(imms=(imm: ir::immediates::Ieee32), vals=0)\n","sig":null,"attributes":[{"value":"/ UnaryIeee32(imms=(imm: ir::immediates::Ieee32), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10266154,"byte_end":10266213,"line_start":102,"line_end":102,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6520},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10266299,"byte_end":10266310,"line_start":105,"line_end":105,"column_start":5,"column_end":16},"name":"UnaryIeee64","qualname":"::ir::instructions::InstructionFormat::UnaryIeee64","value":"InstructionFormat::UnaryIeee64","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" UnaryIeee64(imms=(imm: ir::immediates::Ieee64), vals=0)\n","sig":null,"attributes":[{"value":"/ UnaryIeee64(imms=(imm: ir::immediates::Ieee64), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10266235,"byte_end":10266294,"line_start":104,"line_end":104,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6522},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10266376,"byte_end":10266384,"line_start":107,"line_end":107,"column_start":5,"column_end":13},"name":"UnaryImm","qualname":"::ir::instructions::InstructionFormat::UnaryImm","value":"InstructionFormat::UnaryImm","parent":{"krate":0,"index":6423},"children":[],"decl_id":null,"docs":" UnaryImm(imms=(imm: ir::immediates::Imm64), vals=0)\n","sig":null,"attributes":[{"value":"/ UnaryImm(imms=(imm: ir::immediates::Imm64), vals=0)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10266316,"byte_end":10266371,"line_start":106,"line_end":106,"column_start":5,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":6423},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10262309,"byte_end":10262326,"line_start":7,"line_end":7,"column_start":10,"column_end":27},"name":"InstructionFormat","qualname":"::ir::instructions::InstructionFormat","value":"InstructionFormat::{Binary, BinaryImm, Branch, BranchFloat, BranchIcmp, BranchInt, BranchTable, BranchTableBase, BranchTableEntry, Call, CallIndirect, CondTrap, CopySpecial, CopyToSsa, ExtractLane, FloatCompare, FloatCond, FloatCondTrap, FuncAddr, HeapAddr, IndirectJump, InsertLane, IntCompare, IntCompareImm, IntCond, IntCondTrap, IntSelect, Jump, Load, LoadComplex, MultiAry, NullAry, RegFill, RegMove, RegSpill, Shuffle, StackLoad, StackStore, Store, StoreComplex, TableAddr, Ternary, Trap, Unary, UnaryBool, UnaryConst, UnaryGlobalValue, UnaryIeee32, UnaryIeee64, UnaryImm}","parent":null,"children":[{"krate":0,"index":6424},{"krate":0,"index":6426},{"krate":0,"index":6428},{"krate":0,"index":6430},{"krate":0,"index":6432},{"krate":0,"index":6434},{"krate":0,"index":6436},{"krate":0,"index":6438},{"krate":0,"index":6440},{"krate":0,"index":6442},{"krate":0,"index":6444},{"krate":0,"index":6446},{"krate":0,"index":6448},{"krate":0,"index":6450},{"krate":0,"index":6452},{"krate":0,"index":6454},{"krate":0,"index":6456},{"krate":0,"index":6458},{"krate":0,"index":6460},{"krate":0,"index":6462},{"krate":0,"index":6464},{"krate":0,"index":6466},{"krate":0,"index":6468},{"krate":0,"index":6470},{"krate":0,"index":6472},{"krate":0,"index":6474},{"krate":0,"index":6476},{"krate":0,"index":6478},{"krate":0,"index":6480},{"krate":0,"index":6482},{"krate":0,"index":6484},{"krate":0,"index":6486},{"krate":0,"index":6488},{"krate":0,"index":6490},{"krate":0,"index":6492},{"krate":0,"index":6494},{"krate":0,"index":6496},{"krate":0,"index":6498},{"krate":0,"index":6500},{"krate":0,"index":6502},{"krate":0,"index":6504},{"krate":0,"index":6506},{"krate":0,"index":6508},{"krate":0,"index":6510},{"krate":0,"index":6512},{"krate":0,"index":6514},{"krate":0,"index":6516},{"krate":0,"index":6518},{"krate":0,"index":6520},{"krate":0,"index":6522}],"decl_id":null,"docs":" An instruction format","sig":null,"attributes":[{"value":"/ An instruction format","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10262075,"byte_end":10262100,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10262101,"byte_end":10262104,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Every opcode has a corresponding instruction format","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10262105,"byte_end":10262160,"line_start":3,"line_end":3,"column_start":1,"column_end":56}},{"value":"/ which is represented by both the `InstructionFormat`","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10262161,"byte_end":10262217,"line_start":4,"line_end":4,"column_start":1,"column_end":57}},{"value":"/ and the `InstructionData` enums.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10262218,"byte_end":10262254,"line_start":5,"line_end":5,"column_start":1,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":6536},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10271484,"byte_end":10271490,"line_start":270,"line_end":270,"column_start":5,"column_end":11},"name":"Binary","qualname":"::ir::instructions::InstructionData::Binary","value":"InstructionData::Binary { opcode, args }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6540},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10271554,"byte_end":10271563,"line_start":274,"line_end":274,"column_start":5,"column_end":14},"name":"BinaryImm","qualname":"::ir::instructions::InstructionData::BinaryImm","value":"InstructionData::BinaryImm { opcode, arg, imm }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6544},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10271657,"byte_end":10271663,"line_start":279,"line_end":279,"column_start":5,"column_end":11},"name":"Branch","qualname":"::ir::instructions::InstructionData::Branch","value":"InstructionData::Branch { opcode, args, destination }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6548},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10271758,"byte_end":10271769,"line_start":284,"line_end":284,"column_start":5,"column_end":16},"name":"BranchFloat","qualname":"::ir::instructions::InstructionData::BranchFloat","value":"InstructionData::BranchFloat { opcode, args, cond, destination }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6553},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10271902,"byte_end":10271912,"line_start":290,"line_end":290,"column_start":5,"column_end":15},"name":"BranchIcmp","qualname":"::ir::instructions::InstructionData::BranchIcmp","value":"InstructionData::BranchIcmp { opcode, args, cond, destination }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6558},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10272043,"byte_end":10272052,"line_start":296,"line_end":296,"column_start":5,"column_end":14},"name":"BranchInt","qualname":"::ir::instructions::InstructionData::BranchInt","value":"InstructionData::BranchInt { opcode, args, cond, destination }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6563},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10272183,"byte_end":10272194,"line_start":302,"line_end":302,"column_start":5,"column_end":16},"name":"BranchTable","qualname":"::ir::instructions::InstructionData::BranchTable","value":"InstructionData::BranchTable { opcode, arg, destination, table }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6568},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10272314,"byte_end":10272329,"line_start":308,"line_end":308,"column_start":5,"column_end":20},"name":"BranchTableBase","qualname":"::ir::instructions::InstructionData::BranchTableBase","value":"InstructionData::BranchTableBase { opcode, table }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6571},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10272397,"byte_end":10272413,"line_start":312,"line_end":312,"column_start":5,"column_end":21},"name":"BranchTableEntry","qualname":"::ir::instructions::InstructionData::BranchTableEntry","value":"InstructionData::BranchTableEntry { opcode, args, imm, table }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6577},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10272543,"byte_end":10272547,"line_start":318,"line_end":318,"column_start":5,"column_end":9},"name":"Call","qualname":"::ir::instructions::InstructionData::Call","value":"InstructionData::Call { opcode, args, func_ref }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6581},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10272641,"byte_end":10272653,"line_start":323,"line_end":323,"column_start":5,"column_end":17},"name":"CallIndirect","qualname":"::ir::instructions::InstructionData::CallIndirect","value":"InstructionData::CallIndirect { opcode, args, sig_ref }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6585},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10272745,"byte_end":10272753,"line_start":328,"line_end":328,"column_start":5,"column_end":13},"name":"CondTrap","qualname":"::ir::instructions::InstructionData::CondTrap","value":"InstructionData::CondTrap { opcode, arg, code }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6589},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10272839,"byte_end":10272850,"line_start":333,"line_end":333,"column_start":5,"column_end":16},"name":"CopySpecial","qualname":"::ir::instructions::InstructionData::CopySpecial","value":"InstructionData::CopySpecial { opcode, src, dst }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6593},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10272942,"byte_end":10272951,"line_start":338,"line_end":338,"column_start":5,"column_end":14},"name":"CopyToSsa","qualname":"::ir::instructions::InstructionData::CopyToSsa","value":"InstructionData::CopyToSsa { opcode, src }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6596},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10273016,"byte_end":10273027,"line_start":342,"line_end":342,"column_start":5,"column_end":16},"name":"ExtractLane","qualname":"::ir::instructions::InstructionData::ExtractLane","value":"InstructionData::ExtractLane { opcode, arg, lane }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6600},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10273122,"byte_end":10273134,"line_start":347,"line_end":347,"column_start":5,"column_end":17},"name":"FloatCompare","qualname":"::ir::instructions::InstructionData::FloatCompare","value":"InstructionData::FloatCompare { opcode, args, cond }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6605},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10273236,"byte_end":10273245,"line_start":352,"line_end":352,"column_start":5,"column_end":14},"name":"FloatCond","qualname":"::ir::instructions::InstructionData::FloatCond","value":"InstructionData::FloatCond { opcode, arg, cond }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6609},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10273341,"byte_end":10273354,"line_start":357,"line_end":357,"column_start":5,"column_end":18},"name":"FloatCondTrap","qualname":"::ir::instructions::InstructionData::FloatCondTrap","value":"InstructionData::FloatCondTrap { opcode, arg, cond, code }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6614},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10273478,"byte_end":10273486,"line_start":363,"line_end":363,"column_start":5,"column_end":13},"name":"FuncAddr","qualname":"::ir::instructions::InstructionData::FuncAddr","value":"InstructionData::FuncAddr { opcode, func_ref }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6617},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10273555,"byte_end":10273563,"line_start":367,"line_end":367,"column_start":5,"column_end":13},"name":"HeapAddr","qualname":"::ir::instructions::InstructionData::HeapAddr","value":"InstructionData::HeapAddr { opcode, arg, heap, imm }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6622},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10273682,"byte_end":10273694,"line_start":373,"line_end":373,"column_start":5,"column_end":17},"name":"IndirectJump","qualname":"::ir::instructions::InstructionData::IndirectJump","value":"InstructionData::IndirectJump { opcode, arg, table }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6626},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10273782,"byte_end":10273792,"line_start":378,"line_end":378,"column_start":5,"column_end":15},"name":"InsertLane","qualname":"::ir::instructions::InstructionData::InsertLane","value":"InstructionData::InsertLane { opcode, args, lane }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6631},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10273893,"byte_end":10273903,"line_start":383,"line_end":383,"column_start":5,"column_end":15},"name":"IntCompare","qualname":"::ir::instructions::InstructionData::IntCompare","value":"InstructionData::IntCompare { opcode, args, cond }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6636},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10274003,"byte_end":10274016,"line_start":388,"line_end":388,"column_start":5,"column_end":18},"name":"IntCompareImm","qualname":"::ir::instructions::InstructionData::IntCompareImm","value":"InstructionData::IntCompareImm { opcode, arg, cond, imm }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6641},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10274146,"byte_end":10274153,"line_start":394,"line_end":394,"column_start":5,"column_end":12},"name":"IntCond","qualname":"::ir::instructions::InstructionData::IntCond","value":"InstructionData::IntCond { opcode, arg, cond }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6645},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10274247,"byte_end":10274258,"line_start":399,"line_end":399,"column_start":5,"column_end":16},"name":"IntCondTrap","qualname":"::ir::instructions::InstructionData::IntCondTrap","value":"InstructionData::IntCondTrap { opcode, arg, cond, code }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6650},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10274380,"byte_end":10274389,"line_start":405,"line_end":405,"column_start":5,"column_end":14},"name":"IntSelect","qualname":"::ir::instructions::InstructionData::IntSelect","value":"InstructionData::IntSelect { opcode, args, cond }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6655},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10274489,"byte_end":10274493,"line_start":410,"line_end":410,"column_start":5,"column_end":9},"name":"Jump","qualname":"::ir::instructions::InstructionData::Jump","value":"InstructionData::Jump { opcode, args, destination }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6659},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10274588,"byte_end":10274592,"line_start":415,"line_end":415,"column_start":5,"column_end":9},"name":"Load","qualname":"::ir::instructions::InstructionData::Load","value":"InstructionData::Load { opcode, arg, flags, offset }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6664},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10274721,"byte_end":10274732,"line_start":421,"line_end":421,"column_start":5,"column_end":16},"name":"LoadComplex","qualname":"::ir::instructions::InstructionData::LoadComplex","value":"InstructionData::LoadComplex { opcode, args, flags, offset }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6669},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10274866,"byte_end":10274874,"line_start":427,"line_end":427,"column_start":5,"column_end":13},"name":"MultiAry","qualname":"::ir::instructions::InstructionData::MultiAry","value":"InstructionData::MultiAry { opcode, args }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6672},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10274937,"byte_end":10274944,"line_start":431,"line_end":431,"column_start":5,"column_end":12},"name":"NullAry","qualname":"::ir::instructions::InstructionData::NullAry","value":"InstructionData::NullAry { opcode }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6674},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10274982,"byte_end":10274989,"line_start":434,"line_end":434,"column_start":5,"column_end":12},"name":"RegFill","qualname":"::ir::instructions::InstructionData::RegFill","value":"InstructionData::RegFill { opcode, arg, src, dst }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6679},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10275102,"byte_end":10275109,"line_start":440,"line_end":440,"column_start":5,"column_end":12},"name":"RegMove","qualname":"::ir::instructions::InstructionData::RegMove","value":"InstructionData::RegMove { opcode, arg, src, dst }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6684},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10275221,"byte_end":10275229,"line_start":446,"line_end":446,"column_start":5,"column_end":13},"name":"RegSpill","qualname":"::ir::instructions::InstructionData::RegSpill","value":"InstructionData::RegSpill { opcode, arg, src, dst }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6689},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10275342,"byte_end":10275349,"line_start":452,"line_end":452,"column_start":5,"column_end":12},"name":"Shuffle","qualname":"::ir::instructions::InstructionData::Shuffle","value":"InstructionData::Shuffle { opcode, args, mask }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6694},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10275442,"byte_end":10275451,"line_start":457,"line_end":457,"column_start":5,"column_end":14},"name":"StackLoad","qualname":"::ir::instructions::InstructionData::StackLoad","value":"InstructionData::StackLoad { opcode, stack_slot, offset }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6698},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10275566,"byte_end":10275576,"line_start":462,"line_end":462,"column_start":5,"column_end":15},"name":"StackStore","qualname":"::ir::instructions::InstructionData::StackStore","value":"InstructionData::StackStore { opcode, arg, stack_slot, offset }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6703},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10275711,"byte_end":10275716,"line_start":468,"line_end":468,"column_start":5,"column_end":10},"name":"Store","qualname":"::ir::instructions::InstructionData::Store","value":"InstructionData::Store { opcode, args, flags, offset }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6709},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10275851,"byte_end":10275863,"line_start":474,"line_end":474,"column_start":5,"column_end":17},"name":"StoreComplex","qualname":"::ir::instructions::InstructionData::StoreComplex","value":"InstructionData::StoreComplex { opcode, args, flags, offset }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6714},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10275997,"byte_end":10276006,"line_start":480,"line_end":480,"column_start":5,"column_end":14},"name":"TableAddr","qualname":"::ir::instructions::InstructionData::TableAddr","value":"InstructionData::TableAddr { opcode, arg, table, offset }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6719},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10276132,"byte_end":10276139,"line_start":486,"line_end":486,"column_start":5,"column_end":12},"name":"Ternary","qualname":"::ir::instructions::InstructionData::Ternary","value":"InstructionData::Ternary { opcode, args }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6723},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10276203,"byte_end":10276207,"line_start":490,"line_end":490,"column_start":5,"column_end":9},"name":"Trap","qualname":"::ir::instructions::InstructionData::Trap","value":"InstructionData::Trap { opcode, code }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6726},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10276273,"byte_end":10276278,"line_start":494,"line_end":494,"column_start":5,"column_end":10},"name":"Unary","qualname":"::ir::instructions::InstructionData::Unary","value":"InstructionData::Unary { opcode, arg }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6729},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10276336,"byte_end":10276345,"line_start":498,"line_end":498,"column_start":5,"column_end":14},"name":"UnaryBool","qualname":"::ir::instructions::InstructionData::UnaryBool","value":"InstructionData::UnaryBool { opcode, imm }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6732},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10276402,"byte_end":10276412,"line_start":502,"line_end":502,"column_start":5,"column_end":15},"name":"UnaryConst","qualname":"::ir::instructions::InstructionData::UnaryConst","value":"InstructionData::UnaryConst { opcode, constant_handle }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6735},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10276489,"byte_end":10276505,"line_start":506,"line_end":506,"column_start":5,"column_end":21},"name":"UnaryGlobalValue","qualname":"::ir::instructions::InstructionData::UnaryGlobalValue","value":"InstructionData::UnaryGlobalValue { opcode, global_value }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6738},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10276582,"byte_end":10276593,"line_start":510,"line_end":510,"column_start":5,"column_end":16},"name":"UnaryIeee32","qualname":"::ir::instructions::InstructionData::UnaryIeee32","value":"InstructionData::UnaryIeee32 { opcode, imm }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6741},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10276668,"byte_end":10276679,"line_start":514,"line_end":514,"column_start":5,"column_end":16},"name":"UnaryIeee64","qualname":"::ir::instructions::InstructionData::UnaryIeee64","value":"InstructionData::UnaryIeee64 { opcode, imm }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6744},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10276754,"byte_end":10276762,"line_start":518,"line_end":518,"column_start":5,"column_end":13},"name":"UnaryImm","qualname":"::ir::instructions::InstructionData::UnaryImm","value":"InstructionData::UnaryImm { opcode, imm }","parent":{"krate":0,"index":6535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6535},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10271462,"byte_end":10271477,"line_start":269,"line_end":269,"column_start":10,"column_end":25},"name":"InstructionData","qualname":"::ir::instructions::InstructionData","value":"InstructionData::{Binary, BinaryImm, Branch, BranchFloat, BranchIcmp, BranchInt, BranchTable, BranchTableBase, BranchTableEntry, Call, CallIndirect, CondTrap, CopySpecial, CopyToSsa, ExtractLane, FloatCompare, FloatCond, FloatCondTrap, FuncAddr, HeapAddr, IndirectJump, InsertLane, IntCompare, IntCompareImm, IntCond, IntCondTrap, IntSelect, Jump, Load, LoadComplex, MultiAry, NullAry, RegFill, RegMove, RegSpill, Shuffle, StackLoad, StackStore, Store, StoreComplex, TableAddr, Ternary, Trap, Unary, UnaryBool, UnaryConst, UnaryGlobalValue, UnaryIeee32, UnaryIeee64, UnaryImm}","parent":null,"children":[{"krate":0,"index":6536},{"krate":0,"index":6540},{"krate":0,"index":6544},{"krate":0,"index":6548},{"krate":0,"index":6553},{"krate":0,"index":6558},{"krate":0,"index":6563},{"krate":0,"index":6568},{"krate":0,"index":6571},{"krate":0,"index":6577},{"krate":0,"index":6581},{"krate":0,"index":6585},{"krate":0,"index":6589},{"krate":0,"index":6593},{"krate":0,"index":6596},{"krate":0,"index":6600},{"krate":0,"index":6605},{"krate":0,"index":6609},{"krate":0,"index":6614},{"krate":0,"index":6617},{"krate":0,"index":6622},{"krate":0,"index":6626},{"krate":0,"index":6631},{"krate":0,"index":6636},{"krate":0,"index":6641},{"krate":0,"index":6645},{"krate":0,"index":6650},{"krate":0,"index":6655},{"krate":0,"index":6659},{"krate":0,"index":6664},{"krate":0,"index":6669},{"krate":0,"index":6672},{"krate":0,"index":6674},{"krate":0,"index":6679},{"krate":0,"index":6684},{"krate":0,"index":6689},{"krate":0,"index":6694},{"krate":0,"index":6698},{"krate":0,"index":6703},{"krate":0,"index":6709},{"krate":0,"index":6714},{"krate":0,"index":6719},{"krate":0,"index":6723},{"krate":0,"index":6726},{"krate":0,"index":6729},{"krate":0,"index":6732},{"krate":0,"index":6735},{"krate":0,"index":6738},{"krate":0,"index":6741},{"krate":0,"index":6744}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10271430,"byte_end":10271452,"line_start":268,"line_end":268,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":6389},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10276913,"byte_end":10276919,"line_start":526,"line_end":526,"column_start":12,"column_end":18},"name":"opcode","qualname":"<InstructionData>::opcode","value":"fn (&self) -> Opcode","parent":null,"children":[],"decl_id":null,"docs":" Get the opcode of this instruction.\n","sig":null,"attributes":[{"value":"/ Get the opcode of this instruction.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10276862,"byte_end":10276901,"line_start":525,"line_end":525,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":6390},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10279339,"byte_end":10279354,"line_start":584,"line_end":584,"column_start":12,"column_end":27},"name":"typevar_operand","qualname":"<InstructionData>::typevar_operand","value":"fn (&self, pool: &ir::ValueListPool) -> Option<Value>","parent":null,"children":[],"decl_id":null,"docs":" Get the controlling type variable operand.\n","sig":null,"attributes":[{"value":"/ Get the controlling type variable operand.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10279281,"byte_end":10279327,"line_start":583,"line_end":583,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":6391},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10282060,"byte_end":10282069,"line_start":652,"line_end":652,"column_start":12,"column_end":21},"name":"arguments","qualname":"<InstructionData>::arguments","value":"fn <'a> (&'a self, pool: &'a ir::ValueListPool) -> &[Value]","parent":null,"children":[],"decl_id":null,"docs":" Get the value arguments to this instruction.\n","sig":null,"attributes":[{"value":"/ Get the value arguments to this instruction.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10282000,"byte_end":10282048,"line_start":651,"line_end":651,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":6393},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10284828,"byte_end":10284841,"line_start":719,"line_end":719,"column_start":12,"column_end":25},"name":"arguments_mut","qualname":"<InstructionData>::arguments_mut","value":"fn <'a> (&'a mut self, pool: &'a mut ir::ValueListPool) -> &mut [Value]","parent":null,"children":[],"decl_id":null,"docs":" Get mutable references to the value arguments to this\n instruction.\n","sig":null,"attributes":[{"value":"/ Get mutable references to the value arguments to this","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10284738,"byte_end":10284795,"line_start":717,"line_end":717,"column_start":5,"column_end":62}},{"value":"/ instruction.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10284800,"byte_end":10284816,"line_start":718,"line_end":718,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":6395},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10287895,"byte_end":10287910,"line_start":789,"line_end":789,"column_start":12,"column_end":27},"name":"take_value_list","qualname":"<InstructionData>::take_value_list","value":"fn (&mut self) -> Option<ir::ValueList>","parent":null,"children":[],"decl_id":null,"docs":" Take out the value list with all the value arguments and return\n it.","sig":null,"attributes":[{"value":"/ Take out the value list with all the value arguments and return","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10287678,"byte_end":10287745,"line_start":784,"line_end":784,"column_start":5,"column_end":72}},{"value":"/ it.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10287750,"byte_end":10287757,"line_start":785,"line_end":785,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10287762,"byte_end":10287765,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ This leaves the value list in the instruction empty. Use","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10287770,"byte_end":10287830,"line_start":787,"line_end":787,"column_start":5,"column_end":65}},{"value":"/ `put_value_list` to put the value list back.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10287835,"byte_end":10287883,"line_start":788,"line_end":788,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":6396},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10288926,"byte_end":10288940,"line_start":815,"line_end":815,"column_start":12,"column_end":26},"name":"put_value_list","qualname":"<InstructionData>::put_value_list","value":"fn (&mut self, vlist: ir::ValueList) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Put back a value list.","sig":null,"attributes":[{"value":"/ Put back a value list.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10288604,"byte_end":10288630,"line_start":809,"line_end":809,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10288635,"byte_end":10288638,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ After removing a value list with `take_value_list()`, use this","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10288643,"byte_end":10288709,"line_start":811,"line_end":811,"column_start":5,"column_end":71}},{"value":"/ method to put it back. It is required that this instruction has","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10288714,"byte_end":10288781,"line_start":812,"line_end":812,"column_start":5,"column_end":72}},{"value":"/ a format that accepts a value list, and that the existing value","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10288786,"byte_end":10288853,"line_start":813,"line_end":813,"column_start":5,"column_end":72}},{"value":"/ list is empty. This avoids leaking list pool memory.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10288858,"byte_end":10288914,"line_start":814,"line_end":814,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":6397},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10289954,"byte_end":10289956,"line_start":837,"line_end":837,"column_start":12,"column_end":14},"name":"eq","qualname":"<InstructionData>::eq","value":"fn (&self, other: &Self, pool: &ir::ValueListPool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Compare two `InstructionData` for equality.","sig":null,"attributes":[{"value":"/ Compare two `InstructionData` for equality.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10289754,"byte_end":10289801,"line_start":833,"line_end":833,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10289806,"byte_end":10289809,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ This operation requires a reference to a `ValueListPool` to","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10289814,"byte_end":10289877,"line_start":835,"line_end":835,"column_start":5,"column_end":68}},{"value":"/ determine if the contents of any `ValueLists` are equal.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10289882,"byte_end":10289942,"line_start":836,"line_end":836,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":6398},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10305615,"byte_end":10305619,"line_start":1102,"line_end":1102,"column_start":12,"column_end":16},"name":"hash","qualname":"<InstructionData>::hash","value":"fn <H> (&self, state: &mut H, pool: &ir::ValueListPool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Hash an `InstructionData`.","sig":null,"attributes":[{"value":"/ Hash an `InstructionData`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10305450,"byte_end":10305480,"line_start":1098,"line_end":1098,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10305485,"byte_end":10305488,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ This operation requires a reference to a `ValueListPool` to","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10305493,"byte_end":10305556,"line_start":1100,"line_end":1100,"column_start":5,"column_end":68}},{"value":"/ hash the contents of any `ValueLists`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10305561,"byte_end":10305603,"line_start":1101,"line_end":1101,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6752},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10323223,"byte_end":10323227,"line_start":1429,"line_end":1429,"column_start":5,"column_end":9},"name":"Jump","qualname":"::ir::instructions::Opcode::Jump","value":"Opcode::Jump","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `jump block, args`. (Jump)\n","sig":null,"attributes":[{"value":"/ `jump block, args`. (Jump)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10323188,"byte_end":10323218,"line_start":1428,"line_end":1428,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6755},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10323279,"byte_end":10323290,"line_start":1431,"line_end":1431,"column_start":5,"column_end":16},"name":"Fallthrough","qualname":"::ir::instructions::Opcode::Fallthrough","value":"Opcode::Fallthrough","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `fallthrough block, args`. (Jump)\n","sig":null,"attributes":[{"value":"/ `fallthrough block, args`. (Jump)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10323237,"byte_end":10323274,"line_start":1430,"line_end":1430,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6757},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10323367,"byte_end":10323370,"line_start":1434,"line_end":1434,"column_start":5,"column_end":8},"name":"Brz","qualname":"::ir::instructions::Opcode::Brz","value":"Opcode::Brz","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `brz c, block, args`. (Branch)\n Type inferred from `c`.\n","sig":null,"attributes":[{"value":"/ `brz c, block, args`. (Branch)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10323296,"byte_end":10323330,"line_start":1432,"line_end":1432,"column_start":5,"column_end":39}},{"value":"/ Type inferred from `c`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10323335,"byte_end":10323362,"line_start":1433,"line_end":1433,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6759},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10323448,"byte_end":10323452,"line_start":1437,"line_end":1437,"column_start":5,"column_end":9},"name":"Brnz","qualname":"::ir::instructions::Opcode::Brnz","value":"Opcode::Brnz","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `brnz c, block, args`. (Branch)\n Type inferred from `c`.\n","sig":null,"attributes":[{"value":"/ `brnz c, block, args`. (Branch)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10323376,"byte_end":10323411,"line_start":1435,"line_end":1435,"column_start":5,"column_end":40}},{"value":"/ Type inferred from `c`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10323416,"byte_end":10323443,"line_start":1436,"line_end":1436,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6761},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10323546,"byte_end":10323552,"line_start":1440,"line_end":1440,"column_start":5,"column_end":11},"name":"BrIcmp","qualname":"::ir::instructions::Opcode::BrIcmp","value":"Opcode::BrIcmp","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `br_icmp Cond, x, y, block, args`. (BranchIcmp)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `br_icmp Cond, x, y, block, args`. (BranchIcmp)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10323458,"byte_end":10323509,"line_start":1438,"line_end":1438,"column_start":5,"column_end":56}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10323514,"byte_end":10323541,"line_start":1439,"line_end":1439,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6763},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10323607,"byte_end":10323611,"line_start":1442,"line_end":1442,"column_start":5,"column_end":9},"name":"Brif","qualname":"::ir::instructions::Opcode::Brif","value":"Opcode::Brif","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `brif Cond, f, block, args`. (BranchInt)\n","sig":null,"attributes":[{"value":"/ `brif Cond, f, block, args`. (BranchInt)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10323558,"byte_end":10323602,"line_start":1441,"line_end":1441,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6765},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10323668,"byte_end":10323672,"line_start":1444,"line_end":1444,"column_start":5,"column_end":9},"name":"Brff","qualname":"::ir::instructions::Opcode::Brff","value":"Opcode::Brff","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `brff Cond, f, block, args`. (BranchFloat)\n","sig":null,"attributes":[{"value":"/ `brff Cond, f, block, args`. (BranchFloat)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10323617,"byte_end":10323663,"line_start":1443,"line_end":1443,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6767},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10323757,"byte_end":10323764,"line_start":1447,"line_end":1447,"column_start":5,"column_end":12},"name":"BrTable","qualname":"::ir::instructions::Opcode::BrTable","value":"Opcode::BrTable","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `br_table x, block, JT`. (BranchTable)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `br_table x, block, JT`. (BranchTable)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10323678,"byte_end":10323720,"line_start":1445,"line_end":1445,"column_start":5,"column_end":47}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10323725,"byte_end":10323752,"line_start":1446,"line_end":1446,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6769},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10323875,"byte_end":10323889,"line_start":1450,"line_end":1450,"column_start":5,"column_end":19},"name":"JumpTableEntry","qualname":"::ir::instructions::Opcode::JumpTableEntry","value":"Opcode::JumpTableEntry","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `entry = jump_table_entry x, addr, Size, JT`. (BranchTableEntry)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `entry = jump_table_entry x, addr, Size, JT`. (BranchTableEntry)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10323770,"byte_end":10323838,"line_start":1448,"line_end":1448,"column_start":5,"column_end":73}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10323843,"byte_end":10323870,"line_start":1449,"line_end":1449,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6771},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10323950,"byte_end":10323963,"line_start":1452,"line_end":1452,"column_start":5,"column_end":18},"name":"JumpTableBase","qualname":"::ir::instructions::Opcode::JumpTableBase","value":"Opcode::JumpTableBase","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `addr = jump_table_base JT`. (BranchTableBase)\n","sig":null,"attributes":[{"value":"/ `addr = jump_table_base JT`. (BranchTableBase)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10323895,"byte_end":10323945,"line_start":1451,"line_end":1451,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6773},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324062,"byte_end":10324081,"line_start":1455,"line_end":1455,"column_start":5,"column_end":24},"name":"IndirectJumpTableBr","qualname":"::ir::instructions::Opcode::IndirectJumpTableBr","value":"Opcode::IndirectJumpTableBr","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `indirect_jump_table_br addr, JT`. (IndirectJump)\n Type inferred from `addr`.\n","sig":null,"attributes":[{"value":"/ `indirect_jump_table_br addr, JT`. (IndirectJump)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10323969,"byte_end":10324022,"line_start":1453,"line_end":1453,"column_start":5,"column_end":58}},{"value":"/ Type inferred from `addr`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324027,"byte_end":10324057,"line_start":1454,"line_end":1454,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6775},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324118,"byte_end":10324127,"line_start":1457,"line_end":1457,"column_start":5,"column_end":14},"name":"Debugtrap","qualname":"::ir::instructions::Opcode::Debugtrap","value":"Opcode::Debugtrap","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `debugtrap`. (NullAry)\n","sig":null,"attributes":[{"value":"/ `debugtrap`. (NullAry)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324087,"byte_end":10324113,"line_start":1456,"line_end":1456,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6777},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324161,"byte_end":10324165,"line_start":1459,"line_end":1459,"column_start":5,"column_end":9},"name":"Trap","qualname":"::ir::instructions::Opcode::Trap","value":"Opcode::Trap","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `trap code`. (Trap)\n","sig":null,"attributes":[{"value":"/ `trap code`. (Trap)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324133,"byte_end":10324156,"line_start":1458,"line_end":1458,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6779},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324239,"byte_end":10324244,"line_start":1462,"line_end":1462,"column_start":5,"column_end":10},"name":"Trapz","qualname":"::ir::instructions::Opcode::Trapz","value":"Opcode::Trapz","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `trapz c, code`. (CondTrap)\n Type inferred from `c`.\n","sig":null,"attributes":[{"value":"/ `trapz c, code`. (CondTrap)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324171,"byte_end":10324202,"line_start":1460,"line_end":1460,"column_start":5,"column_end":36}},{"value":"/ Type inferred from `c`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324207,"byte_end":10324234,"line_start":1461,"line_end":1461,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6781},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324288,"byte_end":10324301,"line_start":1464,"line_end":1464,"column_start":5,"column_end":18},"name":"ResumableTrap","qualname":"::ir::instructions::Opcode::ResumableTrap","value":"Opcode::ResumableTrap","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `resumable_trap code`. (Trap)\n","sig":null,"attributes":[{"value":"/ `resumable_trap code`. (Trap)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324250,"byte_end":10324283,"line_start":1463,"line_end":1463,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6783},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324376,"byte_end":10324382,"line_start":1467,"line_end":1467,"column_start":5,"column_end":11},"name":"Trapnz","qualname":"::ir::instructions::Opcode::Trapnz","value":"Opcode::Trapnz","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `trapnz c, code`. (CondTrap)\n Type inferred from `c`.\n","sig":null,"attributes":[{"value":"/ `trapnz c, code`. (CondTrap)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324307,"byte_end":10324339,"line_start":1465,"line_end":1465,"column_start":5,"column_end":37}},{"value":"/ Type inferred from `c`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324344,"byte_end":10324371,"line_start":1466,"line_end":1466,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6785},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324434,"byte_end":10324440,"line_start":1469,"line_end":1469,"column_start":5,"column_end":11},"name":"Trapif","qualname":"::ir::instructions::Opcode::Trapif","value":"Opcode::Trapif","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `trapif Cond, f, code`. (IntCondTrap)\n","sig":null,"attributes":[{"value":"/ `trapif Cond, f, code`. (IntCondTrap)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324388,"byte_end":10324429,"line_start":1468,"line_end":1468,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6787},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324494,"byte_end":10324500,"line_start":1471,"line_end":1471,"column_start":5,"column_end":11},"name":"Trapff","qualname":"::ir::instructions::Opcode::Trapff","value":"Opcode::Trapff","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `trapff Cond, f, code`. (FloatCondTrap)\n","sig":null,"attributes":[{"value":"/ `trapff Cond, f, code`. (FloatCondTrap)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324446,"byte_end":10324489,"line_start":1470,"line_end":1470,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6789},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324541,"byte_end":10324547,"line_start":1473,"line_end":1473,"column_start":5,"column_end":11},"name":"Return","qualname":"::ir::instructions::Opcode::Return","value":"Opcode::Return","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `return rvals`. (MultiAry)\n","sig":null,"attributes":[{"value":"/ `return rvals`. (MultiAry)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324506,"byte_end":10324536,"line_start":1472,"line_end":1472,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6791},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324600,"byte_end":10324617,"line_start":1475,"line_end":1475,"column_start":5,"column_end":22},"name":"FallthroughReturn","qualname":"::ir::instructions::Opcode::FallthroughReturn","value":"Opcode::FallthroughReturn","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `fallthrough_return rvals`. (MultiAry)\n","sig":null,"attributes":[{"value":"/ `fallthrough_return rvals`. (MultiAry)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324553,"byte_end":10324595,"line_start":1474,"line_end":1474,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6793},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324663,"byte_end":10324667,"line_start":1477,"line_end":1477,"column_start":5,"column_end":9},"name":"Call","qualname":"::ir::instructions::Opcode::Call","value":"Opcode::Call","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `rvals = call FN, args`. (Call)\n","sig":null,"attributes":[{"value":"/ `rvals = call FN, args`. (Call)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324623,"byte_end":10324658,"line_start":1476,"line_end":1476,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6795},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324776,"byte_end":10324788,"line_start":1480,"line_end":1480,"column_start":5,"column_end":17},"name":"CallIndirect","qualname":"::ir::instructions::Opcode::CallIndirect","value":"Opcode::CallIndirect","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `rvals = call_indirect SIG, callee, args`. (CallIndirect)\n Type inferred from `callee`.\n","sig":null,"attributes":[{"value":"/ `rvals = call_indirect SIG, callee, args`. (CallIndirect)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324673,"byte_end":10324734,"line_start":1478,"line_end":1478,"column_start":5,"column_end":66}},{"value":"/ Type inferred from `callee`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324739,"byte_end":10324771,"line_start":1479,"line_end":1479,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6797},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324836,"byte_end":10324844,"line_start":1482,"line_end":1482,"column_start":5,"column_end":13},"name":"FuncAddr","qualname":"::ir::instructions::Opcode::FuncAddr","value":"Opcode::FuncAddr","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `addr = func_addr FN`. (FuncAddr)\n","sig":null,"attributes":[{"value":"/ `addr = func_addr FN`. (FuncAddr)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324794,"byte_end":10324831,"line_start":1481,"line_end":1481,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6799},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324916,"byte_end":10324920,"line_start":1485,"line_end":1485,"column_start":5,"column_end":9},"name":"Imin","qualname":"::ir::instructions::Opcode::Imin","value":"Opcode::Imin","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = imin x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = imin x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324850,"byte_end":10324879,"line_start":1483,"line_end":1483,"column_start":5,"column_end":34}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324884,"byte_end":10324911,"line_start":1484,"line_end":1484,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6801},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324992,"byte_end":10324996,"line_start":1488,"line_end":1488,"column_start":5,"column_end":9},"name":"Umin","qualname":"::ir::instructions::Opcode::Umin","value":"Opcode::Umin","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = umin x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = umin x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324926,"byte_end":10324955,"line_start":1486,"line_end":1486,"column_start":5,"column_end":34}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10324960,"byte_end":10324987,"line_start":1487,"line_end":1487,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6803},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10325068,"byte_end":10325072,"line_start":1491,"line_end":1491,"column_start":5,"column_end":9},"name":"Imax","qualname":"::ir::instructions::Opcode::Imax","value":"Opcode::Imax","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = imax x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = imax x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10325002,"byte_end":10325031,"line_start":1489,"line_end":1489,"column_start":5,"column_end":34}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10325036,"byte_end":10325063,"line_start":1490,"line_end":1490,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6805},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10325144,"byte_end":10325148,"line_start":1494,"line_end":1494,"column_start":5,"column_end":9},"name":"Umax","qualname":"::ir::instructions::Opcode::Umax","value":"Opcode::Umax","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = umax x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = umax x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10325078,"byte_end":10325107,"line_start":1492,"line_end":1492,"column_start":5,"column_end":34}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10325112,"byte_end":10325139,"line_start":1493,"line_end":1493,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6807},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10325225,"byte_end":10325233,"line_start":1497,"line_end":1497,"column_start":5,"column_end":13},"name":"AvgRound","qualname":"::ir::instructions::Opcode::AvgRound","value":"Opcode::AvgRound","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = avg_round x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = avg_round x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10325154,"byte_end":10325188,"line_start":1495,"line_end":1495,"column_start":5,"column_end":39}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10325193,"byte_end":10325220,"line_start":1496,"line_end":1496,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6809},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10325286,"byte_end":10325290,"line_start":1499,"line_end":1499,"column_start":5,"column_end":9},"name":"Load","qualname":"::ir::instructions::Opcode::Load","value":"Opcode::Load","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = load MemFlags, p, Offset`. (Load)\n","sig":null,"attributes":[{"value":"/ `a = load MemFlags, p, Offset`. (Load)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10325239,"byte_end":10325281,"line_start":1498,"line_end":1498,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6811},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10325361,"byte_end":10325372,"line_start":1501,"line_end":1501,"column_start":5,"column_end":16},"name":"LoadComplex","qualname":"::ir::instructions::Opcode::LoadComplex","value":"Opcode::LoadComplex","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = load_complex MemFlags, args, Offset`. (LoadComplex)\n","sig":null,"attributes":[{"value":"/ `a = load_complex MemFlags, args, Offset`. (LoadComplex)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10325296,"byte_end":10325356,"line_start":1500,"line_end":1500,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6813},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10325458,"byte_end":10325463,"line_start":1504,"line_end":1504,"column_start":5,"column_end":10},"name":"Store","qualname":"::ir::instructions::Opcode::Store","value":"Opcode::Store","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `store MemFlags, x, p, Offset`. (Store)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `store MemFlags, x, p, Offset`. (Store)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10325378,"byte_end":10325421,"line_start":1502,"line_end":1502,"column_start":5,"column_end":48}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10325426,"byte_end":10325453,"line_start":1503,"line_end":1503,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6815},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10325567,"byte_end":10325579,"line_start":1507,"line_end":1507,"column_start":5,"column_end":17},"name":"StoreComplex","qualname":"::ir::instructions::Opcode::StoreComplex","value":"Opcode::StoreComplex","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `store_complex MemFlags, x, args, Offset`. (StoreComplex)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `store_complex MemFlags, x, args, Offset`. (StoreComplex)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10325469,"byte_end":10325530,"line_start":1505,"line_end":1505,"column_start":5,"column_end":66}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10325535,"byte_end":10325562,"line_start":1506,"line_end":1506,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6817},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10325634,"byte_end":10325640,"line_start":1509,"line_end":1509,"column_start":5,"column_end":11},"name":"Uload8","qualname":"::ir::instructions::Opcode::Uload8","value":"Opcode::Uload8","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = uload8 MemFlags, p, Offset`. (Load)\n","sig":null,"attributes":[{"value":"/ `a = uload8 MemFlags, p, Offset`. (Load)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10325585,"byte_end":10325629,"line_start":1508,"line_end":1508,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6819},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10325713,"byte_end":10325726,"line_start":1511,"line_end":1511,"column_start":5,"column_end":18},"name":"Uload8Complex","qualname":"::ir::instructions::Opcode::Uload8Complex","value":"Opcode::Uload8Complex","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = uload8_complex MemFlags, args, Offset`. (LoadComplex)\n","sig":null,"attributes":[{"value":"/ `a = uload8_complex MemFlags, args, Offset`. (LoadComplex)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10325646,"byte_end":10325708,"line_start":1510,"line_end":1510,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6821},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10325781,"byte_end":10325787,"line_start":1513,"line_end":1513,"column_start":5,"column_end":11},"name":"Sload8","qualname":"::ir::instructions::Opcode::Sload8","value":"Opcode::Sload8","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = sload8 MemFlags, p, Offset`. (Load)\n","sig":null,"attributes":[{"value":"/ `a = sload8 MemFlags, p, Offset`. (Load)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10325732,"byte_end":10325776,"line_start":1512,"line_end":1512,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6823},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10325860,"byte_end":10325873,"line_start":1515,"line_end":1515,"column_start":5,"column_end":18},"name":"Sload8Complex","qualname":"::ir::instructions::Opcode::Sload8Complex","value":"Opcode::Sload8Complex","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = sload8_complex MemFlags, args, Offset`. (LoadComplex)\n","sig":null,"attributes":[{"value":"/ `a = sload8_complex MemFlags, args, Offset`. (LoadComplex)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10325793,"byte_end":10325855,"line_start":1514,"line_end":1514,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6825},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10325961,"byte_end":10325968,"line_start":1518,"line_end":1518,"column_start":5,"column_end":12},"name":"Istore8","qualname":"::ir::instructions::Opcode::Istore8","value":"Opcode::Istore8","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `istore8 MemFlags, x, p, Offset`. (Store)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `istore8 MemFlags, x, p, Offset`. (Store)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10325879,"byte_end":10325924,"line_start":1516,"line_end":1516,"column_start":5,"column_end":50}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10325929,"byte_end":10325956,"line_start":1517,"line_end":1517,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6827},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10326074,"byte_end":10326088,"line_start":1521,"line_end":1521,"column_start":5,"column_end":19},"name":"Istore8Complex","qualname":"::ir::instructions::Opcode::Istore8Complex","value":"Opcode::Istore8Complex","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `istore8_complex MemFlags, x, args, Offset`. (StoreComplex)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `istore8_complex MemFlags, x, args, Offset`. (StoreComplex)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10325974,"byte_end":10326037,"line_start":1519,"line_end":1519,"column_start":5,"column_end":68}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10326042,"byte_end":10326069,"line_start":1520,"line_end":1520,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6829},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10326144,"byte_end":10326151,"line_start":1523,"line_end":1523,"column_start":5,"column_end":12},"name":"Uload16","qualname":"::ir::instructions::Opcode::Uload16","value":"Opcode::Uload16","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = uload16 MemFlags, p, Offset`. (Load)\n","sig":null,"attributes":[{"value":"/ `a = uload16 MemFlags, p, Offset`. (Load)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10326094,"byte_end":10326139,"line_start":1522,"line_end":1522,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6831},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10326225,"byte_end":10326239,"line_start":1525,"line_end":1525,"column_start":5,"column_end":19},"name":"Uload16Complex","qualname":"::ir::instructions::Opcode::Uload16Complex","value":"Opcode::Uload16Complex","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = uload16_complex MemFlags, args, Offset`. (LoadComplex)\n","sig":null,"attributes":[{"value":"/ `a = uload16_complex MemFlags, args, Offset`. (LoadComplex)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10326157,"byte_end":10326220,"line_start":1524,"line_end":1524,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6833},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10326295,"byte_end":10326302,"line_start":1527,"line_end":1527,"column_start":5,"column_end":12},"name":"Sload16","qualname":"::ir::instructions::Opcode::Sload16","value":"Opcode::Sload16","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = sload16 MemFlags, p, Offset`. (Load)\n","sig":null,"attributes":[{"value":"/ `a = sload16 MemFlags, p, Offset`. (Load)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10326245,"byte_end":10326290,"line_start":1526,"line_end":1526,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6835},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10326376,"byte_end":10326390,"line_start":1529,"line_end":1529,"column_start":5,"column_end":19},"name":"Sload16Complex","qualname":"::ir::instructions::Opcode::Sload16Complex","value":"Opcode::Sload16Complex","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = sload16_complex MemFlags, args, Offset`. (LoadComplex)\n","sig":null,"attributes":[{"value":"/ `a = sload16_complex MemFlags, args, Offset`. (LoadComplex)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10326308,"byte_end":10326371,"line_start":1528,"line_end":1528,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6837},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10326479,"byte_end":10326487,"line_start":1532,"line_end":1532,"column_start":5,"column_end":13},"name":"Istore16","qualname":"::ir::instructions::Opcode::Istore16","value":"Opcode::Istore16","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `istore16 MemFlags, x, p, Offset`. (Store)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `istore16 MemFlags, x, p, Offset`. (Store)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10326396,"byte_end":10326442,"line_start":1530,"line_end":1530,"column_start":5,"column_end":51}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10326447,"byte_end":10326474,"line_start":1531,"line_end":1531,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6839},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10326594,"byte_end":10326609,"line_start":1535,"line_end":1535,"column_start":5,"column_end":20},"name":"Istore16Complex","qualname":"::ir::instructions::Opcode::Istore16Complex","value":"Opcode::Istore16Complex","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `istore16_complex MemFlags, x, args, Offset`. (StoreComplex)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `istore16_complex MemFlags, x, args, Offset`. (StoreComplex)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10326493,"byte_end":10326557,"line_start":1533,"line_end":1533,"column_start":5,"column_end":69}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10326562,"byte_end":10326589,"line_start":1534,"line_end":1534,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6841},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10326697,"byte_end":10326704,"line_start":1538,"line_end":1538,"column_start":5,"column_end":12},"name":"Uload32","qualname":"::ir::instructions::Opcode::Uload32","value":"Opcode::Uload32","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = uload32 MemFlags, p, Offset`. (Load)\n Type inferred from `p`.\n","sig":null,"attributes":[{"value":"/ `a = uload32 MemFlags, p, Offset`. (Load)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10326615,"byte_end":10326660,"line_start":1536,"line_end":1536,"column_start":5,"column_end":50}},{"value":"/ Type inferred from `p`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10326665,"byte_end":10326692,"line_start":1537,"line_end":1537,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6843},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10326778,"byte_end":10326792,"line_start":1540,"line_end":1540,"column_start":5,"column_end":19},"name":"Uload32Complex","qualname":"::ir::instructions::Opcode::Uload32Complex","value":"Opcode::Uload32Complex","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = uload32_complex MemFlags, args, Offset`. (LoadComplex)\n","sig":null,"attributes":[{"value":"/ `a = uload32_complex MemFlags, args, Offset`. (LoadComplex)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10326710,"byte_end":10326773,"line_start":1539,"line_end":1539,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6845},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10326880,"byte_end":10326887,"line_start":1543,"line_end":1543,"column_start":5,"column_end":12},"name":"Sload32","qualname":"::ir::instructions::Opcode::Sload32","value":"Opcode::Sload32","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = sload32 MemFlags, p, Offset`. (Load)\n Type inferred from `p`.\n","sig":null,"attributes":[{"value":"/ `a = sload32 MemFlags, p, Offset`. (Load)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10326798,"byte_end":10326843,"line_start":1541,"line_end":1541,"column_start":5,"column_end":50}},{"value":"/ Type inferred from `p`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10326848,"byte_end":10326875,"line_start":1542,"line_end":1542,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6847},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10326961,"byte_end":10326975,"line_start":1545,"line_end":1545,"column_start":5,"column_end":19},"name":"Sload32Complex","qualname":"::ir::instructions::Opcode::Sload32Complex","value":"Opcode::Sload32Complex","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = sload32_complex MemFlags, args, Offset`. (LoadComplex)\n","sig":null,"attributes":[{"value":"/ `a = sload32_complex MemFlags, args, Offset`. (LoadComplex)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10326893,"byte_end":10326956,"line_start":1544,"line_end":1544,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6849},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10327064,"byte_end":10327072,"line_start":1548,"line_end":1548,"column_start":5,"column_end":13},"name":"Istore32","qualname":"::ir::instructions::Opcode::Istore32","value":"Opcode::Istore32","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `istore32 MemFlags, x, p, Offset`. (Store)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `istore32 MemFlags, x, p, Offset`. (Store)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10326981,"byte_end":10327027,"line_start":1546,"line_end":1546,"column_start":5,"column_end":51}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10327032,"byte_end":10327059,"line_start":1547,"line_end":1547,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6851},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10327147,"byte_end":10327162,"line_start":1550,"line_end":1550,"column_start":5,"column_end":20},"name":"Istore32Complex","qualname":"::ir::instructions::Opcode::Istore32Complex","value":"Opcode::Istore32Complex","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `istore32_complex MemFlags, x, args, Offset`. (StoreComplex)\n","sig":null,"attributes":[{"value":"/ `istore32_complex MemFlags, x, args, Offset`. (StoreComplex)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10327078,"byte_end":10327142,"line_start":1549,"line_end":1549,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6853},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10327217,"byte_end":10327226,"line_start":1552,"line_end":1552,"column_start":5,"column_end":14},"name":"StackLoad","qualname":"::ir::instructions::Opcode::StackLoad","value":"Opcode::StackLoad","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = stack_load SS, Offset`. (StackLoad)\n","sig":null,"attributes":[{"value":"/ `a = stack_load SS, Offset`. (StackLoad)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10327168,"byte_end":10327212,"line_start":1551,"line_end":1551,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6855},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10327314,"byte_end":10327324,"line_start":1555,"line_end":1555,"column_start":5,"column_end":15},"name":"StackStore","qualname":"::ir::instructions::Opcode::StackStore","value":"Opcode::StackStore","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `stack_store x, SS, Offset`. (StackStore)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `stack_store x, SS, Offset`. (StackStore)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10327232,"byte_end":10327277,"line_start":1553,"line_end":1553,"column_start":5,"column_end":50}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10327282,"byte_end":10327309,"line_start":1554,"line_end":1554,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6857},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10327382,"byte_end":10327391,"line_start":1557,"line_end":1557,"column_start":5,"column_end":14},"name":"StackAddr","qualname":"::ir::instructions::Opcode::StackAddr","value":"Opcode::StackAddr","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `addr = stack_addr SS, Offset`. (StackLoad)\n","sig":null,"attributes":[{"value":"/ `addr = stack_addr SS, Offset`. (StackLoad)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10327330,"byte_end":10327377,"line_start":1556,"line_end":1556,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6859},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10327447,"byte_end":10327458,"line_start":1559,"line_end":1559,"column_start":5,"column_end":16},"name":"GlobalValue","qualname":"::ir::instructions::Opcode::GlobalValue","value":"Opcode::GlobalValue","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = global_value GV`. (UnaryGlobalValue)\n","sig":null,"attributes":[{"value":"/ `a = global_value GV`. (UnaryGlobalValue)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10327397,"byte_end":10327442,"line_start":1558,"line_end":1558,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6861},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10327514,"byte_end":10327525,"line_start":1561,"line_end":1561,"column_start":5,"column_end":16},"name":"SymbolValue","qualname":"::ir::instructions::Opcode::SymbolValue","value":"Opcode::SymbolValue","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = symbol_value GV`. (UnaryGlobalValue)\n","sig":null,"attributes":[{"value":"/ `a = symbol_value GV`. (UnaryGlobalValue)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10327464,"byte_end":10327509,"line_start":1560,"line_end":1560,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6863},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10327581,"byte_end":10327589,"line_start":1563,"line_end":1563,"column_start":5,"column_end":13},"name":"HeapAddr","qualname":"::ir::instructions::Opcode::HeapAddr","value":"Opcode::HeapAddr","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `addr = heap_addr H, p, Size`. (HeapAddr)\n","sig":null,"attributes":[{"value":"/ `addr = heap_addr H, p, Size`. (HeapAddr)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10327531,"byte_end":10327576,"line_start":1562,"line_end":1562,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6865},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10327638,"byte_end":10327650,"line_start":1565,"line_end":1565,"column_start":5,"column_end":17},"name":"GetPinnedReg","qualname":"::ir::instructions::Opcode::GetPinnedReg","value":"Opcode::GetPinnedReg","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `addr = get_pinned_reg`. (NullAry)\n","sig":null,"attributes":[{"value":"/ `addr = get_pinned_reg`. (NullAry)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10327595,"byte_end":10327633,"line_start":1564,"line_end":1564,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6867},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10327730,"byte_end":10327742,"line_start":1568,"line_end":1568,"column_start":5,"column_end":17},"name":"SetPinnedReg","qualname":"::ir::instructions::Opcode::SetPinnedReg","value":"Opcode::SetPinnedReg","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `set_pinned_reg addr`. (Unary)\n Type inferred from `addr`.\n","sig":null,"attributes":[{"value":"/ `set_pinned_reg addr`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10327656,"byte_end":10327690,"line_start":1566,"line_end":1566,"column_start":5,"column_end":39}},{"value":"/ Type inferred from `addr`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10327695,"byte_end":10327725,"line_start":1567,"line_end":1567,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6869},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10327802,"byte_end":10327811,"line_start":1570,"line_end":1570,"column_start":5,"column_end":14},"name":"TableAddr","qualname":"::ir::instructions::Opcode::TableAddr","value":"Opcode::TableAddr","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `addr = table_addr T, p, Offset`. (TableAddr)\n","sig":null,"attributes":[{"value":"/ `addr = table_addr T, p, Offset`. (TableAddr)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10327748,"byte_end":10327797,"line_start":1569,"line_end":1569,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6871},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10327852,"byte_end":10327858,"line_start":1572,"line_end":1572,"column_start":5,"column_end":11},"name":"Iconst","qualname":"::ir::instructions::Opcode::Iconst","value":"Opcode::Iconst","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = iconst N`. (UnaryImm)\n","sig":null,"attributes":[{"value":"/ `a = iconst N`. (UnaryImm)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10327817,"byte_end":10327847,"line_start":1571,"line_end":1571,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6873},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10327904,"byte_end":10327912,"line_start":1574,"line_end":1574,"column_start":5,"column_end":13},"name":"F32const","qualname":"::ir::instructions::Opcode::F32const","value":"Opcode::F32const","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = f32const N`. (UnaryIeee32)\n","sig":null,"attributes":[{"value":"/ `a = f32const N`. (UnaryIeee32)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10327864,"byte_end":10327899,"line_start":1573,"line_end":1573,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6875},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10327958,"byte_end":10327966,"line_start":1576,"line_end":1576,"column_start":5,"column_end":13},"name":"F64const","qualname":"::ir::instructions::Opcode::F64const","value":"Opcode::F64const","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = f64const N`. (UnaryIeee64)\n","sig":null,"attributes":[{"value":"/ `a = f64const N`. (UnaryIeee64)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10327918,"byte_end":10327953,"line_start":1575,"line_end":1575,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6877},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328008,"byte_end":10328014,"line_start":1578,"line_end":1578,"column_start":5,"column_end":11},"name":"Bconst","qualname":"::ir::instructions::Opcode::Bconst","value":"Opcode::Bconst","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = bconst N`. (UnaryBool)\n","sig":null,"attributes":[{"value":"/ `a = bconst N`. (UnaryBool)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10327972,"byte_end":10328003,"line_start":1577,"line_end":1577,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6879},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328057,"byte_end":10328063,"line_start":1580,"line_end":1580,"column_start":5,"column_end":11},"name":"Vconst","qualname":"::ir::instructions::Opcode::Vconst","value":"Opcode::Vconst","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = vconst N`. (UnaryConst)\n","sig":null,"attributes":[{"value":"/ `a = vconst N`. (UnaryConst)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328020,"byte_end":10328052,"line_start":1579,"line_end":1579,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6881},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328145,"byte_end":10328152,"line_start":1583,"line_end":1583,"column_start":5,"column_end":12},"name":"Shuffle","qualname":"::ir::instructions::Opcode::Shuffle","value":"Opcode::Shuffle","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = shuffle a, b, mask`. (Shuffle)\n Type inferred from `a`.\n","sig":null,"attributes":[{"value":"/ `a = shuffle a, b, mask`. (Shuffle)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328069,"byte_end":10328108,"line_start":1581,"line_end":1581,"column_start":5,"column_end":44}},{"value":"/ Type inferred from `a`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328113,"byte_end":10328140,"line_start":1582,"line_end":1582,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6883},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328188,"byte_end":10328192,"line_start":1585,"line_end":1585,"column_start":5,"column_end":9},"name":"Null","qualname":"::ir::instructions::Opcode::Null","value":"Opcode::Null","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = null`. (NullAry)\n","sig":null,"attributes":[{"value":"/ `a = null`. (NullAry)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328158,"byte_end":10328183,"line_start":1584,"line_end":1584,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6885},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328223,"byte_end":10328226,"line_start":1587,"line_end":1587,"column_start":5,"column_end":8},"name":"Nop","qualname":"::ir::instructions::Opcode::Nop","value":"Opcode::Nop","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `nop`. (NullAry)\n","sig":null,"attributes":[{"value":"/ `nop`. (NullAry)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328198,"byte_end":10328218,"line_start":1586,"line_end":1586,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6887},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328304,"byte_end":10328310,"line_start":1590,"line_end":1590,"column_start":5,"column_end":11},"name":"Select","qualname":"::ir::instructions::Opcode::Select","value":"Opcode::Select","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = select c, x, y`. (Ternary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = select c, x, y`. (Ternary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328232,"byte_end":10328267,"line_start":1588,"line_end":1588,"column_start":5,"column_end":40}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328272,"byte_end":10328299,"line_start":1589,"line_end":1589,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6889},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328368,"byte_end":10328376,"line_start":1592,"line_end":1592,"column_start":5,"column_end":13},"name":"Selectif","qualname":"::ir::instructions::Opcode::Selectif","value":"Opcode::Selectif","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = selectif cc, flags, x, y`. (IntSelect)\n","sig":null,"attributes":[{"value":"/ `a = selectif cc, flags, x, y`. (IntSelect)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328316,"byte_end":10328363,"line_start":1591,"line_end":1591,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6891},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328457,"byte_end":10328466,"line_start":1595,"line_end":1595,"column_start":5,"column_end":14},"name":"Bitselect","qualname":"::ir::instructions::Opcode::Bitselect","value":"Opcode::Bitselect","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = bitselect c, x, y`. (Ternary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = bitselect c, x, y`. (Ternary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328382,"byte_end":10328420,"line_start":1593,"line_end":1593,"column_start":5,"column_end":43}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328425,"byte_end":10328452,"line_start":1594,"line_end":1594,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6893},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328534,"byte_end":10328538,"line_start":1598,"line_end":1598,"column_start":5,"column_end":9},"name":"Copy","qualname":"::ir::instructions::Opcode::Copy","value":"Opcode::Copy","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = copy x`. (Unary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = copy x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328472,"byte_end":10328497,"line_start":1596,"line_end":1596,"column_start":5,"column_end":30}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328502,"byte_end":10328529,"line_start":1597,"line_end":1597,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6895},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328607,"byte_end":10328612,"line_start":1601,"line_end":1601,"column_start":5,"column_end":10},"name":"Spill","qualname":"::ir::instructions::Opcode::Spill","value":"Opcode::Spill","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = spill x`. (Unary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = spill x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328544,"byte_end":10328570,"line_start":1599,"line_end":1599,"column_start":5,"column_end":31}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328575,"byte_end":10328602,"line_start":1600,"line_end":1600,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6897},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328680,"byte_end":10328684,"line_start":1604,"line_end":1604,"column_start":5,"column_end":9},"name":"Fill","qualname":"::ir::instructions::Opcode::Fill","value":"Opcode::Fill","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = fill x`. (Unary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = fill x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328618,"byte_end":10328643,"line_start":1602,"line_end":1602,"column_start":5,"column_end":30}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328648,"byte_end":10328675,"line_start":1603,"line_end":1603,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6899},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328756,"byte_end":10328763,"line_start":1607,"line_end":1607,"column_start":5,"column_end":12},"name":"FillNop","qualname":"::ir::instructions::Opcode::FillNop","value":"Opcode::FillNop","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = fill_nop x`. (Unary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = fill_nop x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328690,"byte_end":10328719,"line_start":1605,"line_end":1605,"column_start":5,"column_end":34}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328724,"byte_end":10328751,"line_start":1606,"line_end":1606,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6901},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328842,"byte_end":10328849,"line_start":1610,"line_end":1610,"column_start":5,"column_end":12},"name":"Regmove","qualname":"::ir::instructions::Opcode::Regmove","value":"Opcode::Regmove","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `regmove x, src, dst`. (RegMove)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `regmove x, src, dst`. (RegMove)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328769,"byte_end":10328805,"line_start":1608,"line_end":1608,"column_start":5,"column_end":41}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328810,"byte_end":10328837,"line_start":1609,"line_end":1609,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6903},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328902,"byte_end":10328913,"line_start":1612,"line_end":1612,"column_start":5,"column_end":16},"name":"CopySpecial","qualname":"::ir::instructions::Opcode::CopySpecial","value":"Opcode::CopySpecial","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `copy_special src, dst`. (CopySpecial)\n","sig":null,"attributes":[{"value":"/ `copy_special src, dst`. (CopySpecial)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328855,"byte_end":10328897,"line_start":1611,"line_end":1611,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6905},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328962,"byte_end":10328971,"line_start":1614,"line_end":1614,"column_start":5,"column_end":14},"name":"CopyToSsa","qualname":"::ir::instructions::Opcode::CopyToSsa","value":"Opcode::CopyToSsa","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = copy_to_ssa src`. (CopyToSsa)\n","sig":null,"attributes":[{"value":"/ `a = copy_to_ssa src`. (CopyToSsa)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328919,"byte_end":10328957,"line_start":1613,"line_end":1613,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6907},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329043,"byte_end":10329050,"line_start":1617,"line_end":1617,"column_start":5,"column_end":12},"name":"CopyNop","qualname":"::ir::instructions::Opcode::CopyNop","value":"Opcode::CopyNop","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = copy_nop x`. (Unary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = copy_nop x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10328977,"byte_end":10329006,"line_start":1615,"line_end":1615,"column_start":5,"column_end":34}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329011,"byte_end":10329038,"line_start":1616,"line_end":1616,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6909},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329132,"byte_end":10329144,"line_start":1620,"line_end":1620,"column_start":5,"column_end":17},"name":"AdjustSpDown","qualname":"::ir::instructions::Opcode::AdjustSpDown","value":"Opcode::AdjustSpDown","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `adjust_sp_down delta`. (Unary)\n Type inferred from `delta`.\n","sig":null,"attributes":[{"value":"/ `adjust_sp_down delta`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329056,"byte_end":10329091,"line_start":1618,"line_end":1618,"column_start":5,"column_end":40}},{"value":"/ Type inferred from `delta`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329096,"byte_end":10329127,"line_start":1619,"line_end":1619,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6911},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329196,"byte_end":10329209,"line_start":1622,"line_end":1622,"column_start":5,"column_end":18},"name":"AdjustSpUpImm","qualname":"::ir::instructions::Opcode::AdjustSpUpImm","value":"Opcode::AdjustSpUpImm","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `adjust_sp_up_imm Offset`. (UnaryImm)\n","sig":null,"attributes":[{"value":"/ `adjust_sp_up_imm Offset`. (UnaryImm)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329150,"byte_end":10329191,"line_start":1621,"line_end":1621,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6913},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329263,"byte_end":10329278,"line_start":1624,"line_end":1624,"column_start":5,"column_end":20},"name":"AdjustSpDownImm","qualname":"::ir::instructions::Opcode::AdjustSpDownImm","value":"Opcode::AdjustSpDownImm","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `adjust_sp_down_imm Offset`. (UnaryImm)\n","sig":null,"attributes":[{"value":"/ `adjust_sp_down_imm Offset`. (UnaryImm)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329215,"byte_end":10329258,"line_start":1623,"line_end":1623,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6915},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329356,"byte_end":10329363,"line_start":1627,"line_end":1627,"column_start":5,"column_end":12},"name":"IfcmpSp","qualname":"::ir::instructions::Opcode::IfcmpSp","value":"Opcode::IfcmpSp","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `f = ifcmp_sp addr`. (Unary)\n Type inferred from `addr`.\n","sig":null,"attributes":[{"value":"/ `f = ifcmp_sp addr`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329284,"byte_end":10329316,"line_start":1625,"line_end":1625,"column_start":5,"column_end":37}},{"value":"/ Type inferred from `addr`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329321,"byte_end":10329351,"line_start":1626,"line_end":1626,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6917},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329443,"byte_end":10329451,"line_start":1630,"line_end":1630,"column_start":5,"column_end":13},"name":"Regspill","qualname":"::ir::instructions::Opcode::Regspill","value":"Opcode::Regspill","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `regspill x, src, SS`. (RegSpill)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `regspill x, src, SS`. (RegSpill)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329369,"byte_end":10329406,"line_start":1628,"line_end":1628,"column_start":5,"column_end":42}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329411,"byte_end":10329438,"line_start":1629,"line_end":1629,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6919},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329529,"byte_end":10329536,"line_start":1633,"line_end":1633,"column_start":5,"column_end":12},"name":"Regfill","qualname":"::ir::instructions::Opcode::Regfill","value":"Opcode::Regfill","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `regfill x, SS, dst`. (RegFill)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `regfill x, SS, dst`. (RegFill)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329457,"byte_end":10329492,"line_start":1631,"line_end":1631,"column_start":5,"column_end":40}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329497,"byte_end":10329524,"line_start":1632,"line_end":1632,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6921},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329579,"byte_end":10329588,"line_start":1635,"line_end":1635,"column_start":5,"column_end":14},"name":"Safepoint","qualname":"::ir::instructions::Opcode::Safepoint","value":"Opcode::Safepoint","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `safepoint args`. (MultiAry)\n","sig":null,"attributes":[{"value":"/ `safepoint args`. (MultiAry)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329542,"byte_end":10329574,"line_start":1634,"line_end":1634,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6923},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329663,"byte_end":10329669,"line_start":1638,"line_end":1638,"column_start":5,"column_end":11},"name":"Vsplit","qualname":"::ir::instructions::Opcode::Vsplit","value":"Opcode::Vsplit","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `lo, hi = vsplit x`. (Unary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `lo, hi = vsplit x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329594,"byte_end":10329626,"line_start":1636,"line_end":1636,"column_start":5,"column_end":37}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329631,"byte_end":10329658,"line_start":1637,"line_end":1637,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6925},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329744,"byte_end":10329751,"line_start":1641,"line_end":1641,"column_start":5,"column_end":12},"name":"Vconcat","qualname":"::ir::instructions::Opcode::Vconcat","value":"Opcode::Vconcat","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = vconcat x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = vconcat x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329675,"byte_end":10329707,"line_start":1639,"line_end":1639,"column_start":5,"column_end":37}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329712,"byte_end":10329739,"line_start":1640,"line_end":1640,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6927},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329830,"byte_end":10329837,"line_start":1644,"line_end":1644,"column_start":5,"column_end":12},"name":"Vselect","qualname":"::ir::instructions::Opcode::Vselect","value":"Opcode::Vselect","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = vselect c, x, y`. (Ternary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = vselect c, x, y`. (Ternary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329757,"byte_end":10329793,"line_start":1642,"line_end":1642,"column_start":5,"column_end":41}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329798,"byte_end":10329825,"line_start":1643,"line_end":1643,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6929},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329910,"byte_end":10329918,"line_start":1647,"line_end":1647,"column_start":5,"column_end":13},"name":"VanyTrue","qualname":"::ir::instructions::Opcode::VanyTrue","value":"Opcode::VanyTrue","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `s = vany_true a`. (Unary)\n Type inferred from `a`.\n","sig":null,"attributes":[{"value":"/ `s = vany_true a`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329843,"byte_end":10329873,"line_start":1645,"line_end":1645,"column_start":5,"column_end":35}},{"value":"/ Type inferred from `a`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329878,"byte_end":10329905,"line_start":1646,"line_end":1646,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6931},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329991,"byte_end":10329999,"line_start":1650,"line_end":1650,"column_start":5,"column_end":13},"name":"VallTrue","qualname":"::ir::instructions::Opcode::VallTrue","value":"Opcode::VallTrue","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `s = vall_true a`. (Unary)\n Type inferred from `a`.\n","sig":null,"attributes":[{"value":"/ `s = vall_true a`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329924,"byte_end":10329954,"line_start":1648,"line_end":1648,"column_start":5,"column_end":35}},{"value":"/ Type inferred from `a`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10329959,"byte_end":10329986,"line_start":1649,"line_end":1649,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6933},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330036,"byte_end":10330041,"line_start":1652,"line_end":1652,"column_start":5,"column_end":10},"name":"Splat","qualname":"::ir::instructions::Opcode::Splat","value":"Opcode::Splat","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = splat x`. (Unary)\n","sig":null,"attributes":[{"value":"/ `a = splat x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330005,"byte_end":10330031,"line_start":1651,"line_end":1651,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6935},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330128,"byte_end":10330138,"line_start":1655,"line_end":1655,"column_start":5,"column_end":15},"name":"Insertlane","qualname":"::ir::instructions::Opcode::Insertlane","value":"Opcode::Insertlane","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = insertlane x, Idx, y`. (InsertLane)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = insertlane x, Idx, y`. (InsertLane)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330047,"byte_end":10330091,"line_start":1653,"line_end":1653,"column_start":5,"column_end":49}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330096,"byte_end":10330123,"line_start":1654,"line_end":1654,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6937},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330224,"byte_end":10330235,"line_start":1658,"line_end":1658,"column_start":5,"column_end":16},"name":"Extractlane","qualname":"::ir::instructions::Opcode::Extractlane","value":"Opcode::Extractlane","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = extractlane x, Idx`. (ExtractLane)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = extractlane x, Idx`. (ExtractLane)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330144,"byte_end":10330187,"line_start":1656,"line_end":1656,"column_start":5,"column_end":48}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330192,"byte_end":10330219,"line_start":1657,"line_end":1657,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6939},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330317,"byte_end":10330321,"line_start":1661,"line_end":1661,"column_start":5,"column_end":9},"name":"Icmp","qualname":"::ir::instructions::Opcode::Icmp","value":"Opcode::Icmp","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = icmp Cond, x, y`. (IntCompare)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = icmp Cond, x, y`. (IntCompare)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330241,"byte_end":10330280,"line_start":1659,"line_end":1659,"column_start":5,"column_end":44}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330285,"byte_end":10330312,"line_start":1660,"line_end":1660,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6941},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330410,"byte_end":10330417,"line_start":1664,"line_end":1664,"column_start":5,"column_end":12},"name":"IcmpImm","qualname":"::ir::instructions::Opcode::IcmpImm","value":"Opcode::IcmpImm","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = icmp_imm Cond, x, Y`. (IntCompareImm)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = icmp_imm Cond, x, Y`. (IntCompareImm)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330327,"byte_end":10330373,"line_start":1662,"line_end":1662,"column_start":5,"column_end":51}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330378,"byte_end":10330405,"line_start":1663,"line_end":1663,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6943},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330490,"byte_end":10330495,"line_start":1667,"line_end":1667,"column_start":5,"column_end":10},"name":"Ifcmp","qualname":"::ir::instructions::Opcode::Ifcmp","value":"Opcode::Ifcmp","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `f = ifcmp x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `f = ifcmp x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330423,"byte_end":10330453,"line_start":1665,"line_end":1665,"column_start":5,"column_end":35}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330458,"byte_end":10330485,"line_start":1666,"line_end":1666,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6945},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330575,"byte_end":10330583,"line_start":1670,"line_end":1670,"column_start":5,"column_end":13},"name":"IfcmpImm","qualname":"::ir::instructions::Opcode::IfcmpImm","value":"Opcode::IfcmpImm","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `f = ifcmp_imm x, Y`. (BinaryImm)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `f = ifcmp_imm x, Y`. (BinaryImm)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330501,"byte_end":10330538,"line_start":1668,"line_end":1668,"column_start":5,"column_end":42}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330543,"byte_end":10330570,"line_start":1669,"line_end":1669,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6947},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330655,"byte_end":10330659,"line_start":1673,"line_end":1673,"column_start":5,"column_end":9},"name":"Iadd","qualname":"::ir::instructions::Opcode::Iadd","value":"Opcode::Iadd","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = iadd x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = iadd x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330589,"byte_end":10330618,"line_start":1671,"line_end":1671,"column_start":5,"column_end":34}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330623,"byte_end":10330650,"line_start":1672,"line_end":1672,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6949},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330735,"byte_end":10330742,"line_start":1676,"line_end":1676,"column_start":5,"column_end":12},"name":"UaddSat","qualname":"::ir::instructions::Opcode::UaddSat","value":"Opcode::UaddSat","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = uadd_sat x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = uadd_sat x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330665,"byte_end":10330698,"line_start":1674,"line_end":1674,"column_start":5,"column_end":38}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330703,"byte_end":10330730,"line_start":1675,"line_end":1675,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6951},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330818,"byte_end":10330825,"line_start":1679,"line_end":1679,"column_start":5,"column_end":12},"name":"SaddSat","qualname":"::ir::instructions::Opcode::SaddSat","value":"Opcode::SaddSat","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = sadd_sat x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = sadd_sat x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330748,"byte_end":10330781,"line_start":1677,"line_end":1677,"column_start":5,"column_end":38}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330786,"byte_end":10330813,"line_start":1678,"line_end":1678,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6953},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330897,"byte_end":10330901,"line_start":1682,"line_end":1682,"column_start":5,"column_end":9},"name":"Isub","qualname":"::ir::instructions::Opcode::Isub","value":"Opcode::Isub","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = isub x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = isub x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330831,"byte_end":10330860,"line_start":1680,"line_end":1680,"column_start":5,"column_end":34}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330865,"byte_end":10330892,"line_start":1681,"line_end":1681,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6955},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330977,"byte_end":10330984,"line_start":1685,"line_end":1685,"column_start":5,"column_end":12},"name":"UsubSat","qualname":"::ir::instructions::Opcode::UsubSat","value":"Opcode::UsubSat","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = usub_sat x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = usub_sat x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330907,"byte_end":10330940,"line_start":1683,"line_end":1683,"column_start":5,"column_end":38}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330945,"byte_end":10330972,"line_start":1684,"line_end":1684,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6957},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331060,"byte_end":10331067,"line_start":1688,"line_end":1688,"column_start":5,"column_end":12},"name":"SsubSat","qualname":"::ir::instructions::Opcode::SsubSat","value":"Opcode::SsubSat","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = ssub_sat x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = ssub_sat x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10330990,"byte_end":10331023,"line_start":1686,"line_end":1686,"column_start":5,"column_end":38}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331028,"byte_end":10331055,"line_start":1687,"line_end":1687,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6959},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331135,"byte_end":10331139,"line_start":1691,"line_end":1691,"column_start":5,"column_end":9},"name":"Ineg","qualname":"::ir::instructions::Opcode::Ineg","value":"Opcode::Ineg","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = ineg x`. (Unary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = ineg x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331073,"byte_end":10331098,"line_start":1689,"line_end":1689,"column_start":5,"column_end":30}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331103,"byte_end":10331130,"line_start":1690,"line_end":1690,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6961},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331211,"byte_end":10331215,"line_start":1694,"line_end":1694,"column_start":5,"column_end":9},"name":"Imul","qualname":"::ir::instructions::Opcode::Imul","value":"Opcode::Imul","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = imul x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = imul x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331145,"byte_end":10331174,"line_start":1692,"line_end":1692,"column_start":5,"column_end":34}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331179,"byte_end":10331206,"line_start":1693,"line_end":1693,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6963},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331289,"byte_end":10331295,"line_start":1697,"line_end":1697,"column_start":5,"column_end":11},"name":"Umulhi","qualname":"::ir::instructions::Opcode::Umulhi","value":"Opcode::Umulhi","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = umulhi x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = umulhi x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331221,"byte_end":10331252,"line_start":1695,"line_end":1695,"column_start":5,"column_end":36}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331257,"byte_end":10331284,"line_start":1696,"line_end":1696,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6965},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331369,"byte_end":10331375,"line_start":1700,"line_end":1700,"column_start":5,"column_end":11},"name":"Smulhi","qualname":"::ir::instructions::Opcode::Smulhi","value":"Opcode::Smulhi","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = smulhi x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = smulhi x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331301,"byte_end":10331332,"line_start":1698,"line_end":1698,"column_start":5,"column_end":36}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331337,"byte_end":10331364,"line_start":1699,"line_end":1699,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6967},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331447,"byte_end":10331451,"line_start":1703,"line_end":1703,"column_start":5,"column_end":9},"name":"Udiv","qualname":"::ir::instructions::Opcode::Udiv","value":"Opcode::Udiv","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = udiv x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = udiv x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331381,"byte_end":10331410,"line_start":1701,"line_end":1701,"column_start":5,"column_end":34}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331415,"byte_end":10331442,"line_start":1702,"line_end":1702,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6969},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331523,"byte_end":10331527,"line_start":1706,"line_end":1706,"column_start":5,"column_end":9},"name":"Sdiv","qualname":"::ir::instructions::Opcode::Sdiv","value":"Opcode::Sdiv","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = sdiv x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = sdiv x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331457,"byte_end":10331486,"line_start":1704,"line_end":1704,"column_start":5,"column_end":34}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331491,"byte_end":10331518,"line_start":1705,"line_end":1705,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6971},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331599,"byte_end":10331603,"line_start":1709,"line_end":1709,"column_start":5,"column_end":9},"name":"Urem","qualname":"::ir::instructions::Opcode::Urem","value":"Opcode::Urem","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = urem x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = urem x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331533,"byte_end":10331562,"line_start":1707,"line_end":1707,"column_start":5,"column_end":34}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331567,"byte_end":10331594,"line_start":1708,"line_end":1708,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6973},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331675,"byte_end":10331679,"line_start":1712,"line_end":1712,"column_start":5,"column_end":9},"name":"Srem","qualname":"::ir::instructions::Opcode::Srem","value":"Opcode::Srem","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = srem x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = srem x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331609,"byte_end":10331638,"line_start":1710,"line_end":1710,"column_start":5,"column_end":34}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331643,"byte_end":10331670,"line_start":1711,"line_end":1711,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6975},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331758,"byte_end":10331765,"line_start":1715,"line_end":1715,"column_start":5,"column_end":12},"name":"IaddImm","qualname":"::ir::instructions::Opcode::IaddImm","value":"Opcode::IaddImm","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = iadd_imm x, Y`. (BinaryImm)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = iadd_imm x, Y`. (BinaryImm)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331685,"byte_end":10331721,"line_start":1713,"line_end":1713,"column_start":5,"column_end":41}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331726,"byte_end":10331753,"line_start":1714,"line_end":1714,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6977},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331844,"byte_end":10331851,"line_start":1718,"line_end":1718,"column_start":5,"column_end":12},"name":"ImulImm","qualname":"::ir::instructions::Opcode::ImulImm","value":"Opcode::ImulImm","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = imul_imm x, Y`. (BinaryImm)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = imul_imm x, Y`. (BinaryImm)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331771,"byte_end":10331807,"line_start":1716,"line_end":1716,"column_start":5,"column_end":41}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331812,"byte_end":10331839,"line_start":1717,"line_end":1717,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6979},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331930,"byte_end":10331937,"line_start":1721,"line_end":1721,"column_start":5,"column_end":12},"name":"UdivImm","qualname":"::ir::instructions::Opcode::UdivImm","value":"Opcode::UdivImm","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = udiv_imm x, Y`. (BinaryImm)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = udiv_imm x, Y`. (BinaryImm)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331857,"byte_end":10331893,"line_start":1719,"line_end":1719,"column_start":5,"column_end":41}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331898,"byte_end":10331925,"line_start":1720,"line_end":1720,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6981},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10332016,"byte_end":10332023,"line_start":1724,"line_end":1724,"column_start":5,"column_end":12},"name":"SdivImm","qualname":"::ir::instructions::Opcode::SdivImm","value":"Opcode::SdivImm","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = sdiv_imm x, Y`. (BinaryImm)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = sdiv_imm x, Y`. (BinaryImm)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331943,"byte_end":10331979,"line_start":1722,"line_end":1722,"column_start":5,"column_end":41}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10331984,"byte_end":10332011,"line_start":1723,"line_end":1723,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6983},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10332102,"byte_end":10332109,"line_start":1727,"line_end":1727,"column_start":5,"column_end":12},"name":"UremImm","qualname":"::ir::instructions::Opcode::UremImm","value":"Opcode::UremImm","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = urem_imm x, Y`. (BinaryImm)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = urem_imm x, Y`. (BinaryImm)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10332029,"byte_end":10332065,"line_start":1725,"line_end":1725,"column_start":5,"column_end":41}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10332070,"byte_end":10332097,"line_start":1726,"line_end":1726,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6985},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10332188,"byte_end":10332195,"line_start":1730,"line_end":1730,"column_start":5,"column_end":12},"name":"SremImm","qualname":"::ir::instructions::Opcode::SremImm","value":"Opcode::SremImm","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = srem_imm x, Y`. (BinaryImm)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = srem_imm x, Y`. (BinaryImm)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10332115,"byte_end":10332151,"line_start":1728,"line_end":1728,"column_start":5,"column_end":41}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10332156,"byte_end":10332183,"line_start":1729,"line_end":1729,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6987},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10332275,"byte_end":10332283,"line_start":1733,"line_end":1733,"column_start":5,"column_end":13},"name":"IrsubImm","qualname":"::ir::instructions::Opcode::IrsubImm","value":"Opcode::IrsubImm","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = irsub_imm x, Y`. (BinaryImm)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = irsub_imm x, Y`. (BinaryImm)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10332201,"byte_end":10332238,"line_start":1731,"line_end":1731,"column_start":5,"column_end":42}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10332243,"byte_end":10332270,"line_start":1732,"line_end":1732,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6989},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10332366,"byte_end":10332373,"line_start":1736,"line_end":1736,"column_start":5,"column_end":12},"name":"IaddCin","qualname":"::ir::instructions::Opcode::IaddCin","value":"Opcode::IaddCin","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = iadd_cin x, y, c_in`. (Ternary)\n Type inferred from `y`.\n","sig":null,"attributes":[{"value":"/ `a = iadd_cin x, y, c_in`. (Ternary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10332289,"byte_end":10332329,"line_start":1734,"line_end":1734,"column_start":5,"column_end":45}},{"value":"/ Type inferred from `y`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10332334,"byte_end":10332361,"line_start":1735,"line_end":1735,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6991},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10332458,"byte_end":10332467,"line_start":1739,"line_end":1739,"column_start":5,"column_end":14},"name":"IaddIfcin","qualname":"::ir::instructions::Opcode::IaddIfcin","value":"Opcode::IaddIfcin","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = iadd_ifcin x, y, c_in`. (Ternary)\n Type inferred from `y`.\n","sig":null,"attributes":[{"value":"/ `a = iadd_ifcin x, y, c_in`. (Ternary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10332379,"byte_end":10332421,"line_start":1737,"line_end":1737,"column_start":5,"column_end":47}},{"value":"/ Type inferred from `y`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10332426,"byte_end":10332453,"line_start":1738,"line_end":1738,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6993},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10332551,"byte_end":10332559,"line_start":1742,"line_end":1742,"column_start":5,"column_end":13},"name":"IaddCout","qualname":"::ir::instructions::Opcode::IaddCout","value":"Opcode::IaddCout","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a, c_out = iadd_cout x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a, c_out = iadd_cout x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10332473,"byte_end":10332514,"line_start":1740,"line_end":1740,"column_start":5,"column_end":46}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10332519,"byte_end":10332546,"line_start":1741,"line_end":1741,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6995},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10332645,"byte_end":10332655,"line_start":1745,"line_end":1745,"column_start":5,"column_end":15},"name":"IaddIfcout","qualname":"::ir::instructions::Opcode::IaddIfcout","value":"Opcode::IaddIfcout","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a, c_out = iadd_ifcout x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a, c_out = iadd_ifcout x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10332565,"byte_end":10332608,"line_start":1743,"line_end":1743,"column_start":5,"column_end":48}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10332613,"byte_end":10332640,"line_start":1744,"line_end":1744,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6997},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10332747,"byte_end":10332756,"line_start":1748,"line_end":1748,"column_start":5,"column_end":14},"name":"IaddCarry","qualname":"::ir::instructions::Opcode::IaddCarry","value":"Opcode::IaddCarry","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a, c_out = iadd_carry x, y, c_in`. (Ternary)\n Type inferred from `y`.\n","sig":null,"attributes":[{"value":"/ `a, c_out = iadd_carry x, y, c_in`. (Ternary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10332661,"byte_end":10332710,"line_start":1746,"line_end":1746,"column_start":5,"column_end":54}},{"value":"/ Type inferred from `y`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10332715,"byte_end":10332742,"line_start":1747,"line_end":1747,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6999},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10332850,"byte_end":10332861,"line_start":1751,"line_end":1751,"column_start":5,"column_end":16},"name":"IaddIfcarry","qualname":"::ir::instructions::Opcode::IaddIfcarry","value":"Opcode::IaddIfcarry","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a, c_out = iadd_ifcarry x, y, c_in`. (Ternary)\n Type inferred from `y`.\n","sig":null,"attributes":[{"value":"/ `a, c_out = iadd_ifcarry x, y, c_in`. (Ternary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10332762,"byte_end":10332813,"line_start":1749,"line_end":1749,"column_start":5,"column_end":56}},{"value":"/ Type inferred from `y`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10332818,"byte_end":10332845,"line_start":1750,"line_end":1750,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7001},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10332944,"byte_end":10332951,"line_start":1754,"line_end":1754,"column_start":5,"column_end":12},"name":"IsubBin","qualname":"::ir::instructions::Opcode::IsubBin","value":"Opcode::IsubBin","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = isub_bin x, y, b_in`. (Ternary)\n Type inferred from `y`.\n","sig":null,"attributes":[{"value":"/ `a = isub_bin x, y, b_in`. (Ternary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10332867,"byte_end":10332907,"line_start":1752,"line_end":1752,"column_start":5,"column_end":45}},{"value":"/ Type inferred from `y`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10332912,"byte_end":10332939,"line_start":1753,"line_end":1753,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7003},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333036,"byte_end":10333045,"line_start":1757,"line_end":1757,"column_start":5,"column_end":14},"name":"IsubIfbin","qualname":"::ir::instructions::Opcode::IsubIfbin","value":"Opcode::IsubIfbin","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = isub_ifbin x, y, b_in`. (Ternary)\n Type inferred from `y`.\n","sig":null,"attributes":[{"value":"/ `a = isub_ifbin x, y, b_in`. (Ternary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10332957,"byte_end":10332999,"line_start":1755,"line_end":1755,"column_start":5,"column_end":47}},{"value":"/ Type inferred from `y`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333004,"byte_end":10333031,"line_start":1756,"line_end":1756,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7005},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333129,"byte_end":10333137,"line_start":1760,"line_end":1760,"column_start":5,"column_end":13},"name":"IsubBout","qualname":"::ir::instructions::Opcode::IsubBout","value":"Opcode::IsubBout","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a, b_out = isub_bout x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a, b_out = isub_bout x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333051,"byte_end":10333092,"line_start":1758,"line_end":1758,"column_start":5,"column_end":46}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333097,"byte_end":10333124,"line_start":1759,"line_end":1759,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7007},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333223,"byte_end":10333233,"line_start":1763,"line_end":1763,"column_start":5,"column_end":15},"name":"IsubIfbout","qualname":"::ir::instructions::Opcode::IsubIfbout","value":"Opcode::IsubIfbout","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a, b_out = isub_ifbout x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a, b_out = isub_ifbout x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333143,"byte_end":10333186,"line_start":1761,"line_end":1761,"column_start":5,"column_end":48}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333191,"byte_end":10333218,"line_start":1762,"line_end":1762,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7009},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333326,"byte_end":10333336,"line_start":1766,"line_end":1766,"column_start":5,"column_end":15},"name":"IsubBorrow","qualname":"::ir::instructions::Opcode::IsubBorrow","value":"Opcode::IsubBorrow","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a, b_out = isub_borrow x, y, b_in`. (Ternary)\n Type inferred from `y`.\n","sig":null,"attributes":[{"value":"/ `a, b_out = isub_borrow x, y, b_in`. (Ternary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333239,"byte_end":10333289,"line_start":1764,"line_end":1764,"column_start":5,"column_end":55}},{"value":"/ Type inferred from `y`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333294,"byte_end":10333321,"line_start":1765,"line_end":1765,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7011},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333431,"byte_end":10333443,"line_start":1769,"line_end":1769,"column_start":5,"column_end":17},"name":"IsubIfborrow","qualname":"::ir::instructions::Opcode::IsubIfborrow","value":"Opcode::IsubIfborrow","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a, b_out = isub_ifborrow x, y, b_in`. (Ternary)\n Type inferred from `y`.\n","sig":null,"attributes":[{"value":"/ `a, b_out = isub_ifborrow x, y, b_in`. (Ternary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333342,"byte_end":10333394,"line_start":1767,"line_end":1767,"column_start":5,"column_end":57}},{"value":"/ Type inferred from `y`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333399,"byte_end":10333426,"line_start":1768,"line_end":1768,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7013},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333515,"byte_end":10333519,"line_start":1772,"line_end":1772,"column_start":5,"column_end":9},"name":"Band","qualname":"::ir::instructions::Opcode::Band","value":"Opcode::Band","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = band x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = band x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333449,"byte_end":10333478,"line_start":1770,"line_end":1770,"column_start":5,"column_end":34}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333483,"byte_end":10333510,"line_start":1771,"line_end":1771,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7015},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333590,"byte_end":10333593,"line_start":1775,"line_end":1775,"column_start":5,"column_end":8},"name":"Bor","qualname":"::ir::instructions::Opcode::Bor","value":"Opcode::Bor","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = bor x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = bor x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333525,"byte_end":10333553,"line_start":1773,"line_end":1773,"column_start":5,"column_end":33}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333558,"byte_end":10333585,"line_start":1774,"line_end":1774,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7017},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333665,"byte_end":10333669,"line_start":1778,"line_end":1778,"column_start":5,"column_end":9},"name":"Bxor","qualname":"::ir::instructions::Opcode::Bxor","value":"Opcode::Bxor","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = bxor x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = bxor x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333599,"byte_end":10333628,"line_start":1776,"line_end":1776,"column_start":5,"column_end":34}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333633,"byte_end":10333660,"line_start":1777,"line_end":1777,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7019},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333737,"byte_end":10333741,"line_start":1781,"line_end":1781,"column_start":5,"column_end":9},"name":"Bnot","qualname":"::ir::instructions::Opcode::Bnot","value":"Opcode::Bnot","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = bnot x`. (Unary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = bnot x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333675,"byte_end":10333700,"line_start":1779,"line_end":1779,"column_start":5,"column_end":30}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333705,"byte_end":10333732,"line_start":1780,"line_end":1780,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7021},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333817,"byte_end":10333824,"line_start":1784,"line_end":1784,"column_start":5,"column_end":12},"name":"BandNot","qualname":"::ir::instructions::Opcode::BandNot","value":"Opcode::BandNot","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = band_not x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = band_not x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333747,"byte_end":10333780,"line_start":1782,"line_end":1782,"column_start":5,"column_end":38}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333785,"byte_end":10333812,"line_start":1783,"line_end":1783,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7023},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333899,"byte_end":10333905,"line_start":1787,"line_end":1787,"column_start":5,"column_end":11},"name":"BorNot","qualname":"::ir::instructions::Opcode::BorNot","value":"Opcode::BorNot","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = bor_not x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = bor_not x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333830,"byte_end":10333862,"line_start":1785,"line_end":1785,"column_start":5,"column_end":37}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333867,"byte_end":10333894,"line_start":1786,"line_end":1786,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7025},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333981,"byte_end":10333988,"line_start":1790,"line_end":1790,"column_start":5,"column_end":12},"name":"BxorNot","qualname":"::ir::instructions::Opcode::BxorNot","value":"Opcode::BxorNot","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = bxor_not x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = bxor_not x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333911,"byte_end":10333944,"line_start":1788,"line_end":1788,"column_start":5,"column_end":38}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333949,"byte_end":10333976,"line_start":1789,"line_end":1789,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7027},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334067,"byte_end":10334074,"line_start":1793,"line_end":1793,"column_start":5,"column_end":12},"name":"BandImm","qualname":"::ir::instructions::Opcode::BandImm","value":"Opcode::BandImm","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = band_imm x, Y`. (BinaryImm)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = band_imm x, Y`. (BinaryImm)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10333994,"byte_end":10334030,"line_start":1791,"line_end":1791,"column_start":5,"column_end":41}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334035,"byte_end":10334062,"line_start":1792,"line_end":1792,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7029},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334152,"byte_end":10334158,"line_start":1796,"line_end":1796,"column_start":5,"column_end":11},"name":"BorImm","qualname":"::ir::instructions::Opcode::BorImm","value":"Opcode::BorImm","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = bor_imm x, Y`. (BinaryImm)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = bor_imm x, Y`. (BinaryImm)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334080,"byte_end":10334115,"line_start":1794,"line_end":1794,"column_start":5,"column_end":40}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334120,"byte_end":10334147,"line_start":1795,"line_end":1795,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7031},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334237,"byte_end":10334244,"line_start":1799,"line_end":1799,"column_start":5,"column_end":12},"name":"BxorImm","qualname":"::ir::instructions::Opcode::BxorImm","value":"Opcode::BxorImm","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = bxor_imm x, Y`. (BinaryImm)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = bxor_imm x, Y`. (BinaryImm)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334164,"byte_end":10334200,"line_start":1797,"line_end":1797,"column_start":5,"column_end":41}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334205,"byte_end":10334232,"line_start":1798,"line_end":1798,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7033},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334316,"byte_end":10334320,"line_start":1802,"line_end":1802,"column_start":5,"column_end":9},"name":"Rotl","qualname":"::ir::instructions::Opcode::Rotl","value":"Opcode::Rotl","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = rotl x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = rotl x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334250,"byte_end":10334279,"line_start":1800,"line_end":1800,"column_start":5,"column_end":34}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334284,"byte_end":10334311,"line_start":1801,"line_end":1801,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7035},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334392,"byte_end":10334396,"line_start":1805,"line_end":1805,"column_start":5,"column_end":9},"name":"Rotr","qualname":"::ir::instructions::Opcode::Rotr","value":"Opcode::Rotr","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = rotr x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = rotr x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334326,"byte_end":10334355,"line_start":1803,"line_end":1803,"column_start":5,"column_end":34}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334360,"byte_end":10334387,"line_start":1804,"line_end":1804,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7037},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334475,"byte_end":10334482,"line_start":1808,"line_end":1808,"column_start":5,"column_end":12},"name":"RotlImm","qualname":"::ir::instructions::Opcode::RotlImm","value":"Opcode::RotlImm","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = rotl_imm x, Y`. (BinaryImm)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = rotl_imm x, Y`. (BinaryImm)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334402,"byte_end":10334438,"line_start":1806,"line_end":1806,"column_start":5,"column_end":41}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334443,"byte_end":10334470,"line_start":1807,"line_end":1807,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7039},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334561,"byte_end":10334568,"line_start":1811,"line_end":1811,"column_start":5,"column_end":12},"name":"RotrImm","qualname":"::ir::instructions::Opcode::RotrImm","value":"Opcode::RotrImm","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = rotr_imm x, Y`. (BinaryImm)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = rotr_imm x, Y`. (BinaryImm)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334488,"byte_end":10334524,"line_start":1809,"line_end":1809,"column_start":5,"column_end":41}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334529,"byte_end":10334556,"line_start":1810,"line_end":1810,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7041},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334640,"byte_end":10334644,"line_start":1814,"line_end":1814,"column_start":5,"column_end":9},"name":"Ishl","qualname":"::ir::instructions::Opcode::Ishl","value":"Opcode::Ishl","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = ishl x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = ishl x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334574,"byte_end":10334603,"line_start":1812,"line_end":1812,"column_start":5,"column_end":34}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334608,"byte_end":10334635,"line_start":1813,"line_end":1813,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7043},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334716,"byte_end":10334720,"line_start":1817,"line_end":1817,"column_start":5,"column_end":9},"name":"Ushr","qualname":"::ir::instructions::Opcode::Ushr","value":"Opcode::Ushr","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = ushr x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = ushr x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334650,"byte_end":10334679,"line_start":1815,"line_end":1815,"column_start":5,"column_end":34}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334684,"byte_end":10334711,"line_start":1816,"line_end":1816,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7045},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334792,"byte_end":10334796,"line_start":1820,"line_end":1820,"column_start":5,"column_end":9},"name":"Sshr","qualname":"::ir::instructions::Opcode::Sshr","value":"Opcode::Sshr","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = sshr x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = sshr x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334726,"byte_end":10334755,"line_start":1818,"line_end":1818,"column_start":5,"column_end":34}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334760,"byte_end":10334787,"line_start":1819,"line_end":1819,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7047},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334875,"byte_end":10334882,"line_start":1823,"line_end":1823,"column_start":5,"column_end":12},"name":"IshlImm","qualname":"::ir::instructions::Opcode::IshlImm","value":"Opcode::IshlImm","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = ishl_imm x, Y`. (BinaryImm)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = ishl_imm x, Y`. (BinaryImm)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334802,"byte_end":10334838,"line_start":1821,"line_end":1821,"column_start":5,"column_end":41}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334843,"byte_end":10334870,"line_start":1822,"line_end":1822,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7049},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334961,"byte_end":10334968,"line_start":1826,"line_end":1826,"column_start":5,"column_end":12},"name":"UshrImm","qualname":"::ir::instructions::Opcode::UshrImm","value":"Opcode::UshrImm","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = ushr_imm x, Y`. (BinaryImm)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = ushr_imm x, Y`. (BinaryImm)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334888,"byte_end":10334924,"line_start":1824,"line_end":1824,"column_start":5,"column_end":41}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334929,"byte_end":10334956,"line_start":1825,"line_end":1825,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7051},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335047,"byte_end":10335054,"line_start":1829,"line_end":1829,"column_start":5,"column_end":12},"name":"SshrImm","qualname":"::ir::instructions::Opcode::SshrImm","value":"Opcode::SshrImm","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = sshr_imm x, Y`. (BinaryImm)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = sshr_imm x, Y`. (BinaryImm)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10334974,"byte_end":10335010,"line_start":1827,"line_end":1827,"column_start":5,"column_end":41}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335015,"byte_end":10335042,"line_start":1828,"line_end":1828,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7053},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335124,"byte_end":10335130,"line_start":1832,"line_end":1832,"column_start":5,"column_end":11},"name":"Bitrev","qualname":"::ir::instructions::Opcode::Bitrev","value":"Opcode::Bitrev","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = bitrev x`. (Unary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = bitrev x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335060,"byte_end":10335087,"line_start":1830,"line_end":1830,"column_start":5,"column_end":32}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335092,"byte_end":10335119,"line_start":1831,"line_end":1831,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7055},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335197,"byte_end":10335200,"line_start":1835,"line_end":1835,"column_start":5,"column_end":8},"name":"Clz","qualname":"::ir::instructions::Opcode::Clz","value":"Opcode::Clz","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = clz x`. (Unary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = clz x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335136,"byte_end":10335160,"line_start":1833,"line_end":1833,"column_start":5,"column_end":29}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335165,"byte_end":10335192,"line_start":1834,"line_end":1834,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7057},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335267,"byte_end":10335270,"line_start":1838,"line_end":1838,"column_start":5,"column_end":8},"name":"Cls","qualname":"::ir::instructions::Opcode::Cls","value":"Opcode::Cls","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = cls x`. (Unary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = cls x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335206,"byte_end":10335230,"line_start":1836,"line_end":1836,"column_start":5,"column_end":29}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335235,"byte_end":10335262,"line_start":1837,"line_end":1837,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7059},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335337,"byte_end":10335340,"line_start":1841,"line_end":1841,"column_start":5,"column_end":8},"name":"Ctz","qualname":"::ir::instructions::Opcode::Ctz","value":"Opcode::Ctz","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = ctz x`. (Unary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = ctz x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335276,"byte_end":10335300,"line_start":1839,"line_end":1839,"column_start":5,"column_end":29}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335305,"byte_end":10335332,"line_start":1840,"line_end":1840,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7061},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335410,"byte_end":10335416,"line_start":1844,"line_end":1844,"column_start":5,"column_end":11},"name":"Popcnt","qualname":"::ir::instructions::Opcode::Popcnt","value":"Opcode::Popcnt","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = popcnt x`. (Unary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = popcnt x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335346,"byte_end":10335373,"line_start":1842,"line_end":1842,"column_start":5,"column_end":32}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335378,"byte_end":10335405,"line_start":1843,"line_end":1843,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7063},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335500,"byte_end":10335504,"line_start":1847,"line_end":1847,"column_start":5,"column_end":9},"name":"Fcmp","qualname":"::ir::instructions::Opcode::Fcmp","value":"Opcode::Fcmp","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = fcmp Cond, x, y`. (FloatCompare)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = fcmp Cond, x, y`. (FloatCompare)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335422,"byte_end":10335463,"line_start":1845,"line_end":1845,"column_start":5,"column_end":46}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335468,"byte_end":10335495,"line_start":1846,"line_end":1846,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7065},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335577,"byte_end":10335582,"line_start":1850,"line_end":1850,"column_start":5,"column_end":10},"name":"Ffcmp","qualname":"::ir::instructions::Opcode::Ffcmp","value":"Opcode::Ffcmp","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `f = ffcmp x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `f = ffcmp x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335510,"byte_end":10335540,"line_start":1848,"line_end":1848,"column_start":5,"column_end":35}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335545,"byte_end":10335572,"line_start":1849,"line_end":1849,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7067},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335654,"byte_end":10335658,"line_start":1853,"line_end":1853,"column_start":5,"column_end":9},"name":"Fadd","qualname":"::ir::instructions::Opcode::Fadd","value":"Opcode::Fadd","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = fadd x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = fadd x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335588,"byte_end":10335617,"line_start":1851,"line_end":1851,"column_start":5,"column_end":34}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335622,"byte_end":10335649,"line_start":1852,"line_end":1852,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7069},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335730,"byte_end":10335734,"line_start":1856,"line_end":1856,"column_start":5,"column_end":9},"name":"Fsub","qualname":"::ir::instructions::Opcode::Fsub","value":"Opcode::Fsub","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = fsub x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = fsub x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335664,"byte_end":10335693,"line_start":1854,"line_end":1854,"column_start":5,"column_end":34}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335698,"byte_end":10335725,"line_start":1855,"line_end":1855,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7071},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335806,"byte_end":10335810,"line_start":1859,"line_end":1859,"column_start":5,"column_end":9},"name":"Fmul","qualname":"::ir::instructions::Opcode::Fmul","value":"Opcode::Fmul","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = fmul x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = fmul x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335740,"byte_end":10335769,"line_start":1857,"line_end":1857,"column_start":5,"column_end":34}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335774,"byte_end":10335801,"line_start":1858,"line_end":1858,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7073},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335882,"byte_end":10335886,"line_start":1862,"line_end":1862,"column_start":5,"column_end":9},"name":"Fdiv","qualname":"::ir::instructions::Opcode::Fdiv","value":"Opcode::Fdiv","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = fdiv x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = fdiv x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335816,"byte_end":10335845,"line_start":1860,"line_end":1860,"column_start":5,"column_end":34}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335850,"byte_end":10335877,"line_start":1861,"line_end":1861,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7075},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335954,"byte_end":10335958,"line_start":1865,"line_end":1865,"column_start":5,"column_end":9},"name":"Sqrt","qualname":"::ir::instructions::Opcode::Sqrt","value":"Opcode::Sqrt","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = sqrt x`. (Unary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = sqrt x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335892,"byte_end":10335917,"line_start":1863,"line_end":1863,"column_start":5,"column_end":30}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335922,"byte_end":10335949,"line_start":1864,"line_end":1864,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7077},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336033,"byte_end":10336036,"line_start":1868,"line_end":1868,"column_start":5,"column_end":8},"name":"Fma","qualname":"::ir::instructions::Opcode::Fma","value":"Opcode::Fma","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = fma x, y, z`. (Ternary)\n Type inferred from `y`.\n","sig":null,"attributes":[{"value":"/ `a = fma x, y, z`. (Ternary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10335964,"byte_end":10335996,"line_start":1866,"line_end":1866,"column_start":5,"column_end":37}},{"value":"/ Type inferred from `y`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336001,"byte_end":10336028,"line_start":1867,"line_end":1867,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7079},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336104,"byte_end":10336108,"line_start":1871,"line_end":1871,"column_start":5,"column_end":9},"name":"Fneg","qualname":"::ir::instructions::Opcode::Fneg","value":"Opcode::Fneg","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = fneg x`. (Unary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = fneg x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336042,"byte_end":10336067,"line_start":1869,"line_end":1869,"column_start":5,"column_end":30}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336072,"byte_end":10336099,"line_start":1870,"line_end":1870,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7081},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336176,"byte_end":10336180,"line_start":1874,"line_end":1874,"column_start":5,"column_end":9},"name":"Fabs","qualname":"::ir::instructions::Opcode::Fabs","value":"Opcode::Fabs","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = fabs x`. (Unary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = fabs x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336114,"byte_end":10336139,"line_start":1872,"line_end":1872,"column_start":5,"column_end":30}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336144,"byte_end":10336171,"line_start":1873,"line_end":1873,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7083},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336257,"byte_end":10336266,"line_start":1877,"line_end":1877,"column_start":5,"column_end":14},"name":"Fcopysign","qualname":"::ir::instructions::Opcode::Fcopysign","value":"Opcode::Fcopysign","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = fcopysign x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = fcopysign x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336186,"byte_end":10336220,"line_start":1875,"line_end":1875,"column_start":5,"column_end":39}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336225,"byte_end":10336252,"line_start":1876,"line_end":1876,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7085},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336338,"byte_end":10336342,"line_start":1880,"line_end":1880,"column_start":5,"column_end":9},"name":"Fmin","qualname":"::ir::instructions::Opcode::Fmin","value":"Opcode::Fmin","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = fmin x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = fmin x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336272,"byte_end":10336301,"line_start":1878,"line_end":1878,"column_start":5,"column_end":34}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336306,"byte_end":10336333,"line_start":1879,"line_end":1879,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7087},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336414,"byte_end":10336418,"line_start":1883,"line_end":1883,"column_start":5,"column_end":9},"name":"Fmax","qualname":"::ir::instructions::Opcode::Fmax","value":"Opcode::Fmax","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = fmax x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = fmax x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336348,"byte_end":10336377,"line_start":1881,"line_end":1881,"column_start":5,"column_end":34}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336382,"byte_end":10336409,"line_start":1882,"line_end":1882,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7089},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336486,"byte_end":10336490,"line_start":1886,"line_end":1886,"column_start":5,"column_end":9},"name":"Ceil","qualname":"::ir::instructions::Opcode::Ceil","value":"Opcode::Ceil","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = ceil x`. (Unary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = ceil x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336424,"byte_end":10336449,"line_start":1884,"line_end":1884,"column_start":5,"column_end":30}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336454,"byte_end":10336481,"line_start":1885,"line_end":1885,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7091},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336559,"byte_end":10336564,"line_start":1889,"line_end":1889,"column_start":5,"column_end":10},"name":"Floor","qualname":"::ir::instructions::Opcode::Floor","value":"Opcode::Floor","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = floor x`. (Unary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = floor x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336496,"byte_end":10336522,"line_start":1887,"line_end":1887,"column_start":5,"column_end":31}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336527,"byte_end":10336554,"line_start":1888,"line_end":1888,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7093},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336633,"byte_end":10336638,"line_start":1892,"line_end":1892,"column_start":5,"column_end":10},"name":"Trunc","qualname":"::ir::instructions::Opcode::Trunc","value":"Opcode::Trunc","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = trunc x`. (Unary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = trunc x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336570,"byte_end":10336596,"line_start":1890,"line_end":1890,"column_start":5,"column_end":31}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336601,"byte_end":10336628,"line_start":1891,"line_end":1891,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7095},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336709,"byte_end":10336716,"line_start":1895,"line_end":1895,"column_start":5,"column_end":12},"name":"Nearest","qualname":"::ir::instructions::Opcode::Nearest","value":"Opcode::Nearest","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = nearest x`. (Unary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = nearest x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336644,"byte_end":10336672,"line_start":1893,"line_end":1893,"column_start":5,"column_end":33}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336677,"byte_end":10336704,"line_start":1894,"line_end":1894,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7097},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336787,"byte_end":10336793,"line_start":1898,"line_end":1898,"column_start":5,"column_end":11},"name":"IsNull","qualname":"::ir::instructions::Opcode::IsNull","value":"Opcode::IsNull","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = is_null x`. (Unary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = is_null x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336722,"byte_end":10336750,"line_start":1896,"line_end":1896,"column_start":5,"column_end":33}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336755,"byte_end":10336782,"line_start":1897,"line_end":1897,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7099},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336867,"byte_end":10336876,"line_start":1901,"line_end":1901,"column_start":5,"column_end":14},"name":"IsInvalid","qualname":"::ir::instructions::Opcode::IsInvalid","value":"Opcode::IsInvalid","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = is_invalid x`. (Unary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = is_invalid x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336799,"byte_end":10336830,"line_start":1899,"line_end":1899,"column_start":5,"column_end":36}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336835,"byte_end":10336862,"line_start":1900,"line_end":1900,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7101},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336922,"byte_end":10336928,"line_start":1903,"line_end":1903,"column_start":5,"column_end":11},"name":"Trueif","qualname":"::ir::instructions::Opcode::Trueif","value":"Opcode::Trueif","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = trueif Cond, f`. (IntCond)\n","sig":null,"attributes":[{"value":"/ `a = trueif Cond, f`. (IntCond)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336882,"byte_end":10336917,"line_start":1902,"line_end":1902,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7103},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336976,"byte_end":10336982,"line_start":1905,"line_end":1905,"column_start":5,"column_end":11},"name":"Trueff","qualname":"::ir::instructions::Opcode::Trueff","value":"Opcode::Trueff","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = trueff Cond, f`. (FloatCond)\n","sig":null,"attributes":[{"value":"/ `a = trueff Cond, f`. (FloatCond)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336934,"byte_end":10336971,"line_start":1904,"line_end":1904,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7105},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337021,"byte_end":10337028,"line_start":1907,"line_end":1907,"column_start":5,"column_end":12},"name":"Bitcast","qualname":"::ir::instructions::Opcode::Bitcast","value":"Opcode::Bitcast","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = bitcast x`. (Unary)\n","sig":null,"attributes":[{"value":"/ `a = bitcast x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10336988,"byte_end":10337016,"line_start":1906,"line_end":1906,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7107},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337071,"byte_end":10337081,"line_start":1909,"line_end":1909,"column_start":5,"column_end":15},"name":"RawBitcast","qualname":"::ir::instructions::Opcode::RawBitcast","value":"Opcode::RawBitcast","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = raw_bitcast x`. (Unary)\n","sig":null,"attributes":[{"value":"/ `a = raw_bitcast x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337034,"byte_end":10337066,"line_start":1908,"line_end":1908,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7109},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337129,"byte_end":10337143,"line_start":1911,"line_end":1911,"column_start":5,"column_end":19},"name":"ScalarToVector","qualname":"::ir::instructions::Opcode::ScalarToVector","value":"Opcode::ScalarToVector","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = scalar_to_vector s`. (Unary)\n","sig":null,"attributes":[{"value":"/ `a = scalar_to_vector s`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337087,"byte_end":10337124,"line_start":1910,"line_end":1910,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7111},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337182,"byte_end":10337189,"line_start":1913,"line_end":1913,"column_start":5,"column_end":12},"name":"Breduce","qualname":"::ir::instructions::Opcode::Breduce","value":"Opcode::Breduce","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = breduce x`. (Unary)\n","sig":null,"attributes":[{"value":"/ `a = breduce x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337149,"byte_end":10337177,"line_start":1912,"line_end":1912,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7113},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337228,"byte_end":10337235,"line_start":1915,"line_end":1915,"column_start":5,"column_end":12},"name":"Bextend","qualname":"::ir::instructions::Opcode::Bextend","value":"Opcode::Bextend","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = bextend x`. (Unary)\n","sig":null,"attributes":[{"value":"/ `a = bextend x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337195,"byte_end":10337223,"line_start":1914,"line_end":1914,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7115},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337271,"byte_end":10337275,"line_start":1917,"line_end":1917,"column_start":5,"column_end":9},"name":"Bint","qualname":"::ir::instructions::Opcode::Bint","value":"Opcode::Bint","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = bint x`. (Unary)\n","sig":null,"attributes":[{"value":"/ `a = bint x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337241,"byte_end":10337266,"line_start":1916,"line_end":1916,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7117},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337312,"byte_end":10337317,"line_start":1919,"line_end":1919,"column_start":5,"column_end":10},"name":"Bmask","qualname":"::ir::instructions::Opcode::Bmask","value":"Opcode::Bmask","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = bmask x`. (Unary)\n","sig":null,"attributes":[{"value":"/ `a = bmask x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337281,"byte_end":10337307,"line_start":1918,"line_end":1918,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7119},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337356,"byte_end":10337363,"line_start":1921,"line_end":1921,"column_start":5,"column_end":12},"name":"Ireduce","qualname":"::ir::instructions::Opcode::Ireduce","value":"Opcode::Ireduce","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = ireduce x`. (Unary)\n","sig":null,"attributes":[{"value":"/ `a = ireduce x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337323,"byte_end":10337351,"line_start":1920,"line_end":1920,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7121},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337402,"byte_end":10337409,"line_start":1923,"line_end":1923,"column_start":5,"column_end":12},"name":"Uextend","qualname":"::ir::instructions::Opcode::Uextend","value":"Opcode::Uextend","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = uextend x`. (Unary)\n","sig":null,"attributes":[{"value":"/ `a = uextend x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337369,"byte_end":10337397,"line_start":1922,"line_end":1922,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7123},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337448,"byte_end":10337455,"line_start":1925,"line_end":1925,"column_start":5,"column_end":12},"name":"Sextend","qualname":"::ir::instructions::Opcode::Sextend","value":"Opcode::Sextend","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = sextend x`. (Unary)\n","sig":null,"attributes":[{"value":"/ `a = sextend x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337415,"byte_end":10337443,"line_start":1924,"line_end":1924,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7125},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337495,"byte_end":10337503,"line_start":1927,"line_end":1927,"column_start":5,"column_end":13},"name":"Fpromote","qualname":"::ir::instructions::Opcode::Fpromote","value":"Opcode::Fpromote","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = fpromote x`. (Unary)\n","sig":null,"attributes":[{"value":"/ `a = fpromote x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337461,"byte_end":10337490,"line_start":1926,"line_end":1926,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7127},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337542,"byte_end":10337549,"line_start":1929,"line_end":1929,"column_start":5,"column_end":12},"name":"Fdemote","qualname":"::ir::instructions::Opcode::Fdemote","value":"Opcode::Fdemote","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = fdemote x`. (Unary)\n","sig":null,"attributes":[{"value":"/ `a = fdemote x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337509,"byte_end":10337537,"line_start":1928,"line_end":1928,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7129},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337593,"byte_end":10337603,"line_start":1931,"line_end":1931,"column_start":5,"column_end":15},"name":"FcvtToUint","qualname":"::ir::instructions::Opcode::FcvtToUint","value":"Opcode::FcvtToUint","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = fcvt_to_uint x`. (Unary)\n","sig":null,"attributes":[{"value":"/ `a = fcvt_to_uint x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337555,"byte_end":10337588,"line_start":1930,"line_end":1930,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7131},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337651,"byte_end":10337664,"line_start":1933,"line_end":1933,"column_start":5,"column_end":18},"name":"FcvtToUintSat","qualname":"::ir::instructions::Opcode::FcvtToUintSat","value":"Opcode::FcvtToUintSat","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = fcvt_to_uint_sat x`. (Unary)\n","sig":null,"attributes":[{"value":"/ `a = fcvt_to_uint_sat x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337609,"byte_end":10337646,"line_start":1932,"line_end":1932,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7133},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337708,"byte_end":10337718,"line_start":1935,"line_end":1935,"column_start":5,"column_end":15},"name":"FcvtToSint","qualname":"::ir::instructions::Opcode::FcvtToSint","value":"Opcode::FcvtToSint","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = fcvt_to_sint x`. (Unary)\n","sig":null,"attributes":[{"value":"/ `a = fcvt_to_sint x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337670,"byte_end":10337703,"line_start":1934,"line_end":1934,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7135},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337766,"byte_end":10337779,"line_start":1937,"line_end":1937,"column_start":5,"column_end":18},"name":"FcvtToSintSat","qualname":"::ir::instructions::Opcode::FcvtToSintSat","value":"Opcode::FcvtToSintSat","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = fcvt_to_sint_sat x`. (Unary)\n","sig":null,"attributes":[{"value":"/ `a = fcvt_to_sint_sat x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337724,"byte_end":10337761,"line_start":1936,"line_end":1936,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7137},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337825,"byte_end":10337837,"line_start":1939,"line_end":1939,"column_start":5,"column_end":17},"name":"FcvtFromUint","qualname":"::ir::instructions::Opcode::FcvtFromUint","value":"Opcode::FcvtFromUint","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = fcvt_from_uint x`. (Unary)\n","sig":null,"attributes":[{"value":"/ `a = fcvt_from_uint x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337785,"byte_end":10337820,"line_start":1938,"line_end":1938,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7139},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337883,"byte_end":10337895,"line_start":1941,"line_end":1941,"column_start":5,"column_end":17},"name":"FcvtFromSint","qualname":"::ir::instructions::Opcode::FcvtFromSint","value":"Opcode::FcvtFromSint","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = fcvt_from_sint x`. (Unary)\n","sig":null,"attributes":[{"value":"/ `a = fcvt_from_sint x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337843,"byte_end":10337878,"line_start":1940,"line_end":1940,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7141},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337970,"byte_end":10337976,"line_start":1944,"line_end":1944,"column_start":5,"column_end":11},"name":"Isplit","qualname":"::ir::instructions::Opcode::Isplit","value":"Opcode::Isplit","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `lo, hi = isplit x`. (Unary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `lo, hi = isplit x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337901,"byte_end":10337933,"line_start":1942,"line_end":1942,"column_start":5,"column_end":37}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337938,"byte_end":10337965,"line_start":1943,"line_end":1943,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7143},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338054,"byte_end":10338061,"line_start":1947,"line_end":1947,"column_start":5,"column_end":12},"name":"Iconcat","qualname":"::ir::instructions::Opcode::Iconcat","value":"Opcode::Iconcat","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = iconcat lo, hi`. (Binary)\n Type inferred from `lo`.\n","sig":null,"attributes":[{"value":"/ `a = iconcat lo, hi`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10337982,"byte_end":10338016,"line_start":1945,"line_end":1945,"column_start":5,"column_end":39}},{"value":"/ Type inferred from `lo`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338021,"byte_end":10338049,"line_start":1946,"line_end":1946,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7145},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338154,"byte_end":10338165,"line_start":1950,"line_end":1950,"column_start":5,"column_end":16},"name":"X86Udivmodx","qualname":"::ir::instructions::Opcode::X86Udivmodx","value":"Opcode::X86Udivmodx","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `q, r = x86_udivmodx nlo, nhi, d`. (Ternary)\n Type inferred from `nhi`.\n","sig":null,"attributes":[{"value":"/ `q, r = x86_udivmodx nlo, nhi, d`. (Ternary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338067,"byte_end":10338115,"line_start":1948,"line_end":1948,"column_start":5,"column_end":53}},{"value":"/ Type inferred from `nhi`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338120,"byte_end":10338149,"line_start":1949,"line_end":1949,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7147},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338258,"byte_end":10338269,"line_start":1953,"line_end":1953,"column_start":5,"column_end":16},"name":"X86Sdivmodx","qualname":"::ir::instructions::Opcode::X86Sdivmodx","value":"Opcode::X86Sdivmodx","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `q, r = x86_sdivmodx nlo, nhi, d`. (Ternary)\n Type inferred from `nhi`.\n","sig":null,"attributes":[{"value":"/ `q, r = x86_sdivmodx nlo, nhi, d`. (Ternary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338171,"byte_end":10338219,"line_start":1951,"line_end":1951,"column_start":5,"column_end":53}},{"value":"/ Type inferred from `nhi`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338224,"byte_end":10338253,"line_start":1952,"line_end":1952,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7149},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338366,"byte_end":10338374,"line_start":1956,"line_end":1956,"column_start":5,"column_end":13},"name":"X86Umulx","qualname":"::ir::instructions::Opcode::X86Umulx","value":"Opcode::X86Umulx","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `resLo, resHi = x86_umulx argL, argR`. (Binary)\n Type inferred from `argL`.\n","sig":null,"attributes":[{"value":"/ `resLo, resHi = x86_umulx argL, argR`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338275,"byte_end":10338326,"line_start":1954,"line_end":1954,"column_start":5,"column_end":56}},{"value":"/ Type inferred from `argL`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338331,"byte_end":10338361,"line_start":1955,"line_end":1955,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7151},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338471,"byte_end":10338479,"line_start":1959,"line_end":1959,"column_start":5,"column_end":13},"name":"X86Smulx","qualname":"::ir::instructions::Opcode::X86Smulx","value":"Opcode::X86Smulx","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `resLo, resHi = x86_smulx argL, argR`. (Binary)\n Type inferred from `argL`.\n","sig":null,"attributes":[{"value":"/ `resLo, resHi = x86_smulx argL, argR`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338380,"byte_end":10338431,"line_start":1957,"line_end":1957,"column_start":5,"column_end":56}},{"value":"/ Type inferred from `argL`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338436,"byte_end":10338466,"line_start":1958,"line_end":1958,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7153},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338522,"byte_end":10338532,"line_start":1961,"line_end":1961,"column_start":5,"column_end":15},"name":"X86Cvtt2si","qualname":"::ir::instructions::Opcode::X86Cvtt2si","value":"Opcode::X86Cvtt2si","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = x86_cvtt2si x`. (Unary)\n","sig":null,"attributes":[{"value":"/ `a = x86_cvtt2si x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338485,"byte_end":10338517,"line_start":1960,"line_end":1960,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7155},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338608,"byte_end":10338615,"line_start":1964,"line_end":1964,"column_start":5,"column_end":12},"name":"X86Fmin","qualname":"::ir::instructions::Opcode::X86Fmin","value":"Opcode::X86Fmin","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = x86_fmin x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = x86_fmin x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338538,"byte_end":10338571,"line_start":1962,"line_end":1962,"column_start":5,"column_end":38}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338576,"byte_end":10338603,"line_start":1963,"line_end":1963,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7157},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338691,"byte_end":10338698,"line_start":1967,"line_end":1967,"column_start":5,"column_end":12},"name":"X86Fmax","qualname":"::ir::instructions::Opcode::X86Fmax","value":"Opcode::X86Fmax","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = x86_fmax x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = x86_fmax x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338621,"byte_end":10338654,"line_start":1965,"line_end":1965,"column_start":5,"column_end":38}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338659,"byte_end":10338686,"line_start":1966,"line_end":1966,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7159},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338766,"byte_end":10338773,"line_start":1970,"line_end":1970,"column_start":5,"column_end":12},"name":"X86Push","qualname":"::ir::instructions::Opcode::X86Push","value":"Opcode::X86Push","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `x86_push x`. (Unary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `x86_push x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338704,"byte_end":10338729,"line_start":1968,"line_end":1968,"column_start":5,"column_end":30}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338734,"byte_end":10338761,"line_start":1969,"line_end":1969,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7161},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338812,"byte_end":10338818,"line_start":1972,"line_end":1972,"column_start":5,"column_end":11},"name":"X86Pop","qualname":"::ir::instructions::Opcode::X86Pop","value":"Opcode::X86Pop","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `x = x86_pop`. (NullAry)\n","sig":null,"attributes":[{"value":"/ `x = x86_pop`. (NullAry)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338779,"byte_end":10338807,"line_start":1971,"line_end":1971,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7163},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338897,"byte_end":10338903,"line_start":1975,"line_end":1975,"column_start":5,"column_end":11},"name":"X86Bsr","qualname":"::ir::instructions::Opcode::X86Bsr","value":"Opcode::X86Bsr","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `y, rflags = x86_bsr x`. (Unary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `y, rflags = x86_bsr x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338824,"byte_end":10338860,"line_start":1973,"line_end":1973,"column_start":5,"column_end":41}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338865,"byte_end":10338892,"line_start":1974,"line_end":1974,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7165},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338982,"byte_end":10338988,"line_start":1978,"line_end":1978,"column_start":5,"column_end":11},"name":"X86Bsf","qualname":"::ir::instructions::Opcode::X86Bsf","value":"Opcode::X86Bsf","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `y, rflags = x86_bsf x`. (Unary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `y, rflags = x86_bsf x`. (Unary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338909,"byte_end":10338945,"line_start":1976,"line_end":1976,"column_start":5,"column_end":41}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338950,"byte_end":10338977,"line_start":1977,"line_end":1977,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7167},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10339071,"byte_end":10339080,"line_start":1981,"line_end":1981,"column_start":5,"column_end":14},"name":"X86Pshufd","qualname":"::ir::instructions::Opcode::X86Pshufd","value":"Opcode::X86Pshufd","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = x86_pshufd a, i`. (ExtractLane)\n Type inferred from `a`.\n","sig":null,"attributes":[{"value":"/ `a = x86_pshufd a, i`. (ExtractLane)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10338994,"byte_end":10339034,"line_start":1979,"line_end":1979,"column_start":5,"column_end":45}},{"value":"/ Type inferred from `a`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10339039,"byte_end":10339066,"line_start":1980,"line_end":1980,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7169},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10339158,"byte_end":10339167,"line_start":1984,"line_end":1984,"column_start":5,"column_end":14},"name":"X86Pshufb","qualname":"::ir::instructions::Opcode::X86Pshufb","value":"Opcode::X86Pshufb","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = x86_pshufb a, b`. (Binary)\n Type inferred from `a`.\n","sig":null,"attributes":[{"value":"/ `a = x86_pshufb a, b`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10339086,"byte_end":10339121,"line_start":1982,"line_end":1982,"column_start":5,"column_end":40}},{"value":"/ Type inferred from `a`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10339126,"byte_end":10339153,"line_start":1983,"line_end":1983,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7171},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10339251,"byte_end":10339259,"line_start":1987,"line_end":1987,"column_start":5,"column_end":13},"name":"X86Pextr","qualname":"::ir::instructions::Opcode::X86Pextr","value":"Opcode::X86Pextr","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = x86_pextr x, Idx`. (ExtractLane)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = x86_pextr x, Idx`. (ExtractLane)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10339173,"byte_end":10339214,"line_start":1985,"line_end":1985,"column_start":5,"column_end":46}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10339219,"byte_end":10339246,"line_start":1986,"line_end":1986,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7173},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10339345,"byte_end":10339353,"line_start":1990,"line_end":1990,"column_start":5,"column_end":13},"name":"X86Pinsr","qualname":"::ir::instructions::Opcode::X86Pinsr","value":"Opcode::X86Pinsr","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = x86_pinsr x, Idx, y`. (InsertLane)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = x86_pinsr x, Idx, y`. (InsertLane)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10339265,"byte_end":10339308,"line_start":1988,"line_end":1988,"column_start":5,"column_end":48}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10339313,"byte_end":10339340,"line_start":1989,"line_end":1989,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7175},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10339442,"byte_end":10339453,"line_start":1993,"line_end":1993,"column_start":5,"column_end":16},"name":"X86Insertps","qualname":"::ir::instructions::Opcode::X86Insertps","value":"Opcode::X86Insertps","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = x86_insertps x, Idx, y`. (InsertLane)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = x86_insertps x, Idx, y`. (InsertLane)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10339359,"byte_end":10339405,"line_start":1991,"line_end":1991,"column_start":5,"column_end":51}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10339410,"byte_end":10339437,"line_start":1992,"line_end":1992,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7177},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10339530,"byte_end":10339538,"line_start":1996,"line_end":1996,"column_start":5,"column_end":13},"name":"X86Movsd","qualname":"::ir::instructions::Opcode::X86Movsd","value":"Opcode::X86Movsd","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = x86_movsd x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = x86_movsd x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10339459,"byte_end":10339493,"line_start":1994,"line_end":1994,"column_start":5,"column_end":39}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10339498,"byte_end":10339525,"line_start":1995,"line_end":1995,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7179},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10339617,"byte_end":10339627,"line_start":1999,"line_end":1999,"column_start":5,"column_end":15},"name":"X86Movlhps","qualname":"::ir::instructions::Opcode::X86Movlhps","value":"Opcode::X86Movlhps","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = x86_movlhps x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = x86_movlhps x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10339544,"byte_end":10339580,"line_start":1997,"line_end":1997,"column_start":5,"column_end":41}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10339585,"byte_end":10339612,"line_start":1998,"line_end":1998,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7181},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10339703,"byte_end":10339710,"line_start":2002,"line_end":2002,"column_start":5,"column_end":12},"name":"X86Psll","qualname":"::ir::instructions::Opcode::X86Psll","value":"Opcode::X86Psll","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = x86_psll x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = x86_psll x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10339633,"byte_end":10339666,"line_start":2000,"line_end":2000,"column_start":5,"column_end":38}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10339671,"byte_end":10339698,"line_start":2001,"line_end":2001,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7183},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10339786,"byte_end":10339793,"line_start":2005,"line_end":2005,"column_start":5,"column_end":12},"name":"X86Psrl","qualname":"::ir::instructions::Opcode::X86Psrl","value":"Opcode::X86Psrl","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = x86_psrl x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = x86_psrl x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10339716,"byte_end":10339749,"line_start":2003,"line_end":2003,"column_start":5,"column_end":38}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10339754,"byte_end":10339781,"line_start":2004,"line_end":2004,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7185},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10339869,"byte_end":10339876,"line_start":2008,"line_end":2008,"column_start":5,"column_end":12},"name":"X86Psra","qualname":"::ir::instructions::Opcode::X86Psra","value":"Opcode::X86Psra","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = x86_psra x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = x86_psra x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10339799,"byte_end":10339832,"line_start":2006,"line_end":2006,"column_start":5,"column_end":38}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10339837,"byte_end":10339864,"line_start":2007,"line_end":2007,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7187},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10339953,"byte_end":10339961,"line_start":2011,"line_end":2011,"column_start":5,"column_end":13},"name":"X86Ptest","qualname":"::ir::instructions::Opcode::X86Ptest","value":"Opcode::X86Ptest","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `f = x86_ptest x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `f = x86_ptest x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10339882,"byte_end":10339916,"line_start":2009,"line_end":2009,"column_start":5,"column_end":39}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10339921,"byte_end":10339948,"line_start":2010,"line_end":2010,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7189},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10340038,"byte_end":10340046,"line_start":2014,"line_end":2014,"column_start":5,"column_end":13},"name":"X86Pmaxs","qualname":"::ir::instructions::Opcode::X86Pmaxs","value":"Opcode::X86Pmaxs","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = x86_pmaxs x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = x86_pmaxs x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10339967,"byte_end":10340001,"line_start":2012,"line_end":2012,"column_start":5,"column_end":39}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10340006,"byte_end":10340033,"line_start":2013,"line_end":2013,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7191},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10340123,"byte_end":10340131,"line_start":2017,"line_end":2017,"column_start":5,"column_end":13},"name":"X86Pmaxu","qualname":"::ir::instructions::Opcode::X86Pmaxu","value":"Opcode::X86Pmaxu","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = x86_pmaxu x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = x86_pmaxu x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10340052,"byte_end":10340086,"line_start":2015,"line_end":2015,"column_start":5,"column_end":39}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10340091,"byte_end":10340118,"line_start":2016,"line_end":2016,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7193},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10340208,"byte_end":10340216,"line_start":2020,"line_end":2020,"column_start":5,"column_end":13},"name":"X86Pmins","qualname":"::ir::instructions::Opcode::X86Pmins","value":"Opcode::X86Pmins","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = x86_pmins x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = x86_pmins x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10340137,"byte_end":10340171,"line_start":2018,"line_end":2018,"column_start":5,"column_end":39}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10340176,"byte_end":10340203,"line_start":2019,"line_end":2019,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7195},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10340293,"byte_end":10340301,"line_start":2023,"line_end":2023,"column_start":5,"column_end":13},"name":"X86Pminu","qualname":"::ir::instructions::Opcode::X86Pminu","value":"Opcode::X86Pminu","parent":{"krate":0,"index":6751},"children":[],"decl_id":null,"docs":" `a = x86_pminu x, y`. (Binary)\n Type inferred from `x`.\n","sig":null,"attributes":[{"value":"/ `a = x86_pminu x, y`. (Binary)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10340222,"byte_end":10340256,"line_start":2021,"line_end":2021,"column_start":5,"column_end":39}},{"value":"/ Type inferred from `x`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10340261,"byte_end":10340288,"line_start":2022,"line_end":2022,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":6751},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10323175,"byte_end":10323181,"line_start":1427,"line_end":1427,"column_start":10,"column_end":16},"name":"Opcode","qualname":"::ir::instructions::Opcode","value":"Opcode::{Jump, Fallthrough, Brz, Brnz, BrIcmp, Brif, Brff, BrTable, JumpTableEntry, JumpTableBase, IndirectJumpTableBr, Debugtrap, Trap, Trapz, ResumableTrap, Trapnz, Trapif, Trapff, Return, FallthroughReturn, Call, CallIndirect, FuncAddr, Imin, Umin, Imax, Umax, AvgRound, Load, LoadComplex, Store, StoreComplex, Uload8, Uload8Complex, Sload8, Sload8Complex, Istore8, Istore8Complex, Uload16, Uload16Complex, Sload16, Sload16Complex, Istore16, Istore16Complex, Uload32, Uload32Complex, Sload32, Sload32Complex, Istore32, Istore32Complex, StackLoad, StackStore, StackAddr, GlobalValue, SymbolValue, HeapAddr, GetPinnedReg, SetPinnedReg, TableAddr, Iconst, F32const, F64const, Bconst, Vconst, Shuffle, Null, Nop, Select, Selectif, Bitselect, Copy, Spill, Fill, FillNop, Regmove, CopySpecial, CopyToSsa, CopyNop, AdjustSpDown, AdjustSpUpImm, AdjustSpDownImm, IfcmpSp, Regspill, Regfill, Safepoint, Vsplit, Vconcat, Vselect, VanyTrue, VallTrue, Splat, Insertlane, Extractlane, Icmp, IcmpImm, Ifcmp, IfcmpImm, Iadd, UaddSat, SaddSat, Isub, UsubSat, SsubSat, Ineg, Imul, Umulhi, Smulhi, Udiv, Sdiv, Urem, Srem, IaddImm, ImulImm, UdivImm, SdivImm, UremImm, SremImm, IrsubImm, IaddCin, IaddIfcin, IaddCout, IaddIfcout, IaddCarry, IaddIfcarry, IsubBin, IsubIfbin, IsubBout, IsubIfbout, IsubBorrow, IsubIfborrow, Band, Bor, Bxor, Bnot, BandNot, BorNot, BxorNot, BandImm, BorImm, BxorImm, Rotl, Rotr, RotlImm, RotrImm, Ishl, Ushr, Sshr, IshlImm, UshrImm, SshrImm, Bitrev, Clz, Cls, Ctz, Popcnt, Fcmp, Ffcmp, Fadd, Fsub, Fmul, Fdiv, Sqrt, Fma, Fneg, Fabs, Fcopysign, Fmin, Fmax, Ceil, Floor, Trunc, Nearest, IsNull, IsInvalid, Trueif, Trueff, Bitcast, RawBitcast, ScalarToVector, Breduce, Bextend, Bint, Bmask, Ireduce, Uextend, Sextend, Fpromote, Fdemote, FcvtToUint, FcvtToUintSat, FcvtToSint, FcvtToSintSat, FcvtFromUint, FcvtFromSint, Isplit, Iconcat, X86Udivmodx, X86Sdivmodx, X86Umulx, X86Smulx, X86Cvtt2si, X86Fmin, X86Fmax, X86Push, X86Pop, X86Bsr, X86Bsf, X86Pshufd, X86Pshufb, X86Pextr, X86Pinsr, X86Insertps, X86Movsd, X86Movlhps, X86Psll, X86Psrl, X86Psra, X86Ptest, X86Pmaxs, X86Pmaxu, X86Pmins, X86Pminu}","parent":null,"children":[{"krate":0,"index":6752},{"krate":0,"index":6755},{"krate":0,"index":6757},{"krate":0,"index":6759},{"krate":0,"index":6761},{"krate":0,"index":6763},{"krate":0,"index":6765},{"krate":0,"index":6767},{"krate":0,"index":6769},{"krate":0,"index":6771},{"krate":0,"index":6773},{"krate":0,"index":6775},{"krate":0,"index":6777},{"krate":0,"index":6779},{"krate":0,"index":6781},{"krate":0,"index":6783},{"krate":0,"index":6785},{"krate":0,"index":6787},{"krate":0,"index":6789},{"krate":0,"index":6791},{"krate":0,"index":6793},{"krate":0,"index":6795},{"krate":0,"index":6797},{"krate":0,"index":6799},{"krate":0,"index":6801},{"krate":0,"index":6803},{"krate":0,"index":6805},{"krate":0,"index":6807},{"krate":0,"index":6809},{"krate":0,"index":6811},{"krate":0,"index":6813},{"krate":0,"index":6815},{"krate":0,"index":6817},{"krate":0,"index":6819},{"krate":0,"index":6821},{"krate":0,"index":6823},{"krate":0,"index":6825},{"krate":0,"index":6827},{"krate":0,"index":6829},{"krate":0,"index":6831},{"krate":0,"index":6833},{"krate":0,"index":6835},{"krate":0,"index":6837},{"krate":0,"index":6839},{"krate":0,"index":6841},{"krate":0,"index":6843},{"krate":0,"index":6845},{"krate":0,"index":6847},{"krate":0,"index":6849},{"krate":0,"index":6851},{"krate":0,"index":6853},{"krate":0,"index":6855},{"krate":0,"index":6857},{"krate":0,"index":6859},{"krate":0,"index":6861},{"krate":0,"index":6863},{"krate":0,"index":6865},{"krate":0,"index":6867},{"krate":0,"index":6869},{"krate":0,"index":6871},{"krate":0,"index":6873},{"krate":0,"index":6875},{"krate":0,"index":6877},{"krate":0,"index":6879},{"krate":0,"index":6881},{"krate":0,"index":6883},{"krate":0,"index":6885},{"krate":0,"index":6887},{"krate":0,"index":6889},{"krate":0,"index":6891},{"krate":0,"index":6893},{"krate":0,"index":6895},{"krate":0,"index":6897},{"krate":0,"index":6899},{"krate":0,"index":6901},{"krate":0,"index":6903},{"krate":0,"index":6905},{"krate":0,"index":6907},{"krate":0,"index":6909},{"krate":0,"index":6911},{"krate":0,"index":6913},{"krate":0,"index":6915},{"krate":0,"index":6917},{"krate":0,"index":6919},{"krate":0,"index":6921},{"krate":0,"index":6923},{"krate":0,"index":6925},{"krate":0,"index":6927},{"krate":0,"index":6929},{"krate":0,"index":6931},{"krate":0,"index":6933},{"krate":0,"index":6935},{"krate":0,"index":6937},{"krate":0,"index":6939},{"krate":0,"index":6941},{"krate":0,"index":6943},{"krate":0,"index":6945},{"krate":0,"index":6947},{"krate":0,"index":6949},{"krate":0,"index":6951},{"krate":0,"index":6953},{"krate":0,"index":6955},{"krate":0,"index":6957},{"krate":0,"index":6959},{"krate":0,"index":6961},{"krate":0,"index":6963},{"krate":0,"index":6965},{"krate":0,"index":6967},{"krate":0,"index":6969},{"krate":0,"index":6971},{"krate":0,"index":6973},{"krate":0,"index":6975},{"krate":0,"index":6977},{"krate":0,"index":6979},{"krate":0,"index":6981},{"krate":0,"index":6983},{"krate":0,"index":6985},{"krate":0,"index":6987},{"krate":0,"index":6989},{"krate":0,"index":6991},{"krate":0,"index":6993},{"krate":0,"index":6995},{"krate":0,"index":6997},{"krate":0,"index":6999},{"krate":0,"index":7001},{"krate":0,"index":7003},{"krate":0,"index":7005},{"krate":0,"index":7007},{"krate":0,"index":7009},{"krate":0,"index":7011},{"krate":0,"index":7013},{"krate":0,"index":7015},{"krate":0,"index":7017},{"krate":0,"index":7019},{"krate":0,"index":7021},{"krate":0,"index":7023},{"krate":0,"index":7025},{"krate":0,"index":7027},{"krate":0,"index":7029},{"krate":0,"index":7031},{"krate":0,"index":7033},{"krate":0,"index":7035},{"krate":0,"index":7037},{"krate":0,"index":7039},{"krate":0,"index":7041},{"krate":0,"index":7043},{"krate":0,"index":7045},{"krate":0,"index":7047},{"krate":0,"index":7049},{"krate":0,"index":7051},{"krate":0,"index":7053},{"krate":0,"index":7055},{"krate":0,"index":7057},{"krate":0,"index":7059},{"krate":0,"index":7061},{"krate":0,"index":7063},{"krate":0,"index":7065},{"krate":0,"index":7067},{"krate":0,"index":7069},{"krate":0,"index":7071},{"krate":0,"index":7073},{"krate":0,"index":7075},{"krate":0,"index":7077},{"krate":0,"index":7079},{"krate":0,"index":7081},{"krate":0,"index":7083},{"krate":0,"index":7085},{"krate":0,"index":7087},{"krate":0,"index":7089},{"krate":0,"index":7091},{"krate":0,"index":7093},{"krate":0,"index":7095},{"krate":0,"index":7097},{"krate":0,"index":7099},{"krate":0,"index":7101},{"krate":0,"index":7103},{"krate":0,"index":7105},{"krate":0,"index":7107},{"krate":0,"index":7109},{"krate":0,"index":7111},{"krate":0,"index":7113},{"krate":0,"index":7115},{"krate":0,"index":7117},{"krate":0,"index":7119},{"krate":0,"index":7121},{"krate":0,"index":7123},{"krate":0,"index":7125},{"krate":0,"index":7127},{"krate":0,"index":7129},{"krate":0,"index":7131},{"krate":0,"index":7133},{"krate":0,"index":7135},{"krate":0,"index":7137},{"krate":0,"index":7139},{"krate":0,"index":7141},{"krate":0,"index":7143},{"krate":0,"index":7145},{"krate":0,"index":7147},{"krate":0,"index":7149},{"krate":0,"index":7151},{"krate":0,"index":7153},{"krate":0,"index":7155},{"krate":0,"index":7157},{"krate":0,"index":7159},{"krate":0,"index":7161},{"krate":0,"index":7163},{"krate":0,"index":7165},{"krate":0,"index":7167},{"krate":0,"index":7169},{"krate":0,"index":7171},{"krate":0,"index":7173},{"krate":0,"index":7175},{"krate":0,"index":7177},{"krate":0,"index":7179},{"krate":0,"index":7181},{"krate":0,"index":7183},{"krate":0,"index":7185},{"krate":0,"index":7187},{"krate":0,"index":7189},{"krate":0,"index":7191},{"krate":0,"index":7193},{"krate":0,"index":7195}],"decl_id":null,"docs":" An instruction opcode.","sig":null,"attributes":[{"value":"/ An instruction opcode.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10323026,"byte_end":10323052,"line_start":1423,"line_end":1423,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10323053,"byte_end":10323056,"line_start":1424,"line_end":1424,"column_start":1,"column_end":4}},{"value":"/ All instructions from all supported ISAs are present.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10323057,"byte_end":10323114,"line_start":1425,"line_end":1425,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6401},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10340386,"byte_end":10340399,"line_start":2028,"line_end":2028,"column_start":12,"column_end":25},"name":"is_terminator","qualname":"<Opcode>::is_terminator","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True for instructions that terminate the block\n","sig":null,"attributes":[{"value":"/ True for instructions that terminate the block","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10340324,"byte_end":10340374,"line_start":2027,"line_end":2027,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6402},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10340823,"byte_end":10340832,"line_start":2046,"line_end":2046,"column_start":12,"column_end":21},"name":"is_branch","qualname":"<Opcode>::is_branch","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True for all branch or jump instructions.\n","sig":null,"attributes":[{"value":"/ True for all branch or jump instructions.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10340766,"byte_end":10340811,"line_start":2045,"line_end":2045,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":6403},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10341301,"byte_end":10341319,"line_start":2066,"line_end":2066,"column_start":12,"column_end":30},"name":"is_indirect_branch","qualname":"<Opcode>::is_indirect_branch","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True for all indirect branch or jump instructions.\n","sig":null,"attributes":[{"value":"/ True for all indirect branch or jump instructions.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10341235,"byte_end":10341289,"line_start":2065,"line_end":2065,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6404},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10341554,"byte_end":10341561,"line_start":2078,"line_end":2078,"column_start":12,"column_end":19},"name":"is_call","qualname":"<Opcode>::is_call","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a call instruction?\n","sig":null,"attributes":[{"value":"/ Is this a call instruction?","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10341511,"byte_end":10341542,"line_start":2077,"line_end":2077,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":6405},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10341816,"byte_end":10341825,"line_start":2091,"line_end":2091,"column_start":12,"column_end":21},"name":"is_return","qualname":"<Opcode>::is_return","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a return instruction?\n","sig":null,"attributes":[{"value":"/ Is this a return instruction?","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10341771,"byte_end":10341804,"line_start":2090,"line_end":2090,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6406},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10342086,"byte_end":10342094,"line_start":2104,"line_end":2104,"column_start":12,"column_end":20},"name":"is_ghost","qualname":"<Opcode>::is_ghost","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a ghost instruction?\n","sig":null,"attributes":[{"value":"/ Is this a ghost instruction?","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10342042,"byte_end":10342074,"line_start":2103,"line_end":2103,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":6407},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10342410,"byte_end":10342418,"line_start":2119,"line_end":2119,"column_start":12,"column_end":20},"name":"can_load","qualname":"<Opcode>::can_load","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Can this instruction read from memory?\n","sig":null,"attributes":[{"value":"/ Can this instruction read from memory?","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10342356,"byte_end":10342398,"line_start":2118,"line_end":2118,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":6408},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10343229,"byte_end":10343238,"line_start":2150,"line_end":2150,"column_start":12,"column_end":21},"name":"can_store","qualname":"<Opcode>::can_store","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Can this instruction write to memory?\n","sig":null,"attributes":[{"value":"/ Can this instruction write to memory?","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10343176,"byte_end":10343217,"line_start":2149,"line_end":2149,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":6409},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10343807,"byte_end":10343815,"line_start":2173,"line_end":2173,"column_start":12,"column_end":20},"name":"can_trap","qualname":"<Opcode>::can_trap","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Can this instruction cause a trap?\n","sig":null,"attributes":[{"value":"/ Can this instruction cause a trap?","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10343757,"byte_end":10343795,"line_start":2172,"line_end":2172,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":6410},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10344441,"byte_end":10344459,"line_start":2198,"line_end":2198,"column_start":12,"column_end":30},"name":"other_side_effects","qualname":"<Opcode>::other_side_effects","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does this instruction have other side effects besides can_* flags?\n","sig":null,"attributes":[{"value":"/ Does this instruction have other side effects besides can_* flags?","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10344359,"byte_end":10344429,"line_start":2197,"line_end":2197,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6411},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10345099,"byte_end":10345115,"line_start":2223,"line_end":2223,"column_start":12,"column_end":28},"name":"writes_cpu_flags","qualname":"<Opcode>::writes_cpu_flags","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does this instruction write to CPU flags?\n","sig":null,"attributes":[{"value":"/ Does this instruction write to CPU flags?","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10345042,"byte_end":10345087,"line_start":2222,"line_end":2222,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":298778,"byte_end":298784,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"name":"format","qualname":"<Opcode>::format","value":"fn (self) -> InstructionFormat","parent":null,"children":[],"decl_id":null,"docs":" Get the instruction format for this opcode.\n","sig":null,"attributes":[{"value":"/ Get the instruction format for this opcode.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":298719,"byte_end":298766,"line_start":54,"line_end":54,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":298978,"byte_end":298989,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"constraints","qualname":"<Opcode>::constraints","value":"fn (self) -> OpcodeConstraints","parent":null,"children":[],"decl_id":null,"docs":" Get the constraint descriptor for this opcode.\n Panic if this is called on `NotAnOpcode`.\n","sig":null,"attributes":[{"value":"/ Get the constraint descriptor for this opcode.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":298866,"byte_end":298916,"line_start":59,"line_end":59,"column_start":5,"column_end":55}},{"value":"/ Panic if this is called on `NotAnOpcode`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":298921,"byte_end":298966,"line_start":60,"line_end":60,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":7211},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":300357,"byte_end":300369,"line_start":99,"line_end":99,"column_start":12,"column_end":24},"name":"VariableArgs","qualname":"::ir::instructions::VariableArgs","value":"","parent":null,"children":[],"decl_id":null,"docs":" A variable list of `Value` operands used for function call arguments and passing arguments to\n basic blocks.\n","sig":null,"attributes":[{"value":"/ A variable list of `Value` operands used for function call arguments and passing arguments to","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":300206,"byte_end":300303,"line_start":96,"line_end":96,"column_start":1,"column_end":98}},{"value":"/ basic blocks.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":300304,"byte_end":300321,"line_start":97,"line_end":97,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1183},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":300454,"byte_end":300457,"line_start":103,"line_end":103,"column_start":12,"column_end":15},"name":"new","qualname":"<VariableArgs>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an empty argument list.\n","sig":null,"attributes":[{"value":"/ Create an empty argument list.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":300408,"byte_end":300442,"line_start":102,"line_end":102,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1184},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":300549,"byte_end":300553,"line_start":108,"line_end":108,"column_start":12,"column_end":16},"name":"push","qualname":"<VariableArgs>::push","value":"fn (&mut self, v: Value) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add an argument to the end.\n","sig":null,"attributes":[{"value":"/ Add an argument to the end.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":300506,"byte_end":300537,"line_start":107,"line_end":107,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1185},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":300654,"byte_end":300662,"line_start":113,"line_end":113,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<VariableArgs>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the list is empty.\n","sig":null,"attributes":[{"value":"/ Check if the list is empty.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":300611,"byte_end":300642,"line_start":112,"line_end":112,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1186},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":300795,"byte_end":300810,"line_start":118,"line_end":118,"column_start":12,"column_end":27},"name":"into_value_list","qualname":"<VariableArgs>::into_value_list","value":"fn (self, fixed: &[Value], pool: &mut ValueListPool) -> ValueList","parent":null,"children":[],"decl_id":null,"docs":" Convert this to a value list in `pool` with `fixed` prepended.\n","sig":null,"attributes":[{"value":"/ Convert this to a value list in `pool` with `fixed` prepended.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":300717,"byte_end":300783,"line_start":117,"line_end":117,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1197},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":302094,"byte_end":302108,"line_start":169,"line_end":169,"column_start":12,"column_end":26},"name":"analyze_branch","qualname":"<InstructionData>::analyze_branch","value":"fn <'a> (&'a self, pool: &'a ValueListPool) -> BranchInfo<'a>","parent":null,"children":[],"decl_id":null,"docs":" Return information about the destination of a branch or jump instruction.","sig":null,"attributes":[{"value":"/ Return information about the destination of a branch or jump instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":301882,"byte_end":301959,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":301964,"byte_end":301967,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Any instruction that can transfer control to another block reveals its possible destinations","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":301972,"byte_end":302068,"line_start":167,"line_end":167,"column_start":5,"column_end":101}},{"value":"/ here.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":302073,"byte_end":302082,"line_start":168,"line_end":168,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1199},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":303537,"byte_end":303555,"line_start":211,"line_end":211,"column_start":12,"column_end":30},"name":"branch_destination","qualname":"<InstructionData>::branch_destination","value":"fn (&self) -> Option<Block>","parent":null,"children":[],"decl_id":null,"docs":" Get the single destination of this branch instruction, if it is a single destination\n branch or jump.","sig":null,"attributes":[{"value":"/ Get the single destination of this branch instruction, if it is a single destination","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":303339,"byte_end":303427,"line_start":207,"line_end":207,"column_start":5,"column_end":93}},{"value":"/ branch or jump.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":303432,"byte_end":303451,"line_start":208,"line_end":208,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":303456,"byte_end":303459,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Multi-destination branches like `br_table` return `None`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":303464,"byte_end":303525,"line_start":210,"line_end":210,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":304298,"byte_end":304320,"line_start":230,"line_end":230,"column_start":12,"column_end":34},"name":"branch_destination_mut","qualname":"<InstructionData>::branch_destination_mut","value":"fn (&mut self) -> Option<&mut Block>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the single destination of this branch instruction, if it is a\n single destination branch or jump.","sig":null,"attributes":[{"value":"/ Get a mutable reference to the single destination of this branch instruction, if it is a","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":304077,"byte_end":304169,"line_start":226,"line_end":226,"column_start":5,"column_end":97}},{"value":"/ single destination branch or jump.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":304174,"byte_end":304212,"line_start":227,"line_end":227,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":304217,"byte_end":304220,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Multi-destination branches like `br_table` return `None`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":304225,"byte_end":304286,"line_start":229,"line_end":229,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1201},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":305239,"byte_end":305251,"line_start":263,"line_end":263,"column_start":12,"column_end":24},"name":"analyze_call","qualname":"<InstructionData>::analyze_call","value":"fn <'a> (&'a self, pool: &'a ValueListPool) -> CallInfo<'a>","parent":null,"children":[],"decl_id":null,"docs":" Return information about a call instruction.","sig":null,"attributes":[{"value":"/ Return information about a call instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":305083,"byte_end":305131,"line_start":260,"line_end":260,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":305136,"byte_end":305139,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ Any instruction that can call another function reveals its call signature here.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":305144,"byte_end":305227,"line_start":262,"line_end":262,"column_start":5,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1205},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":306037,"byte_end":306047,"line_start":284,"line_end":284,"column_start":5,"column_end":15},"name":"NotABranch","qualname":"::ir::instructions::BranchInfo::NotABranch","value":"BranchInfo::NotABranch","parent":{"krate":0,"index":1203},"children":[],"decl_id":null,"docs":" This is not a branch or jump instruction.\n This instruction will not transfer control to another block in the function, but it may still\n affect control flow by returning or trapping.\n","sig":null,"attributes":[{"value":"/ This is not a branch or jump instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":305831,"byte_end":305876,"line_start":281,"line_end":281,"column_start":5,"column_end":50}},{"value":"/ This instruction will not transfer control to another block in the function, but it may still","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":305881,"byte_end":305978,"line_start":282,"line_end":282,"column_start":5,"column_end":102}},{"value":"/ affect control flow by returning or trapping.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":305983,"byte_end":306032,"line_start":283,"line_end":283,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1207},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":306151,"byte_end":306161,"line_start":287,"line_end":287,"column_start":5,"column_end":15},"name":"SingleDest","qualname":"::ir::instructions::BranchInfo::SingleDest","value":"BranchInfo::SingleDest(Block, &'a [Value])","parent":{"krate":0,"index":1203},"children":[],"decl_id":null,"docs":" This is a branch or jump to a single destination block, possibly taking value arguments.\n","sig":null,"attributes":[{"value":"/ This is a branch or jump to a single destination block, possibly taking value arguments.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":306054,"byte_end":306146,"line_start":286,"line_end":286,"column_start":5,"column_end":97}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1211},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":306292,"byte_end":306297,"line_start":290,"line_end":290,"column_start":5,"column_end":10},"name":"Table","qualname":"::ir::instructions::BranchInfo::Table","value":"BranchInfo::Table(JumpTable, Option<Block>)","parent":{"krate":0,"index":1203},"children":[],"decl_id":null,"docs":" This is a jump table branch which can have many destination blocks and maybe one default block.\n","sig":null,"attributes":[{"value":"/ This is a jump table branch which can have many destination blocks and maybe one default block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":306188,"byte_end":306287,"line_start":289,"line_end":289,"column_start":5,"column_end":104}}]},{"kind":"Enum","id":{"krate":0,"index":1203},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":305810,"byte_end":305820,"line_start":280,"line_end":280,"column_start":10,"column_end":20},"name":"BranchInfo","qualname":"::ir::instructions::BranchInfo","value":"BranchInfo::{NotABranch, SingleDest, Table}","parent":null,"children":[{"krate":0,"index":1205},{"krate":0,"index":1207},{"krate":0,"index":1211}],"decl_id":null,"docs":" Information about branch and jump instructions.\n","sig":null,"attributes":[{"value":"/ Information about branch and jump instructions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":305749,"byte_end":305800,"line_start":279,"line_end":279,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1217},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":306437,"byte_end":306445,"line_start":296,"line_end":296,"column_start":5,"column_end":13},"name":"NotACall","qualname":"::ir::instructions::CallInfo::NotACall","value":"CallInfo::NotACall","parent":{"krate":0,"index":1215},"children":[],"decl_id":null,"docs":" This is not a call instruction.\n","sig":null,"attributes":[{"value":"/ This is not a call instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":306397,"byte_end":306432,"line_start":295,"line_end":295,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1219},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":306571,"byte_end":306577,"line_start":300,"line_end":300,"column_start":5,"column_end":11},"name":"Direct","qualname":"::ir::instructions::CallInfo::Direct","value":"CallInfo::Direct(FuncRef, &'a [Value])","parent":{"krate":0,"index":1215},"children":[],"decl_id":null,"docs":" This is a direct call to an external function declared in the preamble. See\n `DataFlowGraph.ext_funcs`.\n","sig":null,"attributes":[{"value":"/ This is a direct call to an external function declared in the preamble. See","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":306452,"byte_end":306531,"line_start":298,"line_end":298,"column_start":5,"column_end":84}},{"value":"/ `DataFlowGraph.ext_funcs`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":306536,"byte_end":306566,"line_start":299,"line_end":299,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1223},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":306701,"byte_end":306709,"line_start":303,"line_end":303,"column_start":5,"column_end":13},"name":"Indirect","qualname":"::ir::instructions::CallInfo::Indirect","value":"CallInfo::Indirect(SigRef, &'a [Value])","parent":{"krate":0,"index":1215},"children":[],"decl_id":null,"docs":" This is an indirect call with the specified signature. See `DataFlowGraph.signatures`.\n","sig":null,"attributes":[{"value":"/ This is an indirect call with the specified signature. See `DataFlowGraph.signatures`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":306606,"byte_end":306696,"line_start":302,"line_end":302,"column_start":5,"column_end":95}}]},{"kind":"Enum","id":{"krate":0,"index":1215},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":306378,"byte_end":306386,"line_start":294,"line_end":294,"column_start":10,"column_end":18},"name":"CallInfo","qualname":"::ir::instructions::CallInfo","value":"CallInfo::{NotACall, Direct, Indirect}","parent":null,"children":[{"krate":0,"index":1217},{"krate":0,"index":1219},{"krate":0,"index":1223}],"decl_id":null,"docs":" Information about call instructions.\n","sig":null,"attributes":[{"value":"/ Information about call instructions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":306328,"byte_end":306368,"line_start":293,"line_end":293,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":7218},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":307063,"byte_end":307080,"line_start":312,"line_end":312,"column_start":12,"column_end":29},"name":"OpcodeConstraints","qualname":"::ir::instructions::OpcodeConstraints","value":"OpcodeConstraints {  }","parent":null,"children":[{"krate":0,"index":7219},{"krate":0,"index":7220},{"krate":0,"index":7221}],"decl_id":null,"docs":" Value type constraints for a given opcode.","sig":null,"attributes":[{"value":"/ Value type constraints for a given opcode.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":306735,"byte_end":306781,"line_start":306,"line_end":306,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":306782,"byte_end":306785,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ The `InstructionFormat` determines the constraints on most operands, but `Value` operands and","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":306786,"byte_end":306883,"line_start":308,"line_end":308,"column_start":1,"column_end":98}},{"value":"/ results are not determined by the format. Every `Opcode` has an associated","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":306884,"byte_end":306962,"line_start":309,"line_end":309,"column_start":1,"column_end":79}},{"value":"/ `OpcodeConstraints` object that provides the missing details.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":306963,"byte_end":307028,"line_start":310,"line_end":310,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":308599,"byte_end":308618,"line_start":346,"line_end":346,"column_start":12,"column_end":31},"name":"use_typevar_operand","qualname":"<OpcodeConstraints>::use_typevar_operand","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Can the controlling type variable for this opcode be inferred from the designated value\n input operand?\n This also implies that this opcode is polymorphic.\n","sig":null,"attributes":[{"value":"/ Can the controlling type variable for this opcode be inferred from the designated value","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":308414,"byte_end":308505,"line_start":343,"line_end":343,"column_start":5,"column_end":96}},{"value":"/ input operand?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":308510,"byte_end":308528,"line_start":344,"line_end":344,"column_start":5,"column_end":23}},{"value":"/ This also implies that this opcode is polymorphic.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":308533,"byte_end":308587,"line_start":345,"line_end":345,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1229},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":309138,"byte_end":309162,"line_start":356,"line_end":356,"column_start":12,"column_end":36},"name":"requires_typevar_operand","qualname":"<OpcodeConstraints>::requires_typevar_operand","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is it necessary to look at the designated value input operand in order to determine the\n controlling type variable, or is it good enough to use the first return type?","sig":null,"attributes":[{"value":"/ Is it necessary to look at the designated value input operand in order to determine the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":308678,"byte_end":308769,"line_start":350,"line_end":350,"column_start":5,"column_end":96}},{"value":"/ controlling type variable, or is it good enough to use the first return type?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":308774,"byte_end":308855,"line_start":351,"line_end":351,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":308860,"byte_end":308863,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Most polymorphic instructions produce a single result with the type of the controlling type","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":308868,"byte_end":308963,"line_start":353,"line_end":353,"column_start":5,"column_end":100}},{"value":"/ variable. A few polymorphic instructions either don't produce any results, or produce","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":308968,"byte_end":309057,"line_start":354,"line_end":354,"column_start":5,"column_end":94}},{"value":"/ results with a fixed type. These instructions return `true`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":309062,"byte_end":309126,"line_start":355,"line_end":355,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":309368,"byte_end":309385,"line_start":362,"line_end":362,"column_start":12,"column_end":29},"name":"num_fixed_results","qualname":"<OpcodeConstraints>::num_fixed_results","value":"fn (self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the number of *fixed* result values produced by this opcode.\n This does not include `variable_args` produced by calls.\n","sig":null,"attributes":[{"value":"/ Get the number of *fixed* result values produced by this opcode.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":309223,"byte_end":309291,"line_start":360,"line_end":360,"column_start":5,"column_end":73}},{"value":"/ This does not include `variable_args` produced by calls.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":309296,"byte_end":309356,"line_start":361,"line_end":361,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1231},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":309914,"byte_end":309939,"line_start":373,"line_end":373,"column_start":12,"column_end":37},"name":"num_fixed_value_arguments","qualname":"<OpcodeConstraints>::num_fixed_value_arguments","value":"fn (self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the number of *fixed* input values required by this opcode.","sig":null,"attributes":[{"value":"/ Get the number of *fixed* input values required by this opcode.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":309450,"byte_end":309517,"line_start":366,"line_end":366,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":309522,"byte_end":309525,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ This does not include `variable_args` arguments on call and branch instructions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":309530,"byte_end":309614,"line_start":368,"line_end":368,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":309619,"byte_end":309622,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ The number of fixed input values is usually implied by the instruction format, but","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":309627,"byte_end":309713,"line_start":370,"line_end":370,"column_start":5,"column_end":91}},{"value":"/ instruction formats that use a `ValueList` put both fixed and variable arguments in the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":309718,"byte_end":309809,"line_start":371,"line_end":371,"column_start":5,"column_end":96}},{"value":"/ list. This method returns the *minimum* number of values required in the value list.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":309814,"byte_end":309902,"line_start":372,"line_end":372,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":310672,"byte_end":310683,"line_start":395,"line_end":395,"column_start":12,"column_end":23},"name":"result_type","qualname":"<OpcodeConstraints>::result_type","value":"fn (self, n: usize, ctrl_type: Type) -> Type","parent":null,"children":[],"decl_id":null,"docs":" Get the value type of result number `n`, having resolved the controlling type variable to\n `ctrl_type`.\n","sig":null,"attributes":[{"value":"/ Get the value type of result number `n`, having resolved the controlling type variable to","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":310546,"byte_end":310639,"line_start":393,"line_end":393,"column_start":5,"column_end":98}},{"value":"/ `ctrl_type`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":310644,"byte_end":310660,"line_start":394,"line_end":394,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1235},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":311371,"byte_end":311396,"line_start":411,"line_end":411,"column_start":12,"column_end":37},"name":"value_argument_constraint","qualname":"<OpcodeConstraints>::value_argument_constraint","value":"fn (self, n: usize, ctrl_type: Type) -> ResolvedConstraint","parent":null,"children":[],"decl_id":null,"docs":" Get the value type of input value number `n`, having resolved the controlling type variable\n to `ctrl_type`.","sig":null,"attributes":[{"value":"/ Get the value type of input value number `n`, having resolved the controlling type variable","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":311049,"byte_end":311144,"line_start":406,"line_end":406,"column_start":5,"column_end":100}},{"value":"/ to `ctrl_type`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":311149,"byte_end":311168,"line_start":407,"line_end":407,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":311173,"byte_end":311176,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Unlike results, it is possible for some input values to vary freely within a specific","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":311181,"byte_end":311270,"line_start":409,"line_end":409,"column_start":5,"column_end":94}},{"value":"/ `ValueTypeSet`. This is represented with the `ArgumentConstraint::Free` variant.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":311275,"byte_end":311359,"line_start":410,"line_end":410,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":311845,"byte_end":311857,"line_start":422,"line_end":422,"column_start":12,"column_end":24},"name":"ctrl_typeset","qualname":"<OpcodeConstraints>::ctrl_typeset","value":"fn (self) -> Option<ValueTypeSet>","parent":null,"children":[],"decl_id":null,"docs":" Get the typeset of allowed types for the controlling type variable in a polymorphic\n instruction.\n","sig":null,"attributes":[{"value":"/ Get the typeset of allowed types for the controlling type variable in a polymorphic","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":311725,"byte_end":311812,"line_start":420,"line_end":420,"column_start":5,"column_end":92}},{"value":"/ instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":311817,"byte_end":311833,"line_start":421,"line_end":421,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1238},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":312011,"byte_end":312025,"line_start":427,"line_end":427,"column_start":12,"column_end":26},"name":"is_polymorphic","qualname":"<OpcodeConstraints>::is_polymorphic","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this instruction polymorphic?\n","sig":null,"attributes":[{"value":"/ Is this instruction polymorphic?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":311963,"byte_end":311999,"line_start":426,"line_end":426,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":7225},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":312281,"byte_end":312293,"line_start":437,"line_end":437,"column_start":12,"column_end":24},"name":"ValueTypeSet","qualname":"::ir::instructions::ValueTypeSet","value":"ValueTypeSet { lanes, ints, floats, bools, refs }","parent":null,"children":[{"krate":0,"index":7226},{"krate":0,"index":7227},{"krate":0,"index":7228},{"krate":0,"index":7229},{"krate":0,"index":7230}],"decl_id":null,"docs":" A value type set describes the permitted set of types for a type variable.\n","sig":null,"attributes":[{"value":"/ A value type set describes the permitted set of types for a type variable.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":312146,"byte_end":312224,"line_start":435,"line_end":435,"column_start":1,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":7226},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":312331,"byte_end":312336,"line_start":439,"line_end":439,"column_start":9,"column_end":14},"name":"lanes","qualname":"::ir::instructions::ValueTypeSet::lanes","value":"bitset::BitSet<u16>","parent":{"krate":0,"index":7225},"children":[],"decl_id":null,"docs":" Allowed lane sizes\n","sig":null,"attributes":[{"value":"/ Allowed lane sizes","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":312300,"byte_end":312322,"line_start":438,"line_end":438,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":7227},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":312383,"byte_end":312387,"line_start":441,"line_end":441,"column_start":9,"column_end":13},"name":"ints","qualname":"::ir::instructions::ValueTypeSet::ints","value":"bitset::BitSet<u8>","parent":{"krate":0,"index":7225},"children":[],"decl_id":null,"docs":" Allowed int widths\n","sig":null,"attributes":[{"value":"/ Allowed int widths","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":312352,"byte_end":312374,"line_start":440,"line_end":440,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":7228},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":312435,"byte_end":312441,"line_start":443,"line_end":443,"column_start":9,"column_end":15},"name":"floats","qualname":"::ir::instructions::ValueTypeSet::floats","value":"bitset::BitSet<u8>","parent":{"krate":0,"index":7225},"children":[],"decl_id":null,"docs":" Allowed float widths\n","sig":null,"attributes":[{"value":"/ Allowed float widths","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":312402,"byte_end":312426,"line_start":442,"line_end":442,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":7229},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":312488,"byte_end":312493,"line_start":445,"line_end":445,"column_start":9,"column_end":14},"name":"bools","qualname":"::ir::instructions::ValueTypeSet::bools","value":"bitset::BitSet<u8>","parent":{"krate":0,"index":7225},"children":[],"decl_id":null,"docs":" Allowed bool widths\n","sig":null,"attributes":[{"value":"/ Allowed bool widths","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":312456,"byte_end":312479,"line_start":444,"line_end":444,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":7230},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":312539,"byte_end":312543,"line_start":447,"line_end":447,"column_start":9,"column_end":13},"name":"refs","qualname":"::ir::instructions::ValueTypeSet::refs","value":"bitset::BitSet<u8>","parent":{"krate":0,"index":7225},"children":[],"decl_id":null,"docs":" Allowed ref widths\n","sig":null,"attributes":[{"value":"/ Allowed ref widths","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":312508,"byte_end":312530,"line_start":446,"line_end":446,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1243},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":313203,"byte_end":313211,"line_start":470,"line_end":470,"column_start":12,"column_end":20},"name":"contains","qualname":"<ValueTypeSet>::contains","value":"fn (self, typ: Type) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does `typ` belong to this set?\n","sig":null,"attributes":[{"value":"/ Does `typ` belong to this set?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":313157,"byte_end":313191,"line_start":469,"line_end":469,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1244},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":313500,"byte_end":313507,"line_start":478,"line_end":478,"column_start":12,"column_end":19},"name":"example","qualname":"<ValueTypeSet>::example","value":"fn (self) -> Type","parent":null,"children":[],"decl_id":null,"docs":" Get an example member of this type set.","sig":null,"attributes":[{"value":"/ Get an example member of this type set.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":313362,"byte_end":313405,"line_start":475,"line_end":475,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":313410,"byte_end":313413,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ This is used for error messages to avoid suggesting invalid types.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":313418,"byte_end":313488,"line_start":477,"line_end":477,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7244},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":316035,"byte_end":316040,"line_start":555,"line_end":555,"column_start":5,"column_end":10},"name":"Bound","qualname":"::ir::instructions::ResolvedConstraint::Bound","value":"ResolvedConstraint::Bound(Type)","parent":{"krate":0,"index":7243},"children":[],"decl_id":null,"docs":" The operand is bound to a known type.\n","sig":null,"attributes":[{"value":"/ The operand is bound to a known type.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":315989,"byte_end":316030,"line_start":554,"line_end":554,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7247},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":316115,"byte_end":316119,"line_start":557,"line_end":557,"column_start":5,"column_end":9},"name":"Free","qualname":"::ir::instructions::ResolvedConstraint::Free","value":"ResolvedConstraint::Free(ValueTypeSet)","parent":{"krate":0,"index":7243},"children":[],"decl_id":null,"docs":" The operand type can vary freely within the given set.\n","sig":null,"attributes":[{"value":"/ The operand type can vary freely within the given set.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":316052,"byte_end":316110,"line_start":556,"line_end":556,"column_start":5,"column_end":63}}]},{"kind":"Enum","id":{"krate":0,"index":7243},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":315964,"byte_end":315982,"line_start":553,"line_end":553,"column_start":10,"column_end":28},"name":"ResolvedConstraint","qualname":"::ir::instructions::ResolvedConstraint","value":"ResolvedConstraint::{Bound, Free}","parent":null,"children":[{"krate":0,"index":7244},{"krate":0,"index":7247}],"decl_id":null,"docs":" The type constraint on a value argument once the controlling type variable is known.\n","sig":null,"attributes":[{"value":"/ The type constraint on a value argument once the controlling type variable is known.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":315821,"byte_end":315909,"line_start":551,"line_end":551,"column_start":1,"column_end":89}}]},{"kind":"Mod","id":{"krate":0,"index":1270},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/jumptable.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"jumptable","qualname":"::ir::jumptable","value":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/jumptable.rs","parent":null,"children":[{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1277},{"krate":0,"index":7262},{"krate":0,"index":7264},{"krate":0,"index":1280},{"krate":0,"index":1291}],"decl_id":null,"docs":" Jump table representation.","sig":null,"attributes":[{"value":"! Jump table representation.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/jumptable.rs","byte_start":322029,"byte_end":322059,"line_start":1,"line_end":1,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/jumptable.rs","byte_start":322060,"byte_end":322063,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Jump tables are declared in the preamble and assigned an `ir::entities::JumpTable` reference.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/jumptable.rs","byte_start":322064,"byte_end":322161,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"! The actual table of destinations is stored in a `JumpTableData` struct defined in this module.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/jumptable.rs","byte_start":322162,"byte_end":322260,"line_start":4,"line_end":4,"column_start":1,"column_end":99}}]},{"kind":"Struct","id":{"krate":0,"index":7262},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/jumptable.rs","byte_start":322523,"byte_end":322536,"line_start":15,"line_end":15,"column_start":12,"column_end":25},"name":"JumpTableData","qualname":"::ir::jumptable::JumpTableData","value":"JumpTableData {  }","parent":null,"children":[{"krate":0,"index":7263}],"decl_id":null,"docs":" Contents of a jump table.","sig":null,"attributes":[{"value":"/ Contents of a jump table.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/jumptable.rs","byte_start":322393,"byte_end":322422,"line_start":11,"line_end":11,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/jumptable.rs","byte_start":322423,"byte_end":322426,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ All jump tables use 0-based indexing and are densely populated.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/jumptable.rs","byte_start":322427,"byte_end":322494,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1281},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/jumptable.rs","byte_start":322658,"byte_end":322661,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<JumpTableData>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty jump table.\n","sig":null,"attributes":[{"value":"/ Create a new empty jump table.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/jumptable.rs","byte_start":322612,"byte_end":322646,"line_start":21,"line_end":21,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1282},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/jumptable.rs","byte_start":322794,"byte_end":322807,"line_start":27,"line_end":27,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<JumpTableData>::with_capacity","value":"fn (capacity: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty jump table with the specified capacity.\n","sig":null,"attributes":[{"value":"/ Create a new empty jump table with the specified capacity.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/jumptable.rs","byte_start":322720,"byte_end":322782,"line_start":26,"line_end":26,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1283},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/jumptable.rs","byte_start":322968,"byte_end":322971,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"len","qualname":"<JumpTableData>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the number of table entries.\n","sig":null,"attributes":[{"value":"/ Get the number of table entries.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/jumptable.rs","byte_start":322920,"byte_end":322956,"line_start":33,"line_end":33,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1284},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/jumptable.rs","byte_start":323063,"byte_end":323073,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"name":"push_entry","qualname":"<JumpTableData>::push_entry","value":"fn (&mut self, dest: Block) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Append a table entry.\n","sig":null,"attributes":[{"value":"/ Append a table entry.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/jumptable.rs","byte_start":323026,"byte_end":323051,"line_start":38,"line_end":38,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1285},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/jumptable.rs","byte_start":323204,"byte_end":323215,"line_start":44,"line_end":44,"column_start":12,"column_end":23},"name":"branches_to","qualname":"<JumpTableData>::branches_to","value":"fn (&self, block: Block) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if any of the entries branch to `block`.\n","sig":null,"attributes":[{"value":"/ Checks if any of the entries branch to `block`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/jumptable.rs","byte_start":323141,"byte_end":323192,"line_start":43,"line_end":43,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1287},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/jumptable.rs","byte_start":323377,"byte_end":323385,"line_start":49,"line_end":49,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<JumpTableData>::as_slice","value":"fn (&self) -> &[Block]","parent":null,"children":[],"decl_id":null,"docs":" Access the whole table as a slice.\n","sig":null,"attributes":[{"value":"/ Access the whole table as a slice.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/jumptable.rs","byte_start":323327,"byte_end":323365,"line_start":48,"line_end":48,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/jumptable.rs","byte_start":323506,"byte_end":323518,"line_start":54,"line_end":54,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<JumpTableData>::as_mut_slice","value":"fn (&mut self) -> &mut [Block]","parent":null,"children":[],"decl_id":null,"docs":" Access the whole table as a mutable slice.\n","sig":null,"attributes":[{"value":"/ Access the whole table as a mutable slice.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/jumptable.rs","byte_start":323448,"byte_end":323494,"line_start":53,"line_end":53,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/jumptable.rs","byte_start":323644,"byte_end":323648,"line_start":59,"line_end":59,"column_start":12,"column_end":16},"name":"iter","qualname":"<JumpTableData>::iter","value":"fn (&self) -> Iter<Block>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the table.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the table.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/jumptable.rs","byte_start":323593,"byte_end":323632,"line_start":58,"line_end":58,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1290},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/jumptable.rs","byte_start":323779,"byte_end":323787,"line_start":64,"line_end":64,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<JumpTableData>::iter_mut","value":"fn (&mut self) -> IterMut<Block>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each value.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/jumptable.rs","byte_start":323710,"byte_end":323767,"line_start":63,"line_end":63,"column_start":5,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":1293},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"layout","qualname":"::ir::layout","value":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","parent":null,"children":[{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1296},{"krate":0,"index":1299},{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1308},{"krate":0,"index":7266},{"krate":0,"index":7271},{"krate":0,"index":1309},{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1323},{"krate":0,"index":1335},{"krate":0,"index":7273},{"krate":0,"index":7283},{"krate":0,"index":7281},{"krate":0,"index":7279},{"krate":0,"index":1346},{"krate":0,"index":1350},{"krate":0,"index":1354},{"krate":0,"index":1359},{"krate":0,"index":7285},{"krate":0,"index":7294},{"krate":0,"index":7292},{"krate":0,"index":7290},{"krate":0,"index":1373},{"krate":0,"index":1378},{"krate":0,"index":1382}],"decl_id":null,"docs":" Function layout.","sig":null,"attributes":[{"value":"! Function layout.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":325051,"byte_end":325071,"line_start":1,"line_end":1,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":325072,"byte_end":325075,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The order of basic blocks in a function and the order of instructions in an block is","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":325076,"byte_end":325164,"line_start":3,"line_end":3,"column_start":1,"column_end":89}},{"value":"! determined by the `Layout` data structure defined in this module.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":325165,"byte_end":325234,"line_start":4,"line_end":4,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":7266},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":326156,"byte_end":326162,"line_start":30,"line_end":30,"column_start":12,"column_end":18},"name":"Layout","qualname":"::ir::layout::Layout","value":"Layout {  }","parent":null,"children":[{"krate":0,"index":7267},{"krate":0,"index":7268},{"krate":0,"index":7269},{"krate":0,"index":7270}],"decl_id":null,"docs":" The `Layout` struct determines the layout of blocks and instructions in a function. It does not\n contain definitions of instructions or blocks, but depends on `Inst` and `Block` entity references\n being defined elsewhere.","sig":null,"attributes":[{"value":"/ The `Layout` struct determines the layout of blocks and instructions in a function. It does not","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":325531,"byte_end":325630,"line_start":16,"line_end":16,"column_start":1,"column_end":100}},{"value":"/ contain definitions of instructions or blocks, but depends on `Inst` and `Block` entity references","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":325631,"byte_end":325733,"line_start":17,"line_end":17,"column_start":1,"column_end":103}},{"value":"/ being defined elsewhere.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":325734,"byte_end":325762,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":325763,"byte_end":325766,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This data structure determines:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":325767,"byte_end":325802,"line_start":20,"line_end":20,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":325803,"byte_end":325806,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ - The order of blocks in the function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":325807,"byte_end":325849,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ - Which block contains a given instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":325850,"byte_end":325897,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/ - The order of instructions with an block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":325898,"byte_end":325944,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":325945,"byte_end":325948,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ While data dependencies are not recorded, instruction ordering does affect control","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":325949,"byte_end":326035,"line_start":26,"line_end":26,"column_start":1,"column_end":87}},{"value":"/ dependencies, so part of the semantics of the program are determined by the layout.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":326036,"byte_end":326123,"line_start":27,"line_end":27,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":326124,"byte_end":326127,"line_start":28,"line_end":28,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1310},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":326825,"byte_end":326828,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"new","qualname":"<Layout>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty `Layout`.\n","sig":null,"attributes":[{"value":"/ Create a new empty `Layout`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":326781,"byte_end":326813,"line_start":47,"line_end":47,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1311},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":327052,"byte_end":327057,"line_start":58,"line_end":58,"column_start":12,"column_end":17},"name":"clear","qualname":"<Layout>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear the layout.\n","sig":null,"attributes":[{"value":"/ Clear the layout.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":327019,"byte_end":327040,"line_start":57,"line_end":57,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1312},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":327264,"byte_end":327278,"line_start":66,"line_end":66,"column_start":12,"column_end":26},"name":"block_capacity","qualname":"<Layout>::block_capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the capacity of the `BlockData` map.\n","sig":null,"attributes":[{"value":"/ Returns the capacity of the `BlockData` map.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":327204,"byte_end":327252,"line_start":65,"line_end":65,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1336},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":337551,"byte_end":337568,"line_start":346,"line_end":346,"column_start":12,"column_end":29},"name":"is_block_inserted","qualname":"<Layout>::is_block_inserted","value":"fn (&self, block: Block) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is `block` currently part of the layout?\n","sig":null,"attributes":[{"value":"/ Is `block` currently part of the layout?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":337495,"byte_end":337539,"line_start":345,"line_end":345,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1337},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":337751,"byte_end":337763,"line_start":351,"line_end":351,"column_start":12,"column_end":24},"name":"append_block","qualname":"<Layout>::append_block","value":"fn (&mut self, block: Block) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Insert `block` as the last block in the layout.\n","sig":null,"attributes":[{"value":"/ Insert `block` as the last block in the layout.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":337688,"byte_end":337739,"line_start":350,"line_end":350,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1338},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":338504,"byte_end":338516,"line_start":372,"line_end":372,"column_start":12,"column_end":24},"name":"insert_block","qualname":"<Layout>::insert_block","value":"fn (&mut self, block: Block, before: Block) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Insert `block` in the layout before the existing block `before`.\n","sig":null,"attributes":[{"value":"/ Insert `block` in the layout before the existing block `before`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":338424,"byte_end":338492,"line_start":371,"line_end":371,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1339},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":339347,"byte_end":339365,"line_start":396,"line_end":396,"column_start":12,"column_end":30},"name":"insert_block_after","qualname":"<Layout>::insert_block_after","value":"fn (&mut self, block: Block, after: Block) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Insert `block` in the layout *after* the existing block `after`.\n","sig":null,"attributes":[{"value":"/ Insert `block` in the layout *after* the existing block `after`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":339267,"byte_end":339335,"line_start":395,"line_end":395,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1340},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":340160,"byte_end":340172,"line_start":420,"line_end":420,"column_start":12,"column_end":24},"name":"remove_block","qualname":"<Layout>::remove_block","value":"fn (&mut self, block: Block) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove `block` from the layout.\n","sig":null,"attributes":[{"value":"/ Remove `block` from the layout.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":340113,"byte_end":340148,"line_start":419,"line_end":419,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1341},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":341042,"byte_end":341048,"line_start":446,"line_end":446,"column_start":12,"column_end":18},"name":"blocks","qualname":"<Layout>::blocks","value":"fn (&self) -> Blocks","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over all blocks in layout order.\n","sig":null,"attributes":[{"value":"/ Return an iterator over all blocks in layout order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":340975,"byte_end":341030,"line_start":445,"line_end":445,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1342},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":341275,"byte_end":341286,"line_start":455,"line_end":455,"column_start":12,"column_end":23},"name":"entry_block","qualname":"<Layout>::entry_block","value":"fn (&self) -> Option<Block>","parent":null,"children":[],"decl_id":null,"docs":" Get the function's entry block.\n This is simply the first block in the layout order.\n","sig":null,"attributes":[{"value":"/ Get the function's entry block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":341168,"byte_end":341203,"line_start":453,"line_end":453,"column_start":5,"column_end":40}},{"value":"/ This is simply the first block in the layout order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":341208,"byte_end":341263,"line_start":454,"line_end":454,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1343},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":341398,"byte_end":341408,"line_start":460,"line_end":460,"column_start":12,"column_end":22},"name":"last_block","qualname":"<Layout>::last_block","value":"fn (&self) -> Option<Block>","parent":null,"children":[],"decl_id":null,"docs":" Get the last block in the layout.\n","sig":null,"attributes":[{"value":"/ Get the last block in the layout.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":341349,"byte_end":341386,"line_start":459,"line_end":459,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1344},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":341538,"byte_end":341548,"line_start":465,"line_end":465,"column_start":12,"column_end":22},"name":"prev_block","qualname":"<Layout>::prev_block","value":"fn (&self, block: Block) -> Option<Block>","parent":null,"children":[],"decl_id":null,"docs":" Get the block preceding `block` in the layout order.\n","sig":null,"attributes":[{"value":"/ Get the block preceding `block` in the layout order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":341470,"byte_end":341526,"line_start":464,"line_end":464,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1345},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":341709,"byte_end":341719,"line_start":470,"line_end":470,"column_start":12,"column_end":22},"name":"next_block","qualname":"<Layout>::next_block","value":"fn (&self, block: Block) -> Option<Block>","parent":null,"children":[],"decl_id":null,"docs":" Get the block following `block` in the layout order.\n","sig":null,"attributes":[{"value":"/ Get the block following `block` in the layout order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":341641,"byte_end":341697,"line_start":469,"line_end":469,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":1346},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":342099,"byte_end":342105,"line_start":485,"line_end":485,"column_start":12,"column_end":18},"name":"Blocks","qualname":"::ir::layout::Blocks","value":"Blocks {  }","parent":null,"children":[{"krate":0,"index":1348},{"krate":0,"index":1349}],"decl_id":null,"docs":" Iterate over blocks in layout order. See `Layout::blocks()`.\n","sig":null,"attributes":[{"value":"/ Iterate over blocks in layout order. See `Layout::blocks()`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":342023,"byte_end":342087,"line_start":484,"line_end":484,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1360},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":342967,"byte_end":342977,"line_start":520,"line_end":520,"column_start":12,"column_end":22},"name":"inst_block","qualname":"<Layout>::inst_block","value":"fn (&self, inst: Inst) -> Option<Block>","parent":null,"children":[],"decl_id":null,"docs":" Get the block containing `inst`, or `None` if `inst` is not inserted in the layout.\n","sig":null,"attributes":[{"value":"/ Get the block containing `inst`, or `None` if `inst` is not inserted in the layout.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":342868,"byte_end":342955,"line_start":519,"line_end":519,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1361},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":343165,"byte_end":343173,"line_start":525,"line_end":525,"column_start":12,"column_end":20},"name":"pp_block","qualname":"<Layout>::pp_block","value":"fn <PP> (&self, pp: PP) -> Block","parent":null,"children":[],"decl_id":null,"docs":" Get the block containing the program point `pp`. Panic if `pp` is not in the layout.\n","sig":null,"attributes":[{"value":"/ Get the block containing the program point `pp`. Panic if `pp` is not in the layout.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":343065,"byte_end":343153,"line_start":524,"line_end":524,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1363},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":343554,"byte_end":343565,"line_start":538,"line_end":538,"column_start":12,"column_end":23},"name":"append_inst","qualname":"<Layout>::append_inst","value":"fn (&mut self, inst: Inst, block: Block) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Append `inst` to the end of `block`.\n","sig":null,"attributes":[{"value":"/ Append `inst` to the end of `block`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":343502,"byte_end":343542,"line_start":537,"line_end":537,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":344479,"byte_end":344489,"line_start":563,"line_end":563,"column_start":12,"column_end":22},"name":"first_inst","qualname":"<Layout>::first_inst","value":"fn (&self, block: Block) -> Option<Inst>","parent":null,"children":[],"decl_id":null,"docs":" Fetch an block's first instruction.\n","sig":null,"attributes":[{"value":"/ Fetch an block's first instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":344428,"byte_end":344467,"line_start":562,"line_end":562,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1365},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":344635,"byte_end":344644,"line_start":568,"line_end":568,"column_start":12,"column_end":21},"name":"last_inst","qualname":"<Layout>::last_inst","value":"fn (&self, block: Block) -> Option<Inst>","parent":null,"children":[],"decl_id":null,"docs":" Fetch an block's last instruction.\n","sig":null,"attributes":[{"value":"/ Fetch an block's last instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":344585,"byte_end":344623,"line_start":567,"line_end":567,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1366},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":344794,"byte_end":344803,"line_start":573,"line_end":573,"column_start":12,"column_end":21},"name":"next_inst","qualname":"<Layout>::next_inst","value":"fn (&self, inst: Inst) -> Option<Inst>","parent":null,"children":[],"decl_id":null,"docs":" Fetch the instruction following `inst`.\n","sig":null,"attributes":[{"value":"/ Fetch the instruction following `inst`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":344739,"byte_end":344782,"line_start":572,"line_end":572,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1367},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":344946,"byte_end":344955,"line_start":578,"line_end":578,"column_start":12,"column_end":21},"name":"prev_inst","qualname":"<Layout>::prev_inst","value":"fn (&self, inst: Inst) -> Option<Inst>","parent":null,"children":[],"decl_id":null,"docs":" Fetch the instruction preceding `inst`.\n","sig":null,"attributes":[{"value":"/ Fetch the instruction preceding `inst`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":344891,"byte_end":344934,"line_start":577,"line_end":577,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1368},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":345123,"byte_end":345144,"line_start":583,"line_end":583,"column_start":12,"column_end":33},"name":"canonical_branch_inst","qualname":"<Layout>::canonical_branch_inst","value":"fn (&self, dfg: &DataFlowGraph, block: Block) -> Option<Inst>","parent":null,"children":[],"decl_id":null,"docs":" Fetch the first instruction in an block's terminal branch group.\n","sig":null,"attributes":[{"value":"/ Fetch the first instruction in an block's terminal branch group.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":345043,"byte_end":345111,"line_start":582,"line_end":582,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1369},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":345667,"byte_end":345678,"line_start":596,"line_end":596,"column_start":12,"column_end":23},"name":"insert_inst","qualname":"<Layout>::insert_inst","value":"fn (&mut self, inst: Inst, before: Inst) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Insert `inst` before the instruction `before` in the same block.\n","sig":null,"attributes":[{"value":"/ Insert `inst` before the instruction `before` in the same block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":345587,"byte_end":345655,"line_start":595,"line_end":595,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1370},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":346450,"byte_end":346461,"line_start":617,"line_end":617,"column_start":12,"column_end":23},"name":"remove_inst","qualname":"<Layout>::remove_inst","value":"fn (&mut self, inst: Inst) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove `inst` from the layout.\n","sig":null,"attributes":[{"value":"/ Remove `inst` from the layout.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":346404,"byte_end":346438,"line_start":616,"line_end":616,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1371},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":347291,"byte_end":347302,"line_start":642,"line_end":642,"column_start":12,"column_end":23},"name":"block_insts","qualname":"<Layout>::block_insts","value":"fn (&self, block: Block) -> Insts","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the instructions in `block` in layout order.\n","sig":null,"attributes":[{"value":"/ Iterate over the instructions in `block` in layout order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":347218,"byte_end":347279,"line_start":641,"line_end":641,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":347982,"byte_end":347993,"line_start":672,"line_end":672,"column_start":12,"column_end":23},"name":"split_block","qualname":"<Layout>::split_block","value":"fn (&mut self, new_block: Block, before: Inst) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Split the block containing `before` in two.","sig":null,"attributes":[{"value":"/ Split the block containing `before` in two.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":347509,"byte_end":347556,"line_start":650,"line_end":650,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":347561,"byte_end":347564,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ Insert `new_block` after the old block and move `before` and the following instructions to","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":347569,"byte_end":347663,"line_start":652,"line_end":652,"column_start":5,"column_end":99}},{"value":"/ `new_block`:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":347668,"byte_end":347684,"line_start":653,"line_end":653,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":347689,"byte_end":347692,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":347697,"byte_end":347708,"line_start":655,"line_end":655,"column_start":5,"column_end":16}},{"value":"/ old_block:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":347713,"byte_end":347727,"line_start":656,"line_end":656,"column_start":5,"column_end":19}},{"value":"/     i1","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":347732,"byte_end":347742,"line_start":657,"line_end":657,"column_start":5,"column_end":15}},{"value":"/     i2","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":347747,"byte_end":347757,"line_start":658,"line_end":658,"column_start":5,"column_end":15}},{"value":"/     i3 << before","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":347762,"byte_end":347782,"line_start":659,"line_end":659,"column_start":5,"column_end":25}},{"value":"/     i4","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":347787,"byte_end":347797,"line_start":660,"line_end":660,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":347802,"byte_end":347809,"line_start":661,"line_end":661,"column_start":5,"column_end":12}},{"value":"/ becomes:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":347814,"byte_end":347826,"line_start":662,"line_end":662,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":347831,"byte_end":347834,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":347839,"byte_end":347850,"line_start":664,"line_end":664,"column_start":5,"column_end":16}},{"value":"/ old_block:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":347855,"byte_end":347869,"line_start":665,"line_end":665,"column_start":5,"column_end":19}},{"value":"/     i1","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":347874,"byte_end":347884,"line_start":666,"line_end":666,"column_start":5,"column_end":15}},{"value":"/     i2","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":347889,"byte_end":347899,"line_start":667,"line_end":667,"column_start":5,"column_end":15}},{"value":"/ new_block:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":347904,"byte_end":347918,"line_start":668,"line_end":668,"column_start":5,"column_end":19}},{"value":"/     i3 << before","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":347923,"byte_end":347943,"line_start":669,"line_end":669,"column_start":5,"column_end":25}},{"value":"/     i4","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":347948,"byte_end":347958,"line_start":670,"line_end":670,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":347963,"byte_end":347970,"line_start":671,"line_end":671,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1373},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":350002,"byte_end":350007,"line_start":728,"line_end":728,"column_start":12,"column_end":17},"name":"Insts","qualname":"::ir::layout::Insts","value":"Insts {  }","parent":null,"children":[{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1377}],"decl_id":null,"docs":" Iterate over instructions in an block in layout order. See `Layout::block_insts()`.\n","sig":null,"attributes":[{"value":"/ Iterate over instructions in an block in layout order. See `Layout::block_insts()`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":349903,"byte_end":349990,"line_start":727,"line_end":727,"column_start":1,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7297},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":367216,"byte_end":367226,"line_start":26,"line_end":26,"column_start":5,"column_end":15},"name":"Probestack","qualname":"::ir::libcall::LibCall::Probestack","value":"LibCall::Probestack","parent":{"krate":0,"index":7296},"children":[],"decl_id":null,"docs":" probe for stack overflow. These are emitted for functions which need\n when the `enable_probestack` setting is true.\n","sig":null,"attributes":[{"value":"/ probe for stack overflow. These are emitted for functions which need","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":367085,"byte_end":367157,"line_start":24,"line_end":24,"column_start":5,"column_end":77}},{"value":"/ when the `enable_probestack` setting is true.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":367162,"byte_end":367211,"line_start":25,"line_end":25,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7299},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":367249,"byte_end":367256,"line_start":28,"line_end":28,"column_start":5,"column_end":12},"name":"CeilF32","qualname":"::ir::libcall::LibCall::CeilF32","value":"LibCall::CeilF32","parent":{"krate":0,"index":7296},"children":[],"decl_id":null,"docs":" ceil.f32\n","sig":null,"attributes":[{"value":"/ ceil.f32","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":367232,"byte_end":367244,"line_start":27,"line_end":27,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7301},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":367279,"byte_end":367286,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"CeilF64","qualname":"::ir::libcall::LibCall::CeilF64","value":"LibCall::CeilF64","parent":{"krate":0,"index":7296},"children":[],"decl_id":null,"docs":" ceil.f64\n","sig":null,"attributes":[{"value":"/ ceil.f64","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":367262,"byte_end":367274,"line_start":29,"line_end":29,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7303},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":367310,"byte_end":367318,"line_start":32,"line_end":32,"column_start":5,"column_end":13},"name":"FloorF32","qualname":"::ir::libcall::LibCall::FloorF32","value":"LibCall::FloorF32","parent":{"krate":0,"index":7296},"children":[],"decl_id":null,"docs":" floor.f32\n","sig":null,"attributes":[{"value":"/ floor.f32","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":367292,"byte_end":367305,"line_start":31,"line_end":31,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7305},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":367342,"byte_end":367350,"line_start":34,"line_end":34,"column_start":5,"column_end":13},"name":"FloorF64","qualname":"::ir::libcall::LibCall::FloorF64","value":"LibCall::FloorF64","parent":{"krate":0,"index":7296},"children":[],"decl_id":null,"docs":" floor.f64\n","sig":null,"attributes":[{"value":"/ floor.f64","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":367324,"byte_end":367337,"line_start":33,"line_end":33,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7307},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":367374,"byte_end":367382,"line_start":36,"line_end":36,"column_start":5,"column_end":13},"name":"TruncF32","qualname":"::ir::libcall::LibCall::TruncF32","value":"LibCall::TruncF32","parent":{"krate":0,"index":7296},"children":[],"decl_id":null,"docs":" trunc.f32\n","sig":null,"attributes":[{"value":"/ trunc.f32","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":367356,"byte_end":367369,"line_start":35,"line_end":35,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7309},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":367406,"byte_end":367414,"line_start":38,"line_end":38,"column_start":5,"column_end":13},"name":"TruncF64","qualname":"::ir::libcall::LibCall::TruncF64","value":"LibCall::TruncF64","parent":{"krate":0,"index":7296},"children":[],"decl_id":null,"docs":" frunc.f64\n","sig":null,"attributes":[{"value":"/ frunc.f64","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":367388,"byte_end":367401,"line_start":37,"line_end":37,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7311},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":367440,"byte_end":367450,"line_start":40,"line_end":40,"column_start":5,"column_end":15},"name":"NearestF32","qualname":"::ir::libcall::LibCall::NearestF32","value":"LibCall::NearestF32","parent":{"krate":0,"index":7296},"children":[],"decl_id":null,"docs":" nearest.f32\n","sig":null,"attributes":[{"value":"/ nearest.f32","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":367420,"byte_end":367435,"line_start":39,"line_end":39,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7313},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":367476,"byte_end":367486,"line_start":42,"line_end":42,"column_start":5,"column_end":15},"name":"NearestF64","qualname":"::ir::libcall::LibCall::NearestF64","value":"LibCall::NearestF64","parent":{"krate":0,"index":7296},"children":[],"decl_id":null,"docs":" nearest.f64\n","sig":null,"attributes":[{"value":"/ nearest.f64","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":367456,"byte_end":367471,"line_start":41,"line_end":41,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7315},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":367512,"byte_end":367518,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"name":"Memcpy","qualname":"::ir::libcall::LibCall::Memcpy","value":"LibCall::Memcpy","parent":{"krate":0,"index":7296},"children":[],"decl_id":null,"docs":" libc.memcpy\n","sig":null,"attributes":[{"value":"/ libc.memcpy","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":367492,"byte_end":367507,"line_start":43,"line_end":43,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7317},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":367544,"byte_end":367550,"line_start":46,"line_end":46,"column_start":5,"column_end":11},"name":"Memset","qualname":"::ir::libcall::LibCall::Memset","value":"LibCall::Memset","parent":{"krate":0,"index":7296},"children":[],"decl_id":null,"docs":" libc.memset\n","sig":null,"attributes":[{"value":"/ libc.memset","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":367524,"byte_end":367539,"line_start":45,"line_end":45,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7319},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":367577,"byte_end":367584,"line_start":48,"line_end":48,"column_start":5,"column_end":12},"name":"Memmove","qualname":"::ir::libcall::LibCall::Memmove","value":"LibCall::Memmove","parent":{"krate":0,"index":7296},"children":[],"decl_id":null,"docs":" libc.memmove\n","sig":null,"attributes":[{"value":"/ libc.memmove","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":367556,"byte_end":367572,"line_start":47,"line_end":47,"column_start":5,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":7296},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":367071,"byte_end":367078,"line_start":23,"line_end":23,"column_start":10,"column_end":17},"name":"LibCall","qualname":"::ir::libcall::LibCall","value":"LibCall::{Probestack, CeilF32, CeilF64, FloorF32, FloorF64, TruncF32, TruncF64, NearestF32, NearestF64, Memcpy, Memset, Memmove}","parent":null,"children":[{"krate":0,"index":7297},{"krate":0,"index":7299},{"krate":0,"index":7301},{"krate":0,"index":7303},{"krate":0,"index":7305},{"krate":0,"index":7307},{"krate":0,"index":7309},{"krate":0,"index":7311},{"krate":0,"index":7313},{"krate":0,"index":7315},{"krate":0,"index":7317},{"krate":0,"index":7319}],"decl_id":null,"docs":" The name of a runtime library routine.","sig":null,"attributes":[{"value":"/ The name of a runtime library routine.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":366501,"byte_end":366543,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":366544,"byte_end":366547,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Runtime library calls are generated for Cranelift IR instructions that don't have an equivalent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":366548,"byte_end":366647,"line_start":15,"line_end":15,"column_start":1,"column_end":100}},{"value":"/ ISA instruction or an easy macro expansion. A `LibCall` is used as a well-known name to refer to","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":366648,"byte_end":366748,"line_start":16,"line_end":16,"column_start":1,"column_end":101}},{"value":"/ the runtime library routine. This way, Cranelift doesn't have to know about the naming","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":366749,"byte_end":366839,"line_start":17,"line_end":17,"column_start":1,"column_end":91}},{"value":"/ convention in the embedding VM's runtime library.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":366840,"byte_end":366893,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":366894,"byte_end":366897,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This list is likely to grow over time.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":366898,"byte_end":366940,"line_start":20,"line_end":20,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":368709,"byte_end":368717,"line_start":84,"line_end":84,"column_start":12,"column_end":20},"name":"for_inst","qualname":"<LibCall>::for_inst","value":"fn (opcode: Opcode, ctrl_type: Type) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get the well-known library call name to use as a replacement for an instruction with the\n given opcode and controlling type variable.","sig":null,"attributes":[{"value":"/ Get the well-known library call name to use as a replacement for an instruction with the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":368455,"byte_end":368547,"line_start":80,"line_end":80,"column_start":5,"column_end":97}},{"value":"/ given opcode and controlling type variable.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":368552,"byte_end":368599,"line_start":81,"line_end":81,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":368604,"byte_end":368607,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if no well-known library routine name exists for that instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":368612,"byte_end":368697,"line_start":83,"line_end":83,"column_start":5,"column_end":90}}]},{"kind":"Function","id":{"krate":0,"index":1413},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":370034,"byte_end":370056,"line_start":123,"line_end":123,"column_start":8,"column_end":30},"name":"get_probestack_funcref","qualname":"::ir::libcall::get_probestack_funcref","value":"fn (func: &mut Function, reg_type: Type, arg_reg: RegUnit, isa: &dyn TargetIsa) -> FuncRef","parent":null,"children":[],"decl_id":null,"docs":" Get a function reference for the probestack function in `func`.","sig":null,"attributes":[{"value":"/ Get a function reference for the probestack function in `func`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":369882,"byte_end":369949,"line_start":120,"line_end":120,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":369950,"byte_end":369953,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ If there is an existing reference, use it, otherwise make a new one.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":369954,"byte_end":370026,"line_start":122,"line_end":122,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":7335},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":373458,"byte_end":373466,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"MemFlags","qualname":"::ir::memflags::MemFlags","value":"MemFlags {  }","parent":null,"children":[{"krate":0,"index":7336}],"decl_id":null,"docs":" Flags for memory operations like load/store.","sig":null,"attributes":[{"value":"/ Flags for memory operations like load/store.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":373075,"byte_end":373123,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":373124,"byte_end":373127,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Each of these flags introduce a limited form of undefined behavior. The flags each enable","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":373128,"byte_end":373221,"line_start":15,"line_end":15,"column_start":1,"column_end":94}},{"value":"/ certain optimizations that need to make additional assumptions. Generally, the semantics of a","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":373222,"byte_end":373319,"line_start":16,"line_end":16,"column_start":1,"column_end":98}},{"value":"/ program does not change when a flag is removed, but adding a flag will.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":373320,"byte_end":373395,"line_start":17,"line_end":17,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1431},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":373554,"byte_end":373557,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<MemFlags>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty set of flags.\n","sig":null,"attributes":[{"value":"/ Create a new empty set of flags.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":373506,"byte_end":373542,"line_start":24,"line_end":24,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1432},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":373751,"byte_end":373758,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"trusted","qualname":"<MemFlags>::trusted","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a set of flags representing an access from a \"trusted\" address, meaning it's\n known to be aligned and non-trapping.\n","sig":null,"attributes":[{"value":"/ Create a set of flags representing an access from a \"trusted\" address, meaning it's","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":373606,"byte_end":373693,"line_start":29,"line_end":29,"column_start":5,"column_end":92}},{"value":"/ known to be aligned and non-trapping.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":373698,"byte_end":373739,"line_start":30,"line_end":30,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1435},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":374252,"byte_end":374263,"line_start":51,"line_end":51,"column_start":12,"column_end":23},"name":"set_by_name","qualname":"<MemFlags>::set_by_name","value":"fn (&mut self, name: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Set a flag bit by name.","sig":null,"attributes":[{"value":"/ Set a flag bit by name.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":374121,"byte_end":374148,"line_start":48,"line_end":48,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":374153,"byte_end":374156,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Returns true if the flag was found and set, false for an unknown flag name.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":374161,"byte_end":374240,"line_start":50,"line_end":50,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1437},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":374999,"byte_end":375005,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"notrap","qualname":"<MemFlags>::notrap","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test if the `notrap` flag is set.","sig":null,"attributes":[{"value":"/ Test if the `notrap` flag is set.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":374500,"byte_end":374537,"line_start":61,"line_end":61,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":374542,"byte_end":374545,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Normally, trapping is part of the semantics of a load/store operation. If the platform","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":374550,"byte_end":374640,"line_start":63,"line_end":63,"column_start":5,"column_end":95}},{"value":"/ would cause a trap when accessing the effective address, the Cranelift memory operation is","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":374645,"byte_end":374739,"line_start":64,"line_end":64,"column_start":5,"column_end":99}},{"value":"/ also required to trap.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":374744,"byte_end":374770,"line_start":65,"line_end":65,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":374775,"byte_end":374778,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ The `notrap` flag tells Cranelift that the memory is *accessible*, which means that","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":374783,"byte_end":374870,"line_start":67,"line_end":67,"column_start":5,"column_end":92}},{"value":"/ accesses will not trap. This makes it possible to delete an unused load or a dead store","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":374875,"byte_end":374966,"line_start":68,"line_end":68,"column_start":5,"column_end":96}},{"value":"/ instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":374971,"byte_end":374987,"line_start":69,"line_end":69,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1438},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":375106,"byte_end":375116,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"name":"set_notrap","qualname":"<MemFlags>::set_notrap","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the `notrap` flag.\n","sig":null,"attributes":[{"value":"/ Set the `notrap` flag.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":375068,"byte_end":375094,"line_start":74,"line_end":74,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1439},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":375474,"byte_end":375481,"line_start":84,"line_end":84,"column_start":12,"column_end":19},"name":"aligned","qualname":"<MemFlags>::aligned","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test if the `aligned` flag is set.","sig":null,"attributes":[{"value":"/ Test if the `aligned` flag is set.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":375175,"byte_end":375213,"line_start":79,"line_end":79,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":375218,"byte_end":375221,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ By default, Cranelift memory instructions work with any unaligned effective address. If the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":375226,"byte_end":375321,"line_start":81,"line_end":81,"column_start":5,"column_end":100}},{"value":"/ `aligned` flag is set, the instruction is permitted to trap or return a wrong result if the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":375326,"byte_end":375421,"line_start":82,"line_end":82,"column_start":5,"column_end":100}},{"value":"/ effective address is misaligned.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":375426,"byte_end":375462,"line_start":83,"line_end":83,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1440},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":375584,"byte_end":375595,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"set_aligned","qualname":"<MemFlags>::set_aligned","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the `aligned` flag.\n","sig":null,"attributes":[{"value":"/ Set the `aligned` flag.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":375545,"byte_end":375572,"line_start":88,"line_end":88,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1441},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":375932,"byte_end":375940,"line_start":98,"line_end":98,"column_start":12,"column_end":20},"name":"readonly","qualname":"<MemFlags>::readonly","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test if the `readonly` flag is set.","sig":null,"attributes":[{"value":"/ Test if the `readonly` flag is set.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":375655,"byte_end":375694,"line_start":93,"line_end":93,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":375699,"byte_end":375702,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Loads with this flag have no memory dependencies.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":375707,"byte_end":375760,"line_start":95,"line_end":95,"column_start":5,"column_end":58}},{"value":"/ This results in undefined behavior if the dereferenced memory is mutated at any time","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":375765,"byte_end":375853,"line_start":96,"line_end":96,"column_start":5,"column_end":93}},{"value":"/ between when the function is called and when it is exited.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":375858,"byte_end":375920,"line_start":97,"line_end":97,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1442},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":376045,"byte_end":376057,"line_start":103,"line_end":103,"column_start":12,"column_end":24},"name":"set_readonly","qualname":"<MemFlags>::set_readonly","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the `readonly` flag.\n","sig":null,"attributes":[{"value":"/ Set the `readonly` flag.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":376005,"byte_end":376033,"line_start":102,"line_end":102,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":7352},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":376847,"byte_end":376859,"line_start":17,"line_end":17,"column_start":12,"column_end":24},"name":"ProgramPoint","qualname":"::ir::progpoint::ProgramPoint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `ProgramPoint` represents a position in a function where the live range of an SSA value can\n begin or end. It can be either:","sig":null,"attributes":[{"value":"/ A `ProgramPoint` represents a position in a function where the live range of an SSA value can","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":376523,"byte_end":376620,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ begin or end. It can be either:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":376621,"byte_end":376656,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":376657,"byte_end":376660,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ 1. An instruction or","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":376661,"byte_end":376685,"line_start":12,"line_end":12,"column_start":1,"column_end":25}},{"value":"/ 2. An block header.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":376686,"byte_end":376709,"line_start":13,"line_end":13,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":376710,"byte_end":376713,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This corresponds more or less to the lines in the textual form of Cranelift IR.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":376714,"byte_end":376797,"line_start":15,"line_end":15,"column_start":1,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7366},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":377708,"byte_end":377712,"line_start":49,"line_end":49,"column_start":5,"column_end":9},"name":"Inst","qualname":"::ir::progpoint::ExpandedProgramPoint::Inst","value":"ExpandedProgramPoint::Inst(Inst)","parent":{"krate":0,"index":7365},"children":[],"decl_id":null,"docs":" An instruction in the function.\n","sig":null,"attributes":[{"value":"/ An instruction in the function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":377668,"byte_end":377703,"line_start":48,"line_end":48,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7369},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":377749,"byte_end":377754,"line_start":51,"line_end":51,"column_start":5,"column_end":10},"name":"Block","qualname":"::ir::progpoint::ExpandedProgramPoint::Block","value":"ExpandedProgramPoint::Block(Block)","parent":{"krate":0,"index":7365},"children":[],"decl_id":null,"docs":" An block header.\n","sig":null,"attributes":[{"value":"/ An block header.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":377724,"byte_end":377744,"line_start":50,"line_end":50,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":7365},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":377641,"byte_end":377661,"line_start":47,"line_end":47,"column_start":10,"column_end":30},"name":"ExpandedProgramPoint","qualname":"::ir::progpoint::ExpandedProgramPoint","value":"ExpandedProgramPoint::{Inst, Block}","parent":null,"children":[{"krate":0,"index":7366},{"krate":0,"index":7369}],"decl_id":null,"docs":" An expanded program point directly exposes the variants, but takes twice the space to\n represent.\n","sig":null,"attributes":[{"value":"/ An expanded program point directly exposes the variants, but takes twice the space to","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":377489,"byte_end":377578,"line_start":44,"line_end":44,"column_start":1,"column_end":90}},{"value":"/ represent.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":377579,"byte_end":377593,"line_start":45,"line_end":45,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":377852,"byte_end":377863,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"unwrap_inst","qualname":"<ExpandedProgramPoint>::unwrap_inst","value":"fn (self) -> Inst","parent":null,"children":[],"decl_id":null,"docs":" Get the instruction we know is inside.\n","sig":null,"attributes":[{"value":"/ Get the instruction we know is inside.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":377798,"byte_end":377840,"line_start":55,"line_end":55,"column_start":5,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":1478},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":379656,"byte_end":379668,"line_start":127,"line_end":127,"column_start":11,"column_end":23},"name":"ProgramOrder","qualname":"::ir::progpoint::ProgramOrder","value":"ProgramOrder","parent":null,"children":[{"krate":0,"index":1479},{"krate":0,"index":1482}],"decl_id":null,"docs":" Context for ordering program points.","sig":null,"attributes":[{"value":"/ Context for ordering program points.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":379461,"byte_end":379501,"line_start":123,"line_end":123,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":379502,"byte_end":379505,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ `ProgramPoint` objects don't carry enough information to be ordered independently, they need a","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":379506,"byte_end":379604,"line_start":125,"line_end":125,"column_start":1,"column_end":99}},{"value":"/ context providing the program order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":379605,"byte_end":379645,"line_start":126,"line_end":126,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1479},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":380118,"byte_end":380121,"line_start":135,"line_end":135,"column_start":8,"column_end":11},"name":"cmp","qualname":"::ir::progpoint::ProgramOrder::cmp","value":"fn <A, B> (&self, a: A, b: B) -> cmp::Ordering","parent":{"krate":0,"index":1478},"children":[],"decl_id":null,"docs":" Compare the program points `a` and `b` relative to this program order.","sig":null,"attributes":[{"value":"/ Compare the program points `a` and `b` relative to this program order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":379675,"byte_end":379749,"line_start":128,"line_end":128,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":379754,"byte_end":379757,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ Return `Less` if `a` appears in the program before `b`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":379762,"byte_end":379821,"line_start":130,"line_end":130,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":379826,"byte_end":379829,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This is declared as a generic such that it can be called with `Inst` and `Block` arguments","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":379834,"byte_end":379928,"line_start":132,"line_end":132,"column_start":5,"column_end":99}},{"value":"/ directly. Depending on the implementation, there is a good chance performance will be","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":379933,"byte_end":380022,"line_start":133,"line_end":133,"column_start":5,"column_end":94}},{"value":"/ improved for those cases where the type of either argument is known statically.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":380027,"byte_end":380110,"line_start":134,"line_end":134,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1482},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":380448,"byte_end":380460,"line_start":143,"line_end":143,"column_start":8,"column_end":20},"name":"is_block_gap","qualname":"::ir::progpoint::ProgramOrder::is_block_gap","value":"fn (&self, inst: Inst, block: Block) -> bool","parent":{"krate":0,"index":1478},"children":[],"decl_id":null,"docs":" Is the range from `inst` to `block` just the gap between consecutive blocks?","sig":null,"attributes":[{"value":"/ Is the range from `inst` to `block` just the gap between consecutive blocks?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":380257,"byte_end":380337,"line_start":140,"line_end":140,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":380342,"byte_end":380345,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This returns true if `inst` is the terminator in the block immediately before `block`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":380350,"byte_end":380440,"line_start":142,"line_end":142,"column_start":5,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":7382},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/sourceloc.rs","byte_start":381690,"byte_end":381699,"line_start":19,"line_end":19,"column_start":12,"column_end":21},"name":"SourceLoc","qualname":"::ir::sourceloc::SourceLoc","value":"","parent":null,"children":[],"decl_id":null,"docs":" A source location.","sig":null,"attributes":[{"value":"/ A source location.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/sourceloc.rs","byte_start":381192,"byte_end":381214,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/sourceloc.rs","byte_start":381215,"byte_end":381218,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is an opaque 32-bit number attached to each Cranelift IR instruction. Cranelift does not","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/sourceloc.rs","byte_start":381219,"byte_end":381316,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ interpret source locations in any way, they are simply preserved from the input to the output.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/sourceloc.rs","byte_start":381317,"byte_end":381415,"line_start":13,"line_end":13,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/sourceloc.rs","byte_start":381416,"byte_end":381419,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The default source location uses the all-ones bit pattern `!0`. It is used for instructions","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/sourceloc.rs","byte_start":381420,"byte_end":381515,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ that can't be given a real source location.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/sourceloc.rs","byte_start":381516,"byte_end":381563,"line_start":16,"line_end":16,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1486},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/sourceloc.rs","byte_start":381793,"byte_end":381796,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"new","qualname":"<SourceLoc>::new","value":"fn (bits: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new source location with the given bits.\n","sig":null,"attributes":[{"value":"/ Create a new source location with the given bits.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/sourceloc.rs","byte_start":381728,"byte_end":381781,"line_start":22,"line_end":22,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1487},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/sourceloc.rs","byte_start":381900,"byte_end":381910,"line_start":28,"line_end":28,"column_start":12,"column_end":22},"name":"is_default","qualname":"<SourceLoc>::is_default","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this the default source location?\n","sig":null,"attributes":[{"value":"/ Is this the default source location?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/sourceloc.rs","byte_start":381848,"byte_end":381888,"line_start":27,"line_end":27,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1488},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/sourceloc.rs","byte_start":382027,"byte_end":382031,"line_start":33,"line_end":33,"column_start":12,"column_end":16},"name":"bits","qualname":"<SourceLoc>::bits","value":"fn (self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Read the bits of this source location.\n","sig":null,"attributes":[{"value":"/ Read the bits of this source location.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/sourceloc.rs","byte_start":381973,"byte_end":382015,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":1493},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stackslot","qualname":"::ir::stackslot","value":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","parent":null,"children":[{"krate":0,"index":1494},{"krate":0,"index":1499},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":7397},{"krate":0,"index":7419},{"krate":0,"index":7418},{"krate":0,"index":7416},{"krate":0,"index":7413},{"krate":0,"index":7414},{"krate":0,"index":7410},{"krate":0,"index":7411},{"krate":0,"index":1515},{"krate":0,"index":1519},{"krate":0,"index":7421},{"krate":0,"index":7434},{"krate":0,"index":7432},{"krate":0,"index":7428},{"krate":0,"index":7429},{"krate":0,"index":7425},{"krate":0,"index":7426},{"krate":0,"index":1522},{"krate":0,"index":1525},{"krate":0,"index":7436},{"krate":0,"index":7449},{"krate":0,"index":7448},{"krate":0,"index":7446},{"krate":0,"index":7442},{"krate":0,"index":7443},{"krate":0,"index":7439},{"krate":0,"index":7440},{"krate":0,"index":7451},{"krate":0,"index":7465},{"krate":0,"index":7463},{"krate":0,"index":7459},{"krate":0,"index":7460},{"krate":0,"index":7456},{"krate":0,"index":7457},{"krate":0,"index":1527},{"krate":0,"index":1538},{"krate":0,"index":1541},{"krate":0,"index":1543}],"decl_id":null,"docs":" Stack slots.","sig":null,"attributes":[{"value":"! Stack slots.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":382761,"byte_end":382777,"line_start":1,"line_end":1,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":382778,"byte_end":382781,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The `StackSlotData` struct keeps track of a single stack slot in a function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":382782,"byte_end":382862,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":382863,"byte_end":382866,"line_start":4,"line_end":4,"column_start":1,"column_end":4}}]},{"kind":"Type","id":{"krate":0,"index":1511},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":383487,"byte_end":383496,"line_start":24,"line_end":24,"column_start":10,"column_end":19},"name":"StackSize","qualname":"::ir::stackslot::StackSize","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" The size of an object on the stack, or the size of a stack frame.","sig":null,"attributes":[{"value":"/ The size of an object on the stack, or the size of a stack frame.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":383194,"byte_end":383263,"line_start":19,"line_end":19,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":383264,"byte_end":383267,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ We don't use `usize` to represent object sizes on the target platform because Cranelift supports","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":383268,"byte_end":383368,"line_start":21,"line_end":21,"column_start":1,"column_end":101}},{"value":"/ cross-compilation, and `usize` is a type that depends on the host platform, not the target","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":383369,"byte_end":383463,"line_start":22,"line_end":22,"column_start":1,"column_end":95}},{"value":"/ platform.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":383464,"byte_end":383477,"line_start":23,"line_end":23,"column_start":1,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":1512},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":383619,"byte_end":383630,"line_start":29,"line_end":29,"column_start":10,"column_end":21},"name":"StackOffset","qualname":"::ir::stackslot::StackOffset","value":"i32","parent":null,"children":[],"decl_id":null,"docs":" A stack offset.","sig":null,"attributes":[{"value":"/ A stack offset.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":383505,"byte_end":383524,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":383525,"byte_end":383528,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ The location of a stack offset relative to a stack pointer or frame pointer.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":383529,"byte_end":383609,"line_start":28,"line_end":28,"column_start":1,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7398},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":384234,"byte_end":384243,"line_start":47,"line_end":47,"column_start":5,"column_end":14},"name":"SpillSlot","qualname":"::ir::stackslot::StackSlotKind::SpillSlot","value":"StackSlotKind::SpillSlot","parent":{"krate":0,"index":7397},"children":[],"decl_id":null,"docs":" A spill slot. This is a stack slot created by the register allocator.\n","sig":null,"attributes":[{"value":"/ A spill slot. This is a stack slot created by the register allocator.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":384156,"byte_end":384229,"line_start":46,"line_end":46,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7400},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":384382,"byte_end":384394,"line_start":51,"line_end":51,"column_start":5,"column_end":17},"name":"ExplicitSlot","qualname":"::ir::stackslot::StackSlotKind::ExplicitSlot","value":"StackSlotKind::ExplicitSlot","parent":{"krate":0,"index":7397},"children":[],"decl_id":null,"docs":" An explicit stack slot. This is a chunk of stack memory for use by the `stack_load`\n and `stack_store` instructions.\n","sig":null,"attributes":[{"value":"/ An explicit stack slot. This is a chunk of stack memory for use by the `stack_load`","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":384250,"byte_end":384337,"line_start":49,"line_end":49,"column_start":5,"column_end":92}},{"value":"/ and `stack_store` instructions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":384342,"byte_end":384377,"line_start":50,"line_end":50,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7402},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":384691,"byte_end":384702,"line_start":58,"line_end":58,"column_start":5,"column_end":16},"name":"IncomingArg","qualname":"::ir::stackslot::StackSlotKind::IncomingArg","value":"StackSlotKind::IncomingArg","parent":{"krate":0,"index":7397},"children":[],"decl_id":null,"docs":" An incoming function argument.","sig":null,"attributes":[{"value":"/ An incoming function argument.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":384401,"byte_end":384435,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":384440,"byte_end":384443,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ If the current function has more arguments than fits in registers, the remaining arguments","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":384448,"byte_end":384542,"line_start":55,"line_end":55,"column_start":5,"column_end":99}},{"value":"/ are passed on the stack by the caller. These incoming arguments are represented as SSA","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":384547,"byte_end":384637,"line_start":56,"line_end":56,"column_start":5,"column_end":95}},{"value":"/ values assigned to incoming stack slots.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":384642,"byte_end":384686,"line_start":57,"line_end":57,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7404},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":385013,"byte_end":385024,"line_start":65,"line_end":65,"column_start":5,"column_end":16},"name":"OutgoingArg","qualname":"::ir::stackslot::StackSlotKind::OutgoingArg","value":"StackSlotKind::OutgoingArg","parent":{"krate":0,"index":7397},"children":[],"decl_id":null,"docs":" An outgoing function argument.","sig":null,"attributes":[{"value":"/ An outgoing function argument.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":384709,"byte_end":384743,"line_start":60,"line_end":60,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":384748,"byte_end":384751,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ When preparing to call a function whose arguments don't fit in registers, outgoing argument","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":384756,"byte_end":384851,"line_start":62,"line_end":62,"column_start":5,"column_end":100}},{"value":"/ stack slots are used to represent individual arguments in the outgoing call frame. These","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":384856,"byte_end":384948,"line_start":63,"line_end":63,"column_start":5,"column_end":97}},{"value":"/ stack slots are only valid while setting up a call.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":384953,"byte_end":385008,"line_start":64,"line_end":64,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7406},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":385487,"byte_end":385503,"line_start":74,"line_end":74,"column_start":5,"column_end":21},"name":"StructReturnSlot","qualname":"::ir::stackslot::StackSlotKind::StructReturnSlot","value":"StackSlotKind::StructReturnSlot","parent":{"krate":0,"index":7397},"children":[],"decl_id":null,"docs":" Space allocated in the caller's frame for the callee's return values\n that are passed out via return pointer.","sig":null,"attributes":[{"value":"/ Space allocated in the caller's frame for the callee's return values","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":385031,"byte_end":385103,"line_start":67,"line_end":67,"column_start":5,"column_end":77}},{"value":"/ that are passed out via return pointer.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":385108,"byte_end":385151,"line_start":68,"line_end":68,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":385156,"byte_end":385159,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ If there are more return values than registers available for the callee's calling","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":385164,"byte_end":385249,"line_start":70,"line_end":70,"column_start":5,"column_end":90}},{"value":"/ convention, or the return value is larger than the available registers' space, then we","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":385254,"byte_end":385344,"line_start":71,"line_end":71,"column_start":5,"column_end":95}},{"value":"/ allocate stack space in this frame and pass a pointer to the callee, which then writes its","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":385349,"byte_end":385443,"line_start":72,"line_end":72,"column_start":5,"column_end":99}},{"value":"/ return values into this space.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":385448,"byte_end":385482,"line_start":73,"line_end":73,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7408},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":385734,"byte_end":385747,"line_start":80,"line_end":80,"column_start":5,"column_end":18},"name":"EmergencySlot","qualname":"::ir::stackslot::StackSlotKind::EmergencySlot","value":"StackSlotKind::EmergencySlot","parent":{"krate":0,"index":7397},"children":[],"decl_id":null,"docs":" An emergency spill slot.","sig":null,"attributes":[{"value":"/ An emergency spill slot.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":385510,"byte_end":385538,"line_start":76,"line_end":76,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":385543,"byte_end":385546,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Emergency slots are allocated late when the register's constraint solver needs extra space","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":385551,"byte_end":385645,"line_start":78,"line_end":78,"column_start":5,"column_end":99}},{"value":"/ to shuffle registers around. They are only used briefly, and can be reused.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":385650,"byte_end":385729,"line_start":79,"line_end":79,"column_start":5,"column_end":84}}]},{"kind":"Enum","id":{"krate":0,"index":7397},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":384136,"byte_end":384149,"line_start":45,"line_end":45,"column_start":10,"column_end":23},"name":"StackSlotKind","qualname":"::ir::stackslot::StackSlotKind","value":"StackSlotKind::{SpillSlot, ExplicitSlot, IncomingArg, OutgoingArg, StructReturnSlot, EmergencySlot}","parent":null,"children":[{"krate":0,"index":7398},{"krate":0,"index":7400},{"krate":0,"index":7402},{"krate":0,"index":7404},{"krate":0,"index":7406},{"krate":0,"index":7408}],"decl_id":null,"docs":" The kind of a stack slot.\n","sig":null,"attributes":[{"value":"/ The kind of a stack slot.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":383982,"byte_end":384011,"line_start":42,"line_end":42,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":7421},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":386836,"byte_end":386849,"line_start":117,"line_end":117,"column_start":12,"column_end":25},"name":"StackSlotData","qualname":"::ir::stackslot::StackSlotData","value":"StackSlotData { kind, size, offset }","parent":null,"children":[{"krate":0,"index":7422},{"krate":0,"index":7423},{"krate":0,"index":7424}],"decl_id":null,"docs":" Contents of a stack slot.\n","sig":null,"attributes":[{"value":"/ Contents of a stack slot.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":386686,"byte_end":386715,"line_start":114,"line_end":114,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":7422},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":386892,"byte_end":386896,"line_start":119,"line_end":119,"column_start":9,"column_end":13},"name":"kind","qualname":"::ir::stackslot::StackSlotData::kind","value":"ir::stackslot::StackSlotKind","parent":{"krate":0,"index":7421},"children":[],"decl_id":null,"docs":" The kind of stack slot.\n","sig":null,"attributes":[{"value":"/ The kind of stack slot.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":386856,"byte_end":386883,"line_start":118,"line_end":118,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":7423},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":386959,"byte_end":386963,"line_start":122,"line_end":122,"column_start":9,"column_end":13},"name":"size","qualname":"::ir::stackslot::StackSlotData::size","value":"u32","parent":{"krate":0,"index":7421},"children":[],"decl_id":null,"docs":" Size of stack slot in bytes.\n","sig":null,"attributes":[{"value":"/ Size of stack slot in bytes.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":386918,"byte_end":386950,"line_start":121,"line_end":121,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":7424},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":387407,"byte_end":387413,"line_start":131,"line_end":131,"column_start":9,"column_end":15},"name":"offset","qualname":"::ir::stackslot::StackSlotData::offset","value":"core::option::Option<i32>","parent":{"krate":0,"index":7421},"children":[],"decl_id":null,"docs":" Offset of stack slot relative to the stack pointer in the caller.","sig":null,"attributes":[{"value":"/ Offset of stack slot relative to the stack pointer in the caller.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":386981,"byte_end":387050,"line_start":124,"line_end":124,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":387055,"byte_end":387058,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ On x86, the base address is the stack pointer *before* the return address was pushed. On","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":387063,"byte_end":387155,"line_start":126,"line_end":126,"column_start":5,"column_end":97}},{"value":"/ RISC ISAs, the base address is the value of the stack pointer on entry to the function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":387160,"byte_end":387251,"line_start":127,"line_end":127,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":387256,"byte_end":387259,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ For `OutgoingArg` stack slots, the offset is relative to the current function's stack","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":387264,"byte_end":387353,"line_start":129,"line_end":129,"column_start":5,"column_end":94}},{"value":"/ pointer immediately before the call.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":387358,"byte_end":387398,"line_start":130,"line_end":130,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1523},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":387529,"byte_end":387532,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"new","qualname":"<StackSlotData>::new","value":"fn (kind: StackSlotKind, size: StackSize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a stack slot with the specified byte size.\n","sig":null,"attributes":[{"value":"/ Create a stack slot with the specified byte size.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":387464,"byte_end":387517,"line_start":135,"line_end":135,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1524},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":387775,"byte_end":387784,"line_start":145,"line_end":145,"column_start":12,"column_end":21},"name":"alignment","qualname":"<StackSlotData>::alignment","value":"fn (&self, max_align: StackSize) -> StackSize","parent":null,"children":[],"decl_id":null,"docs":" Get the alignment in bytes of this stack slot given the stack pointer alignment.\n","sig":null,"attributes":[{"value":"/ Get the alignment in bytes of this stack slot given the stack pointer alignment.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":387679,"byte_end":387763,"line_start":144,"line_end":144,"column_start":5,"column_end":89}}]},{"kind":"Struct","id":{"krate":0,"index":7436},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":388650,"byte_end":388665,"line_start":170,"line_end":170,"column_start":12,"column_end":27},"name":"StackLayoutInfo","qualname":"::ir::stackslot::StackLayoutInfo","value":"StackLayoutInfo { frame_size, inbound_args_size }","parent":null,"children":[{"krate":0,"index":7437},{"krate":0,"index":7438}],"decl_id":null,"docs":" Stack frame layout information.","sig":null,"attributes":[{"value":"/ Stack frame layout information.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":388431,"byte_end":388466,"line_start":165,"line_end":165,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":388467,"byte_end":388470,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ This is computed by the `layout_stack()` method.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":388471,"byte_end":388523,"line_start":167,"line_end":167,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":7437},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":388950,"byte_end":388960,"line_start":176,"line_end":176,"column_start":9,"column_end":19},"name":"frame_size","qualname":"::ir::stackslot::StackLayoutInfo::frame_size","value":"u32","parent":{"krate":0,"index":7436},"children":[],"decl_id":null,"docs":" The total size of the stack frame.","sig":null,"attributes":[{"value":"/ The total size of the stack frame.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":388672,"byte_end":388710,"line_start":171,"line_end":171,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":388715,"byte_end":388718,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ This is the distance from the stack pointer in the current function to the stack pointer in","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":388723,"byte_end":388818,"line_start":173,"line_end":173,"column_start":5,"column_end":100}},{"value":"/ the calling function, so it includes a pushed return address as well as space for outgoing","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":388823,"byte_end":388917,"line_start":174,"line_end":174,"column_start":5,"column_end":99}},{"value":"/ call arguments.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":388922,"byte_end":388941,"line_start":175,"line_end":175,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":7438},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":389068,"byte_end":389085,"line_start":179,"line_end":179,"column_start":9,"column_end":26},"name":"inbound_args_size","qualname":"::ir::stackslot::StackLayoutInfo::inbound_args_size","value":"u32","parent":{"krate":0,"index":7436},"children":[],"decl_id":null,"docs":" The total size of the stack frame for inbound arguments pushed by the caller.\n","sig":null,"attributes":[{"value":"/ The total size of the stack frame for inbound arguments pushed by the caller.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":388978,"byte_end":389059,"line_start":178,"line_end":178,"column_start":5,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":7451},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":389308,"byte_end":389318,"line_start":187,"line_end":187,"column_start":12,"column_end":22},"name":"StackSlots","qualname":"::ir::stackslot::StackSlots","value":"StackSlots { layout_info }","parent":null,"children":[{"krate":0,"index":7452},{"krate":0,"index":7453},{"krate":0,"index":7454},{"krate":0,"index":7455}],"decl_id":null,"docs":" Stack frame manager.","sig":null,"attributes":[{"value":"/ Stack frame manager.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":389101,"byte_end":389125,"line_start":182,"line_end":182,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":389126,"byte_end":389129,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ Keep track of all the stack slots used by a function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":389130,"byte_end":389187,"line_start":184,"line_end":184,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":7455},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":389624,"byte_end":389635,"line_start":198,"line_end":198,"column_start":9,"column_end":20},"name":"layout_info","qualname":"::ir::stackslot::StackSlots::layout_info","value":"core::option::Option<ir::stackslot::StackLayoutInfo>","parent":{"krate":0,"index":7451},"children":[],"decl_id":null,"docs":" Layout information computed from `layout_stack`.\n","sig":null,"attributes":[{"value":"/ Layout information computed from `layout_stack`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":389563,"byte_end":389615,"line_start":197,"line_end":197,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1528},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":389810,"byte_end":389813,"line_start":204,"line_end":204,"column_start":12,"column_end":15},"name":"new","qualname":"<StackSlots>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an empty stack slot manager.\n","sig":null,"attributes":[{"value":"/ Create an empty stack slot manager.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":389759,"byte_end":389798,"line_start":203,"line_end":203,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1529},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":390037,"byte_end":390042,"line_start":214,"line_end":214,"column_start":12,"column_end":17},"name":"clear","qualname":"<StackSlots>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear out everything.\n","sig":null,"attributes":[{"value":"/ Clear out everything.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":390000,"byte_end":390025,"line_start":213,"line_end":213,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1530},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":390409,"byte_end":390413,"line_start":225,"line_end":225,"column_start":12,"column_end":16},"name":"push","qualname":"<StackSlots>::push","value":"fn (&mut self, data: StackSlotData) -> StackSlot","parent":null,"children":[],"decl_id":null,"docs":" Allocate a new stack slot.","sig":null,"attributes":[{"value":"/ Allocate a new stack slot.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":390191,"byte_end":390221,"line_start":221,"line_end":221,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":390226,"byte_end":390229,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ This function should be primarily used by the text format parser. There are more convenient","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":390234,"byte_end":390329,"line_start":223,"line_end":223,"column_start":5,"column_end":100}},{"value":"/ functions for creating specific kinds of stack slots below.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":390334,"byte_end":390397,"line_start":224,"line_end":224,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1531},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":390564,"byte_end":390572,"line_start":230,"line_end":230,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<StackSlots>::is_valid","value":"fn (&self, ss: StackSlot) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if `ss` is a valid stack slot reference.\n","sig":null,"attributes":[{"value":"/ Check if `ss` is a valid stack slot reference.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":390502,"byte_end":390552,"line_start":229,"line_end":229,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1532},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":390709,"byte_end":390713,"line_start":235,"line_end":235,"column_start":12,"column_end":16},"name":"iter","qualname":"<StackSlots>::iter","value":"fn (&self) -> Iter<StackSlot, StackSlotData>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over all the stack slot keys.\n","sig":null,"attributes":[{"value":"/ Get an iterator over all the stack slot keys.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":390648,"byte_end":390697,"line_start":234,"line_end":234,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1533},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":390872,"byte_end":390880,"line_start":240,"line_end":240,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<StackSlots>::iter_mut","value":"fn (&mut self) -> IterMut<StackSlot, StackSlotData>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over all the stack slot keys, mutable edition.\n","sig":null,"attributes":[{"value":"/ Get an iterator over all the stack slot keys, mutable edition.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":390794,"byte_end":390860,"line_start":239,"line_end":239,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":391036,"byte_end":391042,"line_start":245,"line_end":245,"column_start":12,"column_end":18},"name":"values","qualname":"<StackSlots>::values","value":"fn (&self) -> slice::Iter<StackSlotData>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over all the stack slot records.\n","sig":null,"attributes":[{"value":"/ Get an iterator over all the stack slot records.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":390972,"byte_end":391024,"line_start":244,"line_end":244,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1535},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":391202,"byte_end":391212,"line_start":250,"line_end":250,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<StackSlots>::values_mut","value":"fn (&mut self) -> slice::IterMut<StackSlotData>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over all the stack slot records, mutable edition.\n","sig":null,"attributes":[{"value":"/ Get an iterator over all the stack slot records, mutable edition.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":391121,"byte_end":391190,"line_start":249,"line_end":249,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1536},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":391363,"byte_end":391367,"line_start":255,"line_end":255,"column_start":12,"column_end":16},"name":"keys","qualname":"<StackSlots>::keys","value":"fn (&self) -> Keys<StackSlot>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over all the stack slot keys.\n","sig":null,"attributes":[{"value":"/ Get an iterator over all the stack slot keys.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":391302,"byte_end":391351,"line_start":254,"line_end":254,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1537},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":391578,"byte_end":391586,"line_start":262,"line_end":262,"column_start":12,"column_end":20},"name":"next_key","qualname":"<StackSlots>::next_key","value":"fn (&self) -> StackSlot","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the next stack slot that would be created by `push()`.","sig":null,"attributes":[{"value":"/ Get a reference to the next stack slot that would be created by `push()`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":391433,"byte_end":391510,"line_start":259,"line_end":259,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":391515,"byte_end":391518,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ This should just be used by the parser.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":391523,"byte_end":391566,"line_start":261,"line_end":261,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1544},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":392103,"byte_end":392118,"line_start":284,"line_end":284,"column_start":12,"column_end":27},"name":"make_spill_slot","qualname":"<StackSlots>::make_spill_slot","value":"fn (&mut self, ty: Type) -> StackSlot","parent":null,"children":[],"decl_id":null,"docs":" Create a new spill slot for spilling values of type `ty`.\n","sig":null,"attributes":[{"value":"/ Create a new spill slot for spilling values of type `ty`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":392030,"byte_end":392091,"line_start":283,"line_end":283,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1545},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":392325,"byte_end":392342,"line_start":289,"line_end":289,"column_start":12,"column_end":29},"name":"make_incoming_arg","qualname":"<StackSlots>::make_incoming_arg","value":"fn (&mut self, ty: Type, offset: StackOffset) -> StackSlot","parent":null,"children":[],"decl_id":null,"docs":" Create a stack slot representing an incoming function argument.\n","sig":null,"attributes":[{"value":"/ Create a stack slot representing an incoming function argument.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":392246,"byte_end":392313,"line_start":288,"line_end":288,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1546},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":392968,"byte_end":392984,"line_start":303,"line_end":303,"column_start":12,"column_end":28},"name":"get_outgoing_arg","qualname":"<StackSlots>::get_outgoing_arg","value":"fn (&mut self, ty: Type, offset: StackOffset) -> StackSlot","parent":null,"children":[],"decl_id":null,"docs":" Get a stack slot representing an outgoing argument.","sig":null,"attributes":[{"value":"/ Get a stack slot representing an outgoing argument.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":392640,"byte_end":392695,"line_start":296,"line_end":296,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":392700,"byte_end":392703,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ This may create a new stack slot, or reuse an existing outgoing stack slot with the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":392708,"byte_end":392795,"line_start":298,"line_end":298,"column_start":5,"column_end":92}},{"value":"/ requested offset and size.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":392800,"byte_end":392830,"line_start":299,"line_end":299,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":392835,"byte_end":392838,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ The requested offset is relative to this function's stack pointer immediately before making","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":392843,"byte_end":392938,"line_start":301,"line_end":301,"column_start":5,"column_end":100}},{"value":"/ the call.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":392943,"byte_end":392956,"line_start":302,"line_end":302,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":394004,"byte_end":394022,"line_start":327,"line_end":327,"column_start":12,"column_end":30},"name":"get_emergency_slot","qualname":"<StackSlots>::get_emergency_slot","value":"fn (&mut self, ty: Type, in_use: &[PackedOption<StackSlot>]) -> StackSlot","parent":null,"children":[],"decl_id":null,"docs":" Get an emergency spill slot that can be used to store a `ty` value.","sig":null,"attributes":[{"value":"/ Get an emergency spill slot that can be used to store a `ty` value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":393775,"byte_end":393846,"line_start":323,"line_end":323,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":393851,"byte_end":393854,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ This may allocate a new slot, or it may reuse an existing emergency spill slot, excluding","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":393859,"byte_end":393952,"line_start":325,"line_end":325,"column_start":5,"column_end":98}},{"value":"/ any slots in the `in_use` list.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":393957,"byte_end":393992,"line_start":326,"line_end":326,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":7467},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/table.rs","byte_start":398202,"byte_end":398211,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TableData","qualname":"::ir::table::TableData","value":"TableData { base_gv, min_size, bound_gv, element_size, index_type }","parent":null,"children":[{"krate":0,"index":7468},{"krate":0,"index":7469},{"krate":0,"index":7470},{"krate":0,"index":7471},{"krate":0,"index":7472}],"decl_id":null,"docs":" Information about a table declaration.\n","sig":null,"attributes":[{"value":"/ Information about a table declaration.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/table.rs","byte_start":398131,"byte_end":398173,"line_start":7,"line_end":7,"column_start":1,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":7468},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/table.rs","byte_start":398289,"byte_end":398296,"line_start":11,"line_end":11,"column_start":9,"column_end":16},"name":"base_gv","qualname":"::ir::table::TableData::base_gv","value":"ir::entities::GlobalValue","parent":{"krate":0,"index":7467},"children":[],"decl_id":null,"docs":" Global value giving the address of the start of the table.\n","sig":null,"attributes":[{"value":"/ Global value giving the address of the start of the table.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/table.rs","byte_start":398218,"byte_end":398280,"line_start":10,"line_end":10,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":7469},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/table.rs","byte_start":398440,"byte_end":398448,"line_start":15,"line_end":15,"column_start":9,"column_end":17},"name":"min_size","qualname":"::ir::table::TableData::min_size","value":"ir::immediates::Uimm64","parent":{"krate":0,"index":7467},"children":[],"decl_id":null,"docs":" Guaranteed minimum table size in elements. Table accesses before `min_size` don't need\n bounds checking.\n","sig":null,"attributes":[{"value":"/ Guaranteed minimum table size in elements. Table accesses before `min_size` don't need","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/table.rs","byte_start":398316,"byte_end":398406,"line_start":13,"line_end":13,"column_start":5,"column_end":95}},{"value":"/ bounds checking.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/table.rs","byte_start":398411,"byte_end":398431,"line_start":14,"line_end":14,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":7470},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/table.rs","byte_start":398540,"byte_end":398548,"line_start":18,"line_end":18,"column_start":9,"column_end":17},"name":"bound_gv","qualname":"::ir::table::TableData::bound_gv","value":"ir::entities::GlobalValue","parent":{"krate":0,"index":7467},"children":[],"decl_id":null,"docs":" Global value giving the current bound of the table, in elements.\n","sig":null,"attributes":[{"value":"/ Global value giving the current bound of the table, in elements.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/table.rs","byte_start":398463,"byte_end":398531,"line_start":17,"line_end":17,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":7471},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/table.rs","byte_start":398619,"byte_end":398631,"line_start":21,"line_end":21,"column_start":9,"column_end":21},"name":"element_size","qualname":"::ir::table::TableData::element_size","value":"ir::immediates::Uimm64","parent":{"krate":0,"index":7467},"children":[],"decl_id":null,"docs":" The size of a table element, in bytes.\n","sig":null,"attributes":[{"value":"/ The size of a table element, in bytes.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/table.rs","byte_start":398568,"byte_end":398610,"line_start":20,"line_end":20,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":7472},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/table.rs","byte_start":398688,"byte_end":398698,"line_start":24,"line_end":24,"column_start":9,"column_end":19},"name":"index_type","qualname":"::ir::table::TableData::index_type","value":"ir::types::Type","parent":{"krate":0,"index":7467},"children":[],"decl_id":null,"docs":" The index type for the table.\n","sig":null,"attributes":[{"value":"/ The index type for the table.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/table.rs","byte_start":398646,"byte_end":398679,"line_start":23,"line_end":23,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7476},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":399666,"byte_end":399679,"line_start":18,"line_end":18,"column_start":5,"column_end":18},"name":"StackOverflow","qualname":"::ir::trapcode::TrapCode::StackOverflow","value":"TrapCode::StackOverflow","parent":{"krate":0,"index":7475},"children":[],"decl_id":null,"docs":" The current stack space was exhausted.","sig":null,"attributes":[{"value":"/ The current stack space was exhausted.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":399486,"byte_end":399528,"line_start":14,"line_end":14,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":399533,"byte_end":399536,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ On some platforms, a stack overflow may also be indicated by a segmentation fault from the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":399541,"byte_end":399635,"line_start":16,"line_end":16,"column_start":5,"column_end":99}},{"value":"/ stack guard page.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":399640,"byte_end":399661,"line_start":17,"line_end":17,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7478},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":399940,"byte_end":399955,"line_start":25,"line_end":25,"column_start":5,"column_end":20},"name":"HeapOutOfBounds","qualname":"::ir::trapcode::TrapCode::HeapOutOfBounds","value":"TrapCode::HeapOutOfBounds","parent":{"krate":0,"index":7475},"children":[],"decl_id":null,"docs":" A `heap_addr` instruction detected an out-of-bounds error.","sig":null,"attributes":[{"value":"/ A `heap_addr` instruction detected an out-of-bounds error.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":399686,"byte_end":399748,"line_start":20,"line_end":20,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":399753,"byte_end":399756,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ Note that not all out-of-bounds heap accesses are reported this way;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":399761,"byte_end":399833,"line_start":22,"line_end":22,"column_start":5,"column_end":77}},{"value":"/ some are detected by a segmentation fault on the heap unmapped or","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":399838,"byte_end":399907,"line_start":23,"line_end":23,"column_start":5,"column_end":74}},{"value":"/ offset-guard pages.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":399912,"byte_end":399935,"line_start":24,"line_end":24,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7480},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":400030,"byte_end":400046,"line_start":28,"line_end":28,"column_start":5,"column_end":21},"name":"TableOutOfBounds","qualname":"::ir::trapcode::TrapCode::TableOutOfBounds","value":"TrapCode::TableOutOfBounds","parent":{"krate":0,"index":7475},"children":[],"decl_id":null,"docs":" A `table_addr` instruction detected an out-of-bounds error.\n","sig":null,"attributes":[{"value":"/ A `table_addr` instruction detected an out-of-bounds error.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":399962,"byte_end":400025,"line_start":27,"line_end":27,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7482},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":400090,"byte_end":400101,"line_start":31,"line_end":31,"column_start":5,"column_end":16},"name":"OutOfBounds","qualname":"::ir::trapcode::TrapCode::OutOfBounds","value":"TrapCode::OutOfBounds","parent":{"krate":0,"index":7475},"children":[],"decl_id":null,"docs":" Other bounds checking error.\n","sig":null,"attributes":[{"value":"/ Other bounds checking error.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":400053,"byte_end":400085,"line_start":30,"line_end":30,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7484},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":400153,"byte_end":400171,"line_start":34,"line_end":34,"column_start":5,"column_end":23},"name":"IndirectCallToNull","qualname":"::ir::trapcode::TrapCode::IndirectCallToNull","value":"TrapCode::IndirectCallToNull","parent":{"krate":0,"index":7475},"children":[],"decl_id":null,"docs":" Indirect call to a null table entry.\n","sig":null,"attributes":[{"value":"/ Indirect call to a null table entry.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":400108,"byte_end":400148,"line_start":33,"line_end":33,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7486},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":400223,"byte_end":400235,"line_start":37,"line_end":37,"column_start":5,"column_end":17},"name":"BadSignature","qualname":"::ir::trapcode::TrapCode::BadSignature","value":"TrapCode::BadSignature","parent":{"krate":0,"index":7475},"children":[],"decl_id":null,"docs":" Signature mismatch on indirect call.\n","sig":null,"attributes":[{"value":"/ Signature mismatch on indirect call.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":400178,"byte_end":400218,"line_start":36,"line_end":36,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7488},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":400302,"byte_end":400317,"line_start":40,"line_end":40,"column_start":5,"column_end":20},"name":"IntegerOverflow","qualname":"::ir::trapcode::TrapCode::IntegerOverflow","value":"TrapCode::IntegerOverflow","parent":{"krate":0,"index":7475},"children":[],"decl_id":null,"docs":" An integer arithmetic operation caused an overflow.\n","sig":null,"attributes":[{"value":"/ An integer arithmetic operation caused an overflow.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":400242,"byte_end":400297,"line_start":39,"line_end":39,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7490},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":400361,"byte_end":400382,"line_start":43,"line_end":43,"column_start":5,"column_end":26},"name":"IntegerDivisionByZero","qualname":"::ir::trapcode::TrapCode::IntegerDivisionByZero","value":"TrapCode::IntegerDivisionByZero","parent":{"krate":0,"index":7475},"children":[],"decl_id":null,"docs":" An integer division by zero.\n","sig":null,"attributes":[{"value":"/ An integer division by zero.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":400324,"byte_end":400356,"line_start":42,"line_end":42,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7492},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":400429,"byte_end":400451,"line_start":46,"line_end":46,"column_start":5,"column_end":27},"name":"BadConversionToInteger","qualname":"::ir::trapcode::TrapCode::BadConversionToInteger","value":"TrapCode::BadConversionToInteger","parent":{"krate":0,"index":7475},"children":[],"decl_id":null,"docs":" Failed float-to-int conversion.\n","sig":null,"attributes":[{"value":"/ Failed float-to-int conversion.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":400389,"byte_end":400424,"line_start":45,"line_end":45,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7494},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":400527,"byte_end":400549,"line_start":49,"line_end":49,"column_start":5,"column_end":27},"name":"UnreachableCodeReached","qualname":"::ir::trapcode::TrapCode::UnreachableCodeReached","value":"TrapCode::UnreachableCodeReached","parent":{"krate":0,"index":7475},"children":[],"decl_id":null,"docs":" Code that was supposed to have been unreachable was reached.\n","sig":null,"attributes":[{"value":"/ Code that was supposed to have been unreachable was reached.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":400458,"byte_end":400522,"line_start":48,"line_end":48,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7496},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":400659,"byte_end":400668,"line_start":53,"line_end":53,"column_start":5,"column_end":14},"name":"Interrupt","qualname":"::ir::trapcode::TrapCode::Interrupt","value":"TrapCode::Interrupt","parent":{"krate":0,"index":7475},"children":[],"decl_id":null,"docs":" Execution has potentially run too long and may be interrupted.\n This trap is resumable.\n","sig":null,"attributes":[{"value":"/ Execution has potentially run too long and may be interrupted.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":400556,"byte_end":400622,"line_start":51,"line_end":51,"column_start":5,"column_end":71}},{"value":"/ This trap is resumable.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":400627,"byte_end":400654,"line_start":52,"line_end":52,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7498},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":400709,"byte_end":400713,"line_start":56,"line_end":56,"column_start":5,"column_end":9},"name":"User","qualname":"::ir::trapcode::TrapCode::User","value":"TrapCode::User(u16)","parent":{"krate":0,"index":7475},"children":[],"decl_id":null,"docs":" A user-defined trap code.\n","sig":null,"attributes":[{"value":"/ A user-defined trap code.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":400675,"byte_end":400704,"line_start":55,"line_end":55,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":7475},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":399471,"byte_end":399479,"line_start":13,"line_end":13,"column_start":10,"column_end":18},"name":"TrapCode","qualname":"::ir::trapcode::TrapCode","value":"TrapCode::{StackOverflow, HeapOutOfBounds, TableOutOfBounds, OutOfBounds, IndirectCallToNull, BadSignature, IntegerOverflow, IntegerDivisionByZero, BadConversionToInteger, UnreachableCodeReached, Interrupt, User}","parent":null,"children":[{"krate":0,"index":7476},{"krate":0,"index":7478},{"krate":0,"index":7480},{"krate":0,"index":7482},{"krate":0,"index":7484},{"krate":0,"index":7486},{"krate":0,"index":7488},{"krate":0,"index":7490},{"krate":0,"index":7492},{"krate":0,"index":7494},{"krate":0,"index":7496},{"krate":0,"index":7498}],"decl_id":null,"docs":" A trap code describing the reason for a trap.","sig":null,"attributes":[{"value":"/ A trap code describing the reason for a trap.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":399233,"byte_end":399282,"line_start":8,"line_end":8,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":399283,"byte_end":399286,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ All trap instructions have an explicit trap code.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":399287,"byte_end":399340,"line_start":10,"line_end":10,"column_start":1,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":1575},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"types","qualname":"::ir::types","value":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","parent":null,"children":[{"krate":0,"index":1576},{"krate":0,"index":1577},{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":7516},{"krate":0,"index":7531},{"krate":0,"index":7529},{"krate":0,"index":7525},{"krate":0,"index":7526},{"krate":0,"index":7522},{"krate":0,"index":7523},{"krate":0,"index":7519},{"krate":0,"index":1586},{"krate":0,"index":7532},{"krate":0,"index":7533},{"krate":0,"index":7534},{"krate":0,"index":7535},{"krate":0,"index":7536},{"krate":0,"index":7537},{"krate":0,"index":7538},{"krate":0,"index":7539},{"krate":0,"index":7540},{"krate":0,"index":7541},{"krate":0,"index":7542},{"krate":0,"index":7543},{"krate":0,"index":7544},{"krate":0,"index":7545},{"krate":0,"index":7546},{"krate":0,"index":7547},{"krate":0,"index":7548},{"krate":0,"index":7549},{"krate":0,"index":7550},{"krate":0,"index":7551},{"krate":0,"index":7552},{"krate":0,"index":7553},{"krate":0,"index":7554},{"krate":0,"index":7555},{"krate":0,"index":7556},{"krate":0,"index":7557},{"krate":0,"index":7558},{"krate":0,"index":7559},{"krate":0,"index":7560},{"krate":0,"index":7561},{"krate":0,"index":7562},{"krate":0,"index":7563},{"krate":0,"index":7564},{"krate":0,"index":7565},{"krate":0,"index":7566},{"krate":0,"index":7567},{"krate":0,"index":7568},{"krate":0,"index":7569},{"krate":0,"index":7570},{"krate":0,"index":7571},{"krate":0,"index":7572},{"krate":0,"index":7573},{"krate":0,"index":7574},{"krate":0,"index":7575},{"krate":0,"index":7576},{"krate":0,"index":7577},{"krate":0,"index":7578},{"krate":0,"index":7579},{"krate":0,"index":7580},{"krate":0,"index":7581},{"krate":0,"index":7582},{"krate":0,"index":7583},{"krate":0,"index":7584},{"krate":0,"index":7585},{"krate":0,"index":7586},{"krate":0,"index":7587},{"krate":0,"index":7588},{"krate":0,"index":7589},{"krate":0,"index":1587},{"krate":0,"index":1616},{"krate":0,"index":1618},{"krate":0,"index":1620}],"decl_id":null,"docs":" Common types for the Cranelift code generator.\n","sig":null,"attributes":[{"value":"! Common types for the Cranelift code generator.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":403340,"byte_end":403390,"line_start":1,"line_end":1,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":7516},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":404295,"byte_end":404299,"line_start":24,"line_end":24,"column_start":12,"column_end":16},"name":"Type","qualname":"::ir::types::Type","value":"","parent":null,"children":[],"decl_id":null,"docs":" The type of an SSA value.","sig":null,"attributes":[{"value":"/ The type of an SSA value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":403556,"byte_end":403585,"line_start":8,"line_end":8,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":403586,"byte_end":403589,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The `INVALID` type isn't a real type, and is used as a placeholder in the IR where a type","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":403590,"byte_end":403683,"line_start":10,"line_end":10,"column_start":1,"column_end":94}},{"value":"/ field is present put no type is needed, such as the controlling type variable for a","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":403684,"byte_end":403771,"line_start":11,"line_end":11,"column_start":1,"column_end":88}},{"value":"/ non-polymorphic instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":403772,"byte_end":403804,"line_start":12,"line_end":12,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":403805,"byte_end":403808,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Basic integer types: `I8`, `I16`, `I32`, `I64`, and `I128`. These types are sign-agnostic.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":403809,"byte_end":403903,"line_start":14,"line_end":14,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":403904,"byte_end":403907,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Basic floating point types: `F32` and `F64`. IEEE single and double precision.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":403908,"byte_end":403990,"line_start":16,"line_end":16,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":403991,"byte_end":403994,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Boolean types: `B1`, `B8`, `B16`, `B32`, `B64`, and `B128`. These all encode 'true' or 'false'. The","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":403995,"byte_end":404098,"line_start":18,"line_end":18,"column_start":1,"column_end":104}},{"value":"/ larger types use redundant bits.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":404099,"byte_end":404135,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":404136,"byte_end":404139,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ SIMD vector types have power-of-two lanes, up to 256. Lanes can be any int/float/bool type.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":404140,"byte_end":404235,"line_start":21,"line_end":21,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":404236,"byte_end":404239,"line_start":22,"line_end":22,"column_start":1,"column_end":4}}]},{"kind":"Const","id":{"krate":0,"index":1586},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":404397,"byte_end":404404,"line_start":27,"line_end":27,"column_start":11,"column_end":18},"name":"INVALID","qualname":"::ir::types::INVALID","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" Not a valid type. Can't be loaded or stored. Can't be part of a SIMD vector.\n","sig":null,"attributes":[{"value":"/ Not a valid type. Can't be loaded or stored. Can't be part of a SIMD vector.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":404306,"byte_end":404386,"line_start":26,"line_end":26,"column_start":1,"column_end":81}}]},{"kind":"Const","id":{"krate":0,"index":7532},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10464594,"byte_end":10464600,"line_start":3,"line_end":3,"column_start":11,"column_end":17},"name":"IFLAGS","qualname":"::ir::types::IFLAGS","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" CPU flags representing the result of an integer comparison. These flags\n can be tested with an :type:`intcc` condition code.\n","sig":null,"attributes":[{"value":"/ CPU flags representing the result of an integer comparison. These flags","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10464452,"byte_end":10464527,"line_start":1,"line_end":1,"column_start":1,"column_end":76}},{"value":"/ can be tested with an :type:`intcc` condition code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10464528,"byte_end":10464583,"line_start":2,"line_end":2,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":7533},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10464770,"byte_end":10464776,"line_start":7,"line_end":7,"column_start":11,"column_end":17},"name":"FFLAGS","qualname":"::ir::types::FFLAGS","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" CPU flags representing the result of a floating point comparison. These\n flags can be tested with a :type:`floatcc` condition code.\n","sig":null,"attributes":[{"value":"/ CPU flags representing the result of a floating point comparison. These","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10464621,"byte_end":10464696,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ flags can be tested with a :type:`floatcc` condition code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10464697,"byte_end":10464759,"line_start":6,"line_end":6,"column_start":1,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":7534},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10464839,"byte_end":10464841,"line_start":10,"line_end":10,"column_start":11,"column_end":13},"name":"B1","qualname":"::ir::types::B1","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A boolean type with 1 bits.\n","sig":null,"attributes":[{"value":"/ A boolean type with 1 bits.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10464797,"byte_end":10464828,"line_start":9,"line_end":9,"column_start":1,"column_end":32}}]},{"kind":"Const","id":{"krate":0,"index":7535},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10464905,"byte_end":10464907,"line_start":13,"line_end":13,"column_start":11,"column_end":13},"name":"B8","qualname":"::ir::types::B8","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A boolean type with 8 bits.\n","sig":null,"attributes":[{"value":"/ A boolean type with 8 bits.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10464863,"byte_end":10464894,"line_start":12,"line_end":12,"column_start":1,"column_end":32}}]},{"kind":"Const","id":{"krate":0,"index":7536},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10464972,"byte_end":10464975,"line_start":16,"line_end":16,"column_start":11,"column_end":14},"name":"B16","qualname":"::ir::types::B16","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A boolean type with 16 bits.\n","sig":null,"attributes":[{"value":"/ A boolean type with 16 bits.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10464929,"byte_end":10464961,"line_start":15,"line_end":15,"column_start":1,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":7537},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10465040,"byte_end":10465043,"line_start":19,"line_end":19,"column_start":11,"column_end":14},"name":"B32","qualname":"::ir::types::B32","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A boolean type with 32 bits.\n","sig":null,"attributes":[{"value":"/ A boolean type with 32 bits.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10464997,"byte_end":10465029,"line_start":18,"line_end":18,"column_start":1,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":7538},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10465108,"byte_end":10465111,"line_start":22,"line_end":22,"column_start":11,"column_end":14},"name":"B64","qualname":"::ir::types::B64","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A boolean type with 64 bits.\n","sig":null,"attributes":[{"value":"/ A boolean type with 64 bits.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10465065,"byte_end":10465097,"line_start":21,"line_end":21,"column_start":1,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":7539},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10465177,"byte_end":10465181,"line_start":25,"line_end":25,"column_start":11,"column_end":15},"name":"B128","qualname":"::ir::types::B128","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A boolean type with 128 bits.\n","sig":null,"attributes":[{"value":"/ A boolean type with 128 bits.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10465133,"byte_end":10465166,"line_start":24,"line_end":24,"column_start":1,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":7540},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10465301,"byte_end":10465303,"line_start":29,"line_end":29,"column_start":11,"column_end":13},"name":"I8","qualname":"::ir::types::I8","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" An integer type with 8 bits.\n WARNING: arithmetic on 8bit integers is incomplete\n","sig":null,"attributes":[{"value":"/ An integer type with 8 bits.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10465203,"byte_end":10465235,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/ WARNING: arithmetic on 8bit integers is incomplete","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10465236,"byte_end":10465290,"line_start":28,"line_end":28,"column_start":1,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":7541},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10465425,"byte_end":10465428,"line_start":33,"line_end":33,"column_start":11,"column_end":14},"name":"I16","qualname":"::ir::types::I16","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" An integer type with 16 bits.\n WARNING: arithmetic on 16bit integers is incomplete\n","sig":null,"attributes":[{"value":"/ An integer type with 16 bits.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10465325,"byte_end":10465358,"line_start":31,"line_end":31,"column_start":1,"column_end":34}},{"value":"/ WARNING: arithmetic on 16bit integers is incomplete","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10465359,"byte_end":10465414,"line_start":32,"line_end":32,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":7542},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10465494,"byte_end":10465497,"line_start":36,"line_end":36,"column_start":11,"column_end":14},"name":"I32","qualname":"::ir::types::I32","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" An integer type with 32 bits.\n","sig":null,"attributes":[{"value":"/ An integer type with 32 bits.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10465450,"byte_end":10465483,"line_start":35,"line_end":35,"column_start":1,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":7543},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10465563,"byte_end":10465566,"line_start":39,"line_end":39,"column_start":11,"column_end":14},"name":"I64","qualname":"::ir::types::I64","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" An integer type with 64 bits.\n","sig":null,"attributes":[{"value":"/ An integer type with 64 bits.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10465519,"byte_end":10465552,"line_start":38,"line_end":38,"column_start":1,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":7544},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10465633,"byte_end":10465637,"line_start":42,"line_end":42,"column_start":11,"column_end":15},"name":"I128","qualname":"::ir::types::I128","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" An integer type with 128 bits.\n","sig":null,"attributes":[{"value":"/ An integer type with 128 bits.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10465588,"byte_end":10465622,"line_start":41,"line_end":41,"column_start":1,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":7545},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10465846,"byte_end":10465849,"line_start":47,"line_end":47,"column_start":11,"column_end":14},"name":"F32","qualname":"::ir::types::F32","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A 32-bit floating point type represented in the IEEE 754-2008\n *binary32* interchange format. This corresponds to the :c:type:`float`\n type in most C implementations.\n","sig":null,"attributes":[{"value":"/ A 32-bit floating point type represented in the IEEE 754-2008","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10465659,"byte_end":10465724,"line_start":44,"line_end":44,"column_start":1,"column_end":66}},{"value":"/ *binary32* interchange format. This corresponds to the :c:type:`float`","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10465725,"byte_end":10465799,"line_start":45,"line_end":45,"column_start":1,"column_end":75}},{"value":"/ type in most C implementations.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10465800,"byte_end":10465835,"line_start":46,"line_end":46,"column_start":1,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":7546},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10466059,"byte_end":10466062,"line_start":52,"line_end":52,"column_start":11,"column_end":14},"name":"F64","qualname":"::ir::types::F64","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A 64-bit floating point type represented in the IEEE 754-2008\n *binary64* interchange format. This corresponds to the :c:type:`double`\n type in most C implementations.\n","sig":null,"attributes":[{"value":"/ A 64-bit floating point type represented in the IEEE 754-2008","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10465871,"byte_end":10465936,"line_start":49,"line_end":49,"column_start":1,"column_end":66}},{"value":"/ *binary64* interchange format. This corresponds to the :c:type:`double`","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10465937,"byte_end":10466012,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/ type in most C implementations.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10466013,"byte_end":10466048,"line_start":51,"line_end":51,"column_start":1,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":7547},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10466137,"byte_end":10466140,"line_start":55,"line_end":55,"column_start":11,"column_end":14},"name":"R32","qualname":"::ir::types::R32","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" An opaque reference type with 32 bits.\n","sig":null,"attributes":[{"value":"/ An opaque reference type with 32 bits.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10466084,"byte_end":10466126,"line_start":54,"line_end":54,"column_start":1,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":7548},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10466215,"byte_end":10466218,"line_start":58,"line_end":58,"column_start":11,"column_end":14},"name":"R64","qualname":"::ir::types::R64","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" An opaque reference type with 64 bits.\n","sig":null,"attributes":[{"value":"/ An opaque reference type with 64 bits.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10466162,"byte_end":10466204,"line_start":57,"line_end":57,"column_start":1,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":7549},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10466305,"byte_end":10466309,"line_start":61,"line_end":61,"column_start":11,"column_end":15},"name":"B8X8","qualname":"::ir::types::B8X8","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 8 lanes containing a `b8` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 8 lanes containing a `b8` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10466240,"byte_end":10466294,"line_start":60,"line_end":60,"column_start":1,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":7550},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10466397,"byte_end":10466402,"line_start":64,"line_end":64,"column_start":11,"column_end":16},"name":"B16X4","qualname":"::ir::types::B16X4","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 4 lanes containing a `b16` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 4 lanes containing a `b16` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10466331,"byte_end":10466386,"line_start":63,"line_end":63,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":7551},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10466490,"byte_end":10466495,"line_start":67,"line_end":67,"column_start":11,"column_end":16},"name":"B32X2","qualname":"::ir::types::B32X2","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 2 lanes containing a `b32` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 2 lanes containing a `b32` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10466424,"byte_end":10466479,"line_start":66,"line_end":66,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":7552},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10466582,"byte_end":10466586,"line_start":70,"line_end":70,"column_start":11,"column_end":15},"name":"I8X8","qualname":"::ir::types::I8X8","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 8 lanes containing a `i8` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 8 lanes containing a `i8` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10466517,"byte_end":10466571,"line_start":69,"line_end":69,"column_start":1,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":7553},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10466674,"byte_end":10466679,"line_start":73,"line_end":73,"column_start":11,"column_end":16},"name":"I16X4","qualname":"::ir::types::I16X4","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 4 lanes containing a `i16` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 4 lanes containing a `i16` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10466608,"byte_end":10466663,"line_start":72,"line_end":72,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":7554},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10466767,"byte_end":10466772,"line_start":76,"line_end":76,"column_start":11,"column_end":16},"name":"I32X2","qualname":"::ir::types::I32X2","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 2 lanes containing a `i32` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 2 lanes containing a `i32` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10466701,"byte_end":10466756,"line_start":75,"line_end":75,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":7555},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10466860,"byte_end":10466865,"line_start":79,"line_end":79,"column_start":11,"column_end":16},"name":"F32X2","qualname":"::ir::types::F32X2","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 2 lanes containing a `f32` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 2 lanes containing a `f32` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10466794,"byte_end":10466849,"line_start":78,"line_end":78,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":7556},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10466953,"byte_end":10466958,"line_start":82,"line_end":82,"column_start":11,"column_end":16},"name":"B8X16","qualname":"::ir::types::B8X16","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 16 lanes containing a `b8` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 16 lanes containing a `b8` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10466887,"byte_end":10466942,"line_start":81,"line_end":81,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":7557},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10467046,"byte_end":10467051,"line_start":85,"line_end":85,"column_start":11,"column_end":16},"name":"B16X8","qualname":"::ir::types::B16X8","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 8 lanes containing a `b16` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 8 lanes containing a `b16` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10466980,"byte_end":10467035,"line_start":84,"line_end":84,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":7558},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10467139,"byte_end":10467144,"line_start":88,"line_end":88,"column_start":11,"column_end":16},"name":"B32X4","qualname":"::ir::types::B32X4","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 4 lanes containing a `b32` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 4 lanes containing a `b32` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10467073,"byte_end":10467128,"line_start":87,"line_end":87,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":7559},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10467232,"byte_end":10467237,"line_start":91,"line_end":91,"column_start":11,"column_end":16},"name":"B64X2","qualname":"::ir::types::B64X2","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 2 lanes containing a `b64` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 2 lanes containing a `b64` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10467166,"byte_end":10467221,"line_start":90,"line_end":90,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":7560},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10467325,"byte_end":10467330,"line_start":94,"line_end":94,"column_start":11,"column_end":16},"name":"I8X16","qualname":"::ir::types::I8X16","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 16 lanes containing a `i8` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 16 lanes containing a `i8` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10467259,"byte_end":10467314,"line_start":93,"line_end":93,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":7561},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10467418,"byte_end":10467423,"line_start":97,"line_end":97,"column_start":11,"column_end":16},"name":"I16X8","qualname":"::ir::types::I16X8","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 8 lanes containing a `i16` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 8 lanes containing a `i16` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10467352,"byte_end":10467407,"line_start":96,"line_end":96,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":7562},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10467511,"byte_end":10467516,"line_start":100,"line_end":100,"column_start":11,"column_end":16},"name":"I32X4","qualname":"::ir::types::I32X4","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 4 lanes containing a `i32` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 4 lanes containing a `i32` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10467445,"byte_end":10467500,"line_start":99,"line_end":99,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":7563},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10467604,"byte_end":10467609,"line_start":103,"line_end":103,"column_start":11,"column_end":16},"name":"I64X2","qualname":"::ir::types::I64X2","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 2 lanes containing a `i64` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 2 lanes containing a `i64` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10467538,"byte_end":10467593,"line_start":102,"line_end":102,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":7564},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10467697,"byte_end":10467702,"line_start":106,"line_end":106,"column_start":11,"column_end":16},"name":"F32X4","qualname":"::ir::types::F32X4","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 4 lanes containing a `f32` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 4 lanes containing a `f32` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10467631,"byte_end":10467686,"line_start":105,"line_end":105,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":7565},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10467790,"byte_end":10467795,"line_start":109,"line_end":109,"column_start":11,"column_end":16},"name":"F64X2","qualname":"::ir::types::F64X2","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 2 lanes containing a `f64` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 2 lanes containing a `f64` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10467724,"byte_end":10467779,"line_start":108,"line_end":108,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":7566},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10467883,"byte_end":10467888,"line_start":112,"line_end":112,"column_start":11,"column_end":16},"name":"B8X32","qualname":"::ir::types::B8X32","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 32 lanes containing a `b8` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 32 lanes containing a `b8` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10467817,"byte_end":10467872,"line_start":111,"line_end":111,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":7567},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10467977,"byte_end":10467983,"line_start":115,"line_end":115,"column_start":11,"column_end":17},"name":"B16X16","qualname":"::ir::types::B16X16","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 16 lanes containing a `b16` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 16 lanes containing a `b16` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10467910,"byte_end":10467966,"line_start":114,"line_end":114,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":7568},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10468071,"byte_end":10468076,"line_start":118,"line_end":118,"column_start":11,"column_end":16},"name":"B32X8","qualname":"::ir::types::B32X8","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 8 lanes containing a `b32` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 8 lanes containing a `b32` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10468005,"byte_end":10468060,"line_start":117,"line_end":117,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":7569},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10468164,"byte_end":10468169,"line_start":121,"line_end":121,"column_start":11,"column_end":16},"name":"B64X4","qualname":"::ir::types::B64X4","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 4 lanes containing a `b64` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 4 lanes containing a `b64` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10468098,"byte_end":10468153,"line_start":120,"line_end":120,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":7570},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10468258,"byte_end":10468264,"line_start":124,"line_end":124,"column_start":11,"column_end":17},"name":"B128X2","qualname":"::ir::types::B128X2","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 2 lanes containing a `b128` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 2 lanes containing a `b128` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10468191,"byte_end":10468247,"line_start":123,"line_end":123,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":7571},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10468352,"byte_end":10468357,"line_start":127,"line_end":127,"column_start":11,"column_end":16},"name":"I8X32","qualname":"::ir::types::I8X32","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 32 lanes containing a `i8` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 32 lanes containing a `i8` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10468286,"byte_end":10468341,"line_start":126,"line_end":126,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":7572},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10468446,"byte_end":10468452,"line_start":130,"line_end":130,"column_start":11,"column_end":17},"name":"I16X16","qualname":"::ir::types::I16X16","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 16 lanes containing a `i16` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 16 lanes containing a `i16` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10468379,"byte_end":10468435,"line_start":129,"line_end":129,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":7573},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10468540,"byte_end":10468545,"line_start":133,"line_end":133,"column_start":11,"column_end":16},"name":"I32X8","qualname":"::ir::types::I32X8","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 8 lanes containing a `i32` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 8 lanes containing a `i32` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10468474,"byte_end":10468529,"line_start":132,"line_end":132,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":7574},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10468633,"byte_end":10468638,"line_start":136,"line_end":136,"column_start":11,"column_end":16},"name":"I64X4","qualname":"::ir::types::I64X4","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 4 lanes containing a `i64` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 4 lanes containing a `i64` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10468567,"byte_end":10468622,"line_start":135,"line_end":135,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":7575},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10468727,"byte_end":10468733,"line_start":139,"line_end":139,"column_start":11,"column_end":17},"name":"I128X2","qualname":"::ir::types::I128X2","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 2 lanes containing a `i128` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 2 lanes containing a `i128` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10468660,"byte_end":10468716,"line_start":138,"line_end":138,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":7576},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10468821,"byte_end":10468826,"line_start":142,"line_end":142,"column_start":11,"column_end":16},"name":"F32X8","qualname":"::ir::types::F32X8","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 8 lanes containing a `f32` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 8 lanes containing a `f32` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10468755,"byte_end":10468810,"line_start":141,"line_end":141,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":7577},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10468914,"byte_end":10468919,"line_start":145,"line_end":145,"column_start":11,"column_end":16},"name":"F64X4","qualname":"::ir::types::F64X4","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 4 lanes containing a `f64` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 4 lanes containing a `f64` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10468848,"byte_end":10468903,"line_start":144,"line_end":144,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":7578},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10469007,"byte_end":10469012,"line_start":148,"line_end":148,"column_start":11,"column_end":16},"name":"B8X64","qualname":"::ir::types::B8X64","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 64 lanes containing a `b8` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 64 lanes containing a `b8` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10468941,"byte_end":10468996,"line_start":147,"line_end":147,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":7579},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10469101,"byte_end":10469107,"line_start":151,"line_end":151,"column_start":11,"column_end":17},"name":"B16X32","qualname":"::ir::types::B16X32","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 32 lanes containing a `b16` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 32 lanes containing a `b16` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10469034,"byte_end":10469090,"line_start":150,"line_end":150,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":7580},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10469196,"byte_end":10469202,"line_start":154,"line_end":154,"column_start":11,"column_end":17},"name":"B32X16","qualname":"::ir::types::B32X16","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 16 lanes containing a `b32` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 16 lanes containing a `b32` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10469129,"byte_end":10469185,"line_start":153,"line_end":153,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":7581},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10469290,"byte_end":10469295,"line_start":157,"line_end":157,"column_start":11,"column_end":16},"name":"B64X8","qualname":"::ir::types::B64X8","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 8 lanes containing a `b64` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 8 lanes containing a `b64` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10469224,"byte_end":10469279,"line_start":156,"line_end":156,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":7582},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10469384,"byte_end":10469390,"line_start":160,"line_end":160,"column_start":11,"column_end":17},"name":"B128X4","qualname":"::ir::types::B128X4","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 4 lanes containing a `b128` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 4 lanes containing a `b128` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10469317,"byte_end":10469373,"line_start":159,"line_end":159,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":7583},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10469478,"byte_end":10469483,"line_start":163,"line_end":163,"column_start":11,"column_end":16},"name":"I8X64","qualname":"::ir::types::I8X64","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 64 lanes containing a `i8` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 64 lanes containing a `i8` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10469412,"byte_end":10469467,"line_start":162,"line_end":162,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":7584},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10469572,"byte_end":10469578,"line_start":166,"line_end":166,"column_start":11,"column_end":17},"name":"I16X32","qualname":"::ir::types::I16X32","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 32 lanes containing a `i16` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 32 lanes containing a `i16` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10469505,"byte_end":10469561,"line_start":165,"line_end":165,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":7585},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10469667,"byte_end":10469673,"line_start":169,"line_end":169,"column_start":11,"column_end":17},"name":"I32X16","qualname":"::ir::types::I32X16","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 16 lanes containing a `i32` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 16 lanes containing a `i32` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10469600,"byte_end":10469656,"line_start":168,"line_end":168,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":7586},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10469761,"byte_end":10469766,"line_start":172,"line_end":172,"column_start":11,"column_end":16},"name":"I64X8","qualname":"::ir::types::I64X8","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 8 lanes containing a `i64` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 8 lanes containing a `i64` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10469695,"byte_end":10469750,"line_start":171,"line_end":171,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":7587},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10469855,"byte_end":10469861,"line_start":175,"line_end":175,"column_start":11,"column_end":17},"name":"I128X4","qualname":"::ir::types::I128X4","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 4 lanes containing a `i128` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 4 lanes containing a `i128` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10469788,"byte_end":10469844,"line_start":174,"line_end":174,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":7588},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10469950,"byte_end":10469956,"line_start":178,"line_end":178,"column_start":11,"column_end":17},"name":"F32X16","qualname":"::ir::types::F32X16","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 16 lanes containing a `f32` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 16 lanes containing a `f32` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10469883,"byte_end":10469939,"line_start":177,"line_end":177,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":7589},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10470044,"byte_end":10470049,"line_start":181,"line_end":181,"column_start":11,"column_end":16},"name":"F64X8","qualname":"::ir::types::F64X8","value":"Type","parent":null,"children":[],"decl_id":null,"docs":" A SIMD vector with 8 lanes containing a `f64` each.\n","sig":null,"attributes":[{"value":"/ A SIMD vector with 8 lanes containing a `f64` each.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/types.rs","byte_start":10469978,"byte_end":10470033,"line_start":180,"line_end":180,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1588},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":404861,"byte_end":404870,"line_start":38,"line_end":38,"column_start":12,"column_end":21},"name":"lane_type","qualname":"<Type>::lane_type","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the lane type of this SIMD vector type.","sig":null,"attributes":[{"value":"/ Get the lane type of this SIMD vector type.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":404703,"byte_end":404750,"line_start":35,"line_end":35,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":404755,"byte_end":404758,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ A lane type is the same as a SIMD vector type with one lane, so it returns itself.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":404763,"byte_end":404849,"line_start":37,"line_end":37,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":1589},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":405263,"byte_end":405270,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"lane_of","qualname":"<Type>::lane_of","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The type transformation that returns the lane type of a type variable; it is just a\n renaming of lane_type() to be used in context where we think in terms of type variable\n transformations.\n","sig":null,"attributes":[{"value":"/ The type transformation that returns the lane type of a type variable; it is just a","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":405044,"byte_end":405131,"line_start":46,"line_end":46,"column_start":5,"column_end":92}},{"value":"/ renaming of lane_type() to be used in context where we think in terms of type variable","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":405136,"byte_end":405226,"line_start":47,"line_end":47,"column_start":5,"column_end":95}},{"value":"/ transformations.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":405231,"byte_end":405251,"line_start":48,"line_end":48,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1590},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":405381,"byte_end":405395,"line_start":54,"line_end":54,"column_start":12,"column_end":26},"name":"log2_lane_bits","qualname":"<Type>::log2_lane_bits","value":"fn (self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get log_2 of the number of bits in a lane.\n","sig":null,"attributes":[{"value":"/ Get log_2 of the number of bits in a lane.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":405323,"byte_end":405369,"line_start":53,"line_end":53,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1591},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":405718,"byte_end":405727,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"lane_bits","qualname":"<Type>::lane_bits","value":"fn (self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the number of bits in a lane.\n","sig":null,"attributes":[{"value":"/ Get the number of bits in a lane.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":405669,"byte_end":405706,"line_start":66,"line_end":66,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1592},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":406076,"byte_end":406079,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"int","qualname":"<Type>::int","value":"fn (bits: u16) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get an integer type with the requested number of bits.\n","sig":null,"attributes":[{"value":"/ Get an integer type with the requested number of bits.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":406006,"byte_end":406064,"line_start":79,"line_end":79,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1594},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":406842,"byte_end":406858,"line_start":102,"line_end":102,"column_start":12,"column_end":28},"name":"as_bool_pedantic","qualname":"<Type>::as_bool_pedantic","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get a type with the same number of lanes as this type, but with the lanes replaced by\n booleans of the same size.","sig":null,"attributes":[{"value":"/ Get a type with the same number of lanes as this type, but with the lanes replaced by","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":406579,"byte_end":406668,"line_start":97,"line_end":97,"column_start":5,"column_end":94}},{"value":"/ booleans of the same size.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":406673,"byte_end":406703,"line_start":98,"line_end":98,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":406708,"byte_end":406711,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ Lane types are treated as vectors with one lane, so they are converted to the multi-bit","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":406716,"byte_end":406807,"line_start":100,"line_end":100,"column_start":5,"column_end":96}},{"value":"/ boolean types.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":406812,"byte_end":406830,"line_start":101,"line_end":101,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1595},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":407520,"byte_end":407527,"line_start":119,"line_end":119,"column_start":12,"column_end":19},"name":"as_bool","qualname":"<Type>::as_bool","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get a type with the same number of lanes as this type, but with the lanes replaced by\n booleans of the same size.","sig":null,"attributes":[{"value":"/ Get a type with the same number of lanes as this type, but with the lanes replaced by","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":407297,"byte_end":407386,"line_start":115,"line_end":115,"column_start":5,"column_end":94}},{"value":"/ booleans of the same size.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":407391,"byte_end":407421,"line_start":116,"line_end":116,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":407426,"byte_end":407429,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ Scalar types are all converted to `b1` which is usually what you want.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":407434,"byte_end":407508,"line_start":118,"line_end":118,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1596},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":407791,"byte_end":407801,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"half_width","qualname":"<Type>::half_width","value":"fn (self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get a type with the same number of lanes as this type, but with lanes that are half the\n number of bits.\n","sig":null,"attributes":[{"value":"/ Get a type with the same number of lanes as this type, but with lanes that are half the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":407664,"byte_end":407755,"line_start":127,"line_end":127,"column_start":5,"column_end":96}},{"value":"/ number of bits.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":407760,"byte_end":407779,"line_start":128,"line_end":128,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1597},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":408280,"byte_end":408292,"line_start":146,"line_end":146,"column_start":12,"column_end":24},"name":"double_width","qualname":"<Type>::double_width","value":"fn (self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get a type with the same number of lanes as this type, but with lanes that are twice the\n number of bits.\n","sig":null,"attributes":[{"value":"/ Get a type with the same number of lanes as this type, but with lanes that are twice the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":408152,"byte_end":408244,"line_start":144,"line_end":144,"column_start":5,"column_end":97}},{"value":"/ number of bits.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":408249,"byte_end":408268,"line_start":145,"line_end":145,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1598},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":408684,"byte_end":408694,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"is_invalid","qualname":"<Type>::is_invalid","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this the INVALID type?\n","sig":null,"attributes":[{"value":"/ Is this the INVALID type?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":408643,"byte_end":408672,"line_start":161,"line_end":161,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1599},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":408785,"byte_end":408795,"line_start":167,"line_end":167,"column_start":12,"column_end":22},"name":"is_special","qualname":"<Type>::is_special","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a special type?\n","sig":null,"attributes":[{"value":"/ Is this a special type?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":408746,"byte_end":408773,"line_start":166,"line_end":166,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1600},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":408991,"byte_end":408998,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"is_lane","qualname":"<Type>::is_lane","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a lane type?","sig":null,"attributes":[{"value":"/ Is this a lane type?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":408861,"byte_end":408885,"line_start":171,"line_end":171,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":408890,"byte_end":408893,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ This is a scalar type that can also appear as the lane type of a SIMD vector.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":408898,"byte_end":408979,"line_start":173,"line_end":173,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1601},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":409194,"byte_end":409203,"line_start":181,"line_end":181,"column_start":12,"column_end":21},"name":"is_vector","qualname":"<Type>::is_vector","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a SIMD vector type?","sig":null,"attributes":[{"value":"/ Is this a SIMD vector type?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":409100,"byte_end":409131,"line_start":178,"line_end":178,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":409136,"byte_end":409139,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ A vector type has 2 or more lanes.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":409144,"byte_end":409182,"line_start":180,"line_end":180,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1602},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":409318,"byte_end":409325,"line_start":186,"line_end":186,"column_start":12,"column_end":19},"name":"is_bool","qualname":"<Type>::is_bool","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a scalar boolean type?\n","sig":null,"attributes":[{"value":"/ Is this a scalar boolean type?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":409272,"byte_end":409306,"line_start":185,"line_end":185,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1603},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":409508,"byte_end":409514,"line_start":194,"line_end":194,"column_start":12,"column_end":18},"name":"is_int","qualname":"<Type>::is_int","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a scalar integer type?\n","sig":null,"attributes":[{"value":"/ Is this a scalar integer type?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":409462,"byte_end":409496,"line_start":193,"line_end":193,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1604},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":409699,"byte_end":409707,"line_start":202,"line_end":202,"column_start":12,"column_end":20},"name":"is_float","qualname":"<Type>::is_float","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a scalar floating point type?\n","sig":null,"attributes":[{"value":"/ Is this a scalar floating point type?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":409646,"byte_end":409687,"line_start":201,"line_end":201,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1605},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":409862,"byte_end":409870,"line_start":210,"line_end":210,"column_start":12,"column_end":20},"name":"is_flags","qualname":"<Type>::is_flags","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a CPU flags type?\n","sig":null,"attributes":[{"value":"/ Is this a CPU flags type?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":409821,"byte_end":409850,"line_start":209,"line_end":209,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1606},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":410025,"byte_end":410031,"line_start":218,"line_end":218,"column_start":12,"column_end":18},"name":"is_ref","qualname":"<Type>::is_ref","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a ref type?\n","sig":null,"attributes":[{"value":"/ Is this a ref type?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":409990,"byte_end":410013,"line_start":217,"line_end":217,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1607},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":410462,"byte_end":410477,"line_start":231,"line_end":231,"column_start":12,"column_end":27},"name":"log2_lane_count","qualname":"<Type>::log2_lane_count","value":"fn (self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get log_2 of the number of lanes in this SIMD vector type.","sig":null,"attributes":[{"value":"/ Get log_2 of the number of lanes in this SIMD vector type.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":410145,"byte_end":410207,"line_start":225,"line_end":225,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":410212,"byte_end":410215,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ All SIMD types have a lane count that is a power of two and no larger than 256, so this","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":410220,"byte_end":410311,"line_start":227,"line_end":227,"column_start":5,"column_end":96}},{"value":"/ will be a number in the range 0-8.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":410316,"byte_end":410354,"line_start":228,"line_end":228,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":410359,"byte_end":410362,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ A scalar type is the same as a SIMD vector type with one lane, so it returns 0.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":410367,"byte_end":410450,"line_start":230,"line_end":230,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1608},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":410721,"byte_end":410731,"line_start":238,"line_end":238,"column_start":12,"column_end":22},"name":"lane_count","qualname":"<Type>::lane_count","value":"fn (self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the number of lanes in this SIMD vector type.","sig":null,"attributes":[{"value":"/ Get the number of lanes in this SIMD vector type.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":410560,"byte_end":410613,"line_start":235,"line_end":235,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":410618,"byte_end":410621,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ A scalar type is the same as a SIMD vector type with one lane, so it returns 1.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":410626,"byte_end":410709,"line_start":237,"line_end":237,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1609},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":410867,"byte_end":410871,"line_start":243,"line_end":243,"column_start":12,"column_end":16},"name":"bits","qualname":"<Type>::bits","value":"fn (self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the total number of bits used to represent this type.\n","sig":null,"attributes":[{"value":"/ Get the total number of bits used to represent this type.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":410794,"byte_end":410855,"line_start":242,"line_end":242,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1610},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":411028,"byte_end":411033,"line_start":248,"line_end":248,"column_start":12,"column_end":17},"name":"bytes","qualname":"<Type>::bytes","value":"fn (self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the number of bytes used to store this type in memory.\n","sig":null,"attributes":[{"value":"/ Get the number of bytes used to store this type in memory.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":410954,"byte_end":411016,"line_start":247,"line_end":247,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1611},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":411420,"byte_end":411422,"line_start":258,"line_end":258,"column_start":12,"column_end":14},"name":"by","qualname":"<Type>::by","value":"fn (self, n: u16) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get a SIMD vector type with `n` times more lanes than this one.","sig":null,"attributes":[{"value":"/ Get a SIMD vector type with `n` times more lanes than this one.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":411101,"byte_end":411168,"line_start":252,"line_end":252,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":411173,"byte_end":411176,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ If this is a scalar type, this produces a SIMD type with this as a lane type and `n` lanes.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":411181,"byte_end":411276,"line_start":254,"line_end":254,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":411281,"byte_end":411284,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ If this is already a SIMD vector type, this produces a SIMD vector type with `n *","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":411289,"byte_end":411374,"line_start":256,"line_end":256,"column_start":5,"column_end":90}},{"value":"/ self.lane_count()` lanes.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":411379,"byte_end":411408,"line_start":257,"line_end":257,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1612},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":411926,"byte_end":411937,"line_start":274,"line_end":274,"column_start":12,"column_end":23},"name":"half_vector","qualname":"<Type>::half_vector","value":"fn (self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get a SIMD vector with half the number of lanes.","sig":null,"attributes":[{"value":"/ Get a SIMD vector with half the number of lanes.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":411785,"byte_end":411837,"line_start":271,"line_end":271,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":411842,"byte_end":411845,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ There is no `double_vector()` method. Use `t.by(2)` instead.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":411850,"byte_end":411914,"line_start":273,"line_end":273,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1613},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":412150,"byte_end":412155,"line_start":283,"line_end":283,"column_start":12,"column_end":17},"name":"index","qualname":"<Type>::index","value":"fn (self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Index of this type, for use with hash tables etc.\n","sig":null,"attributes":[{"value":"/ Index of this type, for use with hash tables etc.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":412085,"byte_end":412138,"line_start":282,"line_end":282,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1614},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":412353,"byte_end":412367,"line_start":291,"line_end":291,"column_start":12,"column_end":26},"name":"wider_or_equal","qualname":"<Type>::wider_or_equal","value":"fn (self, other: Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True iff:","sig":null,"attributes":[{"value":"/ True iff:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":412212,"byte_end":412225,"line_start":287,"line_end":287,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":412230,"byte_end":412233,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ 1. `self.lane_count() == other.lane_count()` and","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":412238,"byte_end":412290,"line_start":289,"line_end":289,"column_start":5,"column_end":57}},{"value":"/ 2. `self.lane_bits() >= other.lane_bits()`","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":412295,"byte_end":412341,"line_start":290,"line_end":290,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1615},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":412565,"byte_end":412584,"line_start":296,"line_end":296,"column_start":12,"column_end":31},"name":"triple_pointer_type","qualname":"<Type>::triple_pointer_type","value":"fn (triple: &Triple) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the pointer type for the given target triple.\n","sig":null,"attributes":[{"value":"/ Return the pointer type for the given target triple.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":412497,"byte_end":412553,"line_start":295,"line_end":295,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7591},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":420954,"byte_end":420964,"line_start":18,"line_end":18,"column_start":5,"column_end":15},"name":"Unassigned","qualname":"::ir::valueloc::ValueLoc::Unassigned","value":"ValueLoc::Unassigned","parent":{"krate":0,"index":7590},"children":[],"decl_id":null,"docs":" This value has not been assigned to a location yet.\n","sig":null,"attributes":[{"value":"/ This value has not been assigned to a location yet.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":420894,"byte_end":420949,"line_start":17,"line_end":17,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7593},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":421011,"byte_end":421014,"line_start":20,"line_end":20,"column_start":5,"column_end":8},"name":"Reg","qualname":"::ir::valueloc::ValueLoc::Reg","value":"ValueLoc::Reg(RegUnit)","parent":{"krate":0,"index":7590},"children":[],"decl_id":null,"docs":" Value is assigned to a register.\n","sig":null,"attributes":[{"value":"/ Value is assigned to a register.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":420970,"byte_end":421006,"line_start":19,"line_end":19,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7596},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":421072,"byte_end":421077,"line_start":22,"line_end":22,"column_start":5,"column_end":10},"name":"Stack","qualname":"::ir::valueloc::ValueLoc::Stack","value":"ValueLoc::Stack(StackSlot)","parent":{"krate":0,"index":7590},"children":[],"decl_id":null,"docs":" Value is assigned to a stack slot.\n","sig":null,"attributes":[{"value":"/ Value is assigned to a stack slot.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":421029,"byte_end":421067,"line_start":21,"line_end":21,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":7590},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":420879,"byte_end":420887,"line_start":16,"line_end":16,"column_start":10,"column_end":18},"name":"ValueLoc","qualname":"::ir::valueloc::ValueLoc","value":"ValueLoc::{Unassigned, Reg, Stack}","parent":null,"children":[{"krate":0,"index":7591},{"krate":0,"index":7593},{"krate":0,"index":7596}],"decl_id":null,"docs":" Value location.\n","sig":null,"attributes":[{"value":"/ Value location.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":420735,"byte_end":420754,"line_start":13,"line_end":13,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1631},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":421276,"byte_end":421287,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"is_assigned","qualname":"<ValueLoc>::is_assigned","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this an assigned location? (That is, not `Unassigned`).\n","sig":null,"attributes":[{"value":"/ Is this an assigned location? (That is, not `Unassigned`).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":421202,"byte_end":421264,"line_start":32,"line_end":32,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1632},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":421473,"byte_end":421483,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"unwrap_reg","qualname":"<ValueLoc>::unwrap_reg","value":"fn (self) -> RegUnit","parent":null,"children":[],"decl_id":null,"docs":" Get the register unit of this location, or panic.\n","sig":null,"attributes":[{"value":"/ Get the register unit of this location, or panic.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":421408,"byte_end":421461,"line_start":40,"line_end":40,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1633},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":421698,"byte_end":421710,"line_start":49,"line_end":49,"column_start":12,"column_end":24},"name":"unwrap_stack","qualname":"<ValueLoc>::unwrap_stack","value":"fn (self) -> StackSlot","parent":null,"children":[],"decl_id":null,"docs":" Get the stack slot of this location, or panic.\n","sig":null,"attributes":[{"value":"/ Get the stack slot of this location, or panic.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":421636,"byte_end":421686,"line_start":48,"line_end":48,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1634},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":421992,"byte_end":421999,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"display","qualname":"<ValueLoc>::display","value":"fn <'a, R> (self, regs: R) -> DisplayValueLoc<'a>","parent":null,"children":[],"decl_id":null,"docs":" Return an object that can display this value location, using the register info from the\n target ISA.\n","sig":null,"attributes":[{"value":"/ Return an object that can display this value location, using the register info from the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":421869,"byte_end":421960,"line_start":56,"line_end":56,"column_start":5,"column_end":96}},{"value":"/ target ISA.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":421965,"byte_end":421980,"line_start":57,"line_end":57,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1637},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":422377,"byte_end":422392,"line_start":67,"line_end":67,"column_start":12,"column_end":27},"name":"DisplayValueLoc","qualname":"::ir::valueloc::DisplayValueLoc","value":"","parent":null,"children":[],"decl_id":null,"docs":" Displaying a `ValueLoc` correctly requires the associated `RegInfo` from the target ISA.\n Without the register info, register units are simply show as numbers.","sig":null,"attributes":[{"value":"/ Displaying a `ValueLoc` correctly requires the associated `RegInfo` from the target ISA.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":422126,"byte_end":422218,"line_start":63,"line_end":63,"column_start":1,"column_end":93}},{"value":"/ Without the register info, register units are simply show as numbers.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":422219,"byte_end":422292,"line_start":64,"line_end":64,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":422293,"byte_end":422296,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ The `DisplayValueLoc` type can display the contained `ValueLoc`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":422297,"byte_end":422365,"line_start":66,"line_end":66,"column_start":1,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7612},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":424021,"byte_end":424031,"line_start":103,"line_end":103,"column_start":5,"column_end":15},"name":"Unassigned","qualname":"::ir::valueloc::ArgumentLoc::Unassigned","value":"ArgumentLoc::Unassigned","parent":{"krate":0,"index":7611},"children":[],"decl_id":null,"docs":" This argument has not been assigned to a location yet.\n","sig":null,"attributes":[{"value":"/ This argument has not been assigned to a location yet.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":423958,"byte_end":424016,"line_start":102,"line_end":102,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7614},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":424079,"byte_end":424082,"line_start":105,"line_end":105,"column_start":5,"column_end":8},"name":"Reg","qualname":"::ir::valueloc::ArgumentLoc::Reg","value":"ArgumentLoc::Reg(RegUnit)","parent":{"krate":0,"index":7611},"children":[],"decl_id":null,"docs":" Argument is passed in a register.\n","sig":null,"attributes":[{"value":"/ Argument is passed in a register.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":424037,"byte_end":424074,"line_start":104,"line_end":104,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7617},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":424188,"byte_end":424193,"line_start":107,"line_end":107,"column_start":5,"column_end":10},"name":"Stack","qualname":"::ir::valueloc::ArgumentLoc::Stack","value":"ArgumentLoc::Stack(i32)","parent":{"krate":0,"index":7611},"children":[],"decl_id":null,"docs":" Argument is passed on the stack, at the given byte offset into the argument array.\n","sig":null,"attributes":[{"value":"/ Argument is passed on the stack, at the given byte offset into the argument array.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":424097,"byte_end":424183,"line_start":106,"line_end":106,"column_start":5,"column_end":91}}]},{"kind":"Enum","id":{"krate":0,"index":7611},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":423940,"byte_end":423951,"line_start":101,"line_end":101,"column_start":10,"column_end":21},"name":"ArgumentLoc","qualname":"::ir::valueloc::ArgumentLoc","value":"ArgumentLoc::{Unassigned, Reg, Stack}","parent":null,"children":[{"krate":0,"index":7612},{"krate":0,"index":7614},{"krate":0,"index":7617}],"decl_id":null,"docs":" Function argument location.","sig":null,"attributes":[{"value":"/ Function argument location.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":422869,"byte_end":422900,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":422901,"byte_end":422904,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ The ABI specifies how arguments are passed to a function, and where return values appear after","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":422905,"byte_end":423003,"line_start":84,"line_end":84,"column_start":1,"column_end":99}},{"value":"/ the call. Just like a `ValueLoc`, function arguments can be passed in registers or on the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":423004,"byte_end":423097,"line_start":85,"line_end":85,"column_start":1,"column_end":94}},{"value":"/ stack.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":423098,"byte_end":423108,"line_start":86,"line_end":86,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":423109,"byte_end":423112,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Function arguments on the stack are accessed differently for the incoming arguments to the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":423113,"byte_end":423207,"line_start":88,"line_end":88,"column_start":1,"column_end":95}},{"value":"/ current function and the outgoing arguments to a called external function. For this reason,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":423208,"byte_end":423303,"line_start":89,"line_end":89,"column_start":1,"column_end":96}},{"value":"/ the location of stack arguments is described as an offset into the array of function arguments","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":423304,"byte_end":423402,"line_start":90,"line_end":90,"column_start":1,"column_end":99}},{"value":"/ on the stack.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":423403,"byte_end":423420,"line_start":91,"line_end":91,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":423421,"byte_end":423424,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ An `ArgumentLoc` can be translated to a `ValueLoc` only when we know if we're talking about an","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":423425,"byte_end":423523,"line_start":93,"line_end":93,"column_start":1,"column_end":99}},{"value":"/ incoming argument or an outgoing argument.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":423524,"byte_end":423570,"line_start":94,"line_end":94,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":423571,"byte_end":423574,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ - For stack arguments, different `StackSlot` entities are used to represent incoming and","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":423575,"byte_end":423667,"line_start":96,"line_end":96,"column_start":1,"column_end":93}},{"value":"/   outgoing arguments.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":423668,"byte_end":423693,"line_start":97,"line_end":97,"column_start":1,"column_end":26}},{"value":"/ - For register arguments, there is usually no difference, but if we ever add support for a","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":423694,"byte_end":423788,"line_start":98,"line_end":98,"column_start":1,"column_end":95}},{"value":"/   register-window ISA like SPARC, register arguments would also need to be translated.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":423789,"byte_end":423879,"line_start":99,"line_end":99,"column_start":1,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":1648},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":424392,"byte_end":424403,"line_start":118,"line_end":118,"column_start":12,"column_end":23},"name":"is_assigned","qualname":"<ArgumentLoc>::is_assigned","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this an assigned location? (That is, not `Unassigned`).\n","sig":null,"attributes":[{"value":"/ Is this an assigned location? (That is, not `Unassigned`).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":424318,"byte_end":424380,"line_start":117,"line_end":117,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1649},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":424568,"byte_end":424574,"line_start":126,"line_end":126,"column_start":12,"column_end":18},"name":"is_reg","qualname":"<ArgumentLoc>::is_reg","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a register location?\n","sig":null,"attributes":[{"value":"/ Is this a register location?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":424524,"byte_end":424556,"line_start":125,"line_end":125,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1650},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":424732,"byte_end":424740,"line_start":134,"line_end":134,"column_start":12,"column_end":20},"name":"is_stack","qualname":"<ArgumentLoc>::is_stack","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a stack location?\n","sig":null,"attributes":[{"value":"/ Is this a stack location?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":424691,"byte_end":424720,"line_start":133,"line_end":133,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1651},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":424985,"byte_end":424992,"line_start":143,"line_end":143,"column_start":12,"column_end":19},"name":"display","qualname":"<ArgumentLoc>::display","value":"fn <'a, R> (self, regs: R) -> DisplayArgumentLoc<'a>","parent":null,"children":[],"decl_id":null,"docs":" Return an object that can display this argument location, using the register info from the\n target ISA.\n","sig":null,"attributes":[{"value":"/ Return an object that can display this argument location, using the register info from the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":424859,"byte_end":424953,"line_start":141,"line_end":141,"column_start":5,"column_end":99}},{"value":"/ target ISA.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":424958,"byte_end":424973,"line_start":142,"line_end":142,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1654},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":425385,"byte_end":425403,"line_start":152,"line_end":152,"column_start":12,"column_end":30},"name":"DisplayArgumentLoc","qualname":"::ir::valueloc::DisplayArgumentLoc","value":"","parent":null,"children":[],"decl_id":null,"docs":" Displaying a `ArgumentLoc` correctly requires the associated `RegInfo` from the target ISA.\n Without the register info, register units are simply show as numbers.","sig":null,"attributes":[{"value":"/ Displaying a `ArgumentLoc` correctly requires the associated `RegInfo` from the target ISA.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":425125,"byte_end":425220,"line_start":148,"line_end":148,"column_start":1,"column_end":96}},{"value":"/ Without the register info, register units are simply show as numbers.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":425221,"byte_end":425294,"line_start":149,"line_end":149,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":425295,"byte_end":425298,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ The `DisplayArgumentLoc` type can display the contained `ArgumentLoc`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":425299,"byte_end":425373,"line_start":151,"line_end":151,"column_start":1,"column_end":75}}]},{"kind":"Type","id":{"krate":0,"index":1741},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":120418,"byte_end":120432,"line_start":68,"line_end":68,"column_start":10,"column_end":24},"name":"ValueLocations","qualname":"::ir::ValueLocations","value":"SecondaryMap<Value, ValueLoc>","parent":null,"children":[],"decl_id":null,"docs":" Map of value locations.\n","sig":null,"attributes":[{"value":"/ Map of value locations.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":120381,"byte_end":120408,"line_start":67,"line_end":67,"column_start":1,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":1742},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":120500,"byte_end":120510,"line_start":71,"line_end":71,"column_start":10,"column_end":20},"name":"JumpTables","qualname":"::ir::JumpTables","value":"PrimaryMap<JumpTable, JumpTableData>","parent":null,"children":[],"decl_id":null,"docs":" Map of jump tables.\n","sig":null,"attributes":[{"value":"/ Map of jump tables.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":120467,"byte_end":120490,"line_start":70,"line_end":70,"column_start":1,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":1743},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":120595,"byte_end":120608,"line_start":74,"line_end":74,"column_start":10,"column_end":23},"name":"InstEncodings","qualname":"::ir::InstEncodings","value":"SecondaryMap<Inst, isa::Encoding>","parent":null,"children":[],"decl_id":null,"docs":" Map of instruction encodings.\n","sig":null,"attributes":[{"value":"/ Map of instruction encodings.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":120552,"byte_end":120585,"line_start":73,"line_end":73,"column_start":1,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":1744},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":120685,"byte_end":120697,"line_start":77,"line_end":77,"column_start":10,"column_end":22},"name":"BlockOffsets","qualname":"::ir::BlockOffsets","value":"SecondaryMap<Block, binemit::CodeOffset>","parent":null,"children":[],"decl_id":null,"docs":" Code offsets for blocks.\n","sig":null,"attributes":[{"value":"/ Code offsets for blocks.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":120647,"byte_end":120675,"line_start":76,"line_end":76,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":1745},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":120786,"byte_end":120802,"line_start":80,"line_end":80,"column_start":10,"column_end":26},"name":"JumpTableOffsets","qualname":"::ir::JumpTableOffsets","value":"SecondaryMap<JumpTable, binemit::CodeOffset>","parent":null,"children":[],"decl_id":null,"docs":" Code offsets for Jump Tables.\n","sig":null,"attributes":[{"value":"/ Code offsets for Jump Tables.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":120743,"byte_end":120776,"line_start":79,"line_end":79,"column_start":1,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":1746},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":120900,"byte_end":120910,"line_start":83,"line_end":83,"column_start":10,"column_end":20},"name":"SourceLocs","qualname":"::ir::SourceLocs","value":"SecondaryMap<Inst, SourceLoc>","parent":null,"children":[],"decl_id":null,"docs":" Source locations for instructions.\n","sig":null,"attributes":[{"value":"/ Source locations for instructions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":120852,"byte_end":120890,"line_start":82,"line_end":82,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":7635},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":121101,"byte_end":121111,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"ValueLabel","qualname":"::ir::ValueLabel","value":"","parent":null,"children":[],"decl_id":null,"docs":" Marked with a label value.\n","sig":null,"attributes":[{"value":"/ Marked with a label value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":120945,"byte_end":120975,"line_start":85,"line_end":85,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7663},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":121211,"byte_end":121226,"line_start":93,"line_end":93,"column_start":12,"column_end":27},"name":"ValueLabelStart","qualname":"::ir::ValueLabelStart","value":"ValueLabelStart { from, label }","parent":null,"children":[{"krate":0,"index":7664},{"krate":0,"index":7665}],"decl_id":null,"docs":" A label of a Value.\n","sig":null,"attributes":[{"value":"/ A label of a Value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":121152,"byte_end":121175,"line_start":91,"line_end":91,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":7664},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":121282,"byte_end":121286,"line_start":95,"line_end":95,"column_start":9,"column_end":13},"name":"from","qualname":"::ir::ValueLabelStart::from","value":"ir::sourceloc::SourceLoc","parent":{"krate":0,"index":7663},"children":[],"decl_id":null,"docs":" Source location when it is in effect\n","sig":null,"attributes":[{"value":"/ Source location when it is in effect","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":121233,"byte_end":121273,"line_start":94,"line_end":94,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":7665},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":121333,"byte_end":121338,"line_start":98,"line_end":98,"column_start":9,"column_end":14},"name":"label","qualname":"::ir::ValueLabelStart::label","value":"ir::ValueLabel","parent":{"krate":0,"index":7663},"children":[],"decl_id":null,"docs":" The label index.\n","sig":null,"attributes":[{"value":"/ The label index.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":121304,"byte_end":121324,"line_start":97,"line_end":97,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7671},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":121530,"byte_end":121536,"line_start":105,"line_end":105,"column_start":5,"column_end":11},"name":"Starts","qualname":"::ir::ValueLabelAssignments::Starts","value":"ValueLabelAssignments::Starts(alloc::vec::Vec<ValueLabelStart>)","parent":{"krate":0,"index":7670},"children":[],"decl_id":null,"docs":" Original value labels assigned at transform.\n","sig":null,"attributes":[{"value":"/ Original value labels assigned at transform.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":121477,"byte_end":121525,"line_start":104,"line_end":104,"column_start":5,"column_end":53}}]},{"kind":"StructVariant","id":{"krate":0,"index":7674},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":121618,"byte_end":121623,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"Alias","qualname":"::ir::ValueLabelAssignments::Alias","value":"ValueLabelAssignments::Alias { from, value }","parent":{"krate":0,"index":7670},"children":[],"decl_id":null,"docs":" A value alias to original value.\n","sig":null,"attributes":[{"value":"/ A value alias to original value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":121577,"byte_end":121613,"line_start":107,"line_end":107,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":7670},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":121449,"byte_end":121470,"line_start":103,"line_end":103,"column_start":10,"column_end":31},"name":"ValueLabelAssignments","qualname":"::ir::ValueLabelAssignments","value":"ValueLabelAssignments::{Starts, Alias}","parent":null,"children":[{"krate":0,"index":7671},{"krate":0,"index":7674}],"decl_id":null,"docs":" Value label assignements: label starts or value aliases.\n","sig":null,"attributes":[{"value":"/ Value label assignements: label starts or value aliases.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":121355,"byte_end":121415,"line_start":101,"line_end":101,"column_start":1,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":1747},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"isa","qualname":"::isa","value":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","parent":null,"children":[{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1754},{"krate":0,"index":1758},{"krate":0,"index":1764},{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1771},{"krate":0,"index":1772},{"krate":0,"index":1773},{"krate":0,"index":1774},{"krate":0,"index":1775},{"krate":0,"index":1776},{"krate":0,"index":1777},{"krate":0,"index":1778},{"krate":0,"index":1779},{"krate":0,"index":1780},{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":2211},{"krate":0,"index":2229},{"krate":0,"index":2245},{"krate":0,"index":2312},{"krate":0,"index":2349},{"krate":0,"index":2423},{"krate":0,"index":2434},{"krate":0,"index":2435},{"krate":0,"index":2436},{"krate":0,"index":8181},{"krate":0,"index":8197},{"krate":0,"index":8198},{"krate":0,"index":8194},{"krate":0,"index":8195},{"krate":0,"index":8191},{"krate":0,"index":8192},{"krate":0,"index":8190},{"krate":0,"index":8188},{"krate":0,"index":8186},{"krate":0,"index":2438},{"krate":0,"index":2442},{"krate":0,"index":2444},{"krate":0,"index":2447},{"krate":0,"index":8200},{"krate":0,"index":8204},{"krate":0,"index":8203},{"krate":0,"index":2448},{"krate":0,"index":2452}],"decl_id":null,"docs":" Instruction Set Architectures.","sig":null,"attributes":[{"value":"! Instruction Set Architectures.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":425903,"byte_end":425937,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":425938,"byte_end":425941,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The `isa` module provides a `TargetIsa` trait which provides the behavior specialization needed","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":425942,"byte_end":426041,"line_start":3,"line_end":3,"column_start":1,"column_end":100}},{"value":"! by the ISA-independent code generator. The sub-modules of this module provide definitions for","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":426042,"byte_end":426139,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"! the instruction sets that Cranelift can target. Each sub-module has it's own implementation of","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":426140,"byte_end":426238,"line_start":5,"line_end":5,"column_start":1,"column_end":99}},{"value":"! `TargetIsa`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":426239,"byte_end":426255,"line_start":6,"line_end":6,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":426256,"byte_end":426259,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! # Constructing a `TargetIsa` instance","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":426260,"byte_end":426301,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":426302,"byte_end":426305,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! The target ISA is built from the following information:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":426306,"byte_end":426365,"line_start":10,"line_end":10,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":426366,"byte_end":426369,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! - The name of the target ISA as a string. Cranelift is a cross-compiler, so the ISA to target","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":426370,"byte_end":426467,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"!   can be selected dynamically. Individual ISAs can be left out when Cranelift is compiled, so a","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":426468,"byte_end":426567,"line_start":13,"line_end":13,"column_start":1,"column_end":100}},{"value":"!   string is used to identify the proper sub-module.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":426568,"byte_end":426623,"line_start":14,"line_end":14,"column_start":1,"column_end":56}},{"value":"! - Values for settings that apply to all ISAs. This is represented by a `settings::Flags`","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":426624,"byte_end":426716,"line_start":15,"line_end":15,"column_start":1,"column_end":93}},{"value":"!   instance.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":426717,"byte_end":426732,"line_start":16,"line_end":16,"column_start":1,"column_end":16}},{"value":"! - Values for ISA-specific settings.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":426733,"byte_end":426772,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":426773,"byte_end":426776,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! The `isa::lookup()` function is the main entry point which returns an `isa::Builder`","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":426777,"byte_end":426865,"line_start":19,"line_end":19,"column_start":1,"column_end":89}},{"value":"! appropriate for the requested ISA:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":426866,"byte_end":426904,"line_start":20,"line_end":20,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":426905,"byte_end":426908,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":426909,"byte_end":426916,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"! # extern crate cranelift_codegen;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":426917,"byte_end":426954,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"! # #[macro_use] extern crate target_lexicon;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":426955,"byte_end":427002,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"! use cranelift_codegen::isa;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427003,"byte_end":427034,"line_start":25,"line_end":25,"column_start":1,"column_end":32}},{"value":"! use cranelift_codegen::settings::{self, Configurable};","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427035,"byte_end":427093,"line_start":26,"line_end":26,"column_start":1,"column_end":59}},{"value":"! use std::str::FromStr;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427094,"byte_end":427120,"line_start":27,"line_end":27,"column_start":1,"column_end":27}},{"value":"! use target_lexicon::Triple;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427121,"byte_end":427152,"line_start":28,"line_end":28,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427153,"byte_end":427156,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! let shared_builder = settings::builder();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427157,"byte_end":427202,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"! let shared_flags = settings::Flags::new(shared_builder);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427203,"byte_end":427263,"line_start":31,"line_end":31,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427264,"byte_end":427267,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! match isa::lookup(triple!(\"riscv32\")) {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427268,"byte_end":427311,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"!     Err(_) => {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427312,"byte_end":427331,"line_start":34,"line_end":34,"column_start":1,"column_end":20}},{"value":"!         // The RISC-V target ISA is not available.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427332,"byte_end":427386,"line_start":35,"line_end":35,"column_start":1,"column_end":55}},{"value":"!     }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427387,"byte_end":427396,"line_start":36,"line_end":36,"column_start":1,"column_end":10}},{"value":"!     Ok(mut isa_builder) => {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427397,"byte_end":427429,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"!         isa_builder.set(\"supports_m\", \"on\");","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427430,"byte_end":427478,"line_start":38,"line_end":38,"column_start":1,"column_end":49}},{"value":"!         let isa = isa_builder.finish(shared_flags);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427479,"byte_end":427534,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"!     }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427535,"byte_end":427544,"line_start":40,"line_end":40,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427545,"byte_end":427550,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427551,"byte_end":427558,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427559,"byte_end":427562,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! The configured target ISA trait object is a `Box<TargetIsa>` which can be used for multiple","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427563,"byte_end":427658,"line_start":44,"line_end":44,"column_start":1,"column_end":96}},{"value":"! concurrent function compilations.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":427659,"byte_end":427696,"line_start":45,"line_end":45,"column_start":1,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8012},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/call_conv.rs","byte_start":580187,"byte_end":580191,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Fast","qualname":"::isa::call_conv::CallConv::Fast","value":"CallConv::Fast","parent":{"krate":0,"index":8011},"children":[],"decl_id":null,"docs":" Best performance, not ABI-stable\n","sig":null,"attributes":[{"value":"/ Best performance, not ABI-stable","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/call_conv.rs","byte_start":580146,"byte_end":580182,"line_start":10,"line_end":10,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8014},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/call_conv.rs","byte_start":580247,"byte_end":580251,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"Cold","qualname":"::isa::call_conv::CallConv::Cold","value":"CallConv::Cold","parent":{"krate":0,"index":8011},"children":[],"decl_id":null,"docs":" Smallest caller code size, not ABI-stable\n","sig":null,"attributes":[{"value":"/ Smallest caller code size, not ABI-stable","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/call_conv.rs","byte_start":580197,"byte_end":580242,"line_start":12,"line_end":12,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8016},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/call_conv.rs","byte_start":580314,"byte_end":580321,"line_start":15,"line_end":15,"column_start":5,"column_end":12},"name":"SystemV","qualname":"::isa::call_conv::CallConv::SystemV","value":"CallConv::SystemV","parent":{"krate":0,"index":8011},"children":[],"decl_id":null,"docs":" System V-style convention used on many platforms\n","sig":null,"attributes":[{"value":"/ System V-style convention used on many platforms","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/call_conv.rs","byte_start":580257,"byte_end":580309,"line_start":14,"line_end":14,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8018},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/call_conv.rs","byte_start":580392,"byte_end":580407,"line_start":17,"line_end":17,"column_start":5,"column_end":20},"name":"WindowsFastcall","qualname":"::isa::call_conv::CallConv::WindowsFastcall","value":"CallConv::WindowsFastcall","parent":{"krate":0,"index":8011},"children":[],"decl_id":null,"docs":" Windows \"fastcall\" convention, also used for x64 and ARM\n","sig":null,"attributes":[{"value":"/ Windows \"fastcall\" convention, also used for x64 and ARM","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/call_conv.rs","byte_start":580327,"byte_end":580387,"line_start":16,"line_end":16,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8020},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/call_conv.rs","byte_start":580491,"byte_end":580507,"line_start":19,"line_end":19,"column_start":5,"column_end":21},"name":"BaldrdashSystemV","qualname":"::isa::call_conv::CallConv::BaldrdashSystemV","value":"CallConv::BaldrdashSystemV","parent":{"krate":0,"index":8011},"children":[],"decl_id":null,"docs":" SpiderMonkey WebAssembly convention on systems using natively SystemV\n","sig":null,"attributes":[{"value":"/ SpiderMonkey WebAssembly convention on systems using natively SystemV","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/call_conv.rs","byte_start":580413,"byte_end":580486,"line_start":18,"line_end":18,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8022},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/call_conv.rs","byte_start":580568,"byte_end":580584,"line_start":21,"line_end":21,"column_start":5,"column_end":21},"name":"BaldrdashWindows","qualname":"::isa::call_conv::CallConv::BaldrdashWindows","value":"CallConv::BaldrdashWindows","parent":{"krate":0,"index":8011},"children":[],"decl_id":null,"docs":" SpiderMonkey WebAssembly convention on Windows\n","sig":null,"attributes":[{"value":"/ SpiderMonkey WebAssembly convention on Windows","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/call_conv.rs","byte_start":580513,"byte_end":580563,"line_start":20,"line_end":20,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8024},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/call_conv.rs","byte_start":580649,"byte_end":580659,"line_start":23,"line_end":23,"column_start":5,"column_end":15},"name":"Probestack","qualname":"::isa::call_conv::CallConv::Probestack","value":"CallConv::Probestack","parent":{"krate":0,"index":8011},"children":[],"decl_id":null,"docs":" Specialized convention for the probestack function\n","sig":null,"attributes":[{"value":"/ Specialized convention for the probestack function","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/call_conv.rs","byte_start":580590,"byte_end":580644,"line_start":22,"line_end":22,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":8011},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/call_conv.rs","byte_start":580131,"byte_end":580139,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"CallConv","qualname":"::isa::call_conv::CallConv","value":"CallConv::{Fast, Cold, SystemV, WindowsFastcall, BaldrdashSystemV, BaldrdashWindows, Probestack}","parent":null,"children":[{"krate":0,"index":8012},{"krate":0,"index":8014},{"krate":0,"index":8016},{"krate":0,"index":8018},{"krate":0,"index":8020},{"krate":0,"index":8022},{"krate":0,"index":8024}],"decl_id":null,"docs":" Calling convention identifiers.\n","sig":null,"attributes":[{"value":"/ Calling convention identifiers.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/call_conv.rs","byte_start":580035,"byte_end":580070,"line_start":7,"line_end":7,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2220},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/call_conv.rs","byte_start":580766,"byte_end":580780,"line_start":28,"line_end":28,"column_start":12,"column_end":26},"name":"triple_default","qualname":"<CallConv>::triple_default","value":"fn (triple: &Triple) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the default calling convention for the given target triple.\n","sig":null,"attributes":[{"value":"/ Return the default calling convention for the given target triple.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/call_conv.rs","byte_start":580684,"byte_end":580754,"line_start":27,"line_end":27,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2221},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/call_conv.rs","byte_start":581297,"byte_end":581308,"line_start":39,"line_end":39,"column_start":12,"column_end":23},"name":"for_libcall","qualname":"<CallConv>::for_libcall","value":"fn (isa: &dyn TargetIsa) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the calling convention used for libcalls for the given ISA.\n","sig":null,"attributes":[{"value":"/ Returns the calling convention used for libcalls for the given ISA.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/call_conv.rs","byte_start":581214,"byte_end":581285,"line_start":38,"line_end":38,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2222},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/call_conv.rs","byte_start":581985,"byte_end":582009,"line_start":53,"line_end":53,"column_start":12,"column_end":36},"name":"extends_windows_fastcall","qualname":"<CallConv>::extends_windows_fastcall","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the calling convention extending the Windows Fastcall ABI?\n","sig":null,"attributes":[{"value":"/ Is the calling convention extending the Windows Fastcall ABI?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/call_conv.rs","byte_start":581908,"byte_end":581973,"line_start":52,"line_end":52,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2223},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/call_conv.rs","byte_start":582230,"byte_end":582247,"line_start":61,"line_end":61,"column_start":12,"column_end":29},"name":"extends_baldrdash","qualname":"<CallConv>::extends_baldrdash","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the calling convention extending the Baldrdash ABI?\n","sig":null,"attributes":[{"value":"/ Is the calling convention extending the Baldrdash ABI?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/call_conv.rs","byte_start":582160,"byte_end":582218,"line_start":60,"line_end":60,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":8040},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":584112,"byte_end":584129,"line_start":17,"line_end":17,"column_start":12,"column_end":29},"name":"OperandConstraint","qualname":"::isa::constraints::OperandConstraint","value":"OperandConstraint { kind, regclass }","parent":null,"children":[{"krate":0,"index":8041},{"krate":0,"index":8042}],"decl_id":null,"docs":" Register constraint for a single value operand or instruction result.\n","sig":null,"attributes":[{"value":"/ Register constraint for a single value operand or instruction result.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":583999,"byte_end":584072,"line_start":15,"line_end":15,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":8041},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":584172,"byte_end":584176,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"name":"kind","qualname":"::isa::constraints::OperandConstraint::kind","value":"isa::constraints::ConstraintKind","parent":{"krate":0,"index":8040},"children":[],"decl_id":null,"docs":" The kind of constraint.\n","sig":null,"attributes":[{"value":"/ The kind of constraint.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":584136,"byte_end":584163,"line_start":18,"line_end":18,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":8042},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":584341,"byte_end":584349,"line_start":24,"line_end":24,"column_start":9,"column_end":17},"name":"regclass","qualname":"::isa::constraints::OperandConstraint::regclass","value":"&'static isa::registers::RegClassData","parent":{"krate":0,"index":8040},"children":[],"decl_id":null,"docs":" The register class of the operand.","sig":null,"attributes":[{"value":"/ The register class of the operand.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":584199,"byte_end":584237,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":584242,"byte_end":584245,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This applies to all kinds of constraints, but with slightly different meaning.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":584250,"byte_end":584332,"line_start":23,"line_end":23,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2240},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":584620,"byte_end":584629,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"satisfied","qualname":"<OperandConstraint>::satisfied","value":"fn (&self, loc: ValueLoc) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this operand constraint is satisfied by the given value location.\n For tied constraints, this only checks the register class, not that the\n counterpart operand has the same value location.\n","sig":null,"attributes":[{"value":"/ Check if this operand constraint is satisfied by the given value location.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":584393,"byte_end":584471,"line_start":28,"line_end":28,"column_start":5,"column_end":83}},{"value":"/ For tied constraints, this only checks the register class, not that the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":584476,"byte_end":584551,"line_start":29,"line_end":29,"column_start":5,"column_end":80}},{"value":"/ counterpart operand has the same value location.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":584556,"byte_end":584608,"line_start":30,"line_end":30,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8050},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":585519,"byte_end":585522,"line_start":58,"line_end":58,"column_start":5,"column_end":8},"name":"Reg","qualname":"::isa::constraints::ConstraintKind::Reg","value":"ConstraintKind::Reg","parent":{"krate":0,"index":8049},"children":[],"decl_id":null,"docs":" This operand or result must be a register from the given register class.\n","sig":null,"attributes":[{"value":"/ This operand or result must be a register from the given register class.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":585438,"byte_end":585514,"line_start":57,"line_end":57,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8052},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":585707,"byte_end":585715,"line_start":64,"line_end":64,"column_start":5,"column_end":13},"name":"FixedReg","qualname":"::isa::constraints::ConstraintKind::FixedReg","value":"ConstraintKind::FixedReg(RegUnit)","parent":{"krate":0,"index":8049},"children":[],"decl_id":null,"docs":" This operand or result must be a fixed register.","sig":null,"attributes":[{"value":"/ This operand or result must be a fixed register.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":585529,"byte_end":585581,"line_start":60,"line_end":60,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":585586,"byte_end":585589,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The constraint's `regclass` field is the top-level register class containing the fixed","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":585594,"byte_end":585684,"line_start":62,"line_end":62,"column_start":5,"column_end":95}},{"value":"/ register.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":585689,"byte_end":585702,"line_start":63,"line_end":63,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8055},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":586251,"byte_end":586255,"line_start":74,"line_end":74,"column_start":5,"column_end":9},"name":"Tied","qualname":"::isa::constraints::ConstraintKind::Tied","value":"ConstraintKind::Tied(u8)","parent":{"krate":0,"index":8049},"children":[],"decl_id":null,"docs":" This result value must use the same register as an input value operand.","sig":null,"attributes":[{"value":"/ This result value must use the same register as an input value operand.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":585731,"byte_end":585806,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":585811,"byte_end":585814,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ The associated number is the index of the input value operand this result is tied to. The","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":585819,"byte_end":585912,"line_start":68,"line_end":68,"column_start":5,"column_end":98}},{"value":"/ constraint's `regclass` field is the same as the tied operand's register class.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":585917,"byte_end":586000,"line_start":69,"line_end":69,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":586005,"byte_end":586008,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ When an (in, out) operand pair is tied, this constraint kind appears in both the `ins` and","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":586013,"byte_end":586107,"line_start":71,"line_end":71,"column_start":5,"column_end":99}},{"value":"/ the `outs` arrays. The constraint for the in operand is `Tied(out)`, and the constraint for","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":586112,"byte_end":586207,"line_start":72,"line_end":72,"column_start":5,"column_end":100}},{"value":"/ the out operand is `Tied(in)`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":586212,"byte_end":586246,"line_start":73,"line_end":73,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8058},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":586593,"byte_end":586602,"line_start":81,"line_end":81,"column_start":5,"column_end":14},"name":"FixedTied","qualname":"::isa::constraints::ConstraintKind::FixedTied","value":"ConstraintKind::FixedTied(RegUnit)","parent":{"krate":0,"index":8049},"children":[],"decl_id":null,"docs":" This operand must be a fixed register, and it has a tied counterpart.","sig":null,"attributes":[{"value":"/ This operand must be a fixed register, and it has a tied counterpart.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":586266,"byte_end":586339,"line_start":76,"line_end":76,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":586344,"byte_end":586347,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This works just like `FixedReg`, but additionally indicates that there are identical","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":586352,"byte_end":586440,"line_start":78,"line_end":78,"column_start":5,"column_end":93}},{"value":"/ input/output operands for this fixed register. For an input operand, this means that the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":586445,"byte_end":586537,"line_start":79,"line_end":79,"column_start":5,"column_end":97}},{"value":"/ value will be clobbered by the instruction","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":586542,"byte_end":586588,"line_start":80,"line_end":80,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8061},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":586819,"byte_end":586824,"line_start":87,"line_end":87,"column_start":5,"column_end":10},"name":"Stack","qualname":"::isa::constraints::ConstraintKind::Stack","value":"ConstraintKind::Stack","parent":{"krate":0,"index":8049},"children":[],"decl_id":null,"docs":" This operand must be a value in a stack slot.","sig":null,"attributes":[{"value":"/ This operand must be a value in a stack slot.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":586618,"byte_end":586667,"line_start":83,"line_end":83,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":586672,"byte_end":586675,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ The constraint's `regclass` field is the register class that would normally be used to load","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":586680,"byte_end":586775,"line_start":85,"line_end":85,"column_start":5,"column_end":100}},{"value":"/ and store values of this type.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":586780,"byte_end":586814,"line_start":86,"line_end":86,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":8049},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":585417,"byte_end":585431,"line_start":56,"line_end":56,"column_start":10,"column_end":24},"name":"ConstraintKind","qualname":"::isa::constraints::ConstraintKind","value":"ConstraintKind::{Reg, FixedReg, Tied, FixedTied, Stack}","parent":null,"children":[{"krate":0,"index":8050},{"krate":0,"index":8052},{"krate":0,"index":8055},{"krate":0,"index":8058},{"krate":0,"index":8061}],"decl_id":null,"docs":" The different kinds of operand constraints.\n","sig":null,"attributes":[{"value":"/ The different kinds of operand constraints.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":585315,"byte_end":585362,"line_start":54,"line_end":54,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":8075},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":586922,"byte_end":586939,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"RecipeConstraints","qualname":"::isa::constraints::RecipeConstraints","value":"RecipeConstraints { ins, outs, fixed_ins, fixed_outs, tied_ops, clobbers_flags }","parent":null,"children":[{"krate":0,"index":8076},{"krate":0,"index":8077},{"krate":0,"index":8078},{"krate":0,"index":8079},{"krate":0,"index":8080},{"krate":0,"index":8081}],"decl_id":null,"docs":" Value operand constraints for an encoding recipe.\n","sig":null,"attributes":[{"value":"/ Value operand constraints for an encoding recipe.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":586829,"byte_end":586882,"line_start":90,"line_end":90,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":8076},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":587363,"byte_end":587366,"line_start":100,"line_end":100,"column_start":9,"column_end":12},"name":"ins","qualname":"::isa::constraints::RecipeConstraints::ins","value":"&'static [isa::constraints::OperandConstraint]","parent":{"krate":0,"index":8075},"children":[],"decl_id":null,"docs":" Constraints for the instruction's fixed value operands.","sig":null,"attributes":[{"value":"/ Constraints for the instruction's fixed value operands.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":586946,"byte_end":587005,"line_start":93,"line_end":93,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":587010,"byte_end":587013,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ If the instruction takes a variable number of operands, the register constraints for those","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":587018,"byte_end":587112,"line_start":95,"line_end":95,"column_start":5,"column_end":99}},{"value":"/ operands must be computed dynamically.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":587117,"byte_end":587159,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":587164,"byte_end":587167,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ - For branches and jumps, block arguments must match the expectations of the destination block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":587172,"byte_end":587271,"line_start":98,"line_end":98,"column_start":5,"column_end":104}},{"value":"/ - For calls and returns, the calling convention ABI specifies constraints.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":587276,"byte_end":587354,"line_start":99,"line_end":99,"column_start":5,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":8077},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":587636,"byte_end":587640,"line_start":106,"line_end":106,"column_start":9,"column_end":13},"name":"outs","qualname":"::isa::constraints::RecipeConstraints::outs","value":"&'static [isa::constraints::OperandConstraint]","parent":{"krate":0,"index":8075},"children":[],"decl_id":null,"docs":" Constraints for the instruction's fixed results.","sig":null,"attributes":[{"value":"/ Constraints for the instruction's fixed results.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":587403,"byte_end":587455,"line_start":102,"line_end":102,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":587460,"byte_end":587463,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ If the instruction produces a variable number of results, it's probably a call and the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":587468,"byte_end":587558,"line_start":104,"line_end":104,"column_start":5,"column_end":95}},{"value":"/ constraints must be derived from the calling convention ABI.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":587563,"byte_end":587627,"line_start":105,"line_end":105,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":8078},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":587749,"byte_end":587758,"line_start":109,"line_end":109,"column_start":9,"column_end":18},"name":"fixed_ins","qualname":"::isa::constraints::RecipeConstraints::fixed_ins","value":"bool","parent":{"krate":0,"index":8075},"children":[],"decl_id":null,"docs":" Are any of the input constraints `FixedReg` or `FixedTied`?\n","sig":null,"attributes":[{"value":"/ Are any of the input constraints `FixedReg` or `FixedTied`?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":587677,"byte_end":587740,"line_start":108,"line_end":108,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":8079},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":587844,"byte_end":587854,"line_start":112,"line_end":112,"column_start":9,"column_end":19},"name":"fixed_outs","qualname":"::isa::constraints::RecipeConstraints::fixed_outs","value":"bool","parent":{"krate":0,"index":8075},"children":[],"decl_id":null,"docs":" Are any of the output constraints `FixedReg` or `FixedTied`?\n","sig":null,"attributes":[{"value":"/ Are any of the output constraints `FixedReg` or `FixedTied`?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":587771,"byte_end":587835,"line_start":111,"line_end":111,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":8080},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":587949,"byte_end":587957,"line_start":115,"line_end":115,"column_start":9,"column_end":17},"name":"tied_ops","qualname":"::isa::constraints::RecipeConstraints::tied_ops","value":"bool","parent":{"krate":0,"index":8075},"children":[],"decl_id":null,"docs":" Are any of the input/output constraints `Tied` (but not `FixedTied`)?\n","sig":null,"attributes":[{"value":"/ Are any of the input/output constraints `Tied` (but not `FixedTied`)?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":587867,"byte_end":587940,"line_start":114,"line_end":114,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":8081},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":588134,"byte_end":588148,"line_start":120,"line_end":120,"column_start":9,"column_end":23},"name":"clobbers_flags","qualname":"::isa::constraints::RecipeConstraints::clobbers_flags","value":"bool","parent":{"krate":0,"index":8075},"children":[],"decl_id":null,"docs":" Does this instruction clobber the CPU flags?","sig":null,"attributes":[{"value":"/ Does this instruction clobber the CPU flags?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":587970,"byte_end":588018,"line_start":117,"line_end":117,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":588023,"byte_end":588026,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ When true, SSA values of type `iflags` or `fflags` can not be live across the instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":588031,"byte_end":588125,"line_start":119,"line_end":119,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":2242},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":588273,"byte_end":588282,"line_start":125,"line_end":125,"column_start":12,"column_end":21},"name":"satisfied","qualname":"<RecipeConstraints>::satisfied","value":"fn (&self, inst: Inst, divert: &RegDiversions, func: &Function) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check that these constraints are satisfied by the operands on `inst`.\n","sig":null,"attributes":[{"value":"/ Check that these constraints are satisfied by the operands on `inst`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":588188,"byte_end":588261,"line_start":124,"line_end":124,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":8088},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":589726,"byte_end":589737,"line_start":163,"line_end":163,"column_start":12,"column_end":23},"name":"BranchRange","qualname":"::isa::constraints::BranchRange","value":"BranchRange { origin, bits }","parent":null,"children":[{"krate":0,"index":8089},{"krate":0,"index":8090}],"decl_id":null,"docs":" Constraints on the range of a branch instruction.","sig":null,"attributes":[{"value":"/ Constraints on the range of a branch instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":589162,"byte_end":589215,"line_start":153,"line_end":153,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":589216,"byte_end":589219,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ A branch instruction usually encodes its destination as a signed n-bit offset from an origin.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":589220,"byte_end":589317,"line_start":155,"line_end":155,"column_start":1,"column_end":98}},{"value":"/ The origin depends on the ISA and the specific instruction:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":589318,"byte_end":589381,"line_start":156,"line_end":156,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":589382,"byte_end":589385,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ - RISC-V and ARM Aarch64 use the address of the branch instruction, `origin = 0`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":589386,"byte_end":589471,"line_start":158,"line_end":158,"column_start":1,"column_end":86}},{"value":"/ - x86 uses the address of the instruction following the branch, `origin = 2` for a 2-byte","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":589472,"byte_end":589565,"line_start":159,"line_end":159,"column_start":1,"column_end":94}},{"value":"/   branch instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":589566,"byte_end":589591,"line_start":160,"line_end":160,"column_start":1,"column_end":26}},{"value":"/ - ARM's A32 encoding uses the address of the branch instruction + 8 bytes, `origin = 8`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":589592,"byte_end":589684,"line_start":161,"line_end":161,"column_start":1,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":8089},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":589948,"byte_end":589954,"line_start":166,"line_end":166,"column_start":9,"column_end":15},"name":"origin","qualname":"::isa::constraints::BranchRange::origin","value":"u8","parent":{"krate":0,"index":8088},"children":[],"decl_id":null,"docs":" Offset in bytes from the address of the branch instruction to the origin used for computing\n the branch displacement. This is the destination of a branch that encodes a 0 displacement.\n","sig":null,"attributes":[{"value":"/ Offset in bytes from the address of the branch instruction to the origin used for computing","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":589744,"byte_end":589839,"line_start":164,"line_end":164,"column_start":5,"column_end":100}},{"value":"/ the branch displacement. This is the destination of a branch that encodes a 0 displacement.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":589844,"byte_end":589939,"line_start":165,"line_end":165,"column_start":5,"column_end":100}}]},{"kind":"Field","id":{"krate":0,"index":8090},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":590135,"byte_end":590139,"line_start":170,"line_end":170,"column_start":9,"column_end":13},"name":"bits","qualname":"::isa::constraints::BranchRange::bits","value":"u8","parent":{"krate":0,"index":8088},"children":[],"decl_id":null,"docs":" Number of bits in the signed byte displacement encoded in the instruction. This does not\n account for branches that can only target aligned addresses.\n","sig":null,"attributes":[{"value":"/ Number of bits in the signed byte displacement encoded in the instruction. This does not","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":589965,"byte_end":590057,"line_start":168,"line_end":168,"column_start":5,"column_end":97}},{"value":"/ account for branches that can only target aligned addresses.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":590062,"byte_end":590126,"line_start":169,"line_end":169,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2244},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":590490,"byte_end":590498,"line_start":179,"line_end":179,"column_start":12,"column_end":20},"name":"contains","qualname":"<BranchRange>::contains","value":"fn (self, branch: CodeOffset, dest: CodeOffset) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determine if this branch range can represent the range from `branch` to `dest`, where\n `branch` is the code offset of the branch instruction itself and `dest` is the code offset\n of the destination block header.","sig":null,"attributes":[{"value":"/ Determine if this branch range can represent the range from `branch` to `dest`, where","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":590171,"byte_end":590260,"line_start":174,"line_end":174,"column_start":5,"column_end":94}},{"value":"/ `branch` is the code offset of the branch instruction itself and `dest` is the code offset","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":590265,"byte_end":590359,"line_start":175,"line_end":175,"column_start":5,"column_end":99}},{"value":"/ of the destination block header.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":590364,"byte_end":590400,"line_start":176,"line_end":176,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":590405,"byte_end":590408,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method does not detect if the range is larger than 2 GB.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":590413,"byte_end":590478,"line_start":178,"line_end":178,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":2291},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/enc_tables.rs","byte_start":597270,"byte_end":597279,"line_start":174,"line_end":174,"column_start":12,"column_end":21},"name":"Encodings","qualname":"::isa::enc_tables::Encodings","value":"Encodings {  }","parent":null,"children":[{"krate":0,"index":2293},{"krate":0,"index":2294},{"krate":0,"index":2295},{"krate":0,"index":2296},{"krate":0,"index":2297},{"krate":0,"index":2298},{"krate":0,"index":2299},{"krate":0,"index":2300},{"krate":0,"index":2301}],"decl_id":null,"docs":" An iterator over legal encodings for the instruction.\n","sig":null,"attributes":[{"value":"/ An iterator over legal encodings for the instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/enc_tables.rs","byte_start":597201,"byte_end":597258,"line_start":173,"line_end":173,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2304},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/enc_tables.rs","byte_start":598039,"byte_end":598042,"line_start":194,"line_end":194,"column_start":12,"column_end":15},"name":"new","qualname":"<Encodings>::new","value":"fn (offset: usize, legalize: LegalizeCode, inst: &'a InstructionData, func: &'a Function, enclist: &'static [EncListEntry], legalize_actions: &'static [Legalize], recipe_preds: &'static [RecipePredicate], inst_preds: &'static [InstPredicate], isa_preds: PredicateView<'a>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of `Encodings`.","sig":null,"attributes":[{"value":"/ Creates a new instance of `Encodings`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/enc_tables.rs","byte_start":597764,"byte_end":597806,"line_start":189,"line_end":189,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/enc_tables.rs","byte_start":597811,"byte_end":597814,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ This iterator provides search for encodings that applies to the given instruction. The","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/enc_tables.rs","byte_start":597819,"byte_end":597909,"line_start":191,"line_end":191,"column_start":5,"column_end":95}},{"value":"/ encoding lists are laid out such that first call to `next` returns valid entry in the list","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/enc_tables.rs","byte_start":597914,"byte_end":598008,"line_start":192,"line_end":192,"column_start":5,"column_end":99}},{"value":"/ or `None`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/enc_tables.rs","byte_start":598013,"byte_end":598027,"line_start":193,"line_end":193,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":2305},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/enc_tables.rs","byte_start":598931,"byte_end":598939,"line_start":223,"line_end":223,"column_start":12,"column_end":20},"name":"legalize","qualname":"<Encodings>::legalize","value":"fn (&self) -> Legalize","parent":null,"children":[],"decl_id":null,"docs":" Get the legalization action that caused the enumeration of encodings to stop.\n This can be the default legalization action for the type or a custom code for the\n instruction.","sig":null,"attributes":[{"value":"/ Get the legalization action that caused the enumeration of encodings to stop.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/enc_tables.rs","byte_start":598644,"byte_end":598725,"line_start":218,"line_end":218,"column_start":5,"column_end":86}},{"value":"/ This can be the default legalization action for the type or a custom code for the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/enc_tables.rs","byte_start":598730,"byte_end":598815,"line_start":219,"line_end":219,"column_start":5,"column_end":90}},{"value":"/ instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/enc_tables.rs","byte_start":598820,"byte_end":598836,"line_start":220,"line_end":220,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/enc_tables.rs","byte_start":598841,"byte_end":598844,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ This method must only be called after the iterator returns `None`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/enc_tables.rs","byte_start":598849,"byte_end":598919,"line_start":222,"line_end":222,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":8096},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":601825,"byte_end":601833,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"Encoding","qualname":"::isa::encoding::Encoding","value":"Encoding {  }","parent":null,"children":[{"krate":0,"index":8097},{"krate":0,"index":8098}],"decl_id":null,"docs":" Bits needed to encode an instruction as binary machine code.","sig":null,"attributes":[{"value":"/ Bits needed to encode an instruction as binary machine code.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":601380,"byte_end":601444,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":601445,"byte_end":601448,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The encoding consists of two parts, both specific to the target ISA: An encoding *recipe*, and","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":601449,"byte_end":601547,"line_start":11,"line_end":11,"column_start":1,"column_end":99}},{"value":"/ encoding *bits*. The recipe determines the native instruction format and the mapping of","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":601548,"byte_end":601639,"line_start":12,"line_end":12,"column_start":1,"column_end":92}},{"value":"/ operands to encoded bits. The encoding bits provide additional information to the recipe,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":601640,"byte_end":601733,"line_start":13,"line_end":13,"column_start":1,"column_end":94}},{"value":"/ typically parts of the opcode.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":601734,"byte_end":601768,"line_start":14,"line_end":14,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2323},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":601959,"byte_end":601962,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoding>::new","value":"fn (recipe: u16, bits: u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Encoding` containing `(recipe, bits)`.\n","sig":null,"attributes":[{"value":"/ Create a new `Encoding` containing `(recipe, bits)`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":601891,"byte_end":601947,"line_start":22,"line_end":22,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2324},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":602093,"byte_end":602099,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"recipe","qualname":"<Encoding>::recipe","value":"fn (self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the recipe number in this encoding.\n","sig":null,"attributes":[{"value":"/ Get the recipe number in this encoding.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":602038,"byte_end":602081,"line_start":27,"line_end":27,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2325},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":602211,"byte_end":602215,"line_start":33,"line_end":33,"column_start":12,"column_end":16},"name":"bits","qualname":"<Encoding>::bits","value":"fn (self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the recipe-specific encoding bits.\n","sig":null,"attributes":[{"value":"/ Get the recipe-specific encoding bits.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":602157,"byte_end":602199,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2326},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":602329,"byte_end":602337,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"is_legal","qualname":"<Encoding>::is_legal","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a legal encoding, or the default placeholder?\n","sig":null,"attributes":[{"value":"/ Is this a legal encoding, or the default placeholder?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":602260,"byte_end":602317,"line_start":37,"line_end":37,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":2331},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":602973,"byte_end":602988,"line_start":63,"line_end":63,"column_start":12,"column_end":27},"name":"DisplayEncoding","qualname":"::isa::encoding::DisplayEncoding","value":"DisplayEncoding { encoding, recipe_names }","parent":null,"children":[{"krate":0,"index":2332},{"krate":0,"index":2333}],"decl_id":null,"docs":" Temporary object that holds enough context to properly display an encoding.\n This is meant to be created by `EncInfo::display()`.\n","sig":null,"attributes":[{"value":"/ Temporary object that holds enough context to properly display an encoding.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":602825,"byte_end":602904,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ This is meant to be created by `EncInfo::display()`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":602905,"byte_end":602961,"line_start":62,"line_end":62,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":2332},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":602999,"byte_end":603007,"line_start":64,"line_end":64,"column_start":9,"column_end":17},"name":"encoding","qualname":"::isa::encoding::DisplayEncoding::encoding","value":"isa::encoding::Encoding","parent":{"krate":0,"index":2331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2333},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":603027,"byte_end":603039,"line_start":65,"line_end":65,"column_start":9,"column_end":21},"name":"recipe_names","qualname":"::isa::encoding::DisplayEncoding::recipe_names","value":"&'static [&'static str]","parent":{"krate":0,"index":2331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2337},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":603804,"byte_end":603813,"line_start":88,"line_end":88,"column_start":8,"column_end":17},"name":"base_size","qualname":"::isa::encoding::base_size","value":"fn (sizing: &RecipeSizing, _: Encoding, _: Inst, _: &RegDiversions, _: &Function) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the base size of the Recipe, assuming it's fixed. This is the default for most\n encodings; others can be variable and longer than this base size, depending on the registers\n they're using and use a different function, specific per platform.\n","sig":null,"attributes":[{"value":"/ Returns the base size of the Recipe, assuming it's fixed. This is the default for most","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":603538,"byte_end":603628,"line_start":85,"line_end":85,"column_start":1,"column_end":91}},{"value":"/ encodings; others can be variable and longer than this base size, depending on the registers","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":603629,"byte_end":603725,"line_start":86,"line_end":86,"column_start":1,"column_end":97}},{"value":"/ they're using and use a different function, specific per platform.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":603726,"byte_end":603796,"line_start":87,"line_end":87,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":2338},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":604079,"byte_end":604091,"line_start":101,"line_end":101,"column_start":12,"column_end":24},"name":"RecipeSizing","qualname":"::isa::encoding::RecipeSizing","value":"RecipeSizing { base_size, compute_size, branch_range }","parent":null,"children":[{"krate":0,"index":2339},{"krate":0,"index":2340},{"krate":0,"index":2341}],"decl_id":null,"docs":" Code size information for an encoding recipe.","sig":null,"attributes":[{"value":"/ Code size information for an encoding recipe.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":603947,"byte_end":603996,"line_start":98,"line_end":98,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":603997,"byte_end":604000,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ Encoding recipes may have runtime-determined instruction size.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":604001,"byte_end":604067,"line_start":100,"line_end":100,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":2339},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":604174,"byte_end":604183,"line_start":103,"line_end":103,"column_start":9,"column_end":18},"name":"base_size","qualname":"::isa::encoding::RecipeSizing::base_size","value":"u8","parent":{"krate":0,"index":2338},"children":[],"decl_id":null,"docs":" Minimum size in bytes of instructions encoded with this recipe.\n","sig":null,"attributes":[{"value":"/ Minimum size in bytes of instructions encoded with this recipe.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":604098,"byte_end":604165,"line_start":102,"line_end":102,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":2340},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":604278,"byte_end":604290,"line_start":106,"line_end":106,"column_start":9,"column_end":21},"name":"compute_size","qualname":"::isa::encoding::RecipeSizing::compute_size","value":"for<'r, 's, 't0> fn(&'r isa::encoding::RecipeSizing, isa::encoding::Encoding, ir::entities::Inst, &'s regalloc::diversion::RegDiversions, &'t0 ir::function::Function) -> u8","parent":{"krate":0,"index":2338},"children":[],"decl_id":null,"docs":" Method computing the instruction's real size, given inputs and outputs.\n","sig":null,"attributes":[{"value":"/ Method computing the instruction's real size, given inputs and outputs.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":604194,"byte_end":604269,"line_start":105,"line_end":105,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":2341},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":604459,"byte_end":604471,"line_start":111,"line_end":111,"column_start":9,"column_end":21},"name":"branch_range","qualname":"::isa::encoding::RecipeSizing::branch_range","value":"core::option::Option<isa::constraints::BranchRange>","parent":{"krate":0,"index":2338},"children":[],"decl_id":null,"docs":" Allowed branch range in this recipe, if any.","sig":null,"attributes":[{"value":"/ Allowed branch range in this recipe, if any.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":604315,"byte_end":604363,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":604368,"byte_end":604371,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ All encoding recipes for branches have exact branch range information.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":604376,"byte_end":604450,"line_start":110,"line_end":110,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":8111},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":604578,"byte_end":604585,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"name":"EncInfo","qualname":"::isa::encoding::EncInfo","value":"EncInfo { constraints, sizing, names }","parent":null,"children":[{"krate":0,"index":8112},{"krate":0,"index":8113},{"krate":0,"index":8114}],"decl_id":null,"docs":" Information about all the encodings in this ISA.\n","sig":null,"attributes":[{"value":"/ Information about all the encodings in this ISA.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":604497,"byte_end":604549,"line_start":114,"line_end":114,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":8112},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":604646,"byte_end":604657,"line_start":118,"line_end":118,"column_start":9,"column_end":20},"name":"constraints","qualname":"::isa::encoding::EncInfo::constraints","value":"&'static [isa::constraints::RecipeConstraints]","parent":{"krate":0,"index":8111},"children":[],"decl_id":null,"docs":" Constraints on value operands per recipe.\n","sig":null,"attributes":[{"value":"/ Constraints on value operands per recipe.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":604592,"byte_end":604637,"line_start":117,"line_end":117,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":8113},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":604740,"byte_end":604746,"line_start":121,"line_end":121,"column_start":9,"column_end":15},"name":"sizing","qualname":"::isa::encoding::EncInfo::sizing","value":"&'static [isa::encoding::RecipeSizing]","parent":{"krate":0,"index":8111},"children":[],"decl_id":null,"docs":" Code size information per recipe.\n","sig":null,"attributes":[{"value":"/ Code size information per recipe.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":604694,"byte_end":604731,"line_start":120,"line_end":120,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":8114},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":604817,"byte_end":604822,"line_start":124,"line_end":124,"column_start":9,"column_end":14},"name":"names","qualname":"::isa::encoding::EncInfo::names","value":"&'static [&'static str]","parent":{"krate":0,"index":8111},"children":[],"decl_id":null,"docs":" Names of encoding recipes.\n","sig":null,"attributes":[{"value":"/ Names of encoding recipes.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":604778,"byte_end":604808,"line_start":123,"line_end":123,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2343},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":604957,"byte_end":604976,"line_start":129,"line_end":129,"column_start":12,"column_end":31},"name":"operand_constraints","qualname":"<EncInfo>::operand_constraints","value":"fn (&self, enc: Encoding) -> Option<&'static RecipeConstraints>","parent":null,"children":[],"decl_id":null,"docs":" Get the value operand constraints for `enc` if it is a legal encoding.\n","sig":null,"attributes":[{"value":"/ Get the value operand constraints for `enc` if it is a legal encoding.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":604871,"byte_end":604945,"line_start":128,"line_end":128,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2344},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":605178,"byte_end":605185,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"display","qualname":"<EncInfo>::display","value":"fn (&self, enc: Encoding) -> DisplayEncoding","parent":null,"children":[],"decl_id":null,"docs":" Create an object that can display an ISA-dependent encoding properly.\n","sig":null,"attributes":[{"value":"/ Create an object that can display an ISA-dependent encoding properly.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":605093,"byte_end":605166,"line_start":133,"line_end":133,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2345},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":605469,"byte_end":605478,"line_start":144,"line_end":144,"column_start":12,"column_end":21},"name":"byte_size","qualname":"<EncInfo>::byte_size","value":"fn (&self, enc: Encoding, inst: Inst, divert: &RegDiversions, func: &Function) -> CodeOffset","parent":null,"children":[],"decl_id":null,"docs":" Get the size in bytes of `inst`, if it were encoded with `enc`.","sig":null,"attributes":[{"value":"/ Get the size in bytes of `inst`, if it were encoded with `enc`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":605341,"byte_end":605408,"line_start":141,"line_end":141,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":605413,"byte_end":605416,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Returns 0 for illegal encodings.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":605421,"byte_end":605457,"line_start":143,"line_end":143,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2347},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":605959,"byte_end":605971,"line_start":160,"line_end":160,"column_start":12,"column_end":24},"name":"branch_range","qualname":"<EncInfo>::branch_range","value":"fn (&self, enc: Encoding) -> Option<BranchRange>","parent":null,"children":[],"decl_id":null,"docs":" Get the branch range that is supported by `enc`, if any.","sig":null,"attributes":[{"value":"/ Get the branch range that is supported by `enc`, if any.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":605812,"byte_end":605872,"line_start":157,"line_end":157,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":605877,"byte_end":605880,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ This will never return `None` for a legal branch encoding.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":605885,"byte_end":605947,"line_start":159,"line_end":159,"column_start":5,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":2349},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"registers","qualname":"::isa::registers","value":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","parent":null,"children":[{"krate":0,"index":2350},{"krate":0,"index":2351},{"krate":0,"index":2352},{"krate":0,"index":2353},{"krate":0,"index":2354},{"krate":0,"index":2356},{"krate":0,"index":2365},{"krate":0,"index":2371},{"krate":0,"index":2372},{"krate":0,"index":2383},{"krate":0,"index":2394},{"krate":0,"index":2396},{"krate":0,"index":2398},{"krate":0,"index":8117},{"krate":0,"index":8130},{"krate":0,"index":8129},{"krate":0,"index":8127},{"krate":0,"index":8123},{"krate":0,"index":8124},{"krate":0,"index":8120},{"krate":0,"index":8121},{"krate":0,"index":2400},{"krate":0,"index":2403},{"krate":0,"index":2405},{"krate":0,"index":2407},{"krate":0,"index":8132},{"krate":0,"index":8135},{"krate":0,"index":2408},{"krate":0,"index":2416},{"krate":0,"index":2420}],"decl_id":null,"docs":" Data structures describing the registers in an ISA.\n","sig":null,"attributes":[{"value":"! Data structures describing the registers in an ISA.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":606095,"byte_end":606150,"line_start":1,"line_end":1,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":2352},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":606583,"byte_end":606590,"line_start":13,"line_end":13,"column_start":10,"column_end":17},"name":"RegUnit","qualname":"::isa::registers::RegUnit","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Register units are the smallest units of register allocation.","sig":null,"attributes":[{"value":"/ Register units are the smallest units of register allocation.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":606198,"byte_end":606263,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":606264,"byte_end":606267,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Normally there is a 1-1 correspondence between registers and register units, but when an ISA","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":606268,"byte_end":606364,"line_start":8,"line_end":8,"column_start":1,"column_end":97}},{"value":"/ has aliasing registers, the aliasing can be modeled with registers that cover multiple","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":606365,"byte_end":606455,"line_start":9,"line_end":9,"column_start":1,"column_end":91}},{"value":"/ register units.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":606456,"byte_end":606475,"line_start":10,"line_end":10,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":606476,"byte_end":606479,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The register allocator will enforce that each register unit only gets used for one thing.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":606480,"byte_end":606573,"line_start":12,"line_end":12,"column_start":1,"column_end":94}}]},{"kind":"Type","id":{"krate":0,"index":2353},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":606739,"byte_end":606751,"line_start":18,"line_end":18,"column_start":10,"column_end":22},"name":"RegClassMask","qualname":"::isa::registers::RegClassMask","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" A bit mask indexed by register classes.","sig":null,"attributes":[{"value":"/ A bit mask indexed by register classes.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":606599,"byte_end":606642,"line_start":15,"line_end":15,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":606643,"byte_end":606646,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The size of this type is determined by the ISA with the most register classes.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":606647,"byte_end":606729,"line_start":17,"line_end":17,"column_start":1,"column_end":83}}]},{"kind":"Type","id":{"krate":0,"index":2354},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":606966,"byte_end":606977,"line_start":24,"line_end":24,"column_start":10,"column_end":21},"name":"RegUnitMask","qualname":"::isa::registers::RegUnitMask","value":"[RegClassMask; 3]","parent":null,"children":[],"decl_id":null,"docs":" A bit mask indexed by register units.","sig":null,"attributes":[{"value":"/ A bit mask indexed by register units.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":606760,"byte_end":606801,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":606802,"byte_end":606805,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The size of this type is determined by the target ISA that has the most register units defined.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":606806,"byte_end":606905,"line_start":22,"line_end":22,"column_start":1,"column_end":100}},{"value":"/ Currently that is arm32 which has 64+16 units.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":606906,"byte_end":606956,"line_start":23,"line_end":23,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":2356},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":607230,"byte_end":607237,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"RegBank","qualname":"::isa::registers::RegBank","value":"RegBank { name, first_unit, units, names, prefix, first_toprc, num_toprcs, pressure_tracking }","parent":null,"children":[{"krate":0,"index":2357},{"krate":0,"index":2358},{"krate":0,"index":2359},{"krate":0,"index":2360},{"krate":0,"index":2361},{"krate":0,"index":2362},{"krate":0,"index":2363},{"krate":0,"index":2364}],"decl_id":null,"docs":" The register units in a target ISA are divided into disjoint register banks. Each bank covers a\n contiguous range of register units.","sig":null,"attributes":[{"value":"/ The register units in a target ISA are divided into disjoint register banks. Each bank covers a","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":607000,"byte_end":607099,"line_start":26,"line_end":26,"column_start":1,"column_end":100}},{"value":"/ contiguous range of register units.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":607100,"byte_end":607139,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":607140,"byte_end":607143,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The `RegBank` struct provides a static description of a register bank.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":607144,"byte_end":607218,"line_start":29,"line_end":29,"column_start":1,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":2357},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":607327,"byte_end":607331,"line_start":32,"line_end":32,"column_start":9,"column_end":13},"name":"name","qualname":"::isa::registers::RegBank::name","value":"&'static str","parent":{"krate":0,"index":2356},"children":[],"decl_id":null,"docs":" The name of this register bank as defined in the ISA's DSL definition.\n","sig":null,"attributes":[{"value":"/ The name of this register bank as defined in the ISA's DSL definition.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":607244,"byte_end":607318,"line_start":31,"line_end":31,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":2358},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":607402,"byte_end":607412,"line_start":35,"line_end":35,"column_start":9,"column_end":19},"name":"first_unit","qualname":"::isa::registers::RegBank::first_unit","value":"u16","parent":{"krate":0,"index":2356},"children":[],"decl_id":null,"docs":" The first register unit in this bank.\n","sig":null,"attributes":[{"value":"/ The first register unit in this bank.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":607352,"byte_end":607393,"line_start":34,"line_end":34,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2359},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":607489,"byte_end":607494,"line_start":38,"line_end":38,"column_start":9,"column_end":14},"name":"units","qualname":"::isa::registers::RegBank::units","value":"u16","parent":{"krate":0,"index":2356},"children":[],"decl_id":null,"docs":" The total number of register units in this bank.\n","sig":null,"attributes":[{"value":"/ The total number of register units in this bank.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":607428,"byte_end":607480,"line_start":37,"line_end":37,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":2360},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":607635,"byte_end":607640,"line_start":42,"line_end":42,"column_start":9,"column_end":14},"name":"names","qualname":"::isa::registers::RegBank::names","value":"&'static [&'static str]","parent":{"krate":0,"index":2356},"children":[],"decl_id":null,"docs":" Array of specially named register units. This array can be shorter than the number of units\n in the bank.\n","sig":null,"attributes":[{"value":"/ Array of specially named register units. This array can be shorter than the number of units","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":607510,"byte_end":607605,"line_start":40,"line_end":40,"column_start":5,"column_end":100}},{"value":"/ in the bank.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":607610,"byte_end":607626,"line_start":41,"line_end":41,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":2361},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":607953,"byte_end":607959,"line_start":47,"line_end":47,"column_start":9,"column_end":15},"name":"prefix","qualname":"::isa::registers::RegBank::prefix","value":"&'static str","parent":{"krate":0,"index":2356},"children":[],"decl_id":null,"docs":" Name prefix to use for those register units in the bank not covered by the `names` array.\n The remaining register units will be named this prefix followed by their decimal offset in\n the bank. So with a prefix `r`, registers will be named `r8`, `r9`, ...\n","sig":null,"attributes":[{"value":"/ Name prefix to use for those register units in the bank not covered by the `names` array.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":607672,"byte_end":607765,"line_start":44,"line_end":44,"column_start":5,"column_end":98}},{"value":"/ The remaining register units will be named this prefix followed by their decimal offset in","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":607770,"byte_end":607864,"line_start":45,"line_end":45,"column_start":5,"column_end":99}},{"value":"/ the bank. So with a prefix `r`, registers will be named `r8`, `r9`, ...","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":607869,"byte_end":607944,"line_start":46,"line_end":46,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":2362},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":608050,"byte_end":608061,"line_start":50,"line_end":50,"column_start":9,"column_end":20},"name":"first_toprc","qualname":"::isa::registers::RegBank::first_toprc","value":"usize","parent":{"krate":0,"index":2356},"children":[],"decl_id":null,"docs":" Index of the first top-level register class in this bank.\n","sig":null,"attributes":[{"value":"/ Index of the first top-level register class in this bank.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":607980,"byte_end":608041,"line_start":49,"line_end":49,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":2363},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":608343,"byte_end":608353,"line_start":56,"line_end":56,"column_start":9,"column_end":19},"name":"num_toprcs","qualname":"::isa::registers::RegBank::num_toprcs","value":"usize","parent":{"krate":0,"index":2356},"children":[],"decl_id":null,"docs":" Number of top-level register classes in this bank.","sig":null,"attributes":[{"value":"/ Number of top-level register classes in this bank.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":608075,"byte_end":608129,"line_start":52,"line_end":52,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":608134,"byte_end":608137,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ The top-level register classes in a bank are guaranteed to be numbered sequentially from","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":608142,"byte_end":608234,"line_start":54,"line_end":54,"column_start":5,"column_end":97}},{"value":"/ `first_toprc`, and all top-level register classes across banks come before any sub-classes.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":608239,"byte_end":608334,"line_start":55,"line_end":55,"column_start":5,"column_end":100}}]},{"kind":"Field","id":{"krate":0,"index":2364},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":608432,"byte_end":608449,"line_start":59,"line_end":59,"column_start":9,"column_end":26},"name":"pressure_tracking","qualname":"::isa::registers::RegBank::pressure_tracking","value":"bool","parent":{"krate":0,"index":2356},"children":[],"decl_id":null,"docs":" Is register pressure tracking enabled for this bank?\n","sig":null,"attributes":[{"value":"/ Is register pressure tracking enabled for this bank?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":608367,"byte_end":608423,"line_start":58,"line_end":58,"column_start":5,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":2371},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":610088,"byte_end":610096,"line_start":109,"line_end":109,"column_start":10,"column_end":18},"name":"RegClass","qualname":"::isa::registers::RegClass","value":"&'static RegClassData","parent":null,"children":[],"decl_id":null,"docs":" A register class reference.","sig":null,"attributes":[{"value":"/ A register class reference.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":609947,"byte_end":609978,"line_start":106,"line_end":106,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":609979,"byte_end":609982,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ All register classes are statically defined in tables generated from the meta descriptions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":609983,"byte_end":610078,"line_start":108,"line_end":108,"column_start":1,"column_end":96}}]},{"kind":"Struct","id":{"krate":0,"index":2372},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":610467,"byte_end":610479,"line_start":118,"line_end":118,"column_start":12,"column_end":24},"name":"RegClassData","qualname":"::isa::registers::RegClassData","value":"RegClassData { name, index, width, bank, toprc, first, subclasses, mask, info, pinned_reg }","parent":null,"children":[{"krate":0,"index":2373},{"krate":0,"index":2374},{"krate":0,"index":2375},{"krate":0,"index":2376},{"krate":0,"index":2377},{"krate":0,"index":2378},{"krate":0,"index":2379},{"krate":0,"index":2380},{"krate":0,"index":2381},{"krate":0,"index":2382}],"decl_id":null,"docs":" Data about a register class.","sig":null,"attributes":[{"value":"/ Data about a register class.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":610123,"byte_end":610155,"line_start":111,"line_end":111,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":610156,"byte_end":610159,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ A register class represents a subset of the registers in a bank. It describes the set of","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":610160,"byte_end":610252,"line_start":113,"line_end":113,"column_start":1,"column_end":93}},{"value":"/ permitted registers for a register operand in a given encoding of an instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":610253,"byte_end":610338,"line_start":114,"line_end":114,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":610339,"byte_end":610342,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ A register class can be a subset of another register class. The top-level register classes are","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":610343,"byte_end":610441,"line_start":116,"line_end":116,"column_start":1,"column_end":99}},{"value":"/ disjoint.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":610442,"byte_end":610455,"line_start":117,"line_end":117,"column_start":1,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":2373},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":610530,"byte_end":610534,"line_start":120,"line_end":120,"column_start":9,"column_end":13},"name":"name","qualname":"::isa::registers::RegClassData::name","value":"&'static str","parent":{"krate":0,"index":2372},"children":[],"decl_id":null,"docs":" The name of the register class.\n","sig":null,"attributes":[{"value":"/ The name of the register class.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":610486,"byte_end":610521,"line_start":119,"line_end":119,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2374},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":610625,"byte_end":610630,"line_start":123,"line_end":123,"column_start":9,"column_end":14},"name":"index","qualname":"::isa::registers::RegClassData::index","value":"u8","parent":{"krate":0,"index":2372},"children":[],"decl_id":null,"docs":" The index of this class in the ISA's RegInfo description.\n","sig":null,"attributes":[{"value":"/ The index of this class in the ISA's RegInfo description.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":610555,"byte_end":610616,"line_start":122,"line_end":122,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":2375},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":610703,"byte_end":610708,"line_start":126,"line_end":126,"column_start":9,"column_end":14},"name":"width","qualname":"::isa::registers::RegClassData::width","value":"u8","parent":{"krate":0,"index":2372},"children":[],"decl_id":null,"docs":" How many register units to allocate per register.\n","sig":null,"attributes":[{"value":"/ How many register units to allocate per register.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":610641,"byte_end":610694,"line_start":125,"line_end":125,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":2376},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":610781,"byte_end":610785,"line_start":129,"line_end":129,"column_start":9,"column_end":13},"name":"bank","qualname":"::isa::registers::RegClassData::bank","value":"u8","parent":{"krate":0,"index":2372},"children":[],"decl_id":null,"docs":" Index of the register bank this class belongs to.\n","sig":null,"attributes":[{"value":"/ Index of the register bank this class belongs to.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":610719,"byte_end":610772,"line_start":128,"line_end":128,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":2377},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":610865,"byte_end":610870,"line_start":132,"line_end":132,"column_start":9,"column_end":14},"name":"toprc","qualname":"::isa::registers::RegClassData::toprc","value":"u8","parent":{"krate":0,"index":2372},"children":[],"decl_id":null,"docs":" Index of the top-level register class contains this one.\n","sig":null,"attributes":[{"value":"/ Index of the top-level register class contains this one.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":610796,"byte_end":610856,"line_start":131,"line_end":131,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":2378},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":610932,"byte_end":610937,"line_start":135,"line_end":135,"column_start":9,"column_end":14},"name":"first","qualname":"::isa::registers::RegClassData::first","value":"u16","parent":{"krate":0,"index":2372},"children":[],"decl_id":null,"docs":" The first register unit in this class.\n","sig":null,"attributes":[{"value":"/ The first register unit in this class.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":610881,"byte_end":610923,"line_start":134,"line_end":134,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":2379},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":611078,"byte_end":611088,"line_start":140,"line_end":140,"column_start":9,"column_end":19},"name":"subclasses","qualname":"::isa::registers::RegClassData::subclasses","value":"u32","parent":{"krate":0,"index":2372},"children":[],"decl_id":null,"docs":" Bit-mask of sub-classes of this register class, including itself.","sig":null,"attributes":[{"value":"/ Bit-mask of sub-classes of this register class, including itself.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":610953,"byte_end":611022,"line_start":137,"line_end":137,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":611027,"byte_end":611030,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Bits correspond to RC indexes.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":611035,"byte_end":611069,"line_start":139,"line_end":139,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2380},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":611268,"byte_end":611272,"line_start":144,"line_end":144,"column_start":9,"column_end":13},"name":"mask","qualname":"::isa::registers::RegClassData::mask","value":"[u32; 3]","parent":{"krate":0,"index":2372},"children":[],"decl_id":null,"docs":" Mask of register units in the class. If `width > 1`, the mask only has a bit set for the\n first register unit in each allocatable register.\n","sig":null,"attributes":[{"value":"/ Mask of register units in the class. If `width > 1`, the mask only has a bit set for the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":611109,"byte_end":611201,"line_start":142,"line_end":142,"column_start":5,"column_end":97}},{"value":"/ first register unit in each allocatable register.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":611206,"byte_end":611259,"line_start":143,"line_end":143,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":2381},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":611366,"byte_end":611370,"line_start":147,"line_end":147,"column_start":9,"column_end":13},"name":"info","qualname":"::isa::registers::RegClassData::info","value":"&'static isa::registers::RegInfo","parent":{"krate":0,"index":2372},"children":[],"decl_id":null,"docs":" The global `RegInfo` instance containing this register class.\n","sig":null,"attributes":[{"value":"/ The global `RegInfo` instance containing this register class.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":611292,"byte_end":611357,"line_start":146,"line_end":146,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":2382},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":611602,"byte_end":611612,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"name":"pinned_reg","qualname":"::isa::registers::RegClassData::pinned_reg","value":"core::option::Option<u16>","parent":{"krate":0,"index":2372},"children":[],"decl_id":null,"docs":" The \"pinned\" register of the associated register bank.","sig":null,"attributes":[{"value":"/ The \"pinned\" register of the associated register bank.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":611395,"byte_end":611453,"line_start":149,"line_end":149,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":611458,"byte_end":611461,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ This register must be non-volatile (callee-preserved) and must not be the fixed","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":611466,"byte_end":611549,"line_start":151,"line_end":151,"column_start":5,"column_end":88}},{"value":"/ output register of any instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":611554,"byte_end":611593,"line_start":152,"line_end":152,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2384},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":611914,"byte_end":611929,"line_start":161,"line_end":161,"column_start":12,"column_end":27},"name":"intersect_index","qualname":"<RegClassData>::intersect_index","value":"fn (&self, other: RegClass) -> Option<RegClassIndex>","parent":null,"children":[],"decl_id":null,"docs":" Get the register class index corresponding to the intersection of `self` and `other`.","sig":null,"attributes":[{"value":"/ Get the register class index corresponding to the intersection of `self` and `other`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":611658,"byte_end":611747,"line_start":157,"line_end":157,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":611752,"byte_end":611755,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ This register class is guaranteed to exist if the register classes overlap. If the register","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":611760,"byte_end":611855,"line_start":159,"line_end":159,"column_start":5,"column_end":100}},{"value":"/ classes don't overlap, returns `None`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":611860,"byte_end":611902,"line_start":160,"line_end":160,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2385},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":612446,"byte_end":612455,"line_start":176,"line_end":176,"column_start":12,"column_end":21},"name":"intersect","qualname":"<RegClassData>::intersect","value":"fn (&self, other: RegClass) -> Option<RegClass>","parent":null,"children":[],"decl_id":null,"docs":" Get the intersection of `self` and `other`.\n","sig":null,"attributes":[{"value":"/ Get the intersection of `self` and `other`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":612387,"byte_end":612434,"line_start":175,"line_end":175,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2387},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":612722,"byte_end":612734,"line_start":182,"line_end":182,"column_start":12,"column_end":24},"name":"has_subclass","qualname":"<RegClassData>::has_subclass","value":"fn <RCI> (&self, other: RCI) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `other` is a subclass of this register class.\n A register class is considered to be a subclass of itself.\n","sig":null,"attributes":[{"value":"/ Returns true if `other` is a subclass of this register class.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":612578,"byte_end":612643,"line_start":180,"line_end":180,"column_start":5,"column_end":70}},{"value":"/ A register class is considered to be a subclass of itself.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":612648,"byte_end":612710,"line_start":181,"line_end":181,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2389},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":612925,"byte_end":612930,"line_start":187,"line_end":187,"column_start":12,"column_end":17},"name":"toprc","qualname":"<RegClassData>::toprc","value":"fn (&self) -> RegClass","parent":null,"children":[],"decl_id":null,"docs":" Get the top-level register class containing this class.\n","sig":null,"attributes":[{"value":"/ Get the top-level register class containing this class.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":612854,"byte_end":612913,"line_start":186,"line_end":186,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2390},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":613070,"byte_end":613074,"line_start":192,"line_end":192,"column_start":12,"column_end":16},"name":"unit","qualname":"<RegClassData>::unit","value":"fn (&self, offset: usize) -> RegUnit","parent":null,"children":[],"decl_id":null,"docs":" Get a specific register unit in this class.\n","sig":null,"attributes":[{"value":"/ Get a specific register unit in this class.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":613011,"byte_end":613058,"line_start":191,"line_end":191,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2391},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":613276,"byte_end":613284,"line_start":198,"line_end":198,"column_start":12,"column_end":20},"name":"contains","qualname":"<RegClassData>::contains","value":"fn (&self, regunit: RegUnit) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does this register class contain `regunit`?\n","sig":null,"attributes":[{"value":"/ Does this register class contain `regunit`?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":613217,"byte_end":613264,"line_start":197,"line_end":197,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2392},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":613523,"byte_end":613536,"line_start":204,"line_end":204,"column_start":12,"column_end":25},"name":"is_pinned_reg","qualname":"<RegClassData>::is_pinned_reg","value":"fn (&self, enabled: bool, regunit: RegUnit) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If the pinned register is used, is the given regunit the pinned register of this class?\n","sig":null,"attributes":[{"value":"/ If the pinned register is used, is the given regunit the pinned register of this class?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":613406,"byte_end":613497,"line_start":202,"line_end":202,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":613502,"byte_end":613511,"line_start":203,"line_end":203,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":8117},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":614455,"byte_end":614468,"line_start":236,"line_end":236,"column_start":12,"column_end":25},"name":"RegClassIndex","qualname":"::isa::registers::RegClassIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" A small reference to a register class.","sig":null,"attributes":[{"value":"/ A small reference to a register class.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":614191,"byte_end":614233,"line_start":231,"line_end":231,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":614234,"byte_end":614237,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ Use this when storing register classes in compact data structures. The `RegInfo::rc()` method","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":614238,"byte_end":614335,"line_start":233,"line_end":233,"column_start":1,"column_end":98}},{"value":"/ can be used to get the real register class reference back.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":614336,"byte_end":614398,"line_start":234,"line_end":234,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":2407},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":615085,"byte_end":615097,"line_start":264,"line_end":264,"column_start":8,"column_end":20},"name":"regs_overlap","qualname":"::isa::registers::regs_overlap","value":"fn (rc1: RegClass, reg1: RegUnit, rc2: RegClass, reg2: RegUnit) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test of two registers overlap.","sig":null,"attributes":[{"value":"/ Test of two registers overlap.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":614890,"byte_end":614924,"line_start":260,"line_end":260,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":614925,"byte_end":614928,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ A register is identified as a `(RegClass, RegUnit)` pair. The register class is needed to","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":614929,"byte_end":615022,"line_start":262,"line_end":262,"column_start":1,"column_end":94}},{"value":"/ determine the width (in regunits) of the register.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":615023,"byte_end":615077,"line_start":263,"line_end":263,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":8132},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":615491,"byte_end":615498,"line_start":275,"line_end":275,"column_start":12,"column_end":19},"name":"RegInfo","qualname":"::isa::registers::RegInfo","value":"RegInfo { banks, classes }","parent":null,"children":[{"krate":0,"index":8133},{"krate":0,"index":8134}],"decl_id":null,"docs":" Information about the registers in an ISA.","sig":null,"attributes":[{"value":"/ Information about the registers in an ISA.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":615303,"byte_end":615349,"line_start":270,"line_end":270,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":615350,"byte_end":615353,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ The `RegUnit` data structure collects all relevant static information about the registers in an","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":615354,"byte_end":615453,"line_start":272,"line_end":272,"column_start":1,"column_end":100}},{"value":"/ ISA.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":615454,"byte_end":615462,"line_start":273,"line_end":273,"column_start":1,"column_end":9}}]},{"kind":"Field","id":{"krate":0,"index":8133},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":615696,"byte_end":615701,"line_start":278,"line_end":278,"column_start":9,"column_end":14},"name":"banks","qualname":"::isa::registers::RegInfo::banks","value":"&'static [isa::registers::RegBank]","parent":{"krate":0,"index":8132},"children":[],"decl_id":null,"docs":" All register banks, ordered by their `first_unit`. The register banks are disjoint, but\n there may be holes of unused register unit numbers between banks due to alignment.\n","sig":null,"attributes":[{"value":"/ All register banks, ordered by their `first_unit`. The register banks are disjoint, but","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":615505,"byte_end":615596,"line_start":276,"line_end":276,"column_start":5,"column_end":96}},{"value":"/ there may be holes of unused register unit numbers between banks due to alignment.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":615601,"byte_end":615687,"line_start":277,"line_end":277,"column_start":5,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":8134},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":615825,"byte_end":615832,"line_start":281,"line_end":281,"column_start":9,"column_end":16},"name":"classes","qualname":"::isa::registers::RegInfo::classes","value":"&'static [&'static isa::registers::RegClassData]","parent":{"krate":0,"index":8132},"children":[],"decl_id":null,"docs":" All register classes ordered topologically so a sub-class always follows its parent.\n","sig":null,"attributes":[{"value":"/ All register classes ordered topologically so a sub-class always follows its parent.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":615728,"byte_end":615816,"line_start":280,"line_end":280,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":2409},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":615933,"byte_end":615956,"line_start":286,"line_end":286,"column_start":12,"column_end":35},"name":"bank_containing_regunit","qualname":"<RegInfo>::bank_containing_regunit","value":"fn (&self, regunit: RegUnit) -> Option<&RegBank>","parent":null,"children":[],"decl_id":null,"docs":" Get the register bank holding `regunit`.\n","sig":null,"attributes":[{"value":"/ Get the register bank holding `regunit`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":615877,"byte_end":615921,"line_start":285,"line_end":285,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2411},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":616245,"byte_end":616258,"line_start":292,"line_end":292,"column_start":12,"column_end":25},"name":"parse_regunit","qualname":"<RegInfo>::parse_regunit","value":"fn (&self, name: &str) -> Option<RegUnit>","parent":null,"children":[],"decl_id":null,"docs":" Try to parse a regunit name. The name is not expected to begin with `%`.\n","sig":null,"attributes":[{"value":"/ Try to parse a regunit name. The name is not expected to begin with `%`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":616157,"byte_end":616233,"line_start":291,"line_end":291,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2413},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":616493,"byte_end":616508,"line_start":300,"line_end":300,"column_start":12,"column_end":27},"name":"display_regunit","qualname":"<RegInfo>::display_regunit","value":"fn (&self, regunit: RegUnit) -> DisplayRegUnit","parent":null,"children":[],"decl_id":null,"docs":" Make a temporary object that can display a register unit.\n","sig":null,"attributes":[{"value":"/ Make a temporary object that can display a register unit.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":616420,"byte_end":616481,"line_start":299,"line_end":299,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2414},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":616710,"byte_end":616712,"line_start":308,"line_end":308,"column_start":12,"column_end":14},"name":"rc","qualname":"<RegInfo>::rc","value":"fn (&self, idx: RegClassIndex) -> RegClass","parent":null,"children":[],"decl_id":null,"docs":" Get the register class corresponding to `idx`.\n","sig":null,"attributes":[{"value":"/ Get the register class corresponding to `idx`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":616648,"byte_end":616698,"line_start":307,"line_end":307,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2415},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":616875,"byte_end":616880,"line_start":313,"line_end":313,"column_start":12,"column_end":17},"name":"toprc","qualname":"<RegInfo>::toprc","value":"fn (&self, idx: RegClassIndex) -> RegClass","parent":null,"children":[],"decl_id":null,"docs":" Get the top-level register class containing the `idx` class.\n","sig":null,"attributes":[{"value":"/ Get the top-level register class containing the `idx` class.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":616799,"byte_end":616863,"line_start":312,"line_end":312,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":2416},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":617069,"byte_end":617083,"line_start":319,"line_end":319,"column_start":12,"column_end":26},"name":"DisplayRegUnit","qualname":"::isa::registers::DisplayRegUnit","value":"DisplayRegUnit {  }","parent":null,"children":[{"krate":0,"index":2418},{"krate":0,"index":2419}],"decl_id":null,"docs":" Temporary object that holds enough information to print a register unit.\n","sig":null,"attributes":[{"value":"/ Temporary object that holds enough information to print a register unit.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":616981,"byte_end":617057,"line_start":318,"line_end":318,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":8137},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":618701,"byte_end":618709,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"StackRef","qualname":"::isa::stack::StackRef","value":"StackRef { base, offset }","parent":null,"children":[{"krate":0,"index":8138},{"krate":0,"index":8139}],"decl_id":null,"docs":" A method for referencing a stack slot in the current stack frame.","sig":null,"attributes":[{"value":"/ A method for referencing a stack slot in the current stack frame.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":618364,"byte_end":618433,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":618434,"byte_end":618437,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Stack slots are addressed with a constant offset from a base register. The base can be the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":618438,"byte_end":618532,"line_start":12,"line_end":12,"column_start":1,"column_end":95}},{"value":"/ stack pointer, the frame pointer, or (in the future) a zone register pointing to an inner zone","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":618533,"byte_end":618631,"line_start":13,"line_end":13,"column_start":1,"column_end":99}},{"value":"/ of a large stack frame.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":618632,"byte_end":618659,"line_start":14,"line_end":14,"column_start":1,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":8138},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":618769,"byte_end":618773,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"name":"base","qualname":"::isa::stack::StackRef::base","value":"isa::stack::StackBase","parent":{"krate":0,"index":8137},"children":[],"decl_id":null,"docs":" The base register to use for addressing.\n","sig":null,"attributes":[{"value":"/ The base register to use for addressing.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":618716,"byte_end":618760,"line_start":17,"line_end":17,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":8139},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":618880,"byte_end":618886,"line_start":21,"line_end":21,"column_start":9,"column_end":15},"name":"offset","qualname":"::isa::stack::StackRef::offset","value":"i32","parent":{"krate":0,"index":8137},"children":[],"decl_id":null,"docs":" Immediate offset from the base register to the first byte of the stack slot.\n","sig":null,"attributes":[{"value":"/ Immediate offset from the base register to the first byte of the stack slot.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":618791,"byte_end":618871,"line_start":20,"line_end":20,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2430},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":619020,"byte_end":619026,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"masked","qualname":"<StackRef>::masked","value":"fn (ss: StackSlot, mask: StackBaseMask, frame: &StackSlots) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the stack slot `ss` using one of the base pointers in `mask`.\n","sig":null,"attributes":[{"value":"/ Get a reference to the stack slot `ss` using one of the base pointers in `mask`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":618924,"byte_end":619008,"line_start":25,"line_end":25,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":2431},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":619388,"byte_end":619390,"line_start":37,"line_end":37,"column_start":12,"column_end":14},"name":"sp","qualname":"<StackRef>::sp","value":"fn (ss: StackSlot, frame: &StackSlots) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to `ss` using the stack pointer as a base.\n","sig":null,"attributes":[{"value":"/ Get a reference to `ss` using the stack pointer as a base.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":619314,"byte_end":619376,"line_start":36,"line_end":36,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8146},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":620472,"byte_end":620474,"line_start":66,"line_end":66,"column_start":5,"column_end":7},"name":"SP","qualname":"::isa::stack::StackBase::SP","value":"StackBase::SP","parent":{"krate":0,"index":8145},"children":[],"decl_id":null,"docs":" Use the stack pointer.\n","sig":null,"attributes":[{"value":"/ Use the stack pointer.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":620441,"byte_end":620467,"line_start":65,"line_end":65,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8149},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":620536,"byte_end":620538,"line_start":69,"line_end":69,"column_start":5,"column_end":7},"name":"FP","qualname":"::isa::stack::StackBase::FP","value":"StackBase::FP","parent":{"krate":0,"index":8145},"children":[],"decl_id":null,"docs":" Use the frame pointer (if one is present).\n","sig":null,"attributes":[{"value":"/ Use the frame pointer (if one is present).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":620485,"byte_end":620531,"line_start":68,"line_end":68,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8152},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":620670,"byte_end":620674,"line_start":74,"line_end":74,"column_start":5,"column_end":9},"name":"Zone","qualname":"::isa::stack::StackBase::Zone","value":"StackBase::Zone","parent":{"krate":0,"index":8145},"children":[],"decl_id":null,"docs":" Use an explicit zone pointer in a general-purpose register.","sig":null,"attributes":[{"value":"/ Use an explicit zone pointer in a general-purpose register.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":620549,"byte_end":620612,"line_start":71,"line_end":71,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":620617,"byte_end":620620,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This feature is not yet implemented.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":620625,"byte_end":620665,"line_start":73,"line_end":73,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":8145},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":620425,"byte_end":620434,"line_start":64,"line_end":64,"column_start":10,"column_end":19},"name":"StackBase","qualname":"::isa::stack::StackBase","value":"StackBase::{SP, FP, Zone}","parent":null,"children":[{"krate":0,"index":8146},{"krate":0,"index":8149},{"krate":0,"index":8152}],"decl_id":null,"docs":" Generic base register for referencing stack slots.","sig":null,"attributes":[{"value":"/ Generic base register for referencing stack slots.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":620188,"byte_end":620242,"line_start":59,"line_end":59,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":620243,"byte_end":620246,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Most ISAs have a stack pointer and an optional frame pointer, so provide generic names for","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":620247,"byte_end":620341,"line_start":61,"line_end":61,"column_start":1,"column_end":95}},{"value":"/ those two base pointers.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":620342,"byte_end":620370,"line_start":62,"line_end":62,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":8166},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":621222,"byte_end":621235,"line_start":88,"line_end":88,"column_start":12,"column_end":25},"name":"StackBaseMask","qualname":"::isa::stack::StackBaseMask","value":"","parent":null,"children":[],"decl_id":null,"docs":" Bit mask of supported stack bases.","sig":null,"attributes":[{"value":"/ Bit mask of supported stack bases.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":620683,"byte_end":620721,"line_start":77,"line_end":77,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":620722,"byte_end":620725,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Many instruction encodings can use different base registers while others only work with the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":620726,"byte_end":620821,"line_start":79,"line_end":79,"column_start":1,"column_end":96}},{"value":"/ stack pointer, say. A `StackBaseMask` is a bit mask of supported stack bases for a given","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":620822,"byte_end":620914,"line_start":80,"line_end":80,"column_start":1,"column_end":93}},{"value":"/ instruction encoding.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":620915,"byte_end":620940,"line_start":81,"line_end":81,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":620941,"byte_end":620944,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ This behaves like a set of `StackBase` variants.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":620945,"byte_end":620997,"line_start":83,"line_end":83,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":620998,"byte_end":621001,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ The internal representation as a `u8` is public because stack base masks are used in constant","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":621002,"byte_end":621099,"line_start":85,"line_end":85,"column_start":1,"column_end":98}},{"value":"/ tables generated from the meta-language encoding definitions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":621100,"byte_end":621165,"line_start":86,"line_end":86,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2433},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":621334,"byte_end":621342,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"contains","qualname":"<StackBaseMask>::contains","value":"fn (self, base: StackBase) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this mask contains the `base` variant.\n","sig":null,"attributes":[{"value":"/ Check if this mask contains the `base` variant.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":621271,"byte_end":621322,"line_start":91,"line_end":91,"column_start":5,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":2435},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":429221,"byte_end":429227,"line_start":106,"line_end":106,"column_start":8,"column_end":14},"name":"lookup","qualname":"::isa::lookup","value":"fn (triple: Triple) -> Result<Builder, LookupError>","parent":null,"children":[],"decl_id":null,"docs":" Look for an ISA for the given `triple`.\n Return a builder that can create a corresponding `TargetIsa`.\n","sig":null,"attributes":[{"value":"/ Look for an ISA for the given `triple`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":429104,"byte_end":429147,"line_start":104,"line_end":104,"column_start":1,"column_end":44}},{"value":"/ Return a builder that can create a corresponding `TargetIsa`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":429148,"byte_end":429213,"line_start":105,"line_end":105,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":2436},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":429887,"byte_end":429901,"line_start":120,"line_end":120,"column_start":8,"column_end":22},"name":"lookup_by_name","qualname":"::isa::lookup_by_name","value":"fn (name: &str) -> Result<Builder, LookupError>","parent":null,"children":[],"decl_id":null,"docs":" Look for a supported ISA with the given `name`.\n Return a builder that can create a corresponding `TargetIsa`.\n","sig":null,"attributes":[{"value":"/ Look for a supported ISA with the given `name`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":429762,"byte_end":429813,"line_start":118,"line_end":118,"column_start":1,"column_end":52}},{"value":"/ Return a builder that can create a corresponding `TargetIsa`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":429814,"byte_end":429879,"line_start":119,"line_end":119,"column_start":1,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8182},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":430251,"byte_end":430266,"line_start":130,"line_end":130,"column_start":5,"column_end":20},"name":"SupportDisabled","qualname":"::isa::LookupError::SupportDisabled","value":"LookupError::SupportDisabled","parent":{"krate":0,"index":8181},"children":[],"decl_id":null,"docs":" Support for this target was disabled in the current build.\n","sig":null,"attributes":[{"value":"/ Support for this target was disabled in the current build.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":430132,"byte_end":430194,"line_start":128,"line_end":128,"column_start":5,"column_end":67}},{"value":"error(\"Support for this target is disabled\")","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":430199,"byte_end":430246,"line_start":129,"line_end":129,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8184},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":430404,"byte_end":430415,"line_start":134,"line_end":134,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::isa::LookupError::Unsupported","value":"LookupError::Unsupported","parent":{"krate":0,"index":8181},"children":[],"decl_id":null,"docs":" Support for this target has not yet been implemented.\n","sig":null,"attributes":[{"value":"/ Support for this target has not yet been implemented.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":430273,"byte_end":430330,"line_start":132,"line_end":132,"column_start":5,"column_end":62}},{"value":"error(\"Support for this target has not been implemented yet\")","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":430335,"byte_end":430399,"line_start":133,"line_end":133,"column_start":5,"column_end":69}}]},{"kind":"Enum","id":{"krate":0,"index":8181},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":430114,"byte_end":430125,"line_start":127,"line_end":127,"column_start":10,"column_end":21},"name":"LookupError","qualname":"::isa::LookupError","value":"LookupError::{SupportDisabled, Unsupported}","parent":null,"children":[{"krate":0,"index":8182},{"krate":0,"index":8184}],"decl_id":null,"docs":" Describes reason for target lookup failure\n","sig":null,"attributes":[{"value":"/ Describes reason for target lookup failure","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":430006,"byte_end":430052,"line_start":125,"line_end":125,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":2438},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":430559,"byte_end":430566,"line_start":139,"line_end":139,"column_start":12,"column_end":19},"name":"Builder","qualname":"::isa::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":2439},{"krate":0,"index":2440},{"krate":0,"index":2441}],"decl_id":null,"docs":" Builder for a `TargetIsa`.\n Modify the ISA-specific settings before creating the `TargetIsa` trait object with `finish`.\n","sig":null,"attributes":[{"value":"/ Builder for a `TargetIsa`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":430420,"byte_end":430450,"line_start":137,"line_end":137,"column_start":1,"column_end":31}},{"value":"/ Modify the ISA-specific settings before creating the `TargetIsa` trait object with `finish`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":430451,"byte_end":430547,"line_start":138,"line_end":138,"column_start":1,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":2443},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":430886,"byte_end":430892,"line_start":148,"line_end":148,"column_start":12,"column_end":18},"name":"finish","qualname":"<Builder>::finish","value":"fn (self, shared_flags: settings::Flags) -> Box<dyn TargetIsa>","parent":null,"children":[],"decl_id":null,"docs":" Combine the ISA-specific settings with the provided ISA-independent settings and allocate a\n fully configured `TargetIsa` trait object.\n","sig":null,"attributes":[{"value":"/ Combine the ISA-specific settings with the provided ISA-independent settings and allocate a","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":430728,"byte_end":430823,"line_start":146,"line_end":146,"column_start":5,"column_end":100}},{"value":"/ fully configured `TargetIsa` trait object.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":430828,"byte_end":430874,"line_start":147,"line_end":147,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":2447},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":431470,"byte_end":431478,"line_start":167,"line_end":167,"column_start":10,"column_end":18},"name":"Legalize","qualname":"::isa::Legalize","value":"fn(ir::Inst, &mut ir::Function, &mut flowgraph::ControlFlowGraph,\n   &dyn TargetIsa) -> bool","parent":null,"children":[],"decl_id":null,"docs":" After determining that an instruction doesn't have an encoding, how should we proceed to\n legalize it?","sig":null,"attributes":[{"value":"/ After determining that an instruction doesn't have an encoding, how should we proceed to","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":431277,"byte_end":431369,"line_start":163,"line_end":163,"column_start":1,"column_end":93}},{"value":"/ legalize it?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":431370,"byte_end":431386,"line_start":164,"line_end":164,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":431387,"byte_end":431390,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ The `Encodings` iterator returns a legalization function to call.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":431391,"byte_end":431460,"line_start":166,"line_end":166,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":8200},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":431740,"byte_end":431760,"line_start":173,"line_end":173,"column_start":12,"column_end":32},"name":"TargetFrontendConfig","qualname":"::isa::TargetFrontendConfig","value":"TargetFrontendConfig { default_call_conv, pointer_width }","parent":null,"children":[{"krate":0,"index":8201},{"krate":0,"index":8202}],"decl_id":null,"docs":" This struct provides information that a frontend may need to know about a target to\n produce Cranelift IR for the target.\n","sig":null,"attributes":[{"value":"/ This struct provides information that a frontend may need to know about a target to","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":431577,"byte_end":431664,"line_start":170,"line_end":170,"column_start":1,"column_end":88}},{"value":"/ produce Cranelift IR for the target.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":431665,"byte_end":431705,"line_start":171,"line_end":171,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":8201},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":431825,"byte_end":431842,"line_start":175,"line_end":175,"column_start":9,"column_end":26},"name":"default_call_conv","qualname":"::isa::TargetFrontendConfig::default_call_conv","value":"isa::call_conv::CallConv","parent":{"krate":0,"index":8200},"children":[],"decl_id":null,"docs":" The default calling convention of the target.\n","sig":null,"attributes":[{"value":"/ The default calling convention of the target.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":431767,"byte_end":431816,"line_start":174,"line_end":174,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":8202},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":431904,"byte_end":431917,"line_start":178,"line_end":178,"column_start":9,"column_end":22},"name":"pointer_width","qualname":"::isa::TargetFrontendConfig::pointer_width","value":"target_lexicon::triple::PointerWidth","parent":{"krate":0,"index":8200},"children":[],"decl_id":null,"docs":" The pointer width of the target.\n","sig":null,"attributes":[{"value":"/ The pointer width of the target.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":431859,"byte_end":431895,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2449},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":432020,"byte_end":432032,"line_start":183,"line_end":183,"column_start":12,"column_end":24},"name":"pointer_type","qualname":"<TargetFrontendConfig>::pointer_type","value":"fn (self) -> ir::Type","parent":null,"children":[],"decl_id":null,"docs":" Get the pointer type of this target.\n","sig":null,"attributes":[{"value":"/ Get the pointer type of this target.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":431968,"byte_end":432008,"line_start":182,"line_end":182,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2450},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":432202,"byte_end":432214,"line_start":188,"line_end":188,"column_start":12,"column_end":24},"name":"pointer_bits","qualname":"<TargetFrontendConfig>::pointer_bits","value":"fn (self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the width of pointers on this target, in units of bits.\n","sig":null,"attributes":[{"value":"/ Get the width of pointers on this target, in units of bits.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":432127,"byte_end":432190,"line_start":187,"line_end":187,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2451},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":432350,"byte_end":432363,"line_start":193,"line_end":193,"column_start":12,"column_end":25},"name":"pointer_bytes","qualname":"<TargetFrontendConfig>::pointer_bytes","value":"fn (self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the width of pointers on this target, in units of bytes.\n","sig":null,"attributes":[{"value":"/ Get the width of pointers on this target, in units of bytes.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":432274,"byte_end":432338,"line_start":192,"line_end":192,"column_start":5,"column_end":69}}]},{"kind":"Trait","id":{"krate":0,"index":2452},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":432574,"byte_end":432583,"line_start":200,"line_end":200,"column_start":11,"column_end":20},"name":"TargetIsa","qualname":"::isa::TargetIsa","value":"TargetIsa: fmt::Display + Send + Sync","parent":null,"children":[{"krate":0,"index":2453},{"krate":0,"index":2454},{"krate":0,"index":2455},{"krate":0,"index":2456},{"krate":0,"index":2457},{"krate":0,"index":2458},{"krate":0,"index":2459},{"krate":0,"index":2460},{"krate":0,"index":2461},{"krate":0,"index":2462},{"krate":0,"index":2463},{"krate":0,"index":2464},{"krate":0,"index":2465},{"krate":0,"index":2467},{"krate":0,"index":2469},{"krate":0,"index":2470},{"krate":0,"index":2471},{"krate":0,"index":2472},{"krate":0,"index":2473},{"krate":0,"index":2478},{"krate":0,"index":2479},{"krate":0,"index":2480},{"krate":0,"index":2481}],"decl_id":null,"docs":" Methods that are specialized to a target ISA. Implies a Display trait that shows the\n shared flags, as well as any isa-specific flags.\n","sig":null,"attributes":[{"value":"/ Methods that are specialized to a target ISA. Implies a Display trait that shows the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":432422,"byte_end":432510,"line_start":198,"line_end":198,"column_start":1,"column_end":89}},{"value":"/ shared flags, as well as any isa-specific flags.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":432511,"byte_end":432563,"line_start":199,"line_end":199,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2453},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":432655,"byte_end":432659,"line_start":202,"line_end":202,"column_start":8,"column_end":12},"name":"name","qualname":"::isa::TargetIsa::name","value":"fn (&self) -> &'static str","parent":{"krate":0,"index":2452},"children":[],"decl_id":null,"docs":" Get the name of this ISA.\n","sig":null,"attributes":[{"value":"/ Get the name of this ISA.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":432618,"byte_end":432647,"line_start":201,"line_end":201,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2454},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":432763,"byte_end":432769,"line_start":205,"line_end":205,"column_start":8,"column_end":14},"name":"triple","qualname":"::isa::TargetIsa::triple","value":"fn (&self) -> &Triple","parent":{"krate":0,"index":2452},"children":[],"decl_id":null,"docs":" Get the target triple that was used to make this trait object.\n","sig":null,"attributes":[{"value":"/ Get the target triple that was used to make this trait object.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":432689,"byte_end":432755,"line_start":204,"line_end":204,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2455},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":432877,"byte_end":432882,"line_start":208,"line_end":208,"column_start":8,"column_end":13},"name":"flags","qualname":"::isa::TargetIsa::flags","value":"fn (&self) -> &settings::Flags","parent":{"krate":0,"index":2452},"children":[],"decl_id":null,"docs":" Get the ISA-independent flags that were used to make this trait object.\n","sig":null,"attributes":[{"value":"/ Get the ISA-independent flags that were used to make this trait object.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":432794,"byte_end":432869,"line_start":207,"line_end":207,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2456},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":432978,"byte_end":432995,"line_start":211,"line_end":211,"column_start":8,"column_end":25},"name":"default_call_conv","qualname":"::isa::TargetIsa::default_call_conv","value":"fn (&self) -> CallConv","parent":{"krate":0,"index":2452},"children":[],"decl_id":null,"docs":" Get the default calling convention of this target.\n","sig":null,"attributes":[{"value":"/ Get the default calling convention of this target.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":432916,"byte_end":432970,"line_start":210,"line_end":210,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2457},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":433121,"byte_end":433133,"line_start":216,"line_end":216,"column_start":8,"column_end":20},"name":"pointer_type","qualname":"::isa::TargetIsa::pointer_type","value":"fn (&self) -> ir::Type","parent":{"krate":0,"index":2452},"children":[],"decl_id":null,"docs":" Get the pointer type of this ISA.\n","sig":null,"attributes":[{"value":"/ Get the pointer type of this ISA.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":433076,"byte_end":433113,"line_start":215,"line_end":215,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2458},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":433279,"byte_end":433292,"line_start":221,"line_end":221,"column_start":8,"column_end":21},"name":"pointer_width","qualname":"::isa::TargetIsa::pointer_width","value":"fn (&self) -> PointerWidth","parent":{"krate":0,"index":2452},"children":[],"decl_id":null,"docs":" Get the width of pointers on this ISA.\n","sig":null,"attributes":[{"value":"/ Get the width of pointers on this ISA.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":433229,"byte_end":433271,"line_start":220,"line_end":220,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2459},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":433444,"byte_end":433456,"line_start":226,"line_end":226,"column_start":8,"column_end":20},"name":"pointer_bits","qualname":"::isa::TargetIsa::pointer_bits","value":"fn (&self) -> u8","parent":{"krate":0,"index":2452},"children":[],"decl_id":null,"docs":" Get the width of pointers on this ISA, in units of bits.\n","sig":null,"attributes":[{"value":"/ Get the width of pointers on this ISA, in units of bits.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":433376,"byte_end":433436,"line_start":225,"line_end":225,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2460},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":433588,"byte_end":433601,"line_start":231,"line_end":231,"column_start":8,"column_end":21},"name":"pointer_bytes","qualname":"::isa::TargetIsa::pointer_bytes","value":"fn (&self) -> u8","parent":{"krate":0,"index":2452},"children":[],"decl_id":null,"docs":" Get the width of pointers on this ISA, in units of bytes.\n","sig":null,"attributes":[{"value":"/ Get the width of pointers on this ISA, in units of bytes.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":433519,"byte_end":433580,"line_start":230,"line_end":230,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2461},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":433740,"byte_end":433755,"line_start":236,"line_end":236,"column_start":8,"column_end":23},"name":"frontend_config","qualname":"::isa::TargetIsa::frontend_config","value":"fn (&self) -> TargetFrontendConfig","parent":{"krate":0,"index":2452},"children":[],"decl_id":null,"docs":" Get the information needed by frontends producing Cranelift IR.\n","sig":null,"attributes":[{"value":"/ Get the information needed by frontends producing Cranelift IR.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":433665,"byte_end":433732,"line_start":235,"line_end":235,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2462},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":434028,"byte_end":434042,"line_start":244,"line_end":244,"column_start":8,"column_end":22},"name":"uses_cpu_flags","qualname":"::isa::TargetIsa::uses_cpu_flags","value":"fn (&self) -> bool","parent":{"krate":0,"index":2452},"children":[],"decl_id":null,"docs":" Does the CPU implement scalar comparisons using a CPU flags register?\n","sig":null,"attributes":[{"value":"/ Does the CPU implement scalar comparisons using a CPU flags register?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":433947,"byte_end":434020,"line_start":243,"line_end":243,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2463},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":434146,"byte_end":434168,"line_start":249,"line_end":249,"column_start":8,"column_end":30},"name":"uses_complex_addresses","qualname":"::isa::TargetIsa::uses_complex_addresses","value":"fn (&self) -> bool","parent":{"krate":0,"index":2452},"children":[],"decl_id":null,"docs":" Does the CPU implement multi-register addressing?\n","sig":null,"attributes":[{"value":"/ Does the CPU implement multi-register addressing?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":434085,"byte_end":434138,"line_start":248,"line_end":248,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2464},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":434281,"byte_end":434294,"line_start":254,"line_end":254,"column_start":8,"column_end":21},"name":"register_info","qualname":"::isa::TargetIsa::register_info","value":"fn (&self) -> RegInfo","parent":{"krate":0,"index":2452},"children":[],"decl_id":null,"docs":" Get a data structure describing the registers in this ISA.\n","sig":null,"attributes":[{"value":"/ Get a data structure describing the registers in this ISA.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":434211,"byte_end":434273,"line_start":253,"line_end":253,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2465},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":434392,"byte_end":434407,"line_start":257,"line_end":257,"column_start":8,"column_end":23},"name":"legal_encodings","qualname":"::isa::TargetIsa::legal_encodings","value":"fn <'a> (&'a self, func: &'a ir::Function, inst: &'a ir::InstructionData, ctrl_typevar: ir::Type) -> Encodings<'a>","parent":{"krate":0,"index":2452},"children":[],"decl_id":null,"docs":" Returns an iterator over legal encodings for the instruction.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over legal encodings for the instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":434319,"byte_end":434384,"line_start":256,"line_end":256,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2467},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":434873,"byte_end":434879,"line_start":270,"line_end":270,"column_start":8,"column_end":14},"name":"encode","qualname":"::isa::TargetIsa::encode","value":"fn (&self, func: &ir::Function, inst: &ir::InstructionData, ctrl_typevar: ir::Type) -> Result<Encoding, Legalize>","parent":{"krate":0,"index":2452},"children":[],"decl_id":null,"docs":" Encode an instruction after determining it is legal.","sig":null,"attributes":[{"value":"/ Encode an instruction after determining it is legal.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":434563,"byte_end":434619,"line_start":264,"line_end":264,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":434624,"byte_end":434627,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ If `inst` can legally be encoded in this ISA, produce the corresponding `Encoding` object.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":434632,"byte_end":434726,"line_start":266,"line_end":266,"column_start":5,"column_end":99}},{"value":"/ Otherwise, return `Legalize` action.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":434731,"byte_end":434771,"line_start":267,"line_end":267,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":434776,"byte_end":434779,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ This is also the main entry point for determining if an instruction is legal.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":434784,"byte_end":434865,"line_start":269,"line_end":269,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2469},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":435246,"byte_end":435259,"line_start":281,"line_end":281,"column_start":8,"column_end":21},"name":"encoding_info","qualname":"::isa::TargetIsa::encoding_info","value":"fn (&self) -> EncInfo","parent":{"krate":0,"index":2452},"children":[],"decl_id":null,"docs":" Get a data structure describing the instruction encodings in this ISA.\n","sig":null,"attributes":[{"value":"/ Get a data structure describing the instruction encodings in this ISA.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":435164,"byte_end":435238,"line_start":280,"line_end":280,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2470},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":437218,"byte_end":437236,"line_start":316,"line_end":316,"column_start":8,"column_end":26},"name":"legalize_signature","qualname":"::isa::TargetIsa::legalize_signature","value":"fn (&self, sig: &mut Cow<ir::Signature>, current: bool) -> ()","parent":{"krate":0,"index":2452},"children":[],"decl_id":null,"docs":" Legalize a function signature.","sig":null,"attributes":[{"value":"/ Legalize a function signature.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":435284,"byte_end":435318,"line_start":283,"line_end":283,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":435323,"byte_end":435326,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ This is used to legalize both the signature of the function being compiled and any called","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":435331,"byte_end":435424,"line_start":285,"line_end":285,"column_start":5,"column_end":98}},{"value":"/ functions. The signature should be modified by adding `ArgumentLoc` annotations to all","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":435429,"byte_end":435519,"line_start":286,"line_end":286,"column_start":5,"column_end":95}},{"value":"/ arguments and return values.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":435524,"byte_end":435556,"line_start":287,"line_end":287,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":435561,"byte_end":435564,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ Arguments with types that are not supported by the ABI can be expanded into multiple","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":435569,"byte_end":435657,"line_start":289,"line_end":289,"column_start":5,"column_end":93}},{"value":"/ arguments:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":435662,"byte_end":435676,"line_start":290,"line_end":290,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":435681,"byte_end":435684,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ - Integer types that are too large to fit in a register can be broken into multiple","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":435689,"byte_end":435776,"line_start":292,"line_end":292,"column_start":5,"column_end":92}},{"value":"/   arguments of a smaller integer type.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":435781,"byte_end":435823,"line_start":293,"line_end":293,"column_start":5,"column_end":47}},{"value":"/ - Floating point types can be bit-cast to an integer type of the same size, and possible","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":435828,"byte_end":435920,"line_start":294,"line_end":294,"column_start":5,"column_end":97}},{"value":"/   broken into smaller integer types.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":435925,"byte_end":435965,"line_start":295,"line_end":295,"column_start":5,"column_end":45}},{"value":"/ - Vector types can be bit-cast and broken down into smaller vectors or scalars.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":435970,"byte_end":436053,"line_start":296,"line_end":296,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":436058,"byte_end":436061,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ The legalizer will adapt argument and return values as necessary at all ABI boundaries.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":436066,"byte_end":436157,"line_start":298,"line_end":298,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":436162,"byte_end":436165,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ When this function is called to legalize the signature of the function currently being","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":436170,"byte_end":436260,"line_start":300,"line_end":300,"column_start":5,"column_end":95}},{"value":"/ compiled, `current` is true. The legalized signature can then also contain special purpose","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":436265,"byte_end":436359,"line_start":301,"line_end":301,"column_start":5,"column_end":99}},{"value":"/ arguments and return values such as:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":436364,"byte_end":436404,"line_start":302,"line_end":302,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":436409,"byte_end":436412,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ - A `link` argument representing the link registers on RISC architectures that don't push","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":436417,"byte_end":436510,"line_start":304,"line_end":304,"column_start":5,"column_end":98}},{"value":"/   the return address on the stack.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":436515,"byte_end":436553,"line_start":305,"line_end":305,"column_start":5,"column_end":43}},{"value":"/ - A `link` return value which will receive the value that was passed to the `link`","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":436558,"byte_end":436644,"line_start":306,"line_end":306,"column_start":5,"column_end":91}},{"value":"/   argument.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":436649,"byte_end":436664,"line_start":307,"line_end":307,"column_start":5,"column_end":20}},{"value":"/ - An `sret` argument can be added if one wasn't present already. This is necessary if the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":436669,"byte_end":436762,"line_start":308,"line_end":308,"column_start":5,"column_end":98}},{"value":"/   signature returns more values than registers are available for returning values.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":436767,"byte_end":436853,"line_start":309,"line_end":309,"column_start":5,"column_end":91}},{"value":"/ - An `sret` return value can be added if the ABI requires a function to return its `sret`","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":436858,"byte_end":436951,"line_start":310,"line_end":310,"column_start":5,"column_end":98}},{"value":"/   argument in a register.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":436956,"byte_end":436985,"line_start":311,"line_end":311,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":436990,"byte_end":436993,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Arguments and return values for the caller's frame pointer and other callee-saved registers","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":436998,"byte_end":437093,"line_start":313,"line_end":313,"column_start":5,"column_end":100}},{"value":"/ should not be added by this function. These arguments are not added until after register","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":437098,"byte_end":437190,"line_start":314,"line_end":314,"column_start":5,"column_end":97}},{"value":"/ allocation.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":437195,"byte_end":437210,"line_start":315,"line_end":315,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2471},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":437688,"byte_end":437709,"line_start":324,"line_end":324,"column_start":8,"column_end":29},"name":"regclass_for_abi_type","qualname":"::isa::TargetIsa::regclass_for_abi_type","value":"fn (&self, ty: ir::Type) -> RegClass","parent":{"krate":0,"index":2452},"children":[],"decl_id":null,"docs":" Get the register class that should be used to represent an ABI argument or return value of\n type `ty`. This should be the top-level register class that contains the argument\n registers.","sig":null,"attributes":[{"value":"/ Get the register class that should be used to represent an ABI argument or return value of","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":437295,"byte_end":437389,"line_start":318,"line_end":318,"column_start":5,"column_end":99}},{"value":"/ type `ty`. This should be the top-level register class that contains the argument","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":437394,"byte_end":437479,"line_start":319,"line_end":319,"column_start":5,"column_end":90}},{"value":"/ registers.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":437484,"byte_end":437498,"line_start":320,"line_end":320,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":437503,"byte_end":437506,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ This function can assume that it will only be asked to provide register classes for types","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":437511,"byte_end":437604,"line_start":322,"line_end":322,"column_start":5,"column_end":98}},{"value":"/ that `legalize_signature()` produces in `ArgumentLoc::Reg` entries.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":437609,"byte_end":437680,"line_start":323,"line_end":323,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2472},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":437958,"byte_end":437979,"line_start":330,"line_end":330,"column_start":8,"column_end":29},"name":"allocatable_registers","qualname":"::isa::TargetIsa::allocatable_registers","value":"fn (&self, func: &ir::Function) -> regalloc::RegisterSet","parent":{"krate":0,"index":2452},"children":[],"decl_id":null,"docs":" Get the set of allocatable registers that can be used when compiling `func`.","sig":null,"attributes":[{"value":"/ Get the set of allocatable registers that can be used when compiling `func`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":437749,"byte_end":437829,"line_start":326,"line_end":326,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":437834,"byte_end":437837,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ This set excludes reserved registers like the stack pointer and other special-purpose","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":437842,"byte_end":437931,"line_start":328,"line_end":328,"column_start":5,"column_end":94}},{"value":"/ registers.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":437936,"byte_end":437950,"line_start":329,"line_end":329,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":2473},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":438191,"byte_end":438208,"line_start":335,"line_end":335,"column_start":8,"column_end":25},"name":"prologue_epilogue","qualname":"::isa::TargetIsa::prologue_epilogue","value":"fn (&self, func: &mut ir::Function) -> CodegenResult<()>","parent":{"krate":0,"index":2452},"children":[],"decl_id":null,"docs":" Compute the stack layout and insert prologue and epilogue code into `func`.","sig":null,"attributes":[{"value":"/ Compute the stack layout and insert prologue and epilogue code into `func`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":438039,"byte_end":438118,"line_start":332,"line_end":332,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":438123,"byte_end":438126,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ Return an error if the stack frame is too large.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":438131,"byte_end":438183,"line_start":334,"line_end":334,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2478},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":439769,"byte_end":439792,"line_start":373,"line_end":373,"column_start":8,"column_end":31},"name":"emit_function_to_memory","qualname":"::isa::TargetIsa::emit_function_to_memory","value":"fn (&self, func: &ir::Function, sink: &mut binemit::MemoryCodeSink) -> ()","parent":{"krate":0,"index":2452},"children":[],"decl_id":null,"docs":" Emit a whole function into memory.\n","sig":null,"attributes":[{"value":"/ Emit a whole function into memory.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":439723,"byte_end":439761,"line_start":372,"line_end":372,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2479},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":439930,"byte_end":439961,"line_start":376,"line_end":376,"column_start":8,"column_end":39},"name":"unsigned_add_overflow_condition","qualname":"::isa::TargetIsa::unsigned_add_overflow_condition","value":"fn (&self) -> ir::condcodes::IntCC","parent":{"krate":0,"index":2452},"children":[],"decl_id":null,"docs":" IntCC condition for Unsigned Addition Overflow (Carry).\n","sig":null,"attributes":[{"value":"/ IntCC condition for Unsigned Addition Overflow (Carry).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":439863,"byte_end":439922,"line_start":375,"line_end":375,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2480},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":440076,"byte_end":440107,"line_start":379,"line_end":379,"column_start":8,"column_end":39},"name":"unsigned_sub_overflow_condition","qualname":"::isa::TargetIsa::unsigned_sub_overflow_condition","value":"fn (&self) -> ir::condcodes::IntCC","parent":{"krate":0,"index":2452},"children":[],"decl_id":null,"docs":" IntCC condition for Unsigned Subtraction Overflow (Borrow/Carry).\n","sig":null,"attributes":[{"value":"/ IntCC condition for Unsigned Subtraction Overflow (Borrow/Carry).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":439999,"byte_end":440068,"line_start":378,"line_end":378,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2481},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":440304,"byte_end":440320,"line_start":384,"line_end":384,"column_start":8,"column_end":24},"name":"emit_unwind_info","qualname":"::isa::TargetIsa::emit_unwind_info","value":"fn (&self, _func: &ir::Function, _kind: binemit::FrameUnwindKind, _sink: &mut dyn binemit::FrameUnwindSink) -> ()","parent":{"krate":0,"index":2452},"children":[],"decl_id":null,"docs":" Emit unwind information for the given function.","sig":null,"attributes":[{"value":"/ Emit unwind information for the given function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":440145,"byte_end":440196,"line_start":381,"line_end":381,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":440201,"byte_end":440204,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ Only some calling conventions (e.g. Windows fastcall) will have unwind information.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":440209,"byte_end":440296,"line_start":383,"line_end":383,"column_start":5,"column_end":92}}]},{"kind":"Mod","id":{"krate":0,"index":2482},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"loop_analysis","qualname":"::loop_analysis","value":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","parent":null,"children":[{"krate":0,"index":2483},{"krate":0,"index":2484},{"krate":0,"index":2485},{"krate":0,"index":2486},{"krate":0,"index":2489},{"krate":0,"index":2492},{"krate":0,"index":2496},{"krate":0,"index":2497},{"krate":0,"index":2498},{"krate":0,"index":8206},{"krate":0,"index":8221},{"krate":0,"index":8219},{"krate":0,"index":8215},{"krate":0,"index":8216},{"krate":0,"index":8212},{"krate":0,"index":8213},{"krate":0,"index":8209},{"krate":0,"index":8226},{"krate":0,"index":8229},{"krate":0,"index":8231},{"krate":0,"index":8222},{"krate":0,"index":8224},{"krate":0,"index":2499},{"krate":0,"index":2503},{"krate":0,"index":2506},{"krate":0,"index":2508},{"krate":0,"index":2515}],"decl_id":null,"docs":" A loop analysis represented as mappings of loops to their header Block\n and parent in the loop tree.\n","sig":null,"attributes":[{"value":"! A loop analysis represented as mappings of loops to their header Block","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":621428,"byte_end":621502,"line_start":1,"line_end":1,"column_start":1,"column_end":75}},{"value":"! and parent in the loop tree.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":621503,"byte_end":621535,"line_start":2,"line_end":2,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":8206},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":621960,"byte_end":621964,"line_start":16,"line_end":16,"column_start":12,"column_end":16},"name":"Loop","qualname":"::loop_analysis::Loop","value":"","parent":null,"children":[],"decl_id":null,"docs":" A opaque reference to a code loop.\n","sig":null,"attributes":[{"value":"/ A opaque reference to a code loop.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":621866,"byte_end":621904,"line_start":14,"line_end":14,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2499},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":622242,"byte_end":622254,"line_start":23,"line_end":23,"column_start":12,"column_end":24},"name":"LoopAnalysis","qualname":"::loop_analysis::LoopAnalysis","value":"LoopAnalysis {  }","parent":null,"children":[{"krate":0,"index":2500},{"krate":0,"index":2501},{"krate":0,"index":2502}],"decl_id":null,"docs":" Loop tree information for a single function.","sig":null,"attributes":[{"value":"/ Loop tree information for a single function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":622000,"byte_end":622048,"line_start":19,"line_end":19,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":622049,"byte_end":622052,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Loops are referenced by the Loop object, and for each loop you can access its header block,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":622053,"byte_end":622148,"line_start":21,"line_end":21,"column_start":1,"column_end":96}},{"value":"/ its eventual parent in the loop tree and all the block belonging to the loop.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":622149,"byte_end":622230,"line_start":22,"line_end":22,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2509},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":622908,"byte_end":622911,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"new","qualname":"<LoopAnalysis>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allocate a new blank loop analysis struct. Use `compute` to compute the loop analysis for\n a function.\n","sig":null,"attributes":[{"value":"/ Allocate a new blank loop analysis struct. Use `compute` to compute the loop analysis for","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":622783,"byte_end":622876,"line_start":46,"line_end":46,"column_start":5,"column_end":98}},{"value":"/ a function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":622881,"byte_end":622896,"line_start":47,"line_end":47,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2510},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":623135,"byte_end":623140,"line_start":57,"line_end":57,"column_start":12,"column_end":17},"name":"loops","qualname":"<LoopAnalysis>::loops","value":"fn (&self) -> Keys<Loop>","parent":null,"children":[],"decl_id":null,"docs":" Returns all the loops contained in a function.\n","sig":null,"attributes":[{"value":"/ Returns all the loops contained in a function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":623073,"byte_end":623123,"line_start":56,"line_end":56,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2511},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":623385,"byte_end":623396,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"loop_header","qualname":"<LoopAnalysis>::loop_header","value":"fn (&self, lp: Loop) -> Block","parent":null,"children":[],"decl_id":null,"docs":" Returns the header block of a particular loop.","sig":null,"attributes":[{"value":"/ Returns the header block of a particular loop.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":623201,"byte_end":623251,"line_start":61,"line_end":61,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":623256,"byte_end":623259,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ The characteristic property of a loop header block is that it dominates some of its","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":623264,"byte_end":623351,"line_start":63,"line_end":63,"column_start":5,"column_end":92}},{"value":"/ predecessors.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":623356,"byte_end":623373,"line_start":64,"line_end":64,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2512},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":623536,"byte_end":623547,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"loop_parent","qualname":"<LoopAnalysis>::loop_parent","value":"fn (&self, lp: Loop) -> Option<Loop>","parent":null,"children":[],"decl_id":null,"docs":" Return the eventual parent of a loop in the loop tree.\n","sig":null,"attributes":[{"value":"/ Return the eventual parent of a loop in the loop tree.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":623466,"byte_end":623524,"line_start":69,"line_end":69,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2513},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":623788,"byte_end":623798,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"is_in_loop","qualname":"<LoopAnalysis>::is_in_loop","value":"fn (&self, block: Block, lp: Loop) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determine if an Block belongs to a loop by running a finger along the loop tree.","sig":null,"attributes":[{"value":"/ Determine if an Block belongs to a loop by running a finger along the loop tree.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":623633,"byte_end":623717,"line_start":74,"line_end":74,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":623722,"byte_end":623725,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if `block` is in loop `lp`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":623730,"byte_end":623776,"line_start":76,"line_end":76,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2514},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":624255,"byte_end":624268,"line_start":89,"line_end":89,"column_start":12,"column_end":25},"name":"is_child_loop","qualname":"<LoopAnalysis>::is_child_loop","value":"fn (&self, child: Loop, parent: Loop) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines if a loop is contained in another loop.","sig":null,"attributes":[{"value":"/ Determines if a loop is contained in another loop.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":624045,"byte_end":624099,"line_start":85,"line_end":85,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":624104,"byte_end":624107,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ `is_child_loop(child,parent)` returns `true` if and only if `child` is a child loop of","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":624112,"byte_end":624202,"line_start":87,"line_end":87,"column_start":5,"column_end":95}},{"value":"/ `parent` (or `child == parent`).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":624207,"byte_end":624243,"line_start":88,"line_end":88,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2516},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":624690,"byte_end":624697,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"compute","qualname":"<LoopAnalysis>::compute","value":"fn (&mut self, func: &Function, cfg: &ControlFlowGraph, domtree: &DominatorTree) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Detects the loops in a function. Needs the control flow graph and the dominator tree.\n","sig":null,"attributes":[{"value":"/ Detects the loops in a function. Needs the control flow graph and the dominator tree.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":624589,"byte_end":624678,"line_start":102,"line_end":102,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":2517},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":625414,"byte_end":625422,"line_start":118,"line_end":118,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<LoopAnalysis>::is_valid","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the loop analysis is in a valid state.","sig":null,"attributes":[{"value":"/ Check if the loop analysis is in a valid state.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":625105,"byte_end":625156,"line_start":113,"line_end":113,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":625161,"byte_end":625164,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Note that this doesn't perform any kind of validity checks. It simply checks if the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":625169,"byte_end":625256,"line_start":115,"line_end":115,"column_start":5,"column_end":92}},{"value":"/ `compute()` method has been called since the last `clear()`. It does not check that the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":625261,"byte_end":625352,"line_start":116,"line_end":116,"column_start":5,"column_end":96}},{"value":"/ loop analysis is consistent with the CFG.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":625357,"byte_end":625402,"line_start":117,"line_end":117,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2518},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":625686,"byte_end":625691,"line_start":125,"line_end":125,"column_start":12,"column_end":17},"name":"clear","qualname":"<LoopAnalysis>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear all the data structures contained in the loop analysis. This will leave the\n analysis in a similar state to a context returned by `new()` except that allocated\n memory be retained.\n","sig":null,"attributes":[{"value":"/ Clear all the data structures contained in the loop analysis. This will leave the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":625470,"byte_end":625555,"line_start":122,"line_end":122,"column_start":5,"column_end":90}},{"value":"/ analysis in a similar state to a context returned by `new()` except that allocated","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":625560,"byte_end":625646,"line_start":123,"line_end":123,"column_start":5,"column_end":91}},{"value":"/ memory be retained.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":625651,"byte_end":625674,"line_start":124,"line_end":124,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":2521},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/print_errors.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"print_errors","qualname":"::print_errors","value":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/print_errors.rs","parent":null,"children":[{"krate":0,"index":2522},{"krate":0,"index":2523},{"krate":0,"index":2524},{"krate":0,"index":2529},{"krate":0,"index":2530},{"krate":0,"index":2531},{"krate":0,"index":2532},{"krate":0,"index":2535},{"krate":0,"index":2539},{"krate":0,"index":2540},{"krate":0,"index":2543},{"krate":0,"index":2544},{"krate":0,"index":2545},{"krate":0,"index":2546},{"krate":0,"index":2549},{"krate":0,"index":2554},{"krate":0,"index":2559},{"krate":0,"index":2560},{"krate":0,"index":2561},{"krate":0,"index":2562},{"krate":0,"index":2563},{"krate":0,"index":2564}],"decl_id":null,"docs":" Utility routines for pretty-printing error messages.\n","sig":null,"attributes":[{"value":"! Utility routines for pretty-printing error messages.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/print_errors.rs","byte_start":635137,"byte_end":635193,"line_start":1,"line_end":1,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":2546},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/print_errors.rs","byte_start":635677,"byte_end":635698,"line_start":18,"line_end":18,"column_start":8,"column_end":29},"name":"pretty_verifier_error","qualname":"::print_errors::pretty_verifier_error","value":"fn <'a> (func: &ir::Function, isa: Option<&dyn TargetIsa>, func_w: Option<Box<dyn FuncWriter + 'a>>, errors: VerifierErrors) -> String","parent":null,"children":[],"decl_id":null,"docs":" Pretty-print a verifier error.\n","sig":null,"attributes":[{"value":"/ Pretty-print a verifier error.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/print_errors.rs","byte_start":635635,"byte_end":635669,"line_start":17,"line_end":17,"column_start":1,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":2564},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/print_errors.rs","byte_start":640910,"byte_end":640922,"line_start":221,"line_end":221,"column_start":8,"column_end":20},"name":"pretty_error","qualname":"::print_errors::pretty_error","value":"fn (func: &ir::Function, isa: Option<&dyn TargetIsa>, err: CodegenError) -> String","parent":null,"children":[],"decl_id":null,"docs":" Pretty-print a Cranelift error.\n","sig":null,"attributes":[{"value":"/ Pretty-print a Cranelift error.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/print_errors.rs","byte_start":640867,"byte_end":640902,"line_start":220,"line_end":220,"column_start":1,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":2565},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"settings","qualname":"::settings","value":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","parent":null,"children":[{"krate":0,"index":2566},{"krate":0,"index":2569},{"krate":0,"index":2570},{"krate":0,"index":2571},{"krate":0,"index":2574},{"krate":0,"index":2575},{"krate":0,"index":2576},{"krate":0,"index":2577},{"krate":0,"index":8234},{"krate":0,"index":8237},{"krate":0,"index":2580},{"krate":0,"index":2586},{"krate":0,"index":2587},{"krate":0,"index":2589},{"krate":0,"index":8239},{"krate":0,"index":8257},{"krate":0,"index":8258},{"krate":0,"index":8255},{"krate":0,"index":8251},{"krate":0,"index":8252},{"krate":0,"index":8248},{"krate":0,"index":8249},{"krate":0,"index":2595},{"krate":0,"index":8263},{"krate":0,"index":8269},{"krate":0,"index":8267},{"krate":0,"index":2597},{"krate":0,"index":2601},{"krate":0,"index":8332},{"krate":0,"index":8335},{"krate":0,"index":8285},{"krate":0,"index":8337},{"krate":0,"index":8356},{"krate":0,"index":8355},{"krate":0,"index":8353},{"krate":0,"index":8350},{"krate":0,"index":8351},{"krate":0,"index":8347},{"krate":0,"index":8348},{"krate":0,"index":8344},{"krate":0,"index":8288},{"krate":0,"index":8290},{"krate":0,"index":8358},{"krate":0,"index":8387},{"krate":0,"index":8386},{"krate":0,"index":8384},{"krate":0,"index":8381},{"krate":0,"index":8382},{"krate":0,"index":8378},{"krate":0,"index":8379},{"krate":0,"index":8375},{"krate":0,"index":8293},{"krate":0,"index":8295},{"krate":0,"index":8298},{"krate":0,"index":8320},{"krate":0,"index":8322},{"krate":0,"index":8324},{"krate":0,"index":8326},{"krate":0,"index":8328},{"krate":0,"index":8329},{"krate":0,"index":8330},{"krate":0,"index":8389},{"krate":0,"index":8395},{"krate":0,"index":8393},{"krate":0,"index":2624},{"krate":0,"index":2627}],"decl_id":null,"docs":" Shared settings module.","sig":null,"attributes":[{"value":"! Shared settings module.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":641145,"byte_end":641172,"line_start":1,"line_end":1,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":641173,"byte_end":641176,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module defines data structures to access the settings defined in the meta language.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":641177,"byte_end":641269,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":641270,"byte_end":641273,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! Each settings group is translated to a `Flags` struct either in this module or in its","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":641274,"byte_end":641363,"line_start":5,"line_end":5,"column_start":1,"column_end":90}},{"value":"! ISA-specific `settings` module. The struct provides individual getter methods for all of the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":641364,"byte_end":641460,"line_start":6,"line_end":6,"column_start":1,"column_end":97}},{"value":"! settings as well as computed predicate flags.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":641461,"byte_end":641510,"line_start":7,"line_end":7,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":641511,"byte_end":641514,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! The `Flags` struct is immutable once it has been created. A `Builder` instance is used to","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":641515,"byte_end":641608,"line_start":9,"line_end":9,"column_start":1,"column_end":94}},{"value":"! create it.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":641609,"byte_end":641623,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":641624,"byte_end":641627,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! # Example","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":641628,"byte_end":641641,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"! ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":641642,"byte_end":641649,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"! use cranelift_codegen::settings::{self, Configurable};","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":641650,"byte_end":641708,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":641709,"byte_end":641712,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! let mut b = settings::builder();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":641713,"byte_end":641749,"line_start":16,"line_end":16,"column_start":1,"column_end":37}},{"value":"! b.set(\"opt_level\", \"speed_and_size\");","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":641750,"byte_end":641791,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":641792,"byte_end":641795,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! let f = settings::Flags::new(b);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":641796,"byte_end":641832,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"! assert_eq!(f.opt_level(), settings::OptLevel::SpeedAndSize);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":641833,"byte_end":641897,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"! ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":641898,"byte_end":641905,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":2577},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":642284,"byte_end":642296,"line_start":35,"line_end":35,"column_start":11,"column_end":23},"name":"Configurable","qualname":"::settings::Configurable","value":"Configurable","parent":null,"children":[{"krate":0,"index":2578},{"krate":0,"index":2579}],"decl_id":null,"docs":" A string-based configurator for settings groups.","sig":null,"attributes":[{"value":"/ A string-based configurator for settings groups.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":642097,"byte_end":642149,"line_start":31,"line_end":31,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":642150,"byte_end":642153,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The `Configurable` protocol allows settings to be modified by name before a finished `Flags`","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":642154,"byte_end":642250,"line_start":33,"line_end":33,"column_start":1,"column_end":97}},{"value":"/ struct is created.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":642251,"byte_end":642273,"line_start":34,"line_end":34,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2578},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":642455,"byte_end":642458,"line_start":39,"line_end":39,"column_start":8,"column_end":11},"name":"set","qualname":"::settings::Configurable::set","value":"fn (&mut self, name: &str, value: &str) -> SetResult<()>","parent":{"krate":0,"index":2577},"children":[],"decl_id":null,"docs":" Set the string value of any setting by name.","sig":null,"attributes":[{"value":"/ Set the string value of any setting by name.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":642303,"byte_end":642351,"line_start":36,"line_end":36,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":642356,"byte_end":642359,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ This can set any type of setting whether it is numeric, boolean, or enumerated.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":642364,"byte_end":642447,"line_start":38,"line_end":38,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":2579},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":642675,"byte_end":642681,"line_start":44,"line_end":44,"column_start":8,"column_end":14},"name":"enable","qualname":"::settings::Configurable::enable","value":"fn (&mut self, name: &str) -> SetResult<()>","parent":{"krate":0,"index":2577},"children":[],"decl_id":null,"docs":" Enable a boolean setting or apply a preset.","sig":null,"attributes":[{"value":"/ Enable a boolean setting or apply a preset.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":642518,"byte_end":642565,"line_start":41,"line_end":41,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":642570,"byte_end":642573,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ If the identified setting isn't a boolean or a preset, a `BadType` error is returned.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":642578,"byte_end":642667,"line_start":43,"line_end":43,"column_start":5,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":8234},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":642803,"byte_end":642810,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"Builder","qualname":"::settings::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":8235},{"krate":0,"index":8236}],"decl_id":null,"docs":" Collect settings values based on a template.\n","sig":null,"attributes":[{"value":"/ Collect settings values based on a template.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":642726,"byte_end":642774,"line_start":47,"line_end":47,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2581},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":642983,"byte_end":642986,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn (tmpl: &'static detail::Template) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new builder with defaults and names from the given template.\n","sig":null,"attributes":[{"value":"/ Create a new builder with defaults and names from the given template.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":642898,"byte_end":642971,"line_start":55,"line_end":55,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2582},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":643209,"byte_end":643218,"line_start":64,"line_end":64,"column_start":12,"column_end":21},"name":"state_for","qualname":"<Builder>::state_for","value":"fn (self, name: &str) -> Box<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Extract contents of builder once everything is configured.\n","sig":null,"attributes":[{"value":"/ Extract contents of builder once everything is configured.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":643135,"byte_end":643197,"line_start":63,"line_end":63,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8240},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":646779,"byte_end":646786,"line_start":172,"line_end":172,"column_start":5,"column_end":12},"name":"BadName","qualname":"::settings::SetError::BadName","value":"SetError::BadName(String)","parent":{"krate":0,"index":8239},"children":[],"decl_id":null,"docs":" No setting by this name exists.\n","sig":null,"attributes":[{"value":"/ No setting by this name exists.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":646691,"byte_end":646726,"line_start":170,"line_end":170,"column_start":5,"column_end":40}},{"value":"error(\"No existing setting named '{0}'\")","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":646731,"byte_end":646774,"line_start":171,"line_end":171,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8243},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":646938,"byte_end":646945,"line_start":176,"line_end":176,"column_start":5,"column_end":12},"name":"BadType","qualname":"::settings::SetError::BadType","value":"SetError::BadType","parent":{"krate":0,"index":8239},"children":[],"decl_id":null,"docs":" Type mismatch for setting (e.g., setting an enum setting as a bool).\n","sig":null,"attributes":[{"value":"/ Type mismatch for setting (e.g., setting an enum setting as a bool).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":646801,"byte_end":646873,"line_start":174,"line_end":174,"column_start":5,"column_end":77}},{"value":"error(\"Trying to set a setting with the wrong type\")","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":646878,"byte_end":646933,"line_start":175,"line_end":175,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8245},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":647065,"byte_end":647073,"line_start":180,"line_end":180,"column_start":5,"column_end":13},"name":"BadValue","qualname":"::settings::SetError::BadValue","value":"SetError::BadValue(String)","parent":{"krate":0,"index":8239},"children":[],"decl_id":null,"docs":" This is not a valid value for this setting.\n","sig":null,"attributes":[{"value":"/ This is not a valid value for this setting.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":646952,"byte_end":646999,"line_start":178,"line_end":178,"column_start":5,"column_end":52}},{"value":"error(\"Unexpected value for a setting, expected {0}\")","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":647004,"byte_end":647060,"line_start":179,"line_end":179,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":8239},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":646676,"byte_end":646684,"line_start":169,"line_end":169,"column_start":10,"column_end":18},"name":"SetError","qualname":"::settings::SetError","value":"SetError::{BadName, BadType, BadValue}","parent":null,"children":[{"krate":0,"index":8240},{"krate":0,"index":8243},{"krate":0,"index":8245}],"decl_id":null,"docs":" An error produced when changing a setting.\n","sig":null,"attributes":[{"value":"/ An error produced when changing a setting.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":646581,"byte_end":646627,"line_start":167,"line_end":167,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":2595},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":647142,"byte_end":647151,"line_start":184,"line_end":184,"column_start":10,"column_end":19},"name":"SetResult","qualname":"::settings::SetResult","value":"Result<T, SetError>","parent":null,"children":[],"decl_id":null,"docs":" A result returned when changing a setting.\n","sig":null,"attributes":[{"value":"/ A result returned when changing a setting.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":647086,"byte_end":647132,"line_start":183,"line_end":183,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":8263},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":647507,"byte_end":647520,"line_start":192,"line_end":192,"column_start":12,"column_end":25},"name":"PredicateView","qualname":"::settings::PredicateView","value":"","parent":null,"children":[],"decl_id":null,"docs":" A reference to just the boolean predicates of a settings object.","sig":null,"attributes":[{"value":"/ A reference to just the boolean predicates of a settings object.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":647179,"byte_end":647247,"line_start":186,"line_end":186,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":647248,"byte_end":647251,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ The settings objects themselves are generated and appear in the `isa/*/settings.rs` modules.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":647252,"byte_end":647348,"line_start":188,"line_end":188,"column_start":1,"column_end":97}},{"value":"/ Each settings object provides a `predicate_view()` method that makes it possible to query","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":647349,"byte_end":647442,"line_start":189,"line_end":189,"column_start":1,"column_end":94}},{"value":"/ ISA predicates by number.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":647443,"byte_end":647472,"line_start":190,"line_end":190,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2599},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":647739,"byte_end":647742,"line_start":198,"line_end":198,"column_start":12,"column_end":15},"name":"new","qualname":"<PredicateView>::new","value":"fn (bits: &'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new view of a precomputed predicate vector.","sig":null,"attributes":[{"value":"/ Create a new view of a precomputed predicate vector.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":647570,"byte_end":647626,"line_start":195,"line_end":195,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":647631,"byte_end":647634,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ See the `predicate_view()` method on the various `Flags` types defined for each ISA.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":647639,"byte_end":647727,"line_start":197,"line_end":197,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":2600},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":647851,"byte_end":647855,"line_start":203,"line_end":203,"column_start":12,"column_end":16},"name":"test","qualname":"<PredicateView>::test","value":"fn (self, p: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check a numbered predicate.\n","sig":null,"attributes":[{"value":"/ Check a numbered predicate.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":647808,"byte_end":647839,"line_start":202,"line_end":202,"column_start":5,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":2601},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":648118,"byte_end":648124,"line_start":212,"line_end":212,"column_start":9,"column_end":15},"name":"detail","qualname":"::settings::detail","value":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","parent":null,"children":[{"krate":0,"index":2602},{"krate":0,"index":2603},{"krate":0,"index":2604},{"krate":0,"index":2611},{"krate":0,"index":2614},{"krate":0,"index":2618},{"krate":0,"index":8272},{"krate":0,"index":8283},{"krate":0,"index":8282},{"krate":0,"index":2622}],"decl_id":null,"docs":" Implementation details for generated code.","sig":null,"attributes":[{"value":"/ Implementation details for generated code.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":647935,"byte_end":647981,"line_start":208,"line_end":208,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":647982,"byte_end":647985,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ This module holds definitions that need to be public so the can be instantiated by generated","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":647986,"byte_end":648082,"line_start":210,"line_end":210,"column_start":1,"column_end":97}},{"value":"/ code in other modules.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":648083,"byte_end":648109,"line_start":211,"line_end":211,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":2604},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":648231,"byte_end":648239,"line_start":217,"line_end":217,"column_start":16,"column_end":24},"name":"Template","qualname":"::settings::detail::Template","value":"Template { name, descriptors, enumerators, hash_table, defaults, presets }","parent":null,"children":[{"krate":0,"index":2605},{"krate":0,"index":2606},{"krate":0,"index":2607},{"krate":0,"index":2608},{"krate":0,"index":2609},{"krate":0,"index":2610}],"decl_id":null,"docs":" An instruction group template.\n","sig":null,"attributes":[{"value":"/ An instruction group template.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":648181,"byte_end":648215,"line_start":216,"line_end":216,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2605},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":648297,"byte_end":648301,"line_start":219,"line_end":219,"column_start":13,"column_end":17},"name":"name","qualname":"::settings::detail::Template::name","value":"&'static str","parent":{"krate":0,"index":2604},"children":[],"decl_id":null,"docs":" Name of the instruction group.\n","sig":null,"attributes":[{"value":"/ Name of the instruction group.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":648250,"byte_end":648284,"line_start":218,"line_end":218,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2606},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":648370,"byte_end":648381,"line_start":221,"line_end":221,"column_start":13,"column_end":24},"name":"descriptors","qualname":"::settings::detail::Template::descriptors","value":"&'static [settings::detail::Descriptor]","parent":{"krate":0,"index":2604},"children":[],"decl_id":null,"docs":" List of setting descriptors.\n","sig":null,"attributes":[{"value":"/ List of setting descriptors.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":648325,"byte_end":648357,"line_start":220,"line_end":220,"column_start":9,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2607},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":648456,"byte_end":648467,"line_start":223,"line_end":223,"column_start":13,"column_end":24},"name":"enumerators","qualname":"::settings::detail::Template::enumerators","value":"&'static [&'static str]","parent":{"krate":0,"index":2604},"children":[],"decl_id":null,"docs":" Union of all enumerators.\n","sig":null,"attributes":[{"value":"/ Union of all enumerators.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":648414,"byte_end":648443,"line_start":222,"line_end":222,"column_start":9,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":2608},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":648542,"byte_end":648552,"line_start":225,"line_end":225,"column_start":13,"column_end":23},"name":"hash_table","qualname":"::settings::detail::Template::hash_table","value":"&'static [u16]","parent":{"krate":0,"index":2604},"children":[],"decl_id":null,"docs":" Hash table of settings.\n","sig":null,"attributes":[{"value":"/ Hash table of settings.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":648502,"byte_end":648529,"line_start":224,"line_end":224,"column_start":9,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":2609},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":648610,"byte_end":648618,"line_start":227,"line_end":227,"column_start":13,"column_end":21},"name":"defaults","qualname":"::settings::detail::Template::defaults","value":"&'static [u8]","parent":{"krate":0,"index":2604},"children":[],"decl_id":null,"docs":" Default values.\n","sig":null,"attributes":[{"value":"/ Default values.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":648578,"byte_end":648597,"line_start":226,"line_end":226,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":2610},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":648695,"byte_end":648702,"line_start":229,"line_end":229,"column_start":13,"column_end":20},"name":"presets","qualname":"::settings::detail::Template::presets","value":"&'static [(u8, u8)]","parent":{"krate":0,"index":2604},"children":[],"decl_id":null,"docs":" Pairs of (mask, value) for presets.\n","sig":null,"attributes":[{"value":"/ Pairs of (mask, value) for presets.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":648643,"byte_end":648682,"line_start":228,"line_end":228,"column_start":9,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2612},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":648831,"byte_end":648836,"line_start":234,"line_end":234,"column_start":16,"column_end":21},"name":"enums","qualname":"<Template>::enums","value":"fn (&self, last: u8, enumerators: u16) -> &[&'static str]","parent":null,"children":[],"decl_id":null,"docs":" Get enumerators corresponding to a `Details::Enum`.\n","sig":null,"attributes":[{"value":"/ Get enumerators corresponding to a `Details::Enum`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":648760,"byte_end":648815,"line_start":233,"line_end":233,"column_start":9,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2613},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":649188,"byte_end":649205,"line_start":242,"line_end":242,"column_start":16,"column_end":33},"name":"format_toml_value","qualname":"<Template>::format_toml_value","value":"fn (&self, detail: Detail, byte: u8, f: &mut fmt::Formatter) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Format a setting value as a TOML string. This is mostly for use by the generated\n `Display` implementation.\n","sig":null,"attributes":[{"value":"/ Format a setting value as a TOML string. This is mostly for use by the generated","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":649050,"byte_end":649134,"line_start":240,"line_end":240,"column_start":9,"column_end":93}},{"value":"/ `Display` implementation.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":649143,"byte_end":649172,"line_start":241,"line_end":241,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":2618},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":650683,"byte_end":650693,"line_start":284,"line_end":284,"column_start":16,"column_end":26},"name":"Descriptor","qualname":"::settings::detail::Descriptor","value":"Descriptor { name, offset, detail }","parent":null,"children":[{"krate":0,"index":2619},{"krate":0,"index":2620},{"krate":0,"index":2621}],"decl_id":null,"docs":" A setting descriptor holds the information needed to generically set and print a setting.","sig":null,"attributes":[{"value":"/ A setting descriptor holds the information needed to generically set and print a setting.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":650485,"byte_end":650578,"line_start":281,"line_end":281,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":650583,"byte_end":650586,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Each settings group will be represented as a constant DESCRIPTORS array.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":650591,"byte_end":650667,"line_start":283,"line_end":283,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":2619},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":650773,"byte_end":650777,"line_start":286,"line_end":286,"column_start":13,"column_end":17},"name":"name","qualname":"::settings::detail::Descriptor::name","value":"&'static str","parent":{"krate":0,"index":2618},"children":[],"decl_id":null,"docs":" Lower snake-case name of setting as defined in meta.\n","sig":null,"attributes":[{"value":"/ Lower snake-case name of setting as defined in meta.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":650704,"byte_end":650760,"line_start":285,"line_end":285,"column_start":9,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":2620},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":650858,"byte_end":650864,"line_start":289,"line_end":289,"column_start":13,"column_end":19},"name":"offset","qualname":"::settings::detail::Descriptor::offset","value":"u32","parent":{"krate":0,"index":2618},"children":[],"decl_id":null,"docs":" Offset of byte containing this setting.\n","sig":null,"attributes":[{"value":"/ Offset of byte containing this setting.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":650802,"byte_end":650845,"line_start":288,"line_end":288,"column_start":9,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2621},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":650950,"byte_end":650956,"line_start":292,"line_end":292,"column_start":13,"column_end":19},"name":"detail","qualname":"::settings::detail::Descriptor::detail","value":"settings::detail::Detail","parent":{"krate":0,"index":2618},"children":[],"decl_id":null,"docs":" Additional details, depending on the kind of setting.\n","sig":null,"attributes":[{"value":"/ Additional details, depending on the kind of setting.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":650880,"byte_end":650937,"line_start":291,"line_end":291,"column_start":9,"column_end":66}}]},{"kind":"StructVariant","id":{"krate":0,"index":8273},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":651189,"byte_end":651193,"line_start":299,"line_end":299,"column_start":9,"column_end":13},"name":"Bool","qualname":"::settings::detail::Detail::Bool","value":"Detail::Bool { bit }","parent":{"krate":0,"index":8272},"children":[],"decl_id":null,"docs":" A boolean setting only uses one bit, numbered from LSB.\n","sig":null,"attributes":[{"value":"/ A boolean setting only uses one bit, numbered from LSB.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":651121,"byte_end":651180,"line_start":298,"line_end":298,"column_start":9,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8275},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":651311,"byte_end":651314,"line_start":305,"line_end":305,"column_start":9,"column_end":12},"name":"Num","qualname":"::settings::detail::Detail::Num","value":"Detail::Num","parent":{"krate":0,"index":8272},"children":[],"decl_id":null,"docs":" A numerical setting uses the whole byte.\n","sig":null,"attributes":[{"value":"/ A numerical setting uses the whole byte.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":651258,"byte_end":651302,"line_start":304,"line_end":304,"column_start":9,"column_end":53}}]},{"kind":"StructVariant","id":{"krate":0,"index":8277},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":651382,"byte_end":651386,"line_start":308,"line_end":308,"column_start":9,"column_end":13},"name":"Enum","qualname":"::settings::detail::Detail::Enum","value":"Detail::Enum { last, enumerators }","parent":{"krate":0,"index":8272},"children":[],"decl_id":null,"docs":" An Enum setting uses a range of enumerators.\n","sig":null,"attributes":[{"value":"/ An Enum setting uses a range of enumerators.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":651325,"byte_end":651373,"line_start":307,"line_end":307,"column_start":9,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8280},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":651790,"byte_end":651796,"line_start":319,"line_end":319,"column_start":9,"column_end":15},"name":"Preset","qualname":"::settings::detail::Detail::Preset","value":"Detail::Preset","parent":{"krate":0,"index":8272},"children":[],"decl_id":null,"docs":" A preset is not an individual setting, it is a collection of settings applied at once.","sig":null,"attributes":[{"value":"/ A preset is not an individual setting, it is a collection of settings applied at once.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":651605,"byte_end":651695,"line_start":316,"line_end":316,"column_start":9,"column_end":99}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":651704,"byte_end":651707,"line_start":317,"line_end":317,"column_start":9,"column_end":12}},{"value":"/ The `Descriptor::offset` field refers to the `PRESETS` table.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":651716,"byte_end":651781,"line_start":318,"line_end":318,"column_start":9,"column_end":74}}]},{"kind":"Enum","id":{"krate":0,"index":8272},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":651104,"byte_end":651110,"line_start":297,"line_end":297,"column_start":14,"column_end":20},"name":"Detail","qualname":"::settings::detail::Detail","value":"Detail::{Bool, Num, Enum, Preset}","parent":null,"children":[{"krate":0,"index":8273},{"krate":0,"index":8275},{"krate":0,"index":8277},{"krate":0,"index":8280}],"decl_id":null,"docs":" The different kind of settings along with descriptor bits that depend on the kind.\n","sig":null,"attributes":[{"value":"/ The different kind of settings along with descriptor bits that depend on the kind.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":650977,"byte_end":651063,"line_start":295,"line_end":295,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":2623},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":651997,"byte_end":652006,"line_start":325,"line_end":325,"column_start":16,"column_end":25},"name":"is_preset","qualname":"<Detail>::is_preset","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a detail is a Detail::Preset. Useful because the Descriptor\n offset field has a different meaning when the detail is a preset.\n","sig":null,"attributes":[{"value":"/ Check if a detail is a Detail::Preset. Useful because the Descriptor","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":651831,"byte_end":651903,"line_start":323,"line_end":323,"column_start":9,"column_end":81}},{"value":"/ offset field has a different meaning when the detail is a preset.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":651912,"byte_end":651981,"line_start":324,"line_end":324,"column_start":9,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":8332},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11377031,"byte_end":11377036,"line_start":3,"line_end":3,"column_start":12,"column_end":17},"name":"Flags","qualname":"::settings::Flags","value":"Flags {  }","parent":null,"children":[{"krate":0,"index":8333}],"decl_id":null,"docs":" Flags group `shared`.\n","sig":null,"attributes":[{"value":"/ Flags group `shared`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11376994,"byte_end":11377019,"line_start":2,"line_end":2,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":8286},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11377160,"byte_end":11377163,"line_start":9,"line_end":9,"column_start":12,"column_end":15},"name":"new","qualname":"<Flags>::new","value":"fn (builder: Builder) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create flags shared settings group.\n","sig":null,"attributes":[{"value":"/ Create flags shared settings group.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11377078,"byte_end":11377117,"line_start":7,"line_end":7,"column_start":5,"column_end":44}},{"value":"allow(unused_variables)","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11377122,"byte_end":11377148,"line_start":8,"line_end":8,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8338},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11377530,"byte_end":11377534,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"None","qualname":"::settings::OptLevel::None","value":"OptLevel::None","parent":{"krate":0,"index":8337},"children":[],"decl_id":null,"docs":" `none`.\n","sig":null,"attributes":[{"value":"/ `none`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11377514,"byte_end":11377525,"line_start":20,"line_end":20,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8340},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11377557,"byte_end":11377562,"line_start":23,"line_end":23,"column_start":5,"column_end":10},"name":"Speed","qualname":"::settings::OptLevel::Speed","value":"OptLevel::Speed","parent":{"krate":0,"index":8337},"children":[],"decl_id":null,"docs":" `speed`.\n","sig":null,"attributes":[{"value":"/ `speed`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11377540,"byte_end":11377552,"line_start":22,"line_end":22,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8342},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11377594,"byte_end":11377606,"line_start":25,"line_end":25,"column_start":5,"column_end":17},"name":"SpeedAndSize","qualname":"::settings::OptLevel::SpeedAndSize","value":"OptLevel::SpeedAndSize","parent":{"krate":0,"index":8337},"children":[],"decl_id":null,"docs":" `speed_and_size`.\n","sig":null,"attributes":[{"value":"/ `speed_and_size`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11377568,"byte_end":11377589,"line_start":24,"line_end":24,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":8337},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11377499,"byte_end":11377507,"line_start":19,"line_end":19,"column_start":10,"column_end":18},"name":"OptLevel","qualname":"::settings::OptLevel","value":"OptLevel::{None, Speed, SpeedAndSize}","parent":null,"children":[{"krate":0,"index":8338},{"krate":0,"index":8340},{"krate":0,"index":8342}],"decl_id":null,"docs":" Values for `shared.opt_level`.\n","sig":null,"attributes":[{"value":"/ Values for `shared.opt_level`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11377404,"byte_end":11377438,"line_start":17,"line_end":17,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8359},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11378327,"byte_end":11378337,"line_start":51,"line_end":51,"column_start":5,"column_end":15},"name":"IsaDefault","qualname":"::settings::LibcallCallConv::IsaDefault","value":"LibcallCallConv::IsaDefault","parent":{"krate":0,"index":8358},"children":[],"decl_id":null,"docs":" `isa_default`.\n","sig":null,"attributes":[{"value":"/ `isa_default`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11378304,"byte_end":11378322,"line_start":50,"line_end":50,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8361},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11378359,"byte_end":11378363,"line_start":53,"line_end":53,"column_start":5,"column_end":9},"name":"Fast","qualname":"::settings::LibcallCallConv::Fast","value":"LibcallCallConv::Fast","parent":{"krate":0,"index":8358},"children":[],"decl_id":null,"docs":" `fast`.\n","sig":null,"attributes":[{"value":"/ `fast`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11378343,"byte_end":11378354,"line_start":52,"line_end":52,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8363},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11378385,"byte_end":11378389,"line_start":55,"line_end":55,"column_start":5,"column_end":9},"name":"Cold","qualname":"::settings::LibcallCallConv::Cold","value":"LibcallCallConv::Cold","parent":{"krate":0,"index":8358},"children":[],"decl_id":null,"docs":" `cold`.\n","sig":null,"attributes":[{"value":"/ `cold`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11378369,"byte_end":11378380,"line_start":54,"line_end":54,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8365},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11378415,"byte_end":11378422,"line_start":57,"line_end":57,"column_start":5,"column_end":12},"name":"SystemV","qualname":"::settings::LibcallCallConv::SystemV","value":"LibcallCallConv::SystemV","parent":{"krate":0,"index":8358},"children":[],"decl_id":null,"docs":" `system_v`.\n","sig":null,"attributes":[{"value":"/ `system_v`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11378395,"byte_end":11378410,"line_start":56,"line_end":56,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8367},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11378456,"byte_end":11378471,"line_start":59,"line_end":59,"column_start":5,"column_end":20},"name":"WindowsFastcall","qualname":"::settings::LibcallCallConv::WindowsFastcall","value":"LibcallCallConv::WindowsFastcall","parent":{"krate":0,"index":8358},"children":[],"decl_id":null,"docs":" `windows_fastcall`.\n","sig":null,"attributes":[{"value":"/ `windows_fastcall`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11378428,"byte_end":11378451,"line_start":58,"line_end":58,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8369},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11378507,"byte_end":11378523,"line_start":61,"line_end":61,"column_start":5,"column_end":21},"name":"BaldrdashSystemV","qualname":"::settings::LibcallCallConv::BaldrdashSystemV","value":"LibcallCallConv::BaldrdashSystemV","parent":{"krate":0,"index":8358},"children":[],"decl_id":null,"docs":" `baldrdash_system_v`.\n","sig":null,"attributes":[{"value":"/ `baldrdash_system_v`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11378477,"byte_end":11378502,"line_start":60,"line_end":60,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8371},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11378558,"byte_end":11378574,"line_start":63,"line_end":63,"column_start":5,"column_end":21},"name":"BaldrdashWindows","qualname":"::settings::LibcallCallConv::BaldrdashWindows","value":"LibcallCallConv::BaldrdashWindows","parent":{"krate":0,"index":8358},"children":[],"decl_id":null,"docs":" `baldrdash_windows`.\n","sig":null,"attributes":[{"value":"/ `baldrdash_windows`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11378529,"byte_end":11378553,"line_start":62,"line_end":62,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8373},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11378602,"byte_end":11378612,"line_start":65,"line_end":65,"column_start":5,"column_end":15},"name":"Probestack","qualname":"::settings::LibcallCallConv::Probestack","value":"LibcallCallConv::Probestack","parent":{"krate":0,"index":8358},"children":[],"decl_id":null,"docs":" `probestack`.\n","sig":null,"attributes":[{"value":"/ `probestack`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11378580,"byte_end":11378597,"line_start":64,"line_end":64,"column_start":5,"column_end":22}}]},{"kind":"Enum","id":{"krate":0,"index":8358},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11378282,"byte_end":11378297,"line_start":49,"line_end":49,"column_start":10,"column_end":25},"name":"LibcallCallConv","qualname":"::settings::LibcallCallConv","value":"LibcallCallConv::{IsaDefault, Fast, Cold, SystemV, WindowsFastcall, BaldrdashSystemV, BaldrdashWindows, Probestack}","parent":null,"children":[{"krate":0,"index":8359},{"krate":0,"index":8361},{"krate":0,"index":8363},{"krate":0,"index":8365},{"krate":0,"index":8367},{"krate":0,"index":8369},{"krate":0,"index":8371},{"krate":0,"index":8373}],"decl_id":null,"docs":" Values for `shared.libcall_call_conv`.\n","sig":null,"attributes":[{"value":"/ Values for `shared.libcall_call_conv`.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11378179,"byte_end":11378221,"line_start":47,"line_end":47,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":8299},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11379848,"byte_end":11379862,"line_start":101,"line_end":101,"column_start":12,"column_end":26},"name":"predicate_view","qualname":"<Flags>::predicate_view","value":"fn (&self) -> crate::settings::PredicateView","parent":null,"children":[],"decl_id":null,"docs":" Get a view of the boolean predicates.\n","sig":null,"attributes":[{"value":"/ Get a view of the boolean predicates.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11379795,"byte_end":11379836,"line_start":100,"line_end":100,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":8301},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11380410,"byte_end":11380419,"line_start":114,"line_end":114,"column_start":12,"column_end":21},"name":"opt_level","qualname":"<Flags>::opt_level","value":"fn (&self) -> OptLevel","parent":null,"children":[],"decl_id":null,"docs":" Optimization level:","sig":null,"attributes":[{"value":"/ Optimization level:","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11380132,"byte_end":11380155,"line_start":108,"line_end":108,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11380160,"byte_end":11380163,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ - none: Minimise compile time by disabling most optimizations.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11380168,"byte_end":11380234,"line_start":110,"line_end":110,"column_start":5,"column_end":71}},{"value":"/ - speed: Generate the fastest possible code","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11380239,"byte_end":11380286,"line_start":111,"line_end":111,"column_start":5,"column_end":52}},{"value":"/ - speed_and_size: like \"speed\", but also perform transformations","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11380291,"byte_end":11380359,"line_start":112,"line_end":112,"column_start":5,"column_end":73}},{"value":"/   aimed at reducing code size.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11380364,"byte_end":11380398,"line_start":113,"line_end":113,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":8302},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11381171,"byte_end":11381188,"line_start":138,"line_end":138,"column_start":12,"column_end":29},"name":"libcall_call_conv","qualname":"<Flags>::libcall_call_conv","value":"fn (&self) -> LibcallCallConv","parent":null,"children":[],"decl_id":null,"docs":" Defines the calling convention to use for LibCalls call expansion,\n since it may be different from the ISA default calling convention.","sig":null,"attributes":[{"value":"/ Defines the calling convention to use for LibCalls call expansion,","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11380770,"byte_end":11380840,"line_start":130,"line_end":130,"column_start":5,"column_end":75}},{"value":"/ since it may be different from the ISA default calling convention.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11380845,"byte_end":11380915,"line_start":131,"line_end":131,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11380920,"byte_end":11380923,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ The default value is to use the same calling convention as the ISA","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11380928,"byte_end":11380998,"line_start":133,"line_end":133,"column_start":5,"column_end":75}},{"value":"/ default calling convention.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11381003,"byte_end":11381034,"line_start":134,"line_end":134,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11381039,"byte_end":11381042,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ This list should be kept in sync with the list of calling","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11381047,"byte_end":11381108,"line_start":136,"line_end":136,"column_start":5,"column_end":66}},{"value":"/ conventions available in isa/call_conv.rs.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11381113,"byte_end":11381159,"line_start":137,"line_end":137,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":8303},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11382512,"byte_end":11382536,"line_start":179,"line_end":179,"column_start":12,"column_end":36},"name":"baldrdash_prologue_words","qualname":"<Flags>::baldrdash_prologue_words","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Number of pointer-sized words pushed by the baldrdash prologue.","sig":null,"attributes":[{"value":"/ Number of pointer-sized words pushed by the baldrdash prologue.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11381963,"byte_end":11382030,"line_start":169,"line_end":169,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11382035,"byte_end":11382038,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Functions with the `baldrdash` calling convention don't generate their","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11382043,"byte_end":11382117,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ own prologue and epilogue. They depend on externally generated code","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11382122,"byte_end":11382193,"line_start":172,"line_end":172,"column_start":5,"column_end":76}},{"value":"/ that pushes a fixed number of words in the prologue and restores them","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11382198,"byte_end":11382271,"line_start":173,"line_end":173,"column_start":5,"column_end":78}},{"value":"/ in the epilogue.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11382276,"byte_end":11382296,"line_start":174,"line_end":174,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11382301,"byte_end":11382304,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ This setting configures the number of pointer-sized words pushed on the","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11382309,"byte_end":11382384,"line_start":176,"line_end":176,"column_start":5,"column_end":80}},{"value":"/ stack when the Cranelift-generated code is entered. This includes the","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11382389,"byte_end":11382462,"line_start":177,"line_end":177,"column_start":5,"column_end":78}},{"value":"/ pushed return address on x86.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11382467,"byte_end":11382500,"line_start":178,"line_end":178,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":8304},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11382846,"byte_end":11382866,"line_start":188,"line_end":188,"column_start":12,"column_end":32},"name":"probestack_size_log2","qualname":"<Flags>::probestack_size_log2","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The log2 of the size of the stack guard region.","sig":null,"attributes":[{"value":"/ The log2 of the size of the stack guard region.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11382584,"byte_end":11382635,"line_start":182,"line_end":182,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11382640,"byte_end":11382643,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Stack frames larger than this size will have stack overflow checked","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11382648,"byte_end":11382719,"line_start":184,"line_end":184,"column_start":5,"column_end":76}},{"value":"/ by calling the probestack function.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11382724,"byte_end":11382763,"line_start":185,"line_end":185,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11382768,"byte_end":11382771,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ The default is 12, which translates to a size of 4096.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11382776,"byte_end":11382834,"line_start":187,"line_end":187,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":8305},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11383154,"byte_end":11383169,"line_start":195,"line_end":195,"column_start":12,"column_end":27},"name":"enable_verifier","qualname":"<Flags>::enable_verifier","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Run the Cranelift IR verifier at strategic times during compilation.","sig":null,"attributes":[{"value":"/ Run the Cranelift IR verifier at strategic times during compilation.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11382914,"byte_end":11382986,"line_start":191,"line_end":191,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11382991,"byte_end":11382994,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This makes compilation slower but catches many bugs. The verifier is always enabled by","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11382999,"byte_end":11383089,"line_start":193,"line_end":193,"column_start":5,"column_end":95}},{"value":"/ default, which is useful during development.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11383094,"byte_end":11383142,"line_start":194,"line_end":194,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":8306},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11383291,"byte_end":11383297,"line_start":199,"line_end":199,"column_start":12,"column_end":18},"name":"is_pic","qualname":"<Flags>::is_pic","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Enable Position-Independent Code generation\n","sig":null,"attributes":[{"value":"/ Enable Position-Independent Code generation","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11383232,"byte_end":11383279,"line_start":198,"line_end":198,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":8307},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11383613,"byte_end":11383635,"line_start":207,"line_end":207,"column_start":12,"column_end":34},"name":"use_colocated_libcalls","qualname":"<Flags>::use_colocated_libcalls","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Use colocated libcalls.","sig":null,"attributes":[{"value":"/ Use colocated libcalls.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11383360,"byte_end":11383387,"line_start":202,"line_end":202,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11383392,"byte_end":11383395,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Generate code that assumes that libcalls can be declared \"colocated\",","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11383400,"byte_end":11383473,"line_start":204,"line_end":204,"column_start":5,"column_end":78}},{"value":"/ meaning they will be defined along with the current function, such that","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11383478,"byte_end":11383553,"line_start":205,"line_end":205,"column_start":5,"column_end":80}},{"value":"/ they can use more efficient addressing.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11383558,"byte_end":11383601,"line_start":206,"line_end":206,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":8308},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11384127,"byte_end":11384142,"line_start":218,"line_end":218,"column_start":12,"column_end":27},"name":"avoid_div_traps","qualname":"<Flags>::avoid_div_traps","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Generate explicit checks around native division instructions to avoid\n their trapping.","sig":null,"attributes":[{"value":"/ Generate explicit checks around native division instructions to avoid","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11383698,"byte_end":11383771,"line_start":210,"line_end":210,"column_start":5,"column_end":78}},{"value":"/ their trapping.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11383776,"byte_end":11383795,"line_start":211,"line_end":211,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11383800,"byte_end":11383803,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ This is primarily used by SpiderMonkey which doesn't install a signal","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11383808,"byte_end":11383881,"line_start":213,"line_end":213,"column_start":5,"column_end":78}},{"value":"/ handler for SIGFPE, but expects a SIGILL trap for division by zero.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11383886,"byte_end":11383957,"line_start":214,"line_end":214,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11383962,"byte_end":11383965,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ On ISAs like ARM where the native division instructions don't trap,","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11383970,"byte_end":11384041,"line_start":216,"line_end":216,"column_start":5,"column_end":76}},{"value":"/ this setting has no effect - explicit checks are always inserted.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11384046,"byte_end":11384115,"line_start":217,"line_end":217,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":8309},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11384351,"byte_end":11384363,"line_start":224,"line_end":224,"column_start":12,"column_end":24},"name":"enable_float","qualname":"<Flags>::enable_float","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Enable the use of floating-point instructions","sig":null,"attributes":[{"value":"/ Enable the use of floating-point instructions","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11384205,"byte_end":11384254,"line_start":221,"line_end":221,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11384259,"byte_end":11384262,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Disabling use of floating-point instructions is not yet implemented.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11384267,"byte_end":11384339,"line_start":223,"line_end":223,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":8310},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11384698,"byte_end":11384725,"line_start":232,"line_end":232,"column_start":12,"column_end":39},"name":"enable_nan_canonicalization","qualname":"<Flags>::enable_nan_canonicalization","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Enable NaN canonicalization","sig":null,"attributes":[{"value":"/ Enable NaN canonicalization","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11384426,"byte_end":11384457,"line_start":227,"line_end":227,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11384462,"byte_end":11384465,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This replaces NaNs with a single canonical value, for users requiring","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11384470,"byte_end":11384543,"line_start":229,"line_end":229,"column_start":5,"column_end":78}},{"value":"/ entirely deterministic WebAssembly computation. This is not required","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11384548,"byte_end":11384620,"line_start":230,"line_end":230,"column_start":5,"column_end":77}},{"value":"/ by the WebAssembly spec, so it is not enabled by default.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11384625,"byte_end":11384686,"line_start":231,"line_end":231,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":8311},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11385092,"byte_end":11385109,"line_start":240,"line_end":240,"column_start":12,"column_end":29},"name":"enable_pinned_reg","qualname":"<Flags>::enable_pinned_reg","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Enable the use of the pinned register.","sig":null,"attributes":[{"value":"/ Enable the use of the pinned register.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11384788,"byte_end":11384830,"line_start":235,"line_end":235,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11384835,"byte_end":11384838,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ This register is excluded from register allocation, and is completely under the control of","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11384843,"byte_end":11384937,"line_start":237,"line_end":237,"column_start":5,"column_end":99}},{"value":"/ the end-user. It is possible to read it via the get_pinned_reg instruction, and to set it","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11384942,"byte_end":11385035,"line_start":238,"line_end":238,"column_start":5,"column_end":98}},{"value":"/ with the set_pinned_reg instruction.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11385040,"byte_end":11385080,"line_start":239,"line_end":239,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":8312},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11385778,"byte_end":11385805,"line_start":252,"line_end":252,"column_start":12,"column_end":39},"name":"use_pinned_reg_as_heap_base","qualname":"<Flags>::use_pinned_reg_as_heap_base","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Use the pinned register as the heap base.","sig":null,"attributes":[{"value":"/ Use the pinned register as the heap base.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11385172,"byte_end":11385217,"line_start":243,"line_end":243,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11385222,"byte_end":11385225,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Enabling this requires the enable_pinned_reg setting to be set to true. It enables a custom","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11385230,"byte_end":11385325,"line_start":245,"line_end":245,"column_start":5,"column_end":100}},{"value":"/ legalization of the `heap_addr` instruction so it will use the pinned register as the heap","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11385330,"byte_end":11385424,"line_start":246,"line_end":246,"column_start":5,"column_end":99}},{"value":"/ base, instead of fetching it from a global value.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11385429,"byte_end":11385482,"line_start":247,"line_end":247,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11385487,"byte_end":11385490,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Warning! Enabling this means that the pinned register *must* be maintained to contain the","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11385495,"byte_end":11385588,"line_start":249,"line_end":249,"column_start":5,"column_end":98}},{"value":"/ heap base address at all times, during the lifetime of a function. Using the pinned","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11385593,"byte_end":11385680,"line_start":250,"line_end":250,"column_start":5,"column_end":92}},{"value":"/ register for other purposes when this is set is very likely to cause crashes.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11385685,"byte_end":11385766,"line_start":251,"line_end":251,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":8313},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11385920,"byte_end":11385931,"line_start":256,"line_end":256,"column_start":12,"column_end":23},"name":"enable_simd","qualname":"<Flags>::enable_simd","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Enable the use of SIMD instructions.\n","sig":null,"attributes":[{"value":"/ Enable the use of SIMD instructions.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11385868,"byte_end":11385908,"line_start":255,"line_end":255,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":8314},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11386047,"byte_end":11386061,"line_start":260,"line_end":260,"column_start":12,"column_end":26},"name":"enable_atomics","qualname":"<Flags>::enable_atomics","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Enable the use of atomic instructions\n","sig":null,"attributes":[{"value":"/ Enable the use of atomic instructions","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11385994,"byte_end":11386035,"line_start":259,"line_end":259,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":8315},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11386406,"byte_end":11386423,"line_start":268,"line_end":268,"column_start":12,"column_end":29},"name":"enable_safepoints","qualname":"<Flags>::enable_safepoints","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Enable safepoint instruction insertions.","sig":null,"attributes":[{"value":"/ Enable safepoint instruction insertions.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11386124,"byte_end":11386168,"line_start":263,"line_end":263,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11386173,"byte_end":11386176,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ This will allow the emit_stackmaps() function to insert the safepoint","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11386181,"byte_end":11386254,"line_start":265,"line_end":265,"column_start":5,"column_end":78}},{"value":"/ instruction on top of calls and interrupt traps in order to display the","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11386259,"byte_end":11386334,"line_start":266,"line_end":266,"column_start":5,"column_end":80}},{"value":"/ live reference values at that point in the program.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11386339,"byte_end":11386394,"line_start":267,"line_end":267,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8316},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11386570,"byte_end":11386593,"line_start":272,"line_end":272,"column_start":12,"column_end":35},"name":"emit_all_ones_funcaddrs","qualname":"<Flags>::emit_all_ones_funcaddrs","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Emit not-yet-relocated function addresses as all-ones bit patterns.\n","sig":null,"attributes":[{"value":"/ Emit not-yet-relocated function addresses as all-ones bit patterns.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11386487,"byte_end":11386558,"line_start":271,"line_end":271,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":8317},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11386770,"byte_end":11386787,"line_start":277,"line_end":277,"column_start":12,"column_end":29},"name":"enable_probestack","qualname":"<Flags>::enable_probestack","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Enable the use of stack probes, for calling conventions which support this\n functionality.\n","sig":null,"attributes":[{"value":"/ Enable the use of stack probes, for calling conventions which support this","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11386657,"byte_end":11386735,"line_start":275,"line_end":275,"column_start":5,"column_end":83}},{"value":"/ functionality.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11386740,"byte_end":11386758,"line_start":276,"line_end":276,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":8318},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11386954,"byte_end":11386980,"line_start":282,"line_end":282,"column_start":12,"column_end":38},"name":"probestack_func_adjusts_sp","qualname":"<Flags>::probestack_func_adjusts_sp","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Set this to true of the stack probe function modifies the stack pointer\n itself.\n","sig":null,"attributes":[{"value":"/ Set this to true of the stack probe function modifies the stack pointer","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11386851,"byte_end":11386926,"line_start":280,"line_end":280,"column_start":5,"column_end":80}},{"value":"/ itself.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11386931,"byte_end":11386942,"line_start":281,"line_end":281,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":8319},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11387116,"byte_end":11387134,"line_start":286,"line_end":286,"column_start":12,"column_end":30},"name":"enable_jump_tables","qualname":"<Flags>::enable_jump_tables","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Enable the use of jump tables in generated machine code.\n","sig":null,"attributes":[{"value":"/ Enable the use of jump tables in generated machine code.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11387044,"byte_end":11387104,"line_start":285,"line_end":285,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":8329},"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11390761,"byte_end":11390768,"line_start":445,"line_end":445,"column_start":8,"column_end":15},"name":"builder","qualname":"::settings::builder","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Create a `settings::Builder` for the shared settings group.\n","sig":null,"attributes":[{"value":"/ Create a `settings::Builder` for the shared settings group.","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11390690,"byte_end":11390753,"line_start":444,"line_end":444,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":8389},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":652705,"byte_end":652715,"line_start":344,"line_end":344,"column_start":12,"column_end":22},"name":"FlagsOrIsa","qualname":"::settings::FlagsOrIsa","value":"FlagsOrIsa { flags, isa }","parent":null,"children":[{"krate":0,"index":8391},{"krate":0,"index":8392}],"decl_id":null,"docs":" Wrapper containing flags and optionally a `TargetIsa` trait object.","sig":null,"attributes":[{"value":"/ Wrapper containing flags and optionally a `TargetIsa` trait object.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":652409,"byte_end":652480,"line_start":339,"line_end":339,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":652481,"byte_end":652484,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ A few passes need to access the flags but only optionally a target ISA. The `FlagsOrIsa`","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":652485,"byte_end":652577,"line_start":341,"line_end":341,"column_start":1,"column_end":93}},{"value":"/ wrapper can be used to pass either, and extract the flags so they are always accessible.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":652578,"byte_end":652670,"line_start":342,"line_end":342,"column_start":1,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":8391},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":652764,"byte_end":652769,"line_start":346,"line_end":346,"column_start":9,"column_end":14},"name":"flags","qualname":"::settings::FlagsOrIsa::flags","value":"&'a settings::Flags","parent":{"krate":0,"index":8389},"children":[],"decl_id":null,"docs":" Flags are always present.\n","sig":null,"attributes":[{"value":"/ Flags are always present.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":652726,"byte_end":652755,"line_start":345,"line_end":345,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":8392},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":652827,"byte_end":652830,"line_start":349,"line_end":349,"column_start":9,"column_end":12},"name":"isa","qualname":"::settings::FlagsOrIsa::isa","value":"core::option::Option<&'a (dyn isa::TargetIsa + 'a)>","parent":{"krate":0,"index":8389},"children":[],"decl_id":null,"docs":" The ISA may not be present.\n","sig":null,"attributes":[{"value":"/ The ISA may not be present.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":652787,"byte_end":652818,"line_start":348,"line_end":348,"column_start":5,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":2630},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"timing","qualname":"::timing","value":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","parent":null,"children":[{"krate":0,"index":2631},{"krate":0,"index":2632},{"krate":0,"index":2637},{"krate":0,"index":8433},{"krate":0,"index":8509},{"krate":0,"index":8508},{"krate":0,"index":8506},{"krate":0,"index":8503},{"krate":0,"index":8504},{"krate":0,"index":8500},{"krate":0,"index":8501},{"krate":0,"index":8398},{"krate":0,"index":8399},{"krate":0,"index":8401},{"krate":0,"index":8402},{"krate":0,"index":8403},{"krate":0,"index":8404},{"krate":0,"index":8405},{"krate":0,"index":8406},{"krate":0,"index":8407},{"krate":0,"index":8408},{"krate":0,"index":8409},{"krate":0,"index":8410},{"krate":0,"index":8411},{"krate":0,"index":8412},{"krate":0,"index":8413},{"krate":0,"index":8414},{"krate":0,"index":8415},{"krate":0,"index":8416},{"krate":0,"index":8417},{"krate":0,"index":8418},{"krate":0,"index":8419},{"krate":0,"index":8420},{"krate":0,"index":8421},{"krate":0,"index":8422},{"krate":0,"index":8423},{"krate":0,"index":8424},{"krate":0,"index":8425},{"krate":0,"index":8426},{"krate":0,"index":8427},{"krate":0,"index":8428},{"krate":0,"index":8429},{"krate":0,"index":8430},{"krate":0,"index":8431},{"krate":0,"index":8432},{"krate":0,"index":2638},{"krate":0,"index":2640},{"krate":0,"index":2642}],"decl_id":null,"docs":" Pass timing.","sig":null,"attributes":[{"value":"! Pass timing.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":655681,"byte_end":655697,"line_start":1,"line_end":1,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":655698,"byte_end":655701,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This modules provides facilities for timing the execution of individual compilation passes.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":655702,"byte_end":655797,"line_start":3,"line_end":3,"column_start":1,"column_end":96}}]},{"kind":"Function","id":{"krate":0,"index":8401},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":656983,"byte_end":656995,"line_start":43,"line_end":43,"column_start":5,"column_end":17},"name":"process_file","qualname":"::timing::process_file","value":"fn () -> TimingToken","parent":null,"children":[],"decl_id":null,"docs":"Processing test file\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8402},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":657025,"byte_end":657035,"line_start":44,"line_end":44,"column_start":5,"column_end":15},"name":"parse_text","qualname":"::timing::parse_text","value":"fn () -> TimingToken","parent":null,"children":[],"decl_id":null,"docs":"Parsing textual Cranelift IR\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8403},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":657073,"byte_end":657094,"line_start":45,"line_end":45,"column_start":5,"column_end":26},"name":"wasm_translate_module","qualname":"::timing::wasm_translate_module","value":"fn () -> TimingToken","parent":null,"children":[],"decl_id":null,"docs":"Translate WASM module\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8404},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":657125,"byte_end":657148,"line_start":46,"line_end":46,"column_start":5,"column_end":28},"name":"wasm_translate_function","qualname":"::timing::wasm_translate_function","value":"fn () -> TimingToken","parent":null,"children":[],"decl_id":null,"docs":"Translate WASM function\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8405},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":657182,"byte_end":657190,"line_start":48,"line_end":48,"column_start":5,"column_end":13},"name":"verifier","qualname":"::timing::verifier","value":"fn () -> TimingToken","parent":null,"children":[],"decl_id":null,"docs":"Verify Cranelift IR\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8406},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":657219,"byte_end":657230,"line_start":49,"line_end":49,"column_start":5,"column_end":16},"name":"verify_cssa","qualname":"::timing::verify_cssa","value":"fn () -> TimingToken","parent":null,"children":[],"decl_id":null,"docs":"Verify CSSA\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8407},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":657251,"byte_end":657266,"line_start":50,"line_end":50,"column_start":5,"column_end":20},"name":"verify_liveness","qualname":"::timing::verify_liveness","value":"fn () -> TimingToken","parent":null,"children":[],"decl_id":null,"docs":"Verify live ranges\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8408},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":657294,"byte_end":657310,"line_start":51,"line_end":51,"column_start":5,"column_end":21},"name":"verify_locations","qualname":"::timing::verify_locations","value":"fn () -> TimingToken","parent":null,"children":[],"decl_id":null,"docs":"Verify value locations\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8409},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":657342,"byte_end":657354,"line_start":52,"line_end":52,"column_start":5,"column_end":17},"name":"verify_flags","qualname":"::timing::verify_flags","value":"fn () -> TimingToken","parent":null,"children":[],"decl_id":null,"docs":"Verify CPU flags\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8410},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":657381,"byte_end":657388,"line_start":54,"line_end":54,"column_start":5,"column_end":12},"name":"compile","qualname":"::timing::compile","value":"fn () -> TimingToken","parent":null,"children":[],"decl_id":null,"docs":"Compilation passes\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8411},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":657416,"byte_end":657425,"line_start":55,"line_end":55,"column_start":5,"column_end":14},"name":"flowgraph","qualname":"::timing::flowgraph","value":"fn () -> TimingToken","parent":null,"children":[],"decl_id":null,"docs":"Control flow graph\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8412},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":657453,"byte_end":657460,"line_start":56,"line_end":56,"column_start":5,"column_end":12},"name":"domtree","qualname":"::timing::domtree","value":"fn () -> TimingToken","parent":null,"children":[],"decl_id":null,"docs":"Dominator tree\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8413},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":657484,"byte_end":657497,"line_start":57,"line_end":57,"column_start":5,"column_end":18},"name":"loop_analysis","qualname":"::timing::loop_analysis","value":"fn () -> TimingToken","parent":null,"children":[],"decl_id":null,"docs":"Loop analysis\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8414},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":657520,"byte_end":657527,"line_start":58,"line_end":58,"column_start":5,"column_end":12},"name":"postopt","qualname":"::timing::postopt","value":"fn () -> TimingToken","parent":null,"children":[],"decl_id":null,"docs":"Post-legalization rewriting\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8415},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":657564,"byte_end":657570,"line_start":59,"line_end":59,"column_start":5,"column_end":11},"name":"preopt","qualname":"::timing::preopt","value":"fn () -> TimingToken","parent":null,"children":[],"decl_id":null,"docs":"Pre-legalization rewriting\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8416},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":657606,"byte_end":657609,"line_start":60,"line_end":60,"column_start":5,"column_end":8},"name":"dce","qualname":"::timing::dce","value":"fn () -> TimingToken","parent":null,"children":[],"decl_id":null,"docs":"Dead code elimination\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8417},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":657640,"byte_end":657648,"line_start":61,"line_end":61,"column_start":5,"column_end":13},"name":"legalize","qualname":"::timing::legalize","value":"fn () -> TimingToken","parent":null,"children":[],"decl_id":null,"docs":"Legalization\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8418},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":657670,"byte_end":657673,"line_start":62,"line_end":62,"column_start":5,"column_end":8},"name":"gvn","qualname":"::timing::gvn","value":"fn () -> TimingToken","parent":null,"children":[],"decl_id":null,"docs":"Global value numbering\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8419},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":657705,"byte_end":657709,"line_start":63,"line_end":63,"column_start":5,"column_end":9},"name":"licm","qualname":"::timing::licm","value":"fn () -> TimingToken","parent":null,"children":[],"decl_id":null,"docs":"Loop invariant code motion\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8420},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":657745,"byte_end":657761,"line_start":64,"line_end":64,"column_start":5,"column_end":21},"name":"unreachable_code","qualname":"::timing::unreachable_code","value":"fn () -> TimingToken","parent":null,"children":[],"decl_id":null,"docs":"Remove unreachable blocks\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8421},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":657797,"byte_end":657805,"line_start":66,"line_end":66,"column_start":5,"column_end":13},"name":"regalloc","qualname":"::timing::regalloc","value":"fn () -> TimingToken","parent":null,"children":[],"decl_id":null,"docs":"Register allocation\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8422},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":657834,"byte_end":657845,"line_start":67,"line_end":67,"column_start":5,"column_end":16},"name":"ra_liveness","qualname":"::timing::ra_liveness","value":"fn () -> TimingToken","parent":null,"children":[],"decl_id":null,"docs":"RA liveness analysis\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8423},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":657875,"byte_end":657882,"line_start":68,"line_end":68,"column_start":5,"column_end":12},"name":"ra_cssa","qualname":"::timing::ra_cssa","value":"fn () -> TimingToken","parent":null,"children":[],"decl_id":null,"docs":"RA coalescing CSSA\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8424},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":657910,"byte_end":657921,"line_start":69,"line_end":69,"column_start":5,"column_end":16},"name":"ra_spilling","qualname":"::timing::ra_spilling","value":"fn () -> TimingToken","parent":null,"children":[],"decl_id":null,"docs":"RA spilling\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8425},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":657942,"byte_end":657951,"line_start":70,"line_end":70,"column_start":5,"column_end":14},"name":"ra_reload","qualname":"::timing::ra_reload","value":"fn () -> TimingToken","parent":null,"children":[],"decl_id":null,"docs":"RA reloading\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8426},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":657973,"byte_end":657984,"line_start":71,"line_end":71,"column_start":5,"column_end":16},"name":"ra_coloring","qualname":"::timing::ra_coloring","value":"fn () -> TimingToken","parent":null,"children":[],"decl_id":null,"docs":"RA coloring\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8427},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":658006,"byte_end":658023,"line_start":73,"line_end":73,"column_start":5,"column_end":22},"name":"prologue_epilogue","qualname":"::timing::prologue_epilogue","value":"fn () -> TimingToken","parent":null,"children":[],"decl_id":null,"docs":"Prologue/epilogue insertion\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8428},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":658060,"byte_end":658079,"line_start":74,"line_end":74,"column_start":5,"column_end":24},"name":"shrink_instructions","qualname":"::timing::shrink_instructions","value":"fn () -> TimingToken","parent":null,"children":[],"decl_id":null,"docs":"Instruction encoding shrinking\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8429},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":658119,"byte_end":658133,"line_start":75,"line_end":75,"column_start":5,"column_end":19},"name":"relax_branches","qualname":"::timing::relax_branches","value":"fn () -> TimingToken","parent":null,"children":[],"decl_id":null,"docs":"Branch relaxation\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8430},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":658160,"byte_end":658167,"line_start":76,"line_end":76,"column_start":5,"column_end":12},"name":"binemit","qualname":"::timing::binemit","value":"fn () -> TimingToken","parent":null,"children":[],"decl_id":null,"docs":"Binary machine code emission\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8431},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":658205,"byte_end":658220,"line_start":77,"line_end":77,"column_start":5,"column_end":20},"name":"layout_renumber","qualname":"::timing::layout_renumber","value":"fn () -> TimingToken","parent":null,"children":[],"decl_id":null,"docs":"Layout full renumbering\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8432},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":658254,"byte_end":658271,"line_start":79,"line_end":79,"column_start":5,"column_end":22},"name":"canonicalize_nans","qualname":"::timing::canonicalize_nans","value":"fn () -> TimingToken","parent":null,"children":[],"decl_id":null,"docs":"Canonicalization of NaNs\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2656},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":659450,"byte_end":659461,"line_start":116,"line_end":116,"column_start":16,"column_end":27},"name":"TimingToken","qualname":"::timing::details::TimingToken","value":"TimingToken {  }","parent":null,"children":[{"krate":0,"index":2657},{"krate":0,"index":2658},{"krate":0,"index":2659}],"decl_id":null,"docs":" A timing token is responsible for timing the currently running pass. Timing starts when it\n is created and ends when it is dropped.","sig":null,"attributes":[{"value":"/ A timing token is responsible for timing the currently running pass. Timing starts when it","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":659164,"byte_end":659258,"line_start":111,"line_end":111,"column_start":5,"column_end":99}},{"value":"/ is created and ends when it is dropped.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":659263,"byte_end":659306,"line_start":112,"line_end":112,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":659311,"byte_end":659314,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Multiple passes can be active at the same time, but they must be started and stopped in a","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":659319,"byte_end":659412,"line_start":114,"line_end":114,"column_start":5,"column_end":98}},{"value":"/ LIFO fashion.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":659417,"byte_end":659434,"line_start":115,"line_end":115,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2660},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":660054,"byte_end":660063,"line_start":138,"line_end":138,"column_start":16,"column_end":25},"name":"PassTimes","qualname":"::timing::details::PassTimes","value":"PassTimes {  }","parent":null,"children":[{"krate":0,"index":2661}],"decl_id":null,"docs":" Accumulated timing for all passes.\n","sig":null,"attributes":[{"value":"/ Accumulated timing for all passes.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":660000,"byte_end":660038,"line_start":137,"line_end":137,"column_start":5,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":2675},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":663030,"byte_end":663042,"line_start":216,"line_end":216,"column_start":12,"column_end":24},"name":"take_current","qualname":"::timing::details::take_current","value":"fn () -> PassTimes","parent":null,"children":[],"decl_id":null,"docs":" Take the current accumulated pass timings and reset the timings for the current thread.\n","sig":null,"attributes":[{"value":"/ Take the current accumulated pass timings and reset the timings for the current thread.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":662927,"byte_end":663018,"line_start":215,"line_end":215,"column_start":5,"column_end":96}}]},{"kind":"Function","id":{"krate":0,"index":2677},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":663236,"byte_end":663250,"line_start":221,"line_end":221,"column_start":12,"column_end":26},"name":"add_to_current","qualname":"::timing::details::add_to_current","value":"fn (times: &PassTimes) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add `timings` to the accumulated timings for the current thread.\n","sig":null,"attributes":[{"value":"/ Add `timings` to the accumulated timings for the current thread.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":663156,"byte_end":663224,"line_start":220,"line_end":220,"column_start":5,"column_end":73}}]},{"kind":"Mod","id":{"krate":0,"index":2679},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"verifier","qualname":"::verifier","value":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","parent":null,"children":[{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2682},{"krate":0,"index":2683},{"krate":0,"index":2684},{"krate":0,"index":2687},{"krate":0,"index":2688},{"krate":0,"index":2689},{"krate":0,"index":2694},{"krate":0,"index":2713},{"krate":0,"index":2714},{"krate":0,"index":2715},{"krate":0,"index":2716},{"krate":0,"index":2717},{"krate":0,"index":2718},{"krate":0,"index":2719},{"krate":0,"index":2722},{"krate":0,"index":2723},{"krate":0,"index":2724},{"krate":0,"index":2729},{"krate":0,"index":2730},{"krate":0,"index":2731},{"krate":0,"index":2732},{"krate":0,"index":2733},{"krate":0,"index":2734},{"krate":0,"index":2764},{"krate":0,"index":2794},{"krate":0,"index":2823},{"krate":0,"index":8527},{"krate":0,"index":8542},{"krate":0,"index":8543},{"krate":0,"index":8540},{"krate":0,"index":8536},{"krate":0,"index":8537},{"krate":0,"index":8533},{"krate":0,"index":8534},{"krate":0,"index":8531},{"krate":0,"index":2853},{"krate":0,"index":2854},{"krate":0,"index":2859},{"krate":0,"index":2863},{"krate":0,"index":2865},{"krate":0,"index":8545},{"krate":0,"index":8561},{"krate":0,"index":8559},{"krate":0,"index":8557},{"krate":0,"index":8553},{"krate":0,"index":8554},{"krate":0,"index":8550},{"krate":0,"index":8551},{"krate":0,"index":8548},{"krate":0,"index":2867},{"krate":0,"index":2878},{"krate":0,"index":2880},{"krate":0,"index":2882},{"krate":0,"index":2884},{"krate":0,"index":2886},{"krate":0,"index":2889},{"krate":0,"index":2892},{"krate":0,"index":2898}],"decl_id":null,"docs":" A verifier for ensuring that functions are well formed.\n It verifies:","sig":null,"attributes":[{"value":"! A verifier for ensuring that functions are well formed.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":664217,"byte_end":664276,"line_start":1,"line_end":1,"column_start":1,"column_end":60}},{"value":"! It verifies:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":664277,"byte_end":664293,"line_start":2,"line_end":2,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":664294,"byte_end":664297,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! block integrity","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":664298,"byte_end":664317,"line_start":4,"line_end":4,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":664318,"byte_end":664321,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! - All instructions reached from the `block_insts` iterator must belong to","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":664322,"byte_end":664399,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"!   the block as reported by `inst_block()`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":664400,"byte_end":664446,"line_start":7,"line_end":7,"column_start":1,"column_end":47}},{"value":"! - Every block must end in a terminator instruction, and no other instruction","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":664447,"byte_end":664527,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"!   can be a terminator.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":664528,"byte_end":664554,"line_start":9,"line_end":9,"column_start":1,"column_end":27}},{"value":"! - Every value in the `block_params` iterator belongs to the block as reported by `value_block`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":664555,"byte_end":664654,"line_start":10,"line_end":10,"column_start":1,"column_end":100}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":664655,"byte_end":664658,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! Instruction integrity","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":664659,"byte_end":664684,"line_start":12,"line_end":12,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":664685,"byte_end":664688,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! - The instruction format must match the opcode.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":664689,"byte_end":664740,"line_start":14,"line_end":14,"column_start":1,"column_end":52}},{"value":"! - All result values must be created for multi-valued instructions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":664741,"byte_end":664811,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"! - All referenced entities must exist. (Values, blocks, stack slots, ...)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":664812,"byte_end":664888,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"! - Instructions must not reference (eg. branch to) the entry block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":664889,"byte_end":664959,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":664960,"byte_end":664963,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! SSA form","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":664964,"byte_end":664976,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":664977,"byte_end":664980,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! - Values must be defined by an instruction that exists and that is inserted in","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":664981,"byte_end":665063,"line_start":21,"line_end":21,"column_start":1,"column_end":83}},{"value":"!   an block, or be an argument of an existing block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":665064,"byte_end":665119,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"! - Values used by an instruction must dominate the instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":665120,"byte_end":665186,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":665187,"byte_end":665190,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! Control flow graph and dominator tree integrity:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":665191,"byte_end":665243,"line_start":25,"line_end":25,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":665244,"byte_end":665247,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! - All predecessors in the CFG must be branches to the block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":665248,"byte_end":665312,"line_start":27,"line_end":27,"column_start":1,"column_end":65}},{"value":"! - All branches to an block must be present in the CFG.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":665313,"byte_end":665371,"line_start":28,"line_end":28,"column_start":1,"column_end":59}},{"value":"! - A recomputed dominator tree is identical to the existing one.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":665372,"byte_end":665439,"line_start":29,"line_end":29,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":665440,"byte_end":665443,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! Type checking","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":665444,"byte_end":665461,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":665462,"byte_end":665465,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! - Compare input and output values against the opcode's type constraints.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":665466,"byte_end":665542,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"!   For polymorphic opcodes, determine the controlling type variable first.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":665543,"byte_end":665620,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"! - Branches and jumps must pass arguments to destination blocks that match the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":665621,"byte_end":665702,"line_start":35,"line_end":35,"column_start":1,"column_end":82}},{"value":"!   expected types exactly. The number of arguments must match.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":665703,"byte_end":665768,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"! - All blocks in a jump table must take no arguments.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":665769,"byte_end":665825,"line_start":37,"line_end":37,"column_start":1,"column_end":57}},{"value":"! - Function calls are type checked against their signature.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":665826,"byte_end":665888,"line_start":38,"line_end":38,"column_start":1,"column_end":63}},{"value":"! - The entry block must take arguments that match the signature of the current","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":665889,"byte_end":665970,"line_start":39,"line_end":39,"column_start":1,"column_end":82}},{"value":"!   function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":665971,"byte_end":665986,"line_start":40,"line_end":40,"column_start":1,"column_end":16}},{"value":"! - All return instructions must have return value operands matching the current","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":665987,"byte_end":666069,"line_start":41,"line_end":41,"column_start":1,"column_end":83}},{"value":"!   function signature.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":666070,"byte_end":666095,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":666096,"byte_end":666099,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! Global values","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":666100,"byte_end":666117,"line_start":44,"line_end":44,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":666118,"byte_end":666121,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"! - Detect cycles in global values.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":666122,"byte_end":666159,"line_start":46,"line_end":46,"column_start":1,"column_end":38}},{"value":"! - Detect use of 'vmctx' global value when no corresponding parameter is defined.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":666160,"byte_end":666244,"line_start":47,"line_end":47,"column_start":1,"column_end":85}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":666245,"byte_end":666248,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! TODO:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":666249,"byte_end":666258,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"! Ad hoc checking","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":666259,"byte_end":666278,"line_start":50,"line_end":50,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":666279,"byte_end":666282,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"! - Stack slot loads and stores must be in-bounds.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":666283,"byte_end":666335,"line_start":52,"line_end":52,"column_start":1,"column_end":53}},{"value":"! - Immediate constraints for certain opcodes, like `udiv_imm v3, 0`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":666336,"byte_end":666407,"line_start":53,"line_end":53,"column_start":1,"column_end":72}},{"value":"! - `Insertlane` and `extractlane` instructions have immediate lane numbers that must be in","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":666408,"byte_end":666501,"line_start":54,"line_end":54,"column_start":1,"column_end":94}},{"value":"!   range for their polymorphic type.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":666502,"byte_end":666541,"line_start":55,"line_end":55,"column_start":1,"column_end":40}},{"value":"! - Swizzle and shuffle instructions take a variable number of lane arguments. The number","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":666542,"byte_end":666633,"line_start":56,"line_end":56,"column_start":1,"column_end":92}},{"value":"!   of arguments must match the destination type, and the lane indexes must be in range.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":666634,"byte_end":666724,"line_start":57,"line_end":57,"column_start":1,"column_end":91}}]},{"kind":"Function","id":{"krate":0,"index":2751},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/cssa.rs","byte_start":741063,"byte_end":741074,"line_start":26,"line_end":26,"column_start":8,"column_end":19},"name":"verify_cssa","qualname":"::verifier::cssa::verify_cssa","value":"fn (func: &Function, cfg: &ControlFlowGraph, domtree: &DominatorTree, liveness: &Liveness, virtregs: &VirtRegs, errors: &mut VerifierErrors) -> VerifierStepResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Verify conventional SSA form for `func`.","sig":null,"attributes":[{"value":"/ Verify conventional SSA form for `func`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/cssa.rs","byte_start":740347,"byte_end":740391,"line_start":12,"line_end":12,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/cssa.rs","byte_start":740392,"byte_end":740395,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Conventional SSA form is represented in Cranelift with the help of virtual registers:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/cssa.rs","byte_start":740396,"byte_end":740485,"line_start":14,"line_end":14,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/cssa.rs","byte_start":740486,"byte_end":740489,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ - Two values are said to be *PHI-related* if one is an block argument and the other is passed as","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/cssa.rs","byte_start":740490,"byte_end":740590,"line_start":16,"line_end":16,"column_start":1,"column_end":101}},{"value":"/   a branch argument in a location that matches the first value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/cssa.rs","byte_start":740591,"byte_end":740658,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/ - PHI-related values must belong to the same virtual register.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/cssa.rs","byte_start":740659,"byte_end":740725,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/ - Two values in the same virtual register must not have overlapping live ranges.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/cssa.rs","byte_start":740726,"byte_end":740810,"line_start":19,"line_end":19,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/cssa.rs","byte_start":740811,"byte_end":740814,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Additionally, we verify this property of virtual registers:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/cssa.rs","byte_start":740815,"byte_end":740878,"line_start":21,"line_end":21,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/cssa.rs","byte_start":740879,"byte_end":740882,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ - The values in a virtual register are topologically ordered w.r.t. dominance.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/cssa.rs","byte_start":740883,"byte_end":740965,"line_start":23,"line_end":23,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/cssa.rs","byte_start":740966,"byte_end":740969,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ We don't verify that virtual registers are minimal. Minimal CSSA is not required.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/cssa.rs","byte_start":740970,"byte_end":741055,"line_start":25,"line_end":25,"column_start":1,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":2811},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/liveness.rs","byte_start":754285,"byte_end":754300,"line_start":24,"line_end":24,"column_start":8,"column_end":23},"name":"verify_liveness","qualname":"::verifier::liveness::verify_liveness","value":"fn (isa: &dyn TargetIsa, func: &Function, cfg: &ControlFlowGraph, liveness: &Liveness, errors: &mut VerifierErrors) -> VerifierStepResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Verify liveness information for `func`.","sig":null,"attributes":[{"value":"/ Verify liveness information for `func`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/liveness.rs","byte_start":753716,"byte_end":753759,"line_start":12,"line_end":12,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/liveness.rs","byte_start":753760,"byte_end":753763,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The provided control flow graph is assumed to be sound.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/liveness.rs","byte_start":753764,"byte_end":753823,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/liveness.rs","byte_start":753824,"byte_end":753827,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ - All values in the program must have a live range.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/liveness.rs","byte_start":753828,"byte_end":753883,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/ - The live range def point must match where the value is defined.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/liveness.rs","byte_start":753884,"byte_end":753953,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"/ - The live range must reach all uses.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/liveness.rs","byte_start":753954,"byte_end":753995,"line_start":18,"line_end":18,"column_start":1,"column_end":42}},{"value":"/ - When a live range is live-in to an block, it must be live at all the predecessors.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/liveness.rs","byte_start":753996,"byte_end":754084,"line_start":19,"line_end":19,"column_start":1,"column_end":89}},{"value":"/ - The live range affinity must be compatible with encoding constraints.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/liveness.rs","byte_start":754085,"byte_end":754160,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/liveness.rs","byte_start":754161,"byte_end":754164,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ We don't verify that live ranges are minimal. This would require recomputing live ranges for","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/liveness.rs","byte_start":754165,"byte_end":754261,"line_start":22,"line_end":22,"column_start":1,"column_end":97}},{"value":"/ all values.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/liveness.rs","byte_start":754262,"byte_end":754277,"line_start":23,"line_end":23,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":2833},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/locations.rs","byte_start":762926,"byte_end":762942,"line_start":22,"line_end":22,"column_start":8,"column_end":24},"name":"verify_locations","qualname":"::verifier::locations::verify_locations","value":"fn (isa: &dyn isa::TargetIsa, func: &ir::Function, cfg: &ControlFlowGraph, liveness: Option<&Liveness>, errors: &mut VerifierErrors) -> VerifierStepResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Verify value locations for `func`.","sig":null,"attributes":[{"value":"/ Verify value locations for `func`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/locations.rs","byte_start":762352,"byte_end":762390,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/locations.rs","byte_start":762391,"byte_end":762394,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ After register allocation, every value must be assigned to a location - either a register or a","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/locations.rs","byte_start":762395,"byte_end":762493,"line_start":13,"line_end":13,"column_start":1,"column_end":99}},{"value":"/ stack slot. These locations must be compatible with the constraints described by the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/locations.rs","byte_start":762494,"byte_end":762582,"line_start":14,"line_end":14,"column_start":1,"column_end":89}},{"value":"/ instruction encoding recipes.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/locations.rs","byte_start":762583,"byte_end":762616,"line_start":15,"line_end":15,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/locations.rs","byte_start":762617,"byte_end":762620,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Values can be temporarily diverted to a different location by using the `regmove`, `regspill`,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/locations.rs","byte_start":762621,"byte_end":762719,"line_start":17,"line_end":17,"column_start":1,"column_end":99}},{"value":"/ and `regfill` instructions, but only inside an block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/locations.rs","byte_start":762720,"byte_end":762777,"line_start":18,"line_end":18,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/locations.rs","byte_start":762778,"byte_end":762781,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ If a liveness analysis is provided, it is used to verify that there are no active register","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/locations.rs","byte_start":762782,"byte_end":762876,"line_start":20,"line_end":20,"column_start":1,"column_end":95}},{"value":"/ diversions across control flow edges.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/locations.rs","byte_start":762877,"byte_end":762918,"line_start":21,"line_end":21,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":8527},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":667957,"byte_end":667970,"line_start":96,"line_end":96,"column_start":12,"column_end":25},"name":"VerifierError","qualname":"::verifier::VerifierError","value":"VerifierError { location, context, message }","parent":null,"children":[{"krate":0,"index":8528},{"krate":0,"index":8529},{"krate":0,"index":8530}],"decl_id":null,"docs":" A verifier error.\n","sig":null,"attributes":[{"value":"/ A verifier error.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":667810,"byte_end":667831,"line_start":93,"line_end":93,"column_start":1,"column_end":22}},{"value":"error(\"{}{}: {}\", . location, format_context (. context), . message)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":667878,"byte_end":667945,"line_start":95,"line_end":95,"column_start":1,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":8528},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":668028,"byte_end":668036,"line_start":98,"line_end":98,"column_start":9,"column_end":17},"name":"location","qualname":"::verifier::VerifierError::location","value":"ir::entities::AnyEntity","parent":{"krate":0,"index":8527},"children":[],"decl_id":null,"docs":" The entity causing the verifier error.\n","sig":null,"attributes":[{"value":"/ The entity causing the verifier error.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":667977,"byte_end":668019,"line_start":97,"line_end":97,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":8529},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":668216,"byte_end":668223,"line_start":101,"line_end":101,"column_start":9,"column_end":16},"name":"context","qualname":"::verifier::VerifierError::context","value":"core::option::Option<alloc::string::String>","parent":{"krate":0,"index":8527},"children":[],"decl_id":null,"docs":" Optionally provide some context for the given location; e.g., for `inst42` provide\n `Some(\"v3 = iconst.i32 0\")` for more comprehensible errors.\n","sig":null,"attributes":[{"value":"/ Optionally provide some context for the given location; e.g., for `inst42` provide","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":668053,"byte_end":668139,"line_start":99,"line_end":99,"column_start":5,"column_end":91}},{"value":"/ `Some(\"v3 = iconst.i32 0\")` for more comprehensible errors.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":668144,"byte_end":668207,"line_start":100,"line_end":100,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":8530},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":668276,"byte_end":668283,"line_start":103,"line_end":103,"column_start":9,"column_end":16},"name":"message","qualname":"::verifier::VerifierError::message","value":"alloc::string::String","parent":{"krate":0,"index":8527},"children":[],"decl_id":null,"docs":" The error message.\n","sig":null,"attributes":[{"value":"/ The error message.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":668245,"byte_end":668267,"line_start":102,"line_end":102,"column_start":5,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":2863},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":670231,"byte_end":670249,"line_start":168,"line_end":168,"column_start":10,"column_end":28},"name":"VerifierStepResult","qualname":"::verifier::VerifierStepResult","value":"Result<T, ()>","parent":null,"children":[],"decl_id":null,"docs":" Result of a step in the verification process.","sig":null,"attributes":[{"value":"/ Result of a step in the verification process.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":669753,"byte_end":669802,"line_start":158,"line_end":158,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":669803,"byte_end":669806,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ Functions that return `VerifierStepResult<()>` should also take a","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":669807,"byte_end":669876,"line_start":160,"line_end":160,"column_start":1,"column_end":70}},{"value":"/ mutable reference to `VerifierErrors` as argument in order to report","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":669877,"byte_end":669949,"line_start":161,"line_end":161,"column_start":1,"column_end":73}},{"value":"/ errors.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":669950,"byte_end":669961,"line_start":162,"line_end":162,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":669962,"byte_end":669965,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ Here, `Ok` represents a step that **did not lead to a fatal error**,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":669966,"byte_end":670038,"line_start":164,"line_end":164,"column_start":1,"column_end":73}},{"value":"/ meaning that the verification process may continue. However, other (non-fatal)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":670039,"byte_end":670121,"line_start":165,"line_end":165,"column_start":1,"column_end":83}},{"value":"/ errors might have been reported through the previously mentioned `VerifierErrors`","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":670122,"byte_end":670207,"line_start":166,"line_end":166,"column_start":1,"column_end":86}},{"value":"/ argument.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":670208,"byte_end":670221,"line_start":167,"line_end":167,"column_start":1,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":2865},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":670490,"byte_end":670504,"line_start":174,"line_end":174,"column_start":10,"column_end":24},"name":"VerifierResult","qualname":"::verifier::VerifierResult","value":"Result<T, VerifierErrors>","parent":null,"children":[],"decl_id":null,"docs":" Result of a verification operation.","sig":null,"attributes":[{"value":"/ Result of a verification operation.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":670271,"byte_end":670310,"line_start":170,"line_end":170,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":670311,"byte_end":670314,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ Unlike `VerifierStepResult<()>` which may be `Ok` while still having reported","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":670315,"byte_end":670396,"line_start":172,"line_end":172,"column_start":1,"column_end":82}},{"value":"/ errors, this type always returns `Err` if an error (fatal or not) was reported.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":670397,"byte_end":670480,"line_start":173,"line_end":173,"column_start":1,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":8545},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":670633,"byte_end":670647,"line_start":178,"line_end":178,"column_start":12,"column_end":26},"name":"VerifierErrors","qualname":"::verifier::VerifierErrors","value":"","parent":null,"children":[],"decl_id":null,"docs":" List of verifier errors.\n","sig":null,"attributes":[{"value":"/ List of verifier errors.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":670538,"byte_end":670566,"line_start":176,"line_end":176,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2868},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":670767,"byte_end":670770,"line_start":183,"line_end":183,"column_start":12,"column_end":15},"name":"new","qualname":"<VerifierErrors>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a new `VerifierErrors` struct.\n","sig":null,"attributes":[{"value":"/ Return a new `VerifierErrors` struct.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":670700,"byte_end":670741,"line_start":181,"line_end":181,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":670746,"byte_end":670755,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2869},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":670888,"byte_end":670896,"line_start":189,"line_end":189,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<VerifierErrors>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return whether no errors were reported.\n","sig":null,"attributes":[{"value":"/ Return whether no errors were reported.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":670819,"byte_end":670862,"line_start":187,"line_end":187,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":670867,"byte_end":670876,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2870},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":671029,"byte_end":671038,"line_start":195,"line_end":195,"column_start":12,"column_end":21},"name":"has_error","qualname":"<VerifierErrors>::has_error","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return whether one or more errors were reported.\n","sig":null,"attributes":[{"value":"/ Return whether one or more errors were reported.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":670951,"byte_end":671003,"line_start":193,"line_end":193,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":671008,"byte_end":671017,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2871},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":671236,"byte_end":671245,"line_start":202,"line_end":202,"column_start":12,"column_end":21},"name":"as_result","qualname":"<VerifierErrors>::as_result","value":"fn (&self) -> VerifierStepResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Return a `VerifierStepResult` that is fatal if at least one error was reported,\n and non-fatal otherwise.\n","sig":null,"attributes":[{"value":"/ Return a `VerifierStepResult` that is fatal if at least one error was reported,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":671094,"byte_end":671177,"line_start":199,"line_end":199,"column_start":5,"column_end":88}},{"value":"/ and non-fatal otherwise.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":671182,"byte_end":671210,"line_start":200,"line_end":200,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":671215,"byte_end":671224,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2872},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":671452,"byte_end":671458,"line_start":211,"line_end":211,"column_start":12,"column_end":18},"name":"report","qualname":"<VerifierErrors>::report","value":"fn (&mut self, error: impl Into<VerifierError>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Report an error, adding it to the list of errors.\n","sig":null,"attributes":[{"value":"/ Report an error, adding it to the list of errors.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":671387,"byte_end":671440,"line_start":210,"line_end":210,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2874},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":671605,"byte_end":671610,"line_start":216,"line_end":216,"column_start":12,"column_end":17},"name":"fatal","qualname":"<VerifierErrors>::fatal","value":"fn (&mut self, error: impl Into<VerifierError>) -> VerifierStepResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Report a fatal error and return `Err`.\n","sig":null,"attributes":[{"value":"/ Report a fatal error and return `Err`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":671551,"byte_end":671593,"line_start":215,"line_end":215,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2876},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":671795,"byte_end":671803,"line_start":222,"line_end":222,"column_start":12,"column_end":20},"name":"nonfatal","qualname":"<VerifierErrors>::nonfatal","value":"fn (&mut self, error: impl Into<VerifierError>) -> VerifierStepResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Report a non-fatal error and return `Ok`.\n","sig":null,"attributes":[{"value":"/ Report a non-fatal error and return `Ok`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":671738,"byte_end":671783,"line_start":221,"line_end":221,"column_start":5,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2886},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":672581,"byte_end":672596,"line_start":260,"line_end":260,"column_start":8,"column_end":23},"name":"verify_function","qualname":"::verifier::verify_function","value":"fn <'a, FOI> (func: &Function, fisa: FOI) -> VerifierResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Verify `func`.\n","sig":null,"attributes":[{"value":"/ Verify `func`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":672555,"byte_end":672573,"line_start":259,"line_end":259,"column_start":1,"column_end":19}}]},{"kind":"Function","id":{"krate":0,"index":2889},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":673096,"byte_end":673110,"line_start":278,"line_end":278,"column_start":8,"column_end":22},"name":"verify_context","qualname":"::verifier::verify_context","value":"fn <'a, FOI> (func: &Function, cfg: &ControlFlowGraph, domtree: &DominatorTree, fisa: FOI, errors: &mut VerifierErrors) -> VerifierStepResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Verify `func` after checking the integrity of associated context data structures `cfg` and\n `domtree`.\n","sig":null,"attributes":[{"value":"/ Verify `func` after checking the integrity of associated context data structures `cfg` and","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":672979,"byte_end":673073,"line_start":276,"line_end":276,"column_start":1,"column_end":95}},{"value":"/ `domtree`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":673074,"byte_end":673088,"line_start":277,"line_end":277,"column_start":1,"column_end":15}}]},{"kind":"Mod","id":{"krate":0,"index":2955},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"write","qualname":"::write","value":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","parent":null,"children":[{"krate":0,"index":2956},{"krate":0,"index":2957},{"krate":0,"index":2958},{"krate":0,"index":2969},{"krate":0,"index":2972},{"krate":0,"index":2973},{"krate":0,"index":2974},{"krate":0,"index":2975},{"krate":0,"index":2976},{"krate":0,"index":2977},{"krate":0,"index":2980},{"krate":0,"index":2987},{"krate":0,"index":2989},{"krate":0,"index":2992},{"krate":0,"index":2993},{"krate":0,"index":2994},{"krate":0,"index":2996},{"krate":0,"index":2997},{"krate":0,"index":2998},{"krate":0,"index":2999},{"krate":0,"index":3000},{"krate":0,"index":3001},{"krate":0,"index":3003},{"krate":0,"index":3004},{"krate":0,"index":3005},{"krate":0,"index":3006},{"krate":0,"index":3008},{"krate":0,"index":3009},{"krate":0,"index":3013},{"krate":0,"index":3016},{"krate":0,"index":3021}],"decl_id":null,"docs":" Converting Cranelift IR to text.","sig":null,"attributes":[{"value":"! Converting Cranelift IR to text.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":775870,"byte_end":775906,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":775907,"byte_end":775910,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The `write` module provides the `write_function` function which converts an IR `Function` to an","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":775911,"byte_end":776010,"line_start":3,"line_end":3,"column_start":1,"column_end":100}},{"value":"! equivalent textual form. This textual form can be read back by the `cranelift-reader` crate.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":776011,"byte_end":776107,"line_start":4,"line_end":4,"column_start":1,"column_end":97}}]},{"kind":"Trait","id":{"krate":0,"index":2980},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":776607,"byte_end":776617,"line_start":21,"line_end":21,"column_start":11,"column_end":21},"name":"FuncWriter","qualname":"::write::FuncWriter","value":"FuncWriter","parent":null,"children":[{"krate":0,"index":2981},{"krate":0,"index":2982},{"krate":0,"index":2983},{"krate":0,"index":2984},{"krate":0,"index":2985},{"krate":0,"index":2986}],"decl_id":null,"docs":" A `FuncWriter` used to decorate functions during printing.\n","sig":null,"attributes":[{"value":"/ A `FuncWriter` used to decorate functions during printing.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":776534,"byte_end":776596,"line_start":20,"line_end":20,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2981},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":776690,"byte_end":776708,"line_start":23,"line_end":23,"column_start":8,"column_end":26},"name":"write_block_header","qualname":"::write::FuncWriter::write_block_header","value":"fn (&mut self, w: &mut dyn Write, func: &Function, isa: Option<&dyn TargetIsa>, block: Block, indent: usize) -> fmt::Result","parent":{"krate":0,"index":2980},"children":[],"decl_id":null,"docs":" Write the basic block header for the current function.\n","sig":null,"attributes":[{"value":"/ Write the basic block header for the current function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":776624,"byte_end":776682,"line_start":22,"line_end":22,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2982},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":776932,"byte_end":776949,"line_start":33,"line_end":33,"column_start":8,"column_end":25},"name":"write_instruction","qualname":"::write::FuncWriter::write_instruction","value":"fn (&mut self, w: &mut dyn Write, func: &Function, aliases: &SecondaryMap<Value, Vec<Value>>, isa: Option<&dyn TargetIsa>, inst: Inst, indent: usize) -> fmt::Result","parent":{"krate":0,"index":2980},"children":[],"decl_id":null,"docs":" Write the given `inst` to `w`.\n","sig":null,"attributes":[{"value":"/ Write the given `inst` to `w`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":776890,"byte_end":776924,"line_start":32,"line_end":32,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2983},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":777267,"byte_end":777281,"line_start":44,"line_end":44,"column_start":8,"column_end":22},"name":"write_preamble","qualname":"::write::FuncWriter::write_preamble","value":"fn (&mut self, w: &mut dyn Write, func: &Function, regs: Option<&RegInfo>) -> Result<bool, fmt::Error>","parent":{"krate":0,"index":2980},"children":[],"decl_id":null,"docs":" Write the preamble to `w`. By default, this uses `write_entity_definition`.\n","sig":null,"attributes":[{"value":"/ Write the preamble to `w`. By default, this uses `write_entity_definition`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":777180,"byte_end":777259,"line_start":43,"line_end":43,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2984},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":777520,"byte_end":777534,"line_start":54,"line_end":54,"column_start":8,"column_end":22},"name":"super_preamble","qualname":"::write::FuncWriter::super_preamble","value":"fn (&mut self, w: &mut dyn Write, func: &Function, regs: Option<&RegInfo>) -> Result<bool, fmt::Error>","parent":{"krate":0,"index":2980},"children":[],"decl_id":null,"docs":" Default impl of `write_preamble`\n","sig":null,"attributes":[{"value":"/ Default impl of `write_preamble`","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":777476,"byte_end":777512,"line_start":53,"line_end":53,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2985},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":779289,"byte_end":779312,"line_start":109,"line_end":109,"column_start":8,"column_end":31},"name":"write_entity_definition","qualname":"::write::FuncWriter::write_entity_definition","value":"fn (&mut self, w: &mut dyn Write, func: &Function, entity: AnyEntity, value: &dyn fmt::Display) -> fmt::Result","parent":{"krate":0,"index":2980},"children":[],"decl_id":null,"docs":" Write an entity definition defined in the preamble to `w`.\n","sig":null,"attributes":[{"value":"/ Write an entity definition defined in the preamble to `w`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":779219,"byte_end":779281,"line_start":108,"line_end":108,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2986},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":779625,"byte_end":779648,"line_start":121,"line_end":121,"column_start":8,"column_end":31},"name":"super_entity_definition","qualname":"::write::FuncWriter::super_entity_definition","value":"fn (&mut self, w: &mut dyn Write, func: &Function, entity: AnyEntity, value: &dyn fmt::Display) -> fmt::Result","parent":{"krate":0,"index":2980},"children":[],"decl_id":null,"docs":" Default impl of `write_entity_definition`\n","sig":null,"attributes":[{"value":"/ Default impl of `write_entity_definition`","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":779541,"byte_end":779586,"line_start":119,"line_end":119,"column_start":5,"column_end":50}},{"value":"allow(unused_variables)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":779591,"byte_end":779617,"line_start":120,"line_end":120,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":2987},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":779931,"byte_end":779942,"line_start":133,"line_end":133,"column_start":12,"column_end":23},"name":"PlainWriter","qualname":"::write::PlainWriter","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `PlainWriter` that doesn't decorate the function.\n","sig":null,"attributes":[{"value":"/ A `PlainWriter` that doesn't decorate the function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":779864,"byte_end":779919,"line_start":132,"line_end":132,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":2992},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":780668,"byte_end":780682,"line_start":162,"line_end":162,"column_start":8,"column_end":22},"name":"write_function","qualname":"::write::write_function","value":"fn (w: &mut dyn Write, func: &Function, annotations: &DisplayFunctionAnnotations) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Write `func` to `w` as equivalent text.\n Use `isa` to emit ISA-dependent annotations.\n","sig":null,"attributes":[{"value":"/ Write `func` to `w` as equivalent text.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":780568,"byte_end":780611,"line_start":160,"line_end":160,"column_start":1,"column_end":44}},{"value":"/ Use `isa` to emit ISA-dependent annotations.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":780612,"byte_end":780660,"line_start":161,"line_end":161,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2994},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":781499,"byte_end":781516,"line_start":185,"line_end":185,"column_start":8,"column_end":25},"name":"decorate_function","qualname":"::write::decorate_function","value":"fn <FW> (func_w: &mut FW, w: &mut dyn Write, func: &Function, annotations: &DisplayFunctionAnnotations) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Writes `func` to `w` as text.\n write_function_plain is passed as 'closure' to print instructions as text.\n pretty_function_error is passed as 'closure' to add error decoration.\n","sig":null,"attributes":[{"value":"/ Writes `func` to `w` as text.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":781305,"byte_end":781338,"line_start":182,"line_end":182,"column_start":1,"column_end":34}},{"value":"/ write_function_plain is passed as 'closure' to print instructions as text.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":781339,"byte_end":781417,"line_start":183,"line_end":183,"column_start":1,"column_end":79}},{"value":"/ pretty_function_error is passed as 'closure' to add error decoration.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":781418,"byte_end":781491,"line_start":184,"line_end":184,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":2998},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":782932,"byte_end":782950,"line_start":242,"line_end":242,"column_start":8,"column_end":26},"name":"write_block_header","qualname":"::write::write_block_header","value":"fn (w: &mut dyn Write, func: &Function, isa: Option<&dyn TargetIsa>, block: Block, indent: usize) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Write out the basic block header, outdented:","sig":null,"attributes":[{"value":"/ Write out the basic block header, outdented:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":782796,"byte_end":782844,"line_start":236,"line_end":236,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":782845,"byte_end":782848,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/    block1:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":782849,"byte_end":782863,"line_start":238,"line_end":238,"column_start":1,"column_end":15}},{"value":"/    block1(v1: i32):","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":782864,"byte_end":782887,"line_start":239,"line_end":239,"column_start":1,"column_end":24}},{"value":"/    block10(v4: f64, v5: b1):","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":782888,"byte_end":782920,"line_start":240,"line_end":240,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":782921,"byte_end":782924,"line_start":241,"line_end":241,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":3006},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":790084,"byte_end":790098,"line_start":482,"line_end":482,"column_start":8,"column_end":22},"name":"write_operands","qualname":"::write::write_operands","value":"fn (w: &mut dyn Write, dfg: &DataFlowGraph, isa: Option<&dyn TargetIsa>, inst: Inst) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Write the operands of `inst` to `w` with a prepended space.\n","sig":null,"attributes":[{"value":"/ Write the operands of `inst` to `w` with a prepended space.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":790013,"byte_end":790076,"line_start":481,"line_end":481,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":8599},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/bitset.rs","byte_start":811155,"byte_end":811161,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"BitSet","qualname":"::bitset::BitSet","value":"","parent":null,"children":[],"decl_id":null,"docs":" A small bitset built on a single primitive integer type\n","sig":null,"attributes":[{"value":"/ A small bitset built on a single primitive integer type","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/bitset.rs","byte_start":811039,"byte_end":811098,"line_start":12,"line_end":12,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3058},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/bitset.rs","byte_start":811467,"byte_end":811471,"line_start":28,"line_end":28,"column_start":12,"column_end":16},"name":"bits","qualname":"<BitSet<T>>::bits","value":"fn () -> usize","parent":null,"children":[],"decl_id":null,"docs":" Maximum number of bits supported by this BitSet instance\n","sig":null,"attributes":[{"value":"/ Maximum number of bits supported by this BitSet instance","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/bitset.rs","byte_start":811395,"byte_end":811455,"line_start":27,"line_end":27,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3059},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/bitset.rs","byte_start":811599,"byte_end":811607,"line_start":33,"line_end":33,"column_start":12,"column_end":20},"name":"max_bits","qualname":"<BitSet<T>>::max_bits","value":"fn () -> usize","parent":null,"children":[],"decl_id":null,"docs":" Maximum number of bits supported by any bitset instance atm.\n","sig":null,"attributes":[{"value":"/ Maximum number of bits supported by any bitset instance atm.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/bitset.rs","byte_start":811523,"byte_end":811587,"line_start":32,"line_end":32,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3060},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/bitset.rs","byte_start":811721,"byte_end":811729,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"contains","qualname":"<BitSet<T>>::contains","value":"fn (&self, num: u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this BitSet contains the number num\n","sig":null,"attributes":[{"value":"/ Check if this BitSet contains the number num","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/bitset.rs","byte_start":811661,"byte_end":811709,"line_start":37,"line_end":37,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3061},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/bitset.rs","byte_start":812002,"byte_end":812005,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"min","qualname":"<BitSet<T>>::min","value":"fn (&self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Return the smallest number contained in the bitset or None if empty\n","sig":null,"attributes":[{"value":"/ Return the smallest number contained in the bitset or None if empty","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/bitset.rs","byte_start":811919,"byte_end":811990,"line_start":44,"line_end":44,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3062},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/bitset.rs","byte_start":812253,"byte_end":812256,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"max","qualname":"<BitSet<T>>::max","value":"fn (&self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Return the largest number contained in the bitset or None if empty\n","sig":null,"attributes":[{"value":"/ Return the largest number contained in the bitset or None if empty","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/bitset.rs","byte_start":812171,"byte_end":812241,"line_start":53,"line_end":53,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3063},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/bitset.rs","byte_start":812581,"byte_end":812591,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"from_range","qualname":"<BitSet<T>>::from_range","value":"fn (lo: u8, hi: u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a BitSet with the half-open range [lo,hi) filled in\n","sig":null,"attributes":[{"value":"/ Construct a BitSet with the half-open range [lo,hi) filled in","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/bitset.rs","byte_start":812504,"byte_end":812569,"line_start":63,"line_end":63,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":3115},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":819144,"byte_end":819151,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Context","qualname":"::context::Context","value":"Context { func, cfg, domtree, regalloc, loop_analysis, redundant_reload_remover }","parent":null,"children":[{"krate":0,"index":3116},{"krate":0,"index":3117},{"krate":0,"index":3118},{"krate":0,"index":3119},{"krate":0,"index":3120},{"krate":0,"index":3121}],"decl_id":null,"docs":" Persistent data structures and compilation pipeline.\n","sig":null,"attributes":[{"value":"/ Persistent data structures and compilation pipeline.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":819076,"byte_end":819132,"line_start":39,"line_end":39,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":3116},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":819200,"byte_end":819204,"line_start":42,"line_end":42,"column_start":9,"column_end":13},"name":"func","qualname":"::context::Context::func","value":"ir::function::Function","parent":{"krate":0,"index":3115},"children":[],"decl_id":null,"docs":" The function we're compiling.\n","sig":null,"attributes":[{"value":"/ The function we're compiling.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":819158,"byte_end":819191,"line_start":41,"line_end":41,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":3117},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":819267,"byte_end":819270,"line_start":45,"line_end":45,"column_start":9,"column_end":12},"name":"cfg","qualname":"::context::Context::cfg","value":"flowgraph::ControlFlowGraph","parent":{"krate":0,"index":3115},"children":[],"decl_id":null,"docs":" The control flow graph of `func`.\n","sig":null,"attributes":[{"value":"/ The control flow graph of `func`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":819221,"byte_end":819258,"line_start":44,"line_end":44,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":3118},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":819334,"byte_end":819341,"line_start":48,"line_end":48,"column_start":9,"column_end":16},"name":"domtree","qualname":"::context::Context::domtree","value":"dominator_tree::DominatorTree","parent":{"krate":0,"index":3115},"children":[],"decl_id":null,"docs":" Dominator tree for `func`.\n","sig":null,"attributes":[{"value":"/ Dominator tree for `func`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":819295,"byte_end":819325,"line_start":47,"line_end":47,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":3119},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":819404,"byte_end":819412,"line_start":51,"line_end":51,"column_start":9,"column_end":17},"name":"regalloc","qualname":"::context::Context::regalloc","value":"regalloc::context::Context","parent":{"krate":0,"index":3115},"children":[],"decl_id":null,"docs":" Register allocation context.\n","sig":null,"attributes":[{"value":"/ Register allocation context.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":819363,"byte_end":819395,"line_start":50,"line_end":50,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":3120},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":819475,"byte_end":819488,"line_start":54,"line_end":54,"column_start":9,"column_end":22},"name":"loop_analysis","qualname":"::context::Context::loop_analysis","value":"loop_analysis::LoopAnalysis","parent":{"krate":0,"index":3115},"children":[],"decl_id":null,"docs":" Loop analysis of `func`.\n","sig":null,"attributes":[{"value":"/ Loop analysis of `func`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":819438,"byte_end":819466,"line_start":53,"line_end":53,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3121},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":819555,"byte_end":819579,"line_start":57,"line_end":57,"column_start":9,"column_end":33},"name":"redundant_reload_remover","qualname":"::context::Context::redundant_reload_remover","value":"redundant_reload_remover::RedundantReloadRemover","parent":{"krate":0,"index":3115},"children":[],"decl_id":null,"docs":" Redundant-reload remover context.\n","sig":null,"attributes":[{"value":"/ Redundant-reload remover context.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":819509,"byte_end":819546,"line_start":56,"line_end":56,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3123},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":819822,"byte_end":819825,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Context>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allocate a new compilation context.","sig":null,"attributes":[{"value":"/ Allocate a new compilation context.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":819627,"byte_end":819666,"line_start":61,"line_end":61,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":819671,"byte_end":819674,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ The returned instance should be reused for compiling multiple functions in order to avoid","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":819679,"byte_end":819772,"line_start":63,"line_end":63,"column_start":5,"column_end":98}},{"value":"/ needless allocator thrashing.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":819777,"byte_end":819810,"line_start":64,"line_end":64,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3124},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":820114,"byte_end":820126,"line_start":73,"line_end":73,"column_start":12,"column_end":24},"name":"for_function","qualname":"<Context>::for_function","value":"fn (func: Function) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allocate a new compilation context with an existing Function.","sig":null,"attributes":[{"value":"/ Allocate a new compilation context with an existing Function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":819893,"byte_end":819958,"line_start":69,"line_end":69,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":819963,"byte_end":819966,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ The returned instance should be reused for compiling multiple functions in order to avoid","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":819971,"byte_end":820064,"line_start":71,"line_end":71,"column_start":5,"column_end":98}},{"value":"/ needless allocator thrashing.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":820069,"byte_end":820102,"line_start":72,"line_end":72,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3125},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":820515,"byte_end":820520,"line_start":85,"line_end":85,"column_start":12,"column_end":17},"name":"clear","qualname":"<Context>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear all data structures in this context.\n","sig":null,"attributes":[{"value":"/ Clear all data structures in this context.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":820457,"byte_end":820503,"line_start":84,"line_end":84,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3126},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":821353,"byte_end":821369,"line_start":105,"line_end":105,"column_start":12,"column_end":28},"name":"compile_and_emit","qualname":"<Context>::compile_and_emit","value":"fn (&mut self, isa: &dyn TargetIsa, mem: &mut Vec<u8>, relocs: &mut dyn RelocSink, traps: &mut dyn TrapSink, stackmaps: &mut dyn StackmapSink) -> CodegenResult<CodeInfo>","parent":null,"children":[],"decl_id":null,"docs":" Compile the function, and emit machine code into a `Vec<u8>`.","sig":null,"attributes":[{"value":"/ Compile the function, and emit machine code into a `Vec<u8>`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":820742,"byte_end":820807,"line_start":94,"line_end":94,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":820812,"byte_end":820815,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Run the function through all the passes necessary to generate code for the target ISA","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":820820,"byte_end":820909,"line_start":96,"line_end":96,"column_start":5,"column_end":94}},{"value":"/ represented by `isa`, as well as the final step of emitting machine code into a","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":820914,"byte_end":820997,"line_start":97,"line_end":97,"column_start":5,"column_end":88}},{"value":"/ `Vec<u8>`. The machine code is not relocated. Instead, any relocations are emitted","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":821002,"byte_end":821088,"line_start":98,"line_end":98,"column_start":5,"column_end":91}},{"value":"/ into `relocs`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":821093,"byte_end":821111,"line_start":99,"line_end":99,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":821116,"byte_end":821119,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This function calls `compile` and `emit_to_memory`, taking care to resize `mem` as","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":821124,"byte_end":821210,"line_start":101,"line_end":101,"column_start":5,"column_end":91}},{"value":"/ needed, so it provides a safe interface.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":821215,"byte_end":821259,"line_start":102,"line_end":102,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":821264,"byte_end":821267,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Returns information about the function's code and read-only data.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":821272,"byte_end":821341,"line_start":104,"line_end":104,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3127},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":822269,"byte_end":822276,"line_start":130,"line_end":130,"column_start":12,"column_end":19},"name":"compile","qualname":"<Context>::compile","value":"fn (&mut self, isa: &dyn TargetIsa) -> CodegenResult<CodeInfo>","parent":null,"children":[],"decl_id":null,"docs":" Compile the function.","sig":null,"attributes":[{"value":"/ Compile the function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":821930,"byte_end":821955,"line_start":123,"line_end":123,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":821960,"byte_end":821963,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Run the function through all the passes necessary to generate code for the target ISA","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":821968,"byte_end":822057,"line_start":125,"line_end":125,"column_start":5,"column_end":94}},{"value":"/ represented by `isa`. This does not include the final step of emitting machine code into a","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":822062,"byte_end":822156,"line_start":126,"line_end":126,"column_start":5,"column_end":99}},{"value":"/ code sink.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":822161,"byte_end":822175,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":822180,"byte_end":822183,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ Returns information about the function's code and read-only data.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":822188,"byte_end":822257,"line_start":129,"line_end":129,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3128},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":824165,"byte_end":824179,"line_start":184,"line_end":184,"column_start":19,"column_end":33},"name":"emit_to_memory","qualname":"<Context>::emit_to_memory","value":"fn (&self, isa: &dyn TargetIsa, mem: *mut u8, relocs: &mut dyn RelocSink, traps: &mut dyn TrapSink, stackmaps: &mut dyn StackmapSink) -> CodeInfo","parent":null,"children":[],"decl_id":null,"docs":" Emit machine code directly into raw memory.","sig":null,"attributes":[{"value":"/ Emit machine code directly into raw memory.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":823584,"byte_end":823631,"line_start":171,"line_end":171,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":823636,"byte_end":823639,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Write all of the function's machine code to the memory at `mem`. The size of the machine","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":823644,"byte_end":823736,"line_start":173,"line_end":173,"column_start":5,"column_end":97}},{"value":"/ code is returned by `compile` above.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":823741,"byte_end":823781,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":823786,"byte_end":823789,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ The machine code is not relocated. Instead, any relocations are emitted into `relocs`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":823794,"byte_end":823884,"line_start":176,"line_end":176,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":823889,"byte_end":823892,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":823897,"byte_end":823909,"line_start":178,"line_end":178,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":823914,"byte_end":823917,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe since it does not perform bounds checking on the memory buffer,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":823922,"byte_end":824013,"line_start":180,"line_end":180,"column_start":5,"column_end":96}},{"value":"/ and it can't guarantee that the `mem` pointer is valid.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":824018,"byte_end":824077,"line_start":181,"line_end":181,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":824082,"byte_end":824085,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Returns information about the emitted code and data.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":824090,"byte_end":824146,"line_start":183,"line_end":183,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3129},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":824875,"byte_end":824891,"line_start":204,"line_end":204,"column_start":12,"column_end":28},"name":"emit_unwind_info","qualname":"<Context>::emit_unwind_info","value":"fn (&self, isa: &dyn TargetIsa, kind: FrameUnwindKind, sink: &mut dyn FrameUnwindSink) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Emit unwind information.","sig":null,"attributes":[{"value":"/ Emit unwind information.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":824580,"byte_end":824608,"line_start":198,"line_end":198,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":824613,"byte_end":824616,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Requires that the function layout be calculated (see `relax_branches`).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":824621,"byte_end":824696,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":824701,"byte_end":824704,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ Only some calling conventions (e.g. Windows fastcall) will have unwind information.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":824709,"byte_end":824796,"line_start":202,"line_end":202,"column_start":5,"column_end":92}},{"value":"/ This is a no-op if the function has no unwind information.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":824801,"byte_end":824863,"line_start":203,"line_end":203,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3130},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":825238,"byte_end":825244,"line_start":216,"line_end":216,"column_start":12,"column_end":18},"name":"verify","qualname":"<Context>::verify","value":"fn <'a, FOI> (&self, fisa: FOI) -> VerifierResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Run the verifier on the function.","sig":null,"attributes":[{"value":"/ Run the verifier on the function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":825081,"byte_end":825118,"line_start":213,"line_end":213,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":825123,"byte_end":825126,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Also check that the dominator tree and control flow graph are consistent with the function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":825131,"byte_end":825226,"line_start":215,"line_end":215,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":3133},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":825651,"byte_end":825660,"line_start":228,"line_end":228,"column_start":12,"column_end":21},"name":"verify_if","qualname":"<Context>::verify_if","value":"fn <'a, FOI> (&self, fisa: FOI) -> CodegenResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Run the verifier only if the `enable_verifier` setting is true.\n","sig":null,"attributes":[{"value":"/ Run the verifier only if the `enable_verifier` setting is true.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":825572,"byte_end":825639,"line_start":227,"line_end":227,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3136},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":825934,"byte_end":825950,"line_start":237,"line_end":237,"column_start":12,"column_end":28},"name":"verify_locations","qualname":"<Context>::verify_locations","value":"fn (&self, isa: &dyn TargetIsa) -> VerifierResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Run the locations verifier on the function.\n","sig":null,"attributes":[{"value":"/ Run the locations verifier on the function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":825875,"byte_end":825922,"line_start":236,"line_end":236,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3137},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":826338,"byte_end":826357,"line_start":249,"line_end":249,"column_start":12,"column_end":31},"name":"verify_locations_if","qualname":"<Context>::verify_locations_if","value":"fn (&self, isa: &dyn TargetIsa) -> CodegenResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Run the locations verifier only if the `enable_verifier` setting is true.\n","sig":null,"attributes":[{"value":"/ Run the locations verifier only if the `enable_verifier` setting is true.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":826249,"byte_end":826326,"line_start":248,"line_end":248,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":3138},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":826591,"byte_end":826594,"line_start":257,"line_end":257,"column_start":12,"column_end":15},"name":"dce","qualname":"<Context>::dce","value":"fn <'a, FOI> (&mut self, fisa: FOI) -> CodegenResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Perform dead-code elimination on the function.\n","sig":null,"attributes":[{"value":"/ Perform dead-code elimination on the function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":826529,"byte_end":826579,"line_start":256,"line_end":256,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3141},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":826845,"byte_end":826851,"line_start":264,"line_end":264,"column_start":12,"column_end":18},"name":"preopt","qualname":"<Context>::preopt","value":"fn (&mut self, isa: &dyn TargetIsa) -> CodegenResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Perform pre-legalization rewrites on the function.\n","sig":null,"attributes":[{"value":"/ Perform pre-legalization rewrites on the function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":826779,"byte_end":826833,"line_start":263,"line_end":263,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3142},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":827086,"byte_end":827103,"line_start":271,"line_end":271,"column_start":12,"column_end":29},"name":"canonicalize_nans","qualname":"<Context>::canonicalize_nans","value":"fn (&mut self, isa: &dyn TargetIsa) -> CodegenResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Perform NaN canonicalizing rewrites on the function.\n","sig":null,"attributes":[{"value":"/ Perform NaN canonicalizing rewrites on the function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":827018,"byte_end":827074,"line_start":270,"line_end":270,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3143},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":827307,"byte_end":827315,"line_start":277,"line_end":277,"column_start":12,"column_end":20},"name":"legalize","qualname":"<Context>::legalize","value":"fn (&mut self, isa: &dyn TargetIsa) -> CodegenResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Run the legalizer for `isa` on the function.\n","sig":null,"attributes":[{"value":"/ Run the legalizer for `isa` on the function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":827247,"byte_end":827295,"line_start":276,"line_end":276,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3144},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":827836,"byte_end":827843,"line_start":288,"line_end":288,"column_start":12,"column_end":19},"name":"postopt","qualname":"<Context>::postopt","value":"fn (&mut self, isa: &dyn TargetIsa) -> CodegenResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Perform post-legalization rewrites on the function.\n","sig":null,"attributes":[{"value":"/ Perform post-legalization rewrites on the function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":827769,"byte_end":827824,"line_start":287,"line_end":287,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3145},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":828043,"byte_end":828054,"line_start":295,"line_end":295,"column_start":12,"column_end":23},"name":"compute_cfg","qualname":"<Context>::compute_cfg","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Compute the control flow graph.\n","sig":null,"attributes":[{"value":"/ Compute the control flow graph.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":827996,"byte_end":828031,"line_start":294,"line_end":294,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3146},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":828155,"byte_end":828170,"line_start":300,"line_end":300,"column_start":12,"column_end":27},"name":"compute_domtree","qualname":"<Context>::compute_domtree","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Compute dominator tree.\n","sig":null,"attributes":[{"value":"/ Compute dominator tree.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":828116,"byte_end":828143,"line_start":299,"line_end":299,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3147},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":828289,"byte_end":828310,"line_start":305,"line_end":305,"column_start":12,"column_end":33},"name":"compute_loop_analysis","qualname":"<Context>::compute_loop_analysis","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Compute the loop analysis.\n","sig":null,"attributes":[{"value":"/ Compute the loop analysis.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":828247,"byte_end":828277,"line_start":304,"line_end":304,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3148},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":828487,"byte_end":828496,"line_start":311,"line_end":311,"column_start":12,"column_end":21},"name":"flowgraph","qualname":"<Context>::flowgraph","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Compute the control flow graph and dominator tree.\n","sig":null,"attributes":[{"value":"/ Compute the control flow graph and dominator tree.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":828421,"byte_end":828475,"line_start":310,"line_end":310,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3149},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":828631,"byte_end":828641,"line_start":317,"line_end":317,"column_start":12,"column_end":22},"name":"simple_gvn","qualname":"<Context>::simple_gvn","value":"fn <'a, FOI> (&mut self, fisa: FOI) -> CodegenResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Perform simple GVN on the function.\n","sig":null,"attributes":[{"value":"/ Perform simple GVN on the function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":828580,"byte_end":828619,"line_start":316,"line_end":316,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3152},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":828861,"byte_end":828865,"line_start":323,"line_end":323,"column_start":12,"column_end":16},"name":"licm","qualname":"<Context>::licm","value":"fn (&mut self, isa: &dyn TargetIsa) -> CodegenResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Perform LICM on the function.\n","sig":null,"attributes":[{"value":"/ Perform LICM on the function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":828816,"byte_end":828849,"line_start":322,"line_end":322,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3153},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":829181,"byte_end":829207,"line_start":335,"line_end":335,"column_start":12,"column_end":38},"name":"eliminate_unreachable_code","qualname":"<Context>::eliminate_unreachable_code","value":"fn <'a, FOI> (&mut self, fisa: FOI) -> CodegenResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Perform unreachable code elimination.\n","sig":null,"attributes":[{"value":"/ Perform unreachable code elimination.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":829128,"byte_end":829169,"line_start":334,"line_end":334,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3156},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":829476,"byte_end":829484,"line_start":344,"line_end":344,"column_start":12,"column_end":20},"name":"regalloc","qualname":"<Context>::regalloc","value":"fn (&mut self, isa: &dyn TargetIsa) -> CodegenResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Run the register allocator.\n","sig":null,"attributes":[{"value":"/ Run the register allocator.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":829433,"byte_end":829464,"line_start":343,"line_end":343,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3157},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":829730,"byte_end":829747,"line_start":350,"line_end":350,"column_start":12,"column_end":29},"name":"prologue_epilogue","qualname":"<Context>::prologue_epilogue","value":"fn (&mut self, isa: &dyn TargetIsa) -> CodegenResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Insert prologue and epilogues after computing the stack frame layout.\n","sig":null,"attributes":[{"value":"/ Insert prologue and epilogues after computing the stack frame layout.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":829645,"byte_end":829718,"line_start":349,"line_end":349,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3158},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":830042,"byte_end":830066,"line_start":358,"line_end":358,"column_start":12,"column_end":36},"name":"redundant_reload_remover","qualname":"<Context>::redundant_reload_remover","value":"fn (&mut self, isa: &dyn TargetIsa) -> CodegenResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Do redundant-reload removal after allocation of both registers and stack slots.\n","sig":null,"attributes":[{"value":"/ Do redundant-reload removal after allocation of both registers and stack slots.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":829947,"byte_end":830030,"line_start":357,"line_end":357,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":3159},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":830317,"byte_end":830336,"line_start":366,"line_end":366,"column_start":12,"column_end":31},"name":"shrink_instructions","qualname":"<Context>::shrink_instructions","value":"fn (&mut self, isa: &dyn TargetIsa) -> CodegenResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Run the instruction shrinking pass.\n","sig":null,"attributes":[{"value":"/ Run the instruction shrinking pass.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":830266,"byte_end":830305,"line_start":365,"line_end":365,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3160},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":830661,"byte_end":830675,"line_start":375,"line_end":375,"column_start":12,"column_end":26},"name":"relax_branches","qualname":"<Context>::relax_branches","value":"fn (&mut self, isa: &dyn TargetIsa) -> CodegenResult<CodeInfo>","parent":null,"children":[],"decl_id":null,"docs":" Run the branch relaxation pass and return information about the function's code and\n read-only data.\n","sig":null,"attributes":[{"value":"/ Run the branch relaxation pass and return information about the function's code and","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":830538,"byte_end":830625,"line_start":373,"line_end":373,"column_start":5,"column_end":92}},{"value":"/ read-only data.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":830630,"byte_end":830649,"line_start":374,"line_end":374,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":3161},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":830996,"byte_end":831021,"line_start":383,"line_end":383,"column_start":12,"column_end":37},"name":"build_value_labels_ranges","qualname":"<Context>::build_value_labels_ranges","value":"fn (&self, isa: &dyn TargetIsa) -> CodegenResult<ValueLabelsRanges>","parent":null,"children":[],"decl_id":null,"docs":" Builds ranges and location for specified value labels.\n","sig":null,"attributes":[{"value":"/ Builds ranges and location for specified value labels.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":830926,"byte_end":830984,"line_start":382,"line_end":382,"column_start":5,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":3445},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/legalizer/mod.rs","byte_start":881131,"byte_end":881148,"line_start":140,"line_end":140,"column_start":8,"column_end":25},"name":"legalize_function","qualname":"::legalizer::legalize_function","value":"fn (func: &mut ir::Function, cfg: &mut ControlFlowGraph, isa: &dyn TargetIsa) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Legalize `func` for `isa`.","sig":null,"attributes":[{"value":"/ Legalize `func` for `isa`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/legalizer/mod.rs","byte_start":880970,"byte_end":881000,"line_start":135,"line_end":135,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/legalizer/mod.rs","byte_start":881001,"byte_end":881004,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ - Transform any instructions that don't have a legal representation in `isa`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/legalizer/mod.rs","byte_start":881005,"byte_end":881086,"line_start":137,"line_end":137,"column_start":1,"column_end":82}},{"value":"/ - Fill out `func.encodings`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/legalizer/mod.rs","byte_start":881087,"byte_end":881119,"line_start":138,"line_end":138,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/legalizer/mod.rs","byte_start":881120,"byte_end":881123,"line_start":139,"line_end":139,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":3647},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/redundant_reload_remover.rs","byte_start":1018192,"byte_end":1018214,"line_start":220,"line_end":220,"column_start":12,"column_end":34},"name":"RedundantReloadRemover","qualname":"::redundant_reload_remover::RedundantReloadRemover","value":"RedundantReloadRemover {  }","parent":null,"children":[{"krate":0,"index":3648},{"krate":0,"index":3649},{"krate":0,"index":3650},{"krate":0,"index":3651},{"krate":0,"index":3652},{"krate":0,"index":3653}],"decl_id":null,"docs":" The redundant reload remover's state.\n","sig":null,"attributes":[{"value":"/ The redundant reload remover's state.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/redundant_reload_remover.rs","byte_start":1018139,"byte_end":1018180,"line_start":219,"line_end":219,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3692},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/redundant_reload_remover.rs","byte_start":1043529,"byte_end":1043532,"line_start":766,"line_end":766,"column_start":12,"column_end":15},"name":"new","qualname":"<RedundantReloadRemover>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new remover state.\n","sig":null,"attributes":[{"value":"/ Create a new remover state.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/redundant_reload_remover.rs","byte_start":1043486,"byte_end":1043517,"line_start":765,"line_end":765,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3693},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/redundant_reload_remover.rs","byte_start":1044001,"byte_end":1044006,"line_start":778,"line_end":778,"column_start":12,"column_end":17},"name":"clear","qualname":"<RedundantReloadRemover>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear the state of the remover.\n","sig":null,"attributes":[{"value":"/ Clear the state of the remover.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/redundant_reload_remover.rs","byte_start":1043954,"byte_end":1043989,"line_start":777,"line_end":777,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3704},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/redundant_reload_remover.rs","byte_start":1047755,"byte_end":1047758,"line_start":881,"line_end":881,"column_start":12,"column_end":15},"name":"run","qualname":"<RedundantReloadRemover>::run","value":"fn (&mut self, isa: &dyn TargetIsa, func: &mut Function, cfg: &ControlFlowGraph) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Run the remover.\n","sig":null,"attributes":[{"value":"/ Run the remover.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/redundant_reload_remover.rs","byte_start":1047723,"byte_end":1047743,"line_start":880,"line_end":880,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":3904},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1132974,"byte_end":1132982,"line_start":290,"line_end":290,"column_start":12,"column_end":20},"name":"Liveness","qualname":"::regalloc::liveness::Liveness","value":"Liveness {  }","parent":null,"children":[{"krate":0,"index":3905},{"krate":0,"index":3906}],"decl_id":null,"docs":" Liveness analysis for a function.","sig":null,"attributes":[{"value":"/ Liveness analysis for a function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1132854,"byte_end":1132891,"line_start":287,"line_end":287,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1132892,"byte_end":1132895,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ Compute a live range for every SSA value used in the function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1132896,"byte_end":1132962,"line_start":289,"line_end":289,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3908},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1133539,"byte_end":1133542,"line_start":305,"line_end":305,"column_start":12,"column_end":15},"name":"new","qualname":"<Liveness>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty liveness analysis.","sig":null,"attributes":[{"value":"/ Create a new empty liveness analysis.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1133314,"byte_end":1133355,"line_start":301,"line_end":301,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1133360,"byte_end":1133363,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ The memory allocated for this analysis can be reused for multiple functions. Use the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1133368,"byte_end":1133456,"line_start":303,"line_end":303,"column_start":5,"column_end":93}},{"value":"/ `compute` method to actually runs the analysis for a function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1133461,"byte_end":1133527,"line_start":304,"line_end":304,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3909},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1133702,"byte_end":1133708,"line_start":313,"line_end":313,"column_start":12,"column_end":18},"name":"ranges","qualname":"<Liveness>::ranges","value":"fn (&self) -> &LiveRangeSet","parent":null,"children":[],"decl_id":null,"docs":" Current live ranges.\n","sig":null,"attributes":[{"value":"/ Current live ranges.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1133666,"byte_end":1133690,"line_start":312,"line_end":312,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3910},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1133835,"byte_end":1133840,"line_start":318,"line_end":318,"column_start":12,"column_end":17},"name":"clear","qualname":"<Liveness>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear all data structures in this liveness analysis.\n","sig":null,"attributes":[{"value":"/ Clear all data structures in this liveness analysis.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1133767,"byte_end":1133823,"line_start":317,"line_end":317,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3911},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1133986,"byte_end":1133989,"line_start":324,"line_end":324,"column_start":12,"column_end":15},"name":"get","qualname":"<Liveness>::get","value":"fn (&self, value: Value) -> Option<&LiveRange>","parent":null,"children":[],"decl_id":null,"docs":" Get the live range for `value`, if it exists.\n","sig":null,"attributes":[{"value":"/ Get the live range for `value`, if it exists.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1133925,"byte_end":1133974,"line_start":323,"line_end":323,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3912},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1134304,"byte_end":1134315,"line_start":333,"line_end":333,"column_start":12,"column_end":23},"name":"create_dead","qualname":"<Liveness>::create_dead","value":"fn <PP> (&mut self, value: Value, def: PP, affinity: Affinity) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Create a new live range for `value`.","sig":null,"attributes":[{"value":"/ Create a new live range for `value`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1134077,"byte_end":1134117,"line_start":328,"line_end":328,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1134122,"byte_end":1134125,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ The new live range will be defined at `def` with no extent, like a dead value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1134130,"byte_end":1134212,"line_start":330,"line_end":330,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1134217,"byte_end":1134220,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This asserts that `value` does not have an existing live range.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1134225,"byte_end":1134292,"line_start":332,"line_end":332,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3914},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1134782,"byte_end":1134798,"line_start":346,"line_end":346,"column_start":12,"column_end":28},"name":"move_def_locally","qualname":"<Liveness>::move_def_locally","value":"fn <PP> (&mut self, value: Value, def: PP) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Move the definition of `value` to `def`.","sig":null,"attributes":[{"value":"/ Move the definition of `value` to `def`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1134618,"byte_end":1134662,"line_start":343,"line_end":343,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1134667,"byte_end":1134670,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ The old and new def points must be in the same block, and before the end of the live range.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1134675,"byte_end":1134770,"line_start":345,"line_end":345,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":3916},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1135281,"byte_end":1135295,"line_start":359,"line_end":359,"column_start":12,"column_end":26},"name":"extend_locally","qualname":"<Liveness>::extend_locally","value":"fn (&mut self, value: Value, block: Block, user: Inst, layout: &Layout) -> &mut Affinity","parent":null,"children":[],"decl_id":null,"docs":" Locally extend the live range for `value` to reach `user`.","sig":null,"attributes":[{"value":"/ Locally extend the live range for `value` to reach `user`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1135016,"byte_end":1135078,"line_start":354,"line_end":354,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1135083,"byte_end":1135086,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ It is assumed the `value` is already live before `user` in `block`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1135091,"byte_end":1135162,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1135167,"byte_end":1135170,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the value's affinity in case that also needs to be updated.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1135175,"byte_end":1135269,"line_start":358,"line_end":358,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":3917},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1135843,"byte_end":1135848,"line_start":374,"line_end":374,"column_start":12,"column_end":17},"name":"spill","qualname":"<Liveness>::spill","value":"fn (&mut self, value: Value) -> Affinity","parent":null,"children":[],"decl_id":null,"docs":" Change the affinity of `value` to `Stack` and return the previous affinity.\n","sig":null,"attributes":[{"value":"/ Change the affinity of `value` to `Stack` and return the previous affinity.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1135752,"byte_end":1135831,"line_start":373,"line_end":373,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3918},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1136184,"byte_end":1136191,"line_start":381,"line_end":381,"column_start":12,"column_end":19},"name":"compute","qualname":"<Liveness>::compute","value":"fn (&mut self, isa: &dyn TargetIsa, func: &mut Function, cfg: &ControlFlowGraph) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Compute the live ranges of all SSA values used in `func`.\n This clears out any existing analysis stored in this data structure.\n","sig":null,"attributes":[{"value":"/ Compute the live ranges of all SSA values used in `func`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1136034,"byte_end":1136095,"line_start":379,"line_end":379,"column_start":5,"column_end":66}},{"value":"/ This clears out any existing analysis stored in this data structure.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1136100,"byte_end":1136172,"line_start":380,"line_end":380,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":3942},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1147717,"byte_end":1147733,"line_start":163,"line_end":163,"column_start":12,"column_end":28},"name":"GenericLiveRange","qualname":"::regalloc::liverange::GenericLiveRange","value":"GenericLiveRange { affinity }","parent":null,"children":[{"krate":0,"index":3944},{"krate":0,"index":3945},{"krate":0,"index":3946},{"krate":0,"index":3947},{"krate":0,"index":3948},{"krate":0,"index":3950}],"decl_id":null,"docs":" Generic live range implementation.","sig":null,"attributes":[{"value":"/ Generic live range implementation.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1147511,"byte_end":1147549,"line_start":159,"line_end":159,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1147550,"byte_end":1147553,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The intended generic parameter is `PO=Layout`, but tests are simpler with a mock order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1147554,"byte_end":1147645,"line_start":161,"line_end":161,"column_start":1,"column_end":92}},{"value":"/ Use `LiveRange` instead of using this generic directly.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1147646,"byte_end":1147705,"line_start":162,"line_end":162,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":3945},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1147976,"byte_end":1147984,"line_start":169,"line_end":169,"column_start":9,"column_end":17},"name":"affinity","qualname":"::regalloc::liverange::GenericLiveRange::affinity","value":"regalloc::affinity::Affinity","parent":{"krate":0,"index":3942},"children":[],"decl_id":null,"docs":" The preferred register allocation for this value.\n","sig":null,"attributes":[{"value":"/ The preferred register allocation for this value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1147914,"byte_end":1147967,"line_start":168,"line_end":168,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3954},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1149573,"byte_end":1149576,"line_start":214,"line_end":214,"column_start":12,"column_end":15},"name":"new","qualname":"<GenericLiveRange<PO>>::new","value":"fn (value: Value, def: ProgramPoint, affinity: Affinity) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new live range for `value` defined at `def`.","sig":null,"attributes":[{"value":"/ Create a new live range for `value` defined at `def`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1149399,"byte_end":1149456,"line_start":211,"line_end":211,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1149461,"byte_end":1149464,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The live range will be created as dead, but it can be extended with `extend_in_block()`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1149469,"byte_end":1149561,"line_start":213,"line_end":213,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":3958},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1151147,"byte_end":1151162,"line_start":251,"line_end":251,"column_start":12,"column_end":27},"name":"extend_in_block","qualname":"<GenericLiveRange<PO>>::extend_in_block","value":"fn (&mut self, block: Block, inst: Inst, order: &PO) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Extend the local interval for `block` so it reaches `to` which must belong to `block`.\n Create a live-in interval if necessary.","sig":null,"attributes":[{"value":"/ Extend the local interval for `block` so it reaches `to` which must belong to `block`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1150488,"byte_end":1150578,"line_start":240,"line_end":240,"column_start":5,"column_end":95}},{"value":"/ Create a live-in interval if necessary.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1150583,"byte_end":1150626,"line_start":241,"line_end":241,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1150631,"byte_end":1150634,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ If the live range already has a local interval in `block`, extend its end point so it","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1150639,"byte_end":1150728,"line_start":243,"line_end":243,"column_start":5,"column_end":94}},{"value":"/ includes `to`, and return false.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1150733,"byte_end":1150769,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1150774,"byte_end":1150777,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ If the live range did not previously have a local interval in `block`, add one so the value","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1150782,"byte_end":1150877,"line_start":246,"line_end":246,"column_start":5,"column_end":100}},{"value":"/ is live-in to `block`, extending to `to`. Return true.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1150882,"byte_end":1150940,"line_start":247,"line_end":247,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1150945,"byte_end":1150948,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ The return value can be used to detect if we just learned that the value is live-in to","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1150953,"byte_end":1151043,"line_start":249,"line_end":249,"column_start":5,"column_end":95}},{"value":"/ `block`. This can trigger recursive extensions in `block`'s CFG predecessor blocks.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1151048,"byte_end":1151135,"line_start":250,"line_end":250,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":3961},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1155596,"byte_end":1155603,"line_start":352,"line_end":352,"column_start":12,"column_end":19},"name":"is_dead","qualname":"<GenericLiveRange<PO>>::is_dead","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this the live range of a dead value?","sig":null,"attributes":[{"value":"/ Is this the live range of a dead value?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1155420,"byte_end":1155463,"line_start":348,"line_end":348,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1155468,"byte_end":1155471,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ A dead value has no uses, and its live range ends at the same program point where it is","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1155476,"byte_end":1155567,"line_start":350,"line_end":350,"column_start":5,"column_end":96}},{"value":"/ defined.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1155572,"byte_end":1155584,"line_start":351,"line_end":351,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3962},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1155873,"byte_end":1155881,"line_start":360,"line_end":360,"column_start":12,"column_end":20},"name":"is_local","qualname":"<GenericLiveRange<PO>>::is_local","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a local live range?","sig":null,"attributes":[{"value":"/ Is this a local live range?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1155671,"byte_end":1155702,"line_start":356,"line_end":356,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1155707,"byte_end":1155710,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ A local live range is only used in the same block where it was defined. It is allowed to span","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1155715,"byte_end":1155812,"line_start":358,"line_end":358,"column_start":5,"column_end":102}},{"value":"/ multiple basic blocks within that block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1155817,"byte_end":1155861,"line_start":359,"line_end":359,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3963},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1156145,"byte_end":1156148,"line_start":368,"line_end":368,"column_start":12,"column_end":15},"name":"def","qualname":"<GenericLiveRange<PO>>::def","value":"fn (&self) -> ProgramPoint","parent":null,"children":[],"decl_id":null,"docs":" Get the program point where this live range is defined.","sig":null,"attributes":[{"value":"/ Get the program point where this live range is defined.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1155942,"byte_end":1156001,"line_start":364,"line_end":364,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1156006,"byte_end":1156009,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This will be an block header when the value is an block argument, otherwise it is the defining","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1156014,"byte_end":1156112,"line_start":366,"line_end":366,"column_start":5,"column_end":103}},{"value":"/ instruction.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1156117,"byte_end":1156133,"line_start":367,"line_end":367,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3964},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1156416,"byte_end":1156432,"line_start":376,"line_end":376,"column_start":12,"column_end":28},"name":"move_def_locally","qualname":"<GenericLiveRange<PO>>::move_def_locally","value":"fn (&mut self, def: ProgramPoint) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Move the definition of this value to a new program point.","sig":null,"attributes":[{"value":"/ Move the definition of this value to a new program point.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1156208,"byte_end":1156269,"line_start":372,"line_end":372,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1156274,"byte_end":1156277,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ It is only valid to move the definition within the same block, and it can't be moved beyond","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1156282,"byte_end":1156377,"line_start":374,"line_end":374,"column_start":5,"column_end":100}},{"value":"/ `def_local_end()`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1156382,"byte_end":1156404,"line_start":375,"line_end":375,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3965},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1156774,"byte_end":1156787,"line_start":384,"line_end":384,"column_start":12,"column_end":25},"name":"def_local_end","qualname":"<GenericLiveRange<PO>>::def_local_end","value":"fn (&self) -> ProgramPoint","parent":null,"children":[],"decl_id":null,"docs":" Get the local end-point of this live range in the block where it is defined.","sig":null,"attributes":[{"value":"/ Get the local end-point of this live range in the block where it is defined.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1156506,"byte_end":1156586,"line_start":380,"line_end":380,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1156591,"byte_end":1156594,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ This can be the block header itself in the case of a dead block argument.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1156599,"byte_end":1156676,"line_start":382,"line_end":382,"column_start":5,"column_end":82}},{"value":"/ Otherwise, it will be the last local use or branch/jump that can reach a use.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1156681,"byte_end":1156762,"line_start":383,"line_end":383,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":3966},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1157361,"byte_end":1157377,"line_start":396,"line_end":396,"column_start":12,"column_end":28},"name":"livein_local_end","qualname":"<GenericLiveRange<PO>>::livein_local_end","value":"fn (&self, block: Block, order: &PO) -> Option<Inst>","parent":null,"children":[],"decl_id":null,"docs":" Get the local end-point of this live range in an block where it is live-in.","sig":null,"attributes":[{"value":"/ Get the local end-point of this live range in an block where it is live-in.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1156845,"byte_end":1156924,"line_start":388,"line_end":388,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1156929,"byte_end":1156932,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ If this live range is not live-in to `block`, return `None`. Otherwise, return the end-point","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1156937,"byte_end":1157033,"line_start":390,"line_end":390,"column_start":5,"column_end":101}},{"value":"/ of this live range's local interval in `block`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1157038,"byte_end":1157089,"line_start":391,"line_end":391,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1157094,"byte_end":1157097,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ If the live range is live through all of `block`, the terminator of `block` is a correct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1157102,"byte_end":1157194,"line_start":393,"line_end":393,"column_start":5,"column_end":97}},{"value":"/ answer, but it is also possible that an even later program point is returned. So don't","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1157199,"byte_end":1157289,"line_start":394,"line_end":394,"column_start":5,"column_end":95}},{"value":"/ depend on the returned `Inst` to belong to `block`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1157294,"byte_end":1157349,"line_start":395,"line_end":395,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3968},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1157952,"byte_end":1157961,"line_start":413,"line_end":413,"column_start":12,"column_end":21},"name":"is_livein","qualname":"<GenericLiveRange<PO>>::is_livein","value":"fn (&self, block: Block, order: &PO) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this value live-in to `block`?","sig":null,"attributes":[{"value":"/ Is this value live-in to `block`?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1157836,"byte_end":1157873,"line_start":410,"line_end":410,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1157878,"byte_end":1157881,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ An block argument is not considered to be live in.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1157886,"byte_end":1157940,"line_start":412,"line_end":412,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3969},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1158263,"byte_end":1158270,"line_start":421,"line_end":421,"column_start":12,"column_end":19},"name":"liveins","qualname":"<GenericLiveRange<PO>>::liveins","value":"fn <'a> (&'a self) -> impl Iterator<Item = (Block, Inst)> + 'a","parent":null,"children":[],"decl_id":null,"docs":" Get all the live-in intervals.","sig":null,"attributes":[{"value":"/ Get all the live-in intervals.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1158070,"byte_end":1158104,"line_start":417,"line_end":417,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1158109,"byte_end":1158112,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ Note that the intervals are stored in a compressed form so each entry may span multiple","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1158117,"byte_end":1158208,"line_start":419,"line_end":419,"column_start":5,"column_end":96}},{"value":"/ blocks where the value is live in.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1158213,"byte_end":1158251,"line_start":420,"line_end":420,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3973},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1158517,"byte_end":1158529,"line_start":428,"line_end":428,"column_start":12,"column_end":24},"name":"overlaps_def","qualname":"<GenericLiveRange<PO>>::overlaps_def","value":"fn (&self, def: ExpandedProgramPoint, block: Block, order: &PO) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this live range overlaps a definition in `block`.\n","sig":null,"attributes":[{"value":"/ Check if this live range overlaps a definition in `block`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1158443,"byte_end":1158505,"line_start":427,"line_end":427,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3974},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1159215,"byte_end":1159226,"line_start":447,"line_end":447,"column_start":12,"column_end":23},"name":"reaches_use","qualname":"<GenericLiveRange<PO>>::reaches_use","value":"fn (&self, user: Inst, block: Block, order: &PO) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this live range reaches a use at `user` in `block`.\n","sig":null,"attributes":[{"value":"/ Check if this live range reaches a use at `user` in `block`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1159139,"byte_end":1159203,"line_start":446,"line_end":446,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3975},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1159736,"byte_end":1159745,"line_start":461,"line_end":461,"column_start":12,"column_end":21},"name":"killed_at","qualname":"<GenericLiveRange<PO>>::killed_at","value":"fn (&self, user: Inst, block: Block, order: &PO) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this live range is killed at `user` in `block`.\n","sig":null,"attributes":[{"value":"/ Check if this live range is killed at `user` in `block`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1159664,"byte_end":1159724,"line_start":460,"line_end":460,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":8720},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1169619,"byte_end":1169630,"line_start":16,"line_end":16,"column_start":12,"column_end":23},"name":"RegisterSet","qualname":"::regalloc::register_set::RegisterSet","value":"RegisterSet {  }","parent":null,"children":[{"krate":0,"index":8721}],"decl_id":null,"docs":" Set of registers available for allocation.\n","sig":null,"attributes":[{"value":"/ Set of registers available for allocation.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1169544,"byte_end":1169590,"line_start":14,"line_end":14,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3991},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1170546,"byte_end":1170549,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<RegisterSet>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new register set with all registers available.","sig":null,"attributes":[{"value":"/ Create a new register set with all registers available.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1170294,"byte_end":1170353,"line_start":36,"line_end":36,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1170358,"byte_end":1170361,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Note that this includes *all* registers. Query the `TargetIsa` object to get a set of","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1170366,"byte_end":1170455,"line_start":38,"line_end":38,"column_start":5,"column_end":94}},{"value":"/ allocatable registers where reserved registers have been filtered out.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1170460,"byte_end":1170534,"line_start":39,"line_end":39,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3993},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1170675,"byte_end":1170680,"line_start":45,"line_end":45,"column_start":12,"column_end":17},"name":"empty","qualname":"<RegisterSet>::empty","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new register set with no registers available.\n","sig":null,"attributes":[{"value":"/ Create a new register set with no registers available.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1170605,"byte_end":1170663,"line_start":44,"line_end":44,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3995},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1170805,"byte_end":1170813,"line_start":50,"line_end":50,"column_start":12,"column_end":20},"name":"is_avail","qualname":"<RegisterSet>::is_avail","value":"fn (&self, rc: RegClass, reg: RegUnit) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the specified register is available.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the specified register is available.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1170735,"byte_end":1170793,"line_start":49,"line_end":49,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3996},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1171130,"byte_end":1171134,"line_start":58,"line_end":58,"column_start":12,"column_end":16},"name":"take","qualname":"<RegisterSet>::take","value":"fn (&mut self, rc: RegClass, reg: RegUnit) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Allocate `reg` from `rc` so it is no longer available.","sig":null,"attributes":[{"value":"/ Allocate `reg` from `rc` so it is no longer available.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1170955,"byte_end":1171013,"line_start":55,"line_end":55,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1171018,"byte_end":1171021,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ It is an error to take a register that doesn't have all of its register units available.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1171026,"byte_end":1171118,"line_start":57,"line_end":57,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":3997},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1171571,"byte_end":1171575,"line_start":71,"line_end":71,"column_start":12,"column_end":16},"name":"free","qualname":"<RegisterSet>::free","value":"fn (&mut self, rc: RegClass, reg: RegUnit) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Return `reg` and all of its register units to the set of available registers.\n","sig":null,"attributes":[{"value":"/ Return `reg` and all of its register units to the set of available registers.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1171478,"byte_end":1171559,"line_start":70,"line_end":70,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":3998},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1172102,"byte_end":1172106,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"iter","qualname":"<RegisterSet>::iter","value":"fn (&self, rc: RegClass) -> RegSetIter","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over all available registers belonging to the register class `rc`.","sig":null,"attributes":[{"value":"/ Return an iterator over all available registers belonging to the register class `rc`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1171917,"byte_end":1172006,"line_start":83,"line_end":83,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1172011,"byte_end":1172014,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This doesn't allocate anything from the set; use `take()` for that.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1172019,"byte_end":1172090,"line_start":85,"line_end":85,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3999},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1172980,"byte_end":1172995,"line_start":106,"line_end":106,"column_start":12,"column_end":27},"name":"interferes_with","qualname":"<RegisterSet>::interferes_with","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if any register units allocated out of this set interferes with units allocated out\n of `other`.","sig":null,"attributes":[{"value":"/ Check if any register units allocated out of this set interferes with units allocated out","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1172802,"byte_end":1172895,"line_start":102,"line_end":102,"column_start":5,"column_end":98}},{"value":"/ of `other`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1172900,"byte_end":1172915,"line_start":103,"line_end":103,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1172920,"byte_end":1172923,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ This assumes that unused bits are 1.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1172928,"byte_end":1172968,"line_start":105,"line_end":105,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":4001},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1173310,"byte_end":1173319,"line_start":115,"line_end":115,"column_start":12,"column_end":21},"name":"intersect","qualname":"<RegisterSet>::intersect","value":"fn (&mut self, other: &Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Intersect this set of registers with `other`. This has the effect of removing any register\n units from this set that are not in `other`.\n","sig":null,"attributes":[{"value":"/ Intersect this set of registers with `other`. This has the effect of removing any register","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1173151,"byte_end":1173245,"line_start":113,"line_end":113,"column_start":5,"column_end":99}},{"value":"/ units from this set that are not in `other`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1173250,"byte_end":1173298,"line_start":114,"line_end":114,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":4002},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1173575,"byte_end":1173582,"line_start":123,"line_end":123,"column_start":12,"column_end":19},"name":"display","qualname":"<RegisterSet>::display","value":"fn <'a, R> (&self, regs: R) -> DisplayRegisterSet<'a>","parent":null,"children":[],"decl_id":null,"docs":" Return an object that can display this register set, using the register info from the\n target ISA.\n","sig":null,"attributes":[{"value":"/ Return an object that can display this register set, using the register info from the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1173454,"byte_end":1173543,"line_start":121,"line_end":121,"column_start":5,"column_end":94}},{"value":"/ target ISA.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1173548,"byte_end":1173563,"line_start":122,"line_end":122,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8724},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1173811,"byte_end":1173821,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"RegSetIter","qualname":"::regalloc::register_set::RegSetIter","value":"RegSetIter {  }","parent":null,"children":[{"krate":0,"index":8725}],"decl_id":null,"docs":" Iterator over available registers in a register class.\n","sig":null,"attributes":[{"value":"/ Iterator over available registers in a register class.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1173724,"byte_end":1173782,"line_start":128,"line_end":128,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4011},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1174840,"byte_end":1174845,"line_start":166,"line_end":166,"column_start":12,"column_end":17},"name":"rnext","qualname":"<RegSetIter>::rnext","value":"fn (&mut self) -> Option<RegUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4013},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1175709,"byte_end":1175727,"line_start":193,"line_end":193,"column_start":12,"column_end":30},"name":"DisplayRegisterSet","qualname":"::regalloc::register_set::DisplayRegisterSet","value":"","parent":null,"children":[],"decl_id":null,"docs":" Displaying an `RegisterSet` correctly requires the associated `RegInfo` from the target ISA.\n","sig":null,"attributes":[{"value":"/ Displaying an `RegisterSet` correctly requires the associated `RegInfo` from the target ISA.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1175601,"byte_end":1175697,"line_start":192,"line_end":192,"column_start":1,"column_end":97}}]},{"kind":"Struct","id":{"krate":0,"index":8730},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1183068,"byte_end":1183075,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"VirtReg","qualname":"::regalloc::virtregs::VirtReg","value":"","parent":null,"children":[],"decl_id":null,"docs":" A virtual register reference.\n","sig":null,"attributes":[{"value":"/ A virtual register reference.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1182962,"byte_end":1182995,"line_start":27,"line_end":27,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":4045},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1183328,"byte_end":1183336,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"VirtRegs","qualname":"::regalloc::virtregs::VirtRegs","value":"VirtRegs {  }","parent":null,"children":[{"krate":0,"index":4046},{"krate":0,"index":4047},{"krate":0,"index":4048},{"krate":0,"index":4049},{"krate":0,"index":4050},{"krate":0,"index":4051}],"decl_id":null,"docs":" Collection of virtual registers.","sig":null,"attributes":[{"value":"/ Collection of virtual registers.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1183151,"byte_end":1183187,"line_start":34,"line_end":34,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1183188,"byte_end":1183191,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Each virtual register is a list of values. Also maintain a map from values to their unique","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1183192,"byte_end":1183286,"line_start":36,"line_end":36,"column_start":1,"column_end":95}},{"value":"/ virtual register, if any.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1183287,"byte_end":1183316,"line_start":37,"line_end":37,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4053},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1184108,"byte_end":1184111,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"new","qualname":"<VirtRegs>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new virtual register collection.\n","sig":null,"attributes":[{"value":"/ Create a new virtual register collection.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1184051,"byte_end":1184096,"line_start":60,"line_end":60,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4054},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1184446,"byte_end":1184451,"line_start":73,"line_end":73,"column_start":12,"column_end":17},"name":"clear","qualname":"<VirtRegs>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear all virtual registers.\n","sig":null,"attributes":[{"value":"/ Clear all virtual registers.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1184402,"byte_end":1184434,"line_start":72,"line_end":72,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4055},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1184738,"byte_end":1184741,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"get","qualname":"<VirtRegs>::get","value":"fn (&self, value: Value) -> Option<VirtReg>","parent":null,"children":[],"decl_id":null,"docs":" Get the virtual register containing `value`, if any.\n","sig":null,"attributes":[{"value":"/ Get the virtual register containing `value`, if any.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1184670,"byte_end":1184726,"line_start":82,"line_end":82,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4056},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1184883,"byte_end":1184889,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"name":"values","qualname":"<VirtRegs>::values","value":"fn (&self, vreg: VirtReg) -> &[Value]","parent":null,"children":[],"decl_id":null,"docs":" Get the list of values in `vreg`.\n","sig":null,"attributes":[{"value":"/ Get the list of values in `vreg`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1184834,"byte_end":1184871,"line_start":87,"line_end":87,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4057},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1185042,"byte_end":1185054,"line_start":93,"line_end":93,"column_start":12,"column_end":24},"name":"all_virtregs","qualname":"<VirtRegs>::all_virtregs","value":"fn (&self) -> Keys<VirtReg>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over all virtual registers.\n","sig":null,"attributes":[{"value":"/ Get an iterator over all virtual registers.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1184983,"byte_end":1185030,"line_start":92,"line_end":92,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4058},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1185420,"byte_end":1185436,"line_start":102,"line_end":102,"column_start":12,"column_end":28},"name":"congruence_class","qualname":"<VirtRegs>::congruence_class","value":"fn <'a, 'b> (&'a self, value: &'b Value) -> &'b [Value]","parent":null,"children":[],"decl_id":null,"docs":" Get the congruence class of `value`.","sig":null,"attributes":[{"value":"/ Get the congruence class of `value`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1185118,"byte_end":1185158,"line_start":97,"line_end":97,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1185163,"byte_end":1185166,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ If `value` belongs to a virtual register, the congruence class is the values of the virtual","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1185171,"byte_end":1185266,"line_start":99,"line_end":99,"column_start":5,"column_end":100}},{"value":"/ register. Otherwise it is just the value itself.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1185271,"byte_end":1185323,"line_start":100,"line_end":100,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4063},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1185703,"byte_end":1185713,"line_start":111,"line_end":111,"column_start":12,"column_end":22},"name":"same_class","qualname":"<VirtRegs>::same_class","value":"fn (&self, a: Value, b: Value) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if `a` and `b` belong to the same congruence class.\n","sig":null,"attributes":[{"value":"/ Check if `a` and `b` belong to the same congruence class.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1185630,"byte_end":1185691,"line_start":110,"line_end":110,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4064},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1186072,"byte_end":1186083,"line_start":121,"line_end":121,"column_start":12,"column_end":23},"name":"sort_values","qualname":"<VirtRegs>::sort_values","value":"fn (&mut self, vreg: VirtReg, func: &Function, preorder: &DominatorTreePreorder) -> &[Value]","parent":null,"children":[],"decl_id":null,"docs":" Sort the values in `vreg` according to the dominator tree pre-order.","sig":null,"attributes":[{"value":"/ Sort the values in `vreg` according to the dominator tree pre-order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1185886,"byte_end":1185958,"line_start":118,"line_end":118,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1185963,"byte_end":1185966,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Returns the slice of sorted values which `values(vreg)` will also return from now on.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1185971,"byte_end":1186060,"line_start":120,"line_end":120,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":4066},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1186703,"byte_end":1186716,"line_start":138,"line_end":138,"column_start":12,"column_end":25},"name":"insert_single","qualname":"<VirtRegs>::insert_single","value":"fn (&mut self, big: Value, single: Value, func: &Function, preorder: &DominatorTreePreorder) -> VirtReg","parent":null,"children":[],"decl_id":null,"docs":" Insert a single value into a sorted virtual register.","sig":null,"attributes":[{"value":"/ Insert a single value into a sorted virtual register.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1186369,"byte_end":1186426,"line_start":132,"line_end":132,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1186431,"byte_end":1186434,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ It is assumed that the virtual register containing `big` is already sorted by","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1186439,"byte_end":1186520,"line_start":134,"line_end":134,"column_start":5,"column_end":86}},{"value":"/ `sort_values()`, and that `single` does not already belong to a virtual register.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1186525,"byte_end":1186610,"line_start":135,"line_end":135,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1186615,"byte_end":1186618,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ If `big` is not part of a virtual register, one will be created.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1186623,"byte_end":1186691,"line_start":137,"line_end":137,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4069},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1187807,"byte_end":1187813,"line_start":172,"line_end":172,"column_start":12,"column_end":18},"name":"remove","qualname":"<VirtRegs>::remove","value":"fn (&mut self, vreg: VirtReg) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove a virtual register.","sig":null,"attributes":[{"value":"/ Remove a virtual register.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1187640,"byte_end":1187670,"line_start":168,"line_end":168,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1187675,"byte_end":1187678,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The values in `vreg` become singletons, and the virtual register number may be reused in","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1187683,"byte_end":1187775,"line_start":170,"line_end":170,"column_start":5,"column_end":97}},{"value":"/ the future.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1187780,"byte_end":1187795,"line_start":171,"line_end":171,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4072},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1188712,"byte_end":1188717,"line_start":197,"line_end":197,"column_start":12,"column_end":17},"name":"unify","qualname":"<VirtRegs>::unify","value":"fn (&mut self, values: &[Value]) -> VirtReg","parent":null,"children":[],"decl_id":null,"docs":" Unify `values` into a single virtual register.","sig":null,"attributes":[{"value":"/ Unify `values` into a single virtual register.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1188357,"byte_end":1188407,"line_start":190,"line_end":190,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1188412,"byte_end":1188415,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ The values in the slice can be singletons or they can belong to a virtual register already.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1188420,"byte_end":1188515,"line_start":192,"line_end":192,"column_start":5,"column_end":100}},{"value":"/ If a value belongs to a virtual register, all of the values in that register must be","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1188520,"byte_end":1188608,"line_start":193,"line_end":193,"column_start":5,"column_end":93}},{"value":"/ present.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1188613,"byte_end":1188625,"line_start":194,"line_end":194,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1188630,"byte_end":1188633,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ The values are assumed to already be in topological order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1188638,"byte_end":1188700,"line_start":196,"line_end":196,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":4088},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1192888,"byte_end":1192893,"line_start":317,"line_end":317,"column_start":12,"column_end":17},"name":"union","qualname":"<VirtRegs>::union","value":"fn (&mut self, a: Value, b: Value) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Union the two sets containing `a` and `b`.","sig":null,"attributes":[{"value":"/ Union the two sets containing `a` and `b`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1192698,"byte_end":1192744,"line_start":313,"line_end":313,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1192749,"byte_end":1192752,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ This ensures that `a` and `b` will belong to the same virtual register after calling","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1192757,"byte_end":1192845,"line_start":315,"line_end":315,"column_start":5,"column_end":93}},{"value":"/ `finish_union_find()`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1192850,"byte_end":1192876,"line_start":316,"line_end":316,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":4089},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1194878,"byte_end":1194895,"line_start":364,"line_end":364,"column_start":12,"column_end":29},"name":"finish_union_find","qualname":"<VirtRegs>::finish_union_find","value":"fn (&mut self, mut new_vregs: Option<&mut Vec<VirtReg>>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Compute virtual registers based on previous calls to `union(a, b)`.","sig":null,"attributes":[{"value":"/ Compute virtual registers based on previous calls to `union(a, b)`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1194317,"byte_end":1194388,"line_start":354,"line_end":354,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1194393,"byte_end":1194396,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This terminates the union-find algorithm, so the next time `union()` is called, it is for a","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1194401,"byte_end":1194496,"line_start":356,"line_end":356,"column_start":5,"column_end":100}},{"value":"/ new independent batch of values.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1194501,"byte_end":1194537,"line_start":357,"line_end":357,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1194542,"byte_end":1194545,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ The values in each virtual register will be ordered according to when they were first","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1194550,"byte_end":1194639,"line_start":359,"line_end":359,"column_start":5,"column_end":94}},{"value":"/ passed to `union()`, but backwards. It is expected that `sort_values()` will be used to","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1194644,"byte_end":1194735,"line_start":360,"line_end":360,"column_start":5,"column_end":96}},{"value":"/ create a more sensible value order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1194740,"byte_end":1194779,"line_start":361,"line_end":361,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1194784,"byte_end":1194787,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ The new virtual registers will be appended to `new_vregs`, if present.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1194792,"byte_end":1194866,"line_start":363,"line_end":363,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8768},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1200791,"byte_end":1200801,"line_start":22,"line_end":22,"column_start":5,"column_end":15},"name":"Unassigned","qualname":"::regalloc::affinity::Affinity::Unassigned","value":"Affinity::Unassigned","parent":{"krate":0,"index":8767},"children":[],"decl_id":null,"docs":" No affinity.","sig":null,"attributes":[{"value":"/ No affinity.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1200609,"byte_end":1200625,"line_start":18,"line_end":18,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1200630,"byte_end":1200633,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ This indicates a value that is not defined or used by any real instructions. It is a ghost","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1200638,"byte_end":1200732,"line_start":20,"line_end":20,"column_start":5,"column_end":99}},{"value":"/ value that won't appear in the final program.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1200737,"byte_end":1200786,"line_start":21,"line_end":21,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8770},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1200874,"byte_end":1200879,"line_start":25,"line_end":25,"column_start":5,"column_end":10},"name":"Stack","qualname":"::regalloc::affinity::Affinity::Stack","value":"Affinity::Stack","parent":{"krate":0,"index":8767},"children":[],"decl_id":null,"docs":" This value should be placed in a spill slot on the stack.\n","sig":null,"attributes":[{"value":"/ This value should be placed in a spill slot on the stack.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1200808,"byte_end":1200869,"line_start":24,"line_end":24,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8772},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1200955,"byte_end":1200958,"line_start":28,"line_end":28,"column_start":5,"column_end":8},"name":"Reg","qualname":"::regalloc::affinity::Affinity::Reg","value":"Affinity::Reg(RegClassIndex)","parent":{"krate":0,"index":8767},"children":[],"decl_id":null,"docs":" This value prefers a register from the given register class.\n","sig":null,"attributes":[{"value":"/ This value prefers a register from the given register class.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1200886,"byte_end":1200950,"line_start":27,"line_end":27,"column_start":5,"column_end":69}}]},{"kind":"Enum","id":{"krate":0,"index":8767},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1200594,"byte_end":1200602,"line_start":17,"line_end":17,"column_start":10,"column_end":18},"name":"Affinity","qualname":"::regalloc::affinity::Affinity","value":"Affinity::{Unassigned, Stack, Reg}","parent":null,"children":[{"krate":0,"index":8768},{"krate":0,"index":8770},{"krate":0,"index":8772}],"decl_id":null,"docs":" Preferred register allocation for an SSA value.\n","sig":null,"attributes":[{"value":"/ Preferred register allocation for an SSA value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1200503,"byte_end":1200554,"line_start":15,"line_end":15,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4105},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1201274,"byte_end":1201277,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<Affinity>::new","value":"fn (constraint: &OperandConstraint) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an affinity that satisfies a single constraint.","sig":null,"attributes":[{"value":"/ Create an affinity that satisfies a single constraint.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1201087,"byte_end":1201145,"line_start":38,"line_end":38,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1201150,"byte_end":1201153,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ This will never create an `Affinity::Unassigned`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1201158,"byte_end":1201211,"line_start":40,"line_end":40,"column_start":5,"column_end":58}},{"value":"/ Use the `Default` implementation for that.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1201216,"byte_end":1201262,"line_start":41,"line_end":41,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4106},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1201560,"byte_end":1201563,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"abi","qualname":"<Affinity>::abi","value":"fn (arg: &AbiParam, isa: &dyn TargetIsa) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an affinity that matches an ABI argument for `isa`.\n","sig":null,"attributes":[{"value":"/ Create an affinity that matches an ABI argument for `isa`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1201486,"byte_end":1201548,"line_start":50,"line_end":50,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":4107},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1201914,"byte_end":1201927,"line_start":60,"line_end":60,"column_start":12,"column_end":25},"name":"is_unassigned","qualname":"<Affinity>::is_unassigned","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this the `Unassigned` affinity?\n","sig":null,"attributes":[{"value":"/ Is this the `Unassigned` affinity?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1201864,"byte_end":1201902,"line_start":59,"line_end":59,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":4108},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1202091,"byte_end":1202097,"line_start":68,"line_end":68,"column_start":12,"column_end":18},"name":"is_reg","qualname":"<Affinity>::is_reg","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this the `Reg` affinity?\n","sig":null,"attributes":[{"value":"/ Is this the `Reg` affinity?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1202048,"byte_end":1202079,"line_start":67,"line_end":67,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":4109},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1202259,"byte_end":1202267,"line_start":76,"line_end":76,"column_start":12,"column_end":20},"name":"is_stack","qualname":"<Affinity>::is_stack","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this the `Stack` affinity?\n","sig":null,"attributes":[{"value":"/ Is this the `Stack` affinity?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1202214,"byte_end":1202247,"line_start":75,"line_end":75,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":4110},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1202584,"byte_end":1202589,"line_start":87,"line_end":87,"column_start":12,"column_end":17},"name":"merge","qualname":"<Affinity>::merge","value":"fn (&mut self, constraint: &OperandConstraint, reginfo: &RegInfo) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Merge an operand constraint into this affinity.","sig":null,"attributes":[{"value":"/ Merge an operand constraint into this affinity.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1202383,"byte_end":1202434,"line_start":83,"line_end":83,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1202439,"byte_end":1202442,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that this does not guarantee that the register allocator will pick a register that","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1202447,"byte_end":1202538,"line_start":85,"line_end":85,"column_start":5,"column_end":96}},{"value":"/ satisfies the constraint.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1202543,"byte_end":1202572,"line_start":86,"line_end":86,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":4111},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1203507,"byte_end":1203514,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"display","qualname":"<Affinity>::display","value":"fn <'a, R> (self, regs: R) -> DisplayAffinity<'a>","parent":null,"children":[],"decl_id":null,"docs":" Return an object that can display this value affinity, using the register info from the\n target ISA.\n","sig":null,"attributes":[{"value":"/ Return an object that can display this value affinity, using the register info from the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1203384,"byte_end":1203475,"line_start":105,"line_end":105,"column_start":5,"column_end":96}},{"value":"/ target ISA.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1203480,"byte_end":1203495,"line_start":106,"line_end":106,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4114},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1203746,"byte_end":1203761,"line_start":113,"line_end":113,"column_start":12,"column_end":27},"name":"DisplayAffinity","qualname":"::regalloc::affinity::DisplayAffinity","value":"","parent":null,"children":[],"decl_id":null,"docs":" Displaying an `Affinity` correctly requires the associated `RegInfo` from the target ISA.\n","sig":null,"attributes":[{"value":"/ Displaying an `Affinity` correctly requires the associated `RegInfo` from the target ISA.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1203641,"byte_end":1203734,"line_start":112,"line_end":112,"column_start":1,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":4319},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/context.rs","byte_start":1253628,"byte_end":1253635,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"Context","qualname":"::regalloc::context::Context","value":"Context {  }","parent":null,"children":[{"krate":0,"index":4320},{"krate":0,"index":4321},{"krate":0,"index":4322},{"krate":0,"index":4323},{"krate":0,"index":4324},{"krate":0,"index":4325},{"krate":0,"index":4326},{"krate":0,"index":4327}],"decl_id":null,"docs":" Persistent memory allocations for register allocation.\n","sig":null,"attributes":[{"value":"/ Persistent memory allocations for register allocation.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/context.rs","byte_start":1253558,"byte_end":1253616,"line_start":27,"line_end":27,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4329},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/context.rs","byte_start":1254041,"byte_end":1254044,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<Context>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new context for register allocation.","sig":null,"attributes":[{"value":"/ Create a new context for register allocation.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/context.rs","byte_start":1253856,"byte_end":1253905,"line_start":40,"line_end":40,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/context.rs","byte_start":1253910,"byte_end":1253913,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This context should be reused for multiple functions in order to avoid repeated memory","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/context.rs","byte_start":1253918,"byte_end":1254008,"line_start":42,"line_end":42,"column_start":5,"column_end":95}},{"value":"/ allocations.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/context.rs","byte_start":1254013,"byte_end":1254029,"line_start":43,"line_end":43,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":4330},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/context.rs","byte_start":1254467,"byte_end":1254472,"line_start":58,"line_end":58,"column_start":12,"column_end":17},"name":"clear","qualname":"<Context>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear all data structures in this context.\n","sig":null,"attributes":[{"value":"/ Clear all data structures in this context.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/context.rs","byte_start":1254409,"byte_end":1254455,"line_start":57,"line_end":57,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4331},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/context.rs","byte_start":1254786,"byte_end":1254794,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"liveness","qualname":"<Context>::liveness","value":"fn (&self) -> &Liveness","parent":null,"children":[],"decl_id":null,"docs":" Current values liveness state.\n","sig":null,"attributes":[{"value":"/ Current values liveness state.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/context.rs","byte_start":1254740,"byte_end":1254774,"line_start":69,"line_end":69,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":4332},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/context.rs","byte_start":1255077,"byte_end":1255080,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"run","qualname":"<Context>::run","value":"fn (&mut self, isa: &dyn TargetIsa, func: &mut Function, cfg: &mut ControlFlowGraph, domtree: &mut DominatorTree) -> CodegenResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Allocate registers in `func`.","sig":null,"attributes":[{"value":"/ Allocate registers in `func`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/context.rs","byte_start":1254851,"byte_end":1254884,"line_start":74,"line_end":74,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/context.rs","byte_start":1254889,"byte_end":1254892,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ After register allocation, all values in `func` have been assigned to a register or stack","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/context.rs","byte_start":1254897,"byte_end":1254990,"line_start":76,"line_end":76,"column_start":5,"column_end":98}},{"value":"/ location that is consistent with instruction encoding constraints.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/context.rs","byte_start":1254995,"byte_end":1255065,"line_start":77,"line_end":77,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":8791},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1261248,"byte_end":1261257,"line_start":26,"line_end":26,"column_start":12,"column_end":21},"name":"Diversion","qualname":"::regalloc::diversion::Diversion","value":"Diversion { from, to }","parent":null,"children":[{"krate":0,"index":8792},{"krate":0,"index":8793}],"decl_id":null,"docs":" A diversion of a value from its original location to a new register or stack location.","sig":null,"attributes":[{"value":"/ A diversion of a value from its original location to a new register or stack location.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1260857,"byte_end":1260947,"line_start":18,"line_end":18,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1260948,"byte_end":1260951,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ In IR, a diversion is represented by a `regmove` instruction, possibly a chain of them for the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1260952,"byte_end":1261050,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/ same value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1261051,"byte_end":1261066,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1261067,"byte_end":1261070,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ When tracking diversions, the `from` field is the original assigned value location, and `to` is","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1261071,"byte_end":1261170,"line_start":23,"line_end":23,"column_start":1,"column_end":100}},{"value":"/ the current one.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1261171,"byte_end":1261191,"line_start":24,"line_end":24,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":8792},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1261305,"byte_end":1261309,"line_start":28,"line_end":28,"column_start":9,"column_end":13},"name":"from","qualname":"::regalloc::diversion::Diversion::from","value":"ir::valueloc::ValueLoc","parent":{"krate":0,"index":8791},"children":[],"decl_id":null,"docs":" The original value location.\n","sig":null,"attributes":[{"value":"/ The original value location.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1261264,"byte_end":1261296,"line_start":27,"line_end":27,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":8793},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1261365,"byte_end":1261367,"line_start":30,"line_end":30,"column_start":9,"column_end":11},"name":"to","qualname":"::regalloc::diversion::Diversion::to","value":"ir::valueloc::ValueLoc","parent":{"krate":0,"index":8791},"children":[],"decl_id":null,"docs":" The current value location.\n","sig":null,"attributes":[{"value":"/ The current value location.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1261325,"byte_end":1261356,"line_start":29,"line_end":29,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":4355},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1261440,"byte_end":1261443,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<Diversion>::new","value":"fn (from: ValueLoc, to: ValueLoc) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Make a new diversion.\n","sig":null,"attributes":[{"value":"/ Make a new diversion.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1261403,"byte_end":1261428,"line_start":34,"line_end":34,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":8806},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1261652,"byte_end":1261665,"line_start":43,"line_end":43,"column_start":12,"column_end":25},"name":"RegDiversions","qualname":"::regalloc::diversion::RegDiversions","value":"RegDiversions {  }","parent":null,"children":[{"krate":0,"index":8807}],"decl_id":null,"docs":" Keep track of diversions in an block.\n","sig":null,"attributes":[{"value":"/ Keep track of diversions in an block.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1261582,"byte_end":1261623,"line_start":41,"line_end":41,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":4356},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1261941,"byte_end":1261959,"line_start":55,"line_end":55,"column_start":12,"column_end":30},"name":"EntryRegDiversions","qualname":"::regalloc::diversion::EntryRegDiversions","value":"EntryRegDiversions {  }","parent":null,"children":[{"krate":0,"index":4357}],"decl_id":null,"docs":" Map block to their matching RegDiversions at basic blocks entry.\n","sig":null,"attributes":[{"value":"/ Map block to their matching RegDiversions at basic blocks entry.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1261861,"byte_end":1261929,"line_start":54,"line_end":54,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":4359},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1262095,"byte_end":1262098,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"new","qualname":"<RegDiversions>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty diversion tracker.\n","sig":null,"attributes":[{"value":"/ Create a new empty diversion tracker.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1262042,"byte_end":1262083,"line_start":60,"line_end":60,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":4360},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1262278,"byte_end":1262283,"line_start":68,"line_end":68,"column_start":12,"column_end":17},"name":"clear","qualname":"<RegDiversions>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear the content of the diversions, to reset the state of the compiler.\n","sig":null,"attributes":[{"value":"/ Clear the content of the diversions, to reset the state of the compiler.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1262190,"byte_end":1262266,"line_start":67,"line_end":67,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":4361},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1262378,"byte_end":1262386,"line_start":73,"line_end":73,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<RegDiversions>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Are there any diversions?\n","sig":null,"attributes":[{"value":"/ Are there any diversions?","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1262337,"byte_end":1262366,"line_start":72,"line_end":72,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":4362},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1262508,"byte_end":1262517,"line_start":78,"line_end":78,"column_start":12,"column_end":21},"name":"diversion","qualname":"<RegDiversions>::diversion","value":"fn (&self, value: Value) -> Option<&Diversion>","parent":null,"children":[],"decl_id":null,"docs":" Get the current diversion of `value`, if any.\n","sig":null,"attributes":[{"value":"/ Get the current diversion of `value`, if any.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1262447,"byte_end":1262496,"line_start":77,"line_end":77,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4363},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1262650,"byte_end":1262654,"line_start":83,"line_end":83,"column_start":12,"column_end":16},"name":"iter","qualname":"<RegDiversions>::iter","value":"fn (&self) -> Iter<'_, Value, Diversion>","parent":null,"children":[],"decl_id":null,"docs":" Get all current diversions.\n","sig":null,"attributes":[{"value":"/ Get all current diversions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1262607,"byte_end":1262638,"line_start":82,"line_end":82,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":4364},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1262850,"byte_end":1262853,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"name":"get","qualname":"<RegDiversions>::get","value":"fn (&self, value: Value, locations: &ValueLocations) -> ValueLoc","parent":null,"children":[],"decl_id":null,"docs":" Get the current location for `value`. Fall back to the assignment map for non-diverted\n values\n","sig":null,"attributes":[{"value":"/ Get the current location for `value`. Fall back to the assignment map for non-diverted","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1262733,"byte_end":1262823,"line_start":87,"line_end":87,"column_start":5,"column_end":95}},{"value":"/ values","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1262828,"byte_end":1262838,"line_start":88,"line_end":88,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":4365},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1263146,"byte_end":1263149,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"reg","qualname":"<RegDiversions>::reg","value":"fn (&self, value: Value, locations: &ValueLocations) -> RegUnit","parent":null,"children":[],"decl_id":null,"docs":" Get the current register location for `value`, or panic if `value` isn't in a register.\n","sig":null,"attributes":[{"value":"/ Get the current register location for `value`, or panic if `value` isn't in a register.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1263043,"byte_end":1263134,"line_start":96,"line_end":96,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":4366},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1263373,"byte_end":1263378,"line_start":102,"line_end":102,"column_start":12,"column_end":17},"name":"stack","qualname":"<RegDiversions>::stack","value":"fn (&self, value: Value, locations: &ValueLocations) -> StackSlot","parent":null,"children":[],"decl_id":null,"docs":" Get the current stack location for `value`, or panic if `value` isn't in a stack slot.\n","sig":null,"attributes":[{"value":"/ Get the current stack location for `value`, or panic if `value` isn't in a stack slot.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1263271,"byte_end":1263361,"line_start":101,"line_end":101,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":4368},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1264433,"byte_end":1264440,"line_start":131,"line_end":131,"column_start":12,"column_end":19},"name":"regmove","qualname":"<RegDiversions>::regmove","value":"fn (&mut self, value: Value, from: RegUnit, to: RegUnit) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Record a register -> register move.\n","sig":null,"attributes":[{"value":"/ Record a register -> register move.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1264382,"byte_end":1264421,"line_start":130,"line_end":130,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4369},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1264623,"byte_end":1264631,"line_start":136,"line_end":136,"column_start":12,"column_end":20},"name":"regspill","qualname":"<RegDiversions>::regspill","value":"fn (&mut self, value: Value, from: RegUnit, to: StackSlot) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Record a register -> stack move.\n","sig":null,"attributes":[{"value":"/ Record a register -> stack move.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1264575,"byte_end":1264611,"line_start":135,"line_end":135,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":4370},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1264818,"byte_end":1264825,"line_start":141,"line_end":141,"column_start":12,"column_end":19},"name":"regfill","qualname":"<RegDiversions>::regfill","value":"fn (&mut self, value: Value, from: StackSlot, to: RegUnit) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Record a stack -> register move.\n","sig":null,"attributes":[{"value":"/ Record a stack -> register move.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1264770,"byte_end":1264806,"line_start":140,"line_end":140,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":4371},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1265127,"byte_end":1265132,"line_start":149,"line_end":149,"column_start":12,"column_end":17},"name":"apply","qualname":"<RegDiversions>::apply","value":"fn (&mut self, inst: &InstructionData) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Apply the effect of `inst`.","sig":null,"attributes":[{"value":"/ Apply the effect of `inst`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1264964,"byte_end":1264995,"line_start":145,"line_end":145,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1265000,"byte_end":1265003,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ If `inst` is a `regmove`, `regfill`, or `regspill` instruction, update the diversions to","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1265008,"byte_end":1265100,"line_start":147,"line_end":147,"column_start":5,"column_end":97}},{"value":"/ match.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1265105,"byte_end":1265115,"line_start":148,"line_end":148,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":4372},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1265922,"byte_end":1265928,"line_start":176,"line_end":176,"column_start":12,"column_end":18},"name":"remove","qualname":"<RegDiversions>::remove","value":"fn (&mut self, value: Value) -> Option<ValueLoc>","parent":null,"children":[],"decl_id":null,"docs":" Drop any recorded move for `value`.","sig":null,"attributes":[{"value":"/ Drop any recorded move for `value`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1265803,"byte_end":1265842,"line_start":173,"line_end":173,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1265847,"byte_end":1265850,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ Returns the `to` location of the removed diversion.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1265855,"byte_end":1265910,"line_start":175,"line_end":175,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4374},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1266258,"byte_end":1266266,"line_start":183,"line_end":183,"column_start":12,"column_end":20},"name":"at_block","qualname":"<RegDiversions>::at_block","value":"fn (&mut self, entry_diversions: &EntryRegDiversions, block: Block) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of the current diversions to the recorded diversions at the entry of the\n given `block`. The recoded diversions is available after coloring on `func.entry_diversions`\n field.\n","sig":null,"attributes":[{"value":"/ Resets the state of the current diversions to the recorded diversions at the entry of the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1266037,"byte_end":1266130,"line_start":180,"line_end":180,"column_start":5,"column_end":98}},{"value":"/ given `block`. The recoded diversions is available after coloring on `func.entry_diversions`","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1266135,"byte_end":1266231,"line_start":181,"line_end":181,"column_start":5,"column_end":101}},{"value":"/ field.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1266236,"byte_end":1266246,"line_start":182,"line_end":182,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":4375},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1266818,"byte_end":1266832,"line_start":196,"line_end":196,"column_start":12,"column_end":26},"name":"save_for_block","qualname":"<RegDiversions>::save_for_block","value":"fn (&mut self, entry_diversions: &mut EntryRegDiversions, target: Block) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Copy the current state of the diversions, and save it for the entry of the `block` given as\n argument.","sig":null,"attributes":[{"value":"/ Copy the current state of the diversions, and save it for the entry of the `block` given as","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1266544,"byte_end":1266639,"line_start":191,"line_end":191,"column_start":5,"column_end":100}},{"value":"/ argument.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1266644,"byte_end":1266657,"line_start":192,"line_end":192,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1266662,"byte_end":1266665,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ Note: This function can only be called once on a `Block` with a given `entry_diversions`","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1266670,"byte_end":1266762,"line_start":194,"line_end":194,"column_start":5,"column_end":97}},{"value":"/ argument, otherwise it would panic.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1266767,"byte_end":1266806,"line_start":195,"line_end":195,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4376},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1267504,"byte_end":1267521,"line_start":213,"line_end":213,"column_start":12,"column_end":29},"name":"check_block_entry","qualname":"<RegDiversions>::check_block_entry","value":"fn (&self, entry_diversions: &EntryRegDiversions, target: Block) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check that the recorded entry for a given `block` matches what is recorded in the\n `entry_diversions`.\n","sig":null,"attributes":[{"value":"/ Check that the recorded entry for a given `block` matches what is recorded in the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1267379,"byte_end":1267464,"line_start":211,"line_end":211,"column_start":5,"column_end":90}},{"value":"/ `entry_diversions`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1267469,"byte_end":1267492,"line_start":212,"line_end":212,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4377},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1268124,"byte_end":1268131,"line_start":232,"line_end":232,"column_start":12,"column_end":19},"name":"display","qualname":"<RegDiversions>::display","value":"fn <'a, R> (&'a self, regs: R) -> DisplayDiversions<'a>","parent":null,"children":[],"decl_id":null,"docs":" Return an object that can display the diversions.\n","sig":null,"attributes":[{"value":"/ Return an object that can display the diversions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1268059,"byte_end":1268112,"line_start":231,"line_end":231,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4381},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1268393,"byte_end":1268396,"line_start":239,"line_end":239,"column_start":12,"column_end":15},"name":"new","qualname":"<EntryRegDiversions>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty entry diversion, to associate diversions to each block entry.\n","sig":null,"attributes":[{"value":"/ Create a new empty entry diversion, to associate diversions to each block entry.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1268297,"byte_end":1268381,"line_start":238,"line_end":238,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":4382},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1268487,"byte_end":1268492,"line_start":245,"line_end":245,"column_start":12,"column_end":17},"name":"clear","qualname":"<EntryRegDiversions>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4387},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1269099,"byte_end":1269116,"line_start":270,"line_end":270,"column_start":12,"column_end":29},"name":"DisplayDiversions","qualname":"::regalloc::diversion::DisplayDiversions","value":"","parent":null,"children":[],"decl_id":null,"docs":" Object that displays register diversions.\n","sig":null,"attributes":[{"value":"/ Object that displays register diversions.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1269042,"byte_end":1269087,"line_start":269,"line_end":269,"column_start":1,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8866},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/result.rs","byte_start":1381900,"byte_end":1381908,"line_start":16,"line_end":16,"column_start":5,"column_end":13},"name":"Verifier","qualname":"::result::CodegenError::Verifier","value":"CodegenError::Verifier(VerifierErrors)","parent":{"krate":0,"index":8865},"children":[],"decl_id":null,"docs":" A list of IR verifier errors.","sig":null,"attributes":[{"value":"/ A list of IR verifier errors.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/result.rs","byte_start":1381694,"byte_end":1381727,"line_start":11,"line_end":11,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/result.rs","byte_start":1381732,"byte_end":1381735,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ This always represents a bug, either in the code that generated IR for Cranelift, or a bug","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/result.rs","byte_start":1381740,"byte_end":1381834,"line_start":13,"line_end":13,"column_start":5,"column_end":99}},{"value":"/ in Cranelift itself.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/result.rs","byte_start":1381839,"byte_end":1381863,"line_start":14,"line_end":14,"column_start":5,"column_end":29}},{"value":"error(\"Verifier errors\")","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/result.rs","byte_start":1381868,"byte_end":1381895,"line_start":15,"line_end":15,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8869},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/result.rs","byte_start":1382313,"byte_end":1382330,"line_start":25,"line_end":25,"column_start":5,"column_end":22},"name":"ImplLimitExceeded","qualname":"::result::CodegenError::ImplLimitExceeded","value":"CodegenError::ImplLimitExceeded","parent":{"krate":0,"index":8865},"children":[],"decl_id":null,"docs":" An implementation limit was exceeded.","sig":null,"attributes":[{"value":"/ An implementation limit was exceeded.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/result.rs","byte_start":1381939,"byte_end":1381980,"line_start":18,"line_end":18,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/result.rs","byte_start":1381985,"byte_end":1381988,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ Cranelift can compile very large and complicated functions, but the [implementation has","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/result.rs","byte_start":1381993,"byte_end":1382084,"line_start":20,"line_end":20,"column_start":5,"column_end":96}},{"value":"/ limits][limits] that cause compilation to fail when they are exceeded.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/result.rs","byte_start":1382089,"byte_end":1382163,"line_start":21,"line_end":21,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/result.rs","byte_start":1382168,"byte_end":1382171,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [limits]: https://cranelift.readthedocs.io/en/latest/ir.html#implementation-limits","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/result.rs","byte_start":1382176,"byte_end":1382262,"line_start":23,"line_end":23,"column_start":5,"column_end":91}},{"value":"error(\"Implementation limit exceeded\")","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/result.rs","byte_start":1382267,"byte_end":1382308,"line_start":24,"line_end":24,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8871},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/result.rs","byte_start":1382584,"byte_end":1382596,"line_start":32,"line_end":32,"column_start":5,"column_end":17},"name":"CodeTooLarge","qualname":"::result::CodegenError::CodeTooLarge","value":"CodegenError::CodeTooLarge","parent":{"krate":0,"index":8865},"children":[],"decl_id":null,"docs":" The code size for the function is too large.","sig":null,"attributes":[{"value":"/ The code size for the function is too large.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/result.rs","byte_start":1382337,"byte_end":1382385,"line_start":27,"line_end":27,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/result.rs","byte_start":1382390,"byte_end":1382393,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ Different target ISAs may impose a limit on the size of a compiled function. If that limit","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/result.rs","byte_start":1382398,"byte_end":1382492,"line_start":29,"line_end":29,"column_start":5,"column_end":99}},{"value":"/ is exceeded, compilation fails.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/result.rs","byte_start":1382497,"byte_end":1382532,"line_start":30,"line_end":30,"column_start":5,"column_end":40}},{"value":"error(\"Code for function is too large\")","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/result.rs","byte_start":1382537,"byte_end":1382579,"line_start":31,"line_end":31,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":8865},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/result.rs","byte_start":1381675,"byte_end":1381687,"line_start":10,"line_end":10,"column_start":10,"column_end":22},"name":"CodegenError","qualname":"::result::CodegenError","value":"CodegenError::{Verifier, ImplLimitExceeded, CodeTooLarge}","parent":null,"children":[{"krate":0,"index":8866},{"krate":0,"index":8869},{"krate":0,"index":8871}],"decl_id":null,"docs":" A compilation error.","sig":null,"attributes":[{"value":"/ A compilation error.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/result.rs","byte_start":1381509,"byte_end":1381533,"line_start":6,"line_end":6,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/result.rs","byte_start":1381534,"byte_end":1381537,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ When Cranelift fails to compile a function, it will return one of these error codes.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/result.rs","byte_start":1381538,"byte_end":1381626,"line_start":8,"line_end":8,"column_start":1,"column_end":89}}]},{"kind":"Type","id":{"krate":0,"index":4715},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/result.rs","byte_start":1382692,"byte_end":1382705,"line_start":36,"line_end":36,"column_start":10,"column_end":23},"name":"CodegenResult","qualname":"::result::CodegenResult","value":"Result<T, CodegenError>","parent":null,"children":[],"decl_id":null,"docs":" A convenient alias for a `Result` that uses `CodegenError` as the error type.\n","sig":null,"attributes":[{"value":"/ A convenient alias for a `Result` that uses `CodegenError` as the error type.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/result.rs","byte_start":1382601,"byte_end":1382682,"line_start":35,"line_end":35,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":8934},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/value_label.rs","byte_start":1447758,"byte_end":1447771,"line_start":18,"line_end":18,"column_start":12,"column_end":25},"name":"ValueLocRange","qualname":"::value_label::ValueLocRange","value":"ValueLocRange { loc, start, end }","parent":null,"children":[{"krate":0,"index":8935},{"krate":0,"index":8936},{"krate":0,"index":8937}],"decl_id":null,"docs":" Value location range.\n","sig":null,"attributes":[{"value":"/ Value location range.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/value_label.rs","byte_start":1447606,"byte_end":1447631,"line_start":15,"line_end":15,"column_start":1,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":8935},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/value_label.rs","byte_start":1447846,"byte_end":1447849,"line_start":20,"line_end":20,"column_start":9,"column_end":12},"name":"loc","qualname":"::value_label::ValueLocRange::loc","value":"ir::valueloc::ValueLoc","parent":{"krate":0,"index":8934},"children":[],"decl_id":null,"docs":" The ValueLoc containing a ValueLabel during this range.\n","sig":null,"attributes":[{"value":"/ The ValueLoc containing a ValueLabel during this range.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/value_label.rs","byte_start":1447778,"byte_end":1447837,"line_start":19,"line_end":19,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":8936},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/value_label.rs","byte_start":1447901,"byte_end":1447906,"line_start":22,"line_end":22,"column_start":9,"column_end":14},"name":"start","qualname":"::value_label::ValueLocRange::start","value":"u32","parent":{"krate":0,"index":8934},"children":[],"decl_id":null,"docs":" The start of the range.\n","sig":null,"attributes":[{"value":"/ The start of the range.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/value_label.rs","byte_start":1447865,"byte_end":1447892,"line_start":21,"line_end":21,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":8937},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/value_label.rs","byte_start":1447951,"byte_end":1447954,"line_start":24,"line_end":24,"column_start":9,"column_end":12},"name":"end","qualname":"::value_label::ValueLocRange::end","value":"u32","parent":{"krate":0,"index":8934},"children":[],"decl_id":null,"docs":" The end of the range.\n","sig":null,"attributes":[{"value":"/ The end of the range.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/value_label.rs","byte_start":1447917,"byte_end":1447942,"line_start":23,"line_end":23,"column_start":5,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":4941},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/value_label.rs","byte_start":1448035,"byte_end":1448052,"line_start":28,"line_end":28,"column_start":10,"column_end":27},"name":"ValueLabelsRanges","qualname":"::value_label::ValueLabelsRanges","value":"HashMap<ValueLabel, Vec<ValueLocRange>>","parent":null,"children":[],"decl_id":null,"docs":" Resulting map of Value labels and their ranges/locations.\n","sig":null,"attributes":[{"value":"/ Resulting map of Value labels and their ranges/locations.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/value_label.rs","byte_start":1447964,"byte_end":1448025,"line_start":27,"line_end":27,"column_start":1,"column_end":62}}]},{"kind":"Const","id":{"krate":0,"index":4966},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":3047,"byte_end":3054,"line_start":110,"line_end":110,"column_start":11,"column_end":18},"name":"VERSION","qualname":"::VERSION","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Version number of this crate.\n","sig":null,"attributes":[{"value":"/ Version number of this crate.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":3003,"byte_end":3036,"line_start":109,"line_end":109,"column_start":1,"column_end":34}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":13217,"byte_end":13231,"line_start":46,"line_end":46,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":15029,"byte_end":15043,"line_start":99,"line_end":99,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":15364,"byte_end":15378,"line_start":109,"line_end":109,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":17348,"byte_end":17361,"line_start":179,"line_end":179,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":17831,"byte_end":17843,"line_start":190,"line_end":190,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":18259,"byte_end":18275,"line_start":203,"line_end":203,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/stackmap.rs","byte_start":37420,"byte_end":37428,"line_start":24,"line_end":24,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":4840,"byte_end":4845,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":6326,"byte_end":6334,"line_start":98,"line_end":98,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cfg_printer.rs","byte_start":42036,"byte_end":42046,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cfg_printer.rs","byte_start":44000,"byte_end":44010,"line_start":79,"line_end":79,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":64824,"byte_end":64834,"line_start":581,"line_end":581,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":65477,"byte_end":65487,"line_start":602,"line_end":602,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":68025,"byte_end":68034,"line_start":685,"line_end":685,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":69443,"byte_end":69452,"line_start":727,"line_end":727,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dbg.rs","byte_start":72365,"byte_end":72376,"line_start":12,"line_end":12,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":74586,"byte_end":74599,"line_start":53,"line_end":53,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":80772,"byte_end":80785,"line_start":217,"line_end":217,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":92392,"byte_end":92413,"line_start":488,"line_end":488,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":94803,"byte_end":94812,"line_start":552,"line_end":552,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":95098,"byte_end":95119,"line_start":565,"line_end":565,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":106800,"byte_end":106816,"line_start":42,"line_end":42,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":108438,"byte_end":108454,"line_start":81,"line_end":81,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":112909,"byte_end":112917,"line_start":201,"line_end":201,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":451},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":123690,"byte_end":123691,"line_start":42,"line_end":42,"column_start":54,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":124996,"byte_end":125009,"line_start":74,"line_end":74,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":126657,"byte_end":126670,"line_start":116,"line_end":116,"column_start":61,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":127593,"byte_end":127611,"line_start":147,"line_end":147,"column_start":46,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":128984,"byte_end":128998,"line_start":186,"line_end":186,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":129201,"byte_end":129215,"line_start":193,"line_end":193,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":132770,"byte_end":132782,"line_start":30,"line_end":30,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":132941,"byte_end":132953,"line_start":37,"line_end":37,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":133036,"byte_end":133048,"line_start":43,"line_end":43,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":133140,"byte_end":133152,"line_start":49,"line_end":49,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":133228,"byte_end":133240,"line_start":55,"line_end":55,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":134240,"byte_end":134252,"line_start":92,"line_end":92,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":135164,"byte_end":135176,"line_start":117,"line_end":117,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":137482,"byte_end":137499,"line_start":175,"line_end":175,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":138470,"byte_end":138482,"line_start":204,"line_end":204,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":151369,"byte_end":151382,"line_start":82,"line_end":82,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":154790,"byte_end":154796,"line_start":203,"line_end":203,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":155091,"byte_end":155104,"line_start":217,"line_end":217,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":160947,"byte_end":160955,"line_start":383,"line_end":383,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":162478,"byte_end":162491,"line_start":433,"line_end":433,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":174852,"byte_end":174865,"line_start":748,"line_end":748,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":699},{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":175072,"byte_end":175085,"line_start":757,"line_end":757,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":175216,"byte_end":175229,"line_start":764,"line_end":764,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":181607,"byte_end":181616,"line_start":932,"line_end":932,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":181865,"byte_end":181876,"line_start":943,"line_end":943,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":182608,"byte_end":182621,"line_start":968,"line_end":968,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":196933,"byte_end":196938,"line_start":39,"line_end":39,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":198085,"byte_end":198090,"line_start":71,"line_end":71,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":743}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":200170,"byte_end":200179,"line_start":122,"line_end":122,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":201706,"byte_end":201717,"line_start":158,"line_end":158,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":202517,"byte_end":202525,"line_start":183,"line_end":183,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":203325,"byte_end":203334,"line_start":208,"line_end":208,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":204490,"byte_end":204499,"line_start":238,"line_end":238,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":206049,"byte_end":206056,"line_start":273,"line_end":273,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":207364,"byte_end":207370,"line_start":304,"line_end":304,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":208199,"byte_end":208203,"line_start":329,"line_end":329,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":209205,"byte_end":209210,"line_start":355,"line_end":355,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":210167,"byte_end":210176,"line_start":395,"line_end":395,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":210767,"byte_end":210776,"line_start":413,"line_end":413,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":765}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":210911,"byte_end":210920,"line_start":419,"line_end":419,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":767}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":211007,"byte_end":211016,"line_start":425,"line_end":425,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":211102,"byte_end":211111,"line_start":431,"line_end":431,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":211203,"byte_end":211212,"line_start":437,"line_end":437,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":211314,"byte_end":211323,"line_start":443,"line_end":443,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":211427,"byte_end":211436,"line_start":449,"line_end":449,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":211534,"byte_end":211543,"line_start":455,"line_end":455,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":211636,"byte_end":211645,"line_start":461,"line_end":461,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":211734,"byte_end":211743,"line_start":467,"line_end":467,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":211829,"byte_end":211838,"line_start":473,"line_end":473,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":213891,"byte_end":213900,"line_start":32,"line_end":32,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":805},{"krate":0,"index":807},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":813},{"krate":0,"index":815},{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":216960,"byte_end":216976,"line_start":123,"line_end":123,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":217349,"byte_end":217358,"line_start":136,"line_end":136,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":218123,"byte_end":218131,"line_start":160,"line_end":160,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":220028,"byte_end":220043,"line_start":218,"line_end":218,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":220638,"byte_end":220646,"line_start":238,"line_end":238,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":224024,"byte_end":224039,"line_start":334,"line_end":334,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":224178,"byte_end":224193,"line_start":340,"line_end":340,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":853},{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":225300,"byte_end":225311,"line_start":372,"line_end":372,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":229505,"byte_end":229517,"line_start":47,"line_end":47,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":866},{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":230725,"byte_end":230737,"line_start":85,"line_end":85,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":230823,"byte_end":230835,"line_start":91,"line_end":91,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":231352,"byte_end":231364,"line_start":107,"line_end":107,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":875},{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/framelayout.rs","byte_start":234624,"byte_end":234635,"line_start":56,"line_end":56,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":884},{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":238668,"byte_end":238676,"line_start":101,"line_end":101,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":950},{"krate":0,"index":952},{"krate":0,"index":954},{"krate":0,"index":956},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":246740,"byte_end":246766,"line_start":313,"line_end":313,"column_start":46,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":247141,"byte_end":247156,"line_start":325,"line_end":325,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":247300,"byte_end":247308,"line_start":331,"line_end":331,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":977}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":247475,"byte_end":247483,"line_start":337,"line_end":337,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":247929,"byte_end":247943,"line_start":353,"line_end":353,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":990},{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/globalvalue.rs","byte_start":250774,"byte_end":250789,"line_start":69,"line_end":69,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":1005}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/globalvalue.rs","byte_start":251402,"byte_end":251417,"line_start":87,"line_end":87,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/heap.rs","byte_start":253960,"byte_end":253968,"line_start":44,"line_end":44,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1015}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":255624,"byte_end":255627,"line_start":37,"line_end":37,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":255949,"byte_end":255954,"line_start":50,"line_end":50,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1037},{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":256211,"byte_end":256216,"line_start":62,"line_end":62,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":256289,"byte_end":256294,"line_start":68,"line_end":68,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":256400,"byte_end":256405,"line_start":74,"line_end":74,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1044}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":256480,"byte_end":256485,"line_start":80,"line_end":80,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":257350,"byte_end":257355,"line_start":114,"line_end":114,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1049},{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":257816,"byte_end":257822,"line_start":130,"line_end":130,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1052},{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":258082,"byte_end":258088,"line_start":142,"line_end":142,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1055}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":258161,"byte_end":258167,"line_start":148,"line_end":148,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1057}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":258647,"byte_end":258653,"line_start":170,"line_end":170,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":260877,"byte_end":260883,"line_start":241,"line_end":241,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1063},{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":261414,"byte_end":261420,"line_start":261,"line_end":261,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":261493,"byte_end":261499,"line_start":267,"line_end":267,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1069}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":261583,"byte_end":261589,"line_start":273,"line_end":273,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1071}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":261664,"byte_end":261670,"line_start":279,"line_end":279,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":261889,"byte_end":261895,"line_start":289,"line_end":289,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1075},{"krate":0,"index":1076}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":262463,"byte_end":262470,"line_start":310,"line_end":310,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1079},{"krate":0,"index":1081},{"krate":0,"index":1082}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":262850,"byte_end":262857,"line_start":327,"line_end":327,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1084}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":263314,"byte_end":263322,"line_start":343,"line_end":343,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":264023,"byte_end":264031,"line_start":370,"line_end":370,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":264104,"byte_end":264112,"line_start":376,"line_end":376,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1093}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":264196,"byte_end":264204,"line_start":382,"line_end":382,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":264279,"byte_end":264287,"line_start":388,"line_end":388,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1097}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":264738,"byte_end":264746,"line_start":407,"line_end":407,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1099},{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":273518,"byte_end":273524,"line_start":676,"line_end":676,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1108},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":274797,"byte_end":274803,"line_start":719,"line_end":719,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1114}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":274966,"byte_end":274972,"line_start":726,"line_end":726,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1116},{"krate":0,"index":1117}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":275209,"byte_end":275215,"line_start":737,"line_end":737,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":275304,"byte_end":275310,"line_start":743,"line_end":743,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1121}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":275402,"byte_end":275408,"line_start":749,"line_end":749,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1126},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":276682,"byte_end":276688,"line_start":792,"line_end":792,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":276841,"byte_end":276847,"line_start":799,"line_end":799,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1134},{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":277078,"byte_end":277084,"line_start":810,"line_end":810,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1137}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":277173,"byte_end":277179,"line_start":816,"line_end":816,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":277284,"byte_end":277290,"line_start":822,"line_end":822,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1141}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10266428,"byte_end":10266445,"line_start":110,"line_end":110,"column_start":40,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":6387}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10276840,"byte_end":10276855,"line_start":524,"line_end":524,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6389},{"krate":0,"index":6390},{"krate":0,"index":6391},{"krate":0,"index":6393},{"krate":0,"index":6395},{"krate":0,"index":6396},{"krate":0,"index":6397},{"krate":0,"index":6398}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10340311,"byte_end":10340317,"line_start":2026,"line_end":2026,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6401},{"krate":0,"index":6402},{"krate":0,"index":6403},{"krate":0,"index":6404},{"krate":0,"index":6405},{"krate":0,"index":6406},{"krate":0,"index":6407},{"krate":0,"index":6408},{"krate":0,"index":6409},{"krate":0,"index":6410},{"krate":0,"index":6411}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":298585,"byte_end":298591,"line_start":47,"line_end":47,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1167}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":298706,"byte_end":298712,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1169},{"krate":0,"index":1170}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":299413,"byte_end":299419,"line_start":70,"line_end":70,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1172},{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":300389,"byte_end":300401,"line_start":101,"line_end":101,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":301096,"byte_end":301108,"line_start":127,"line_end":127,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1188},{"krate":0,"index":1189}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":301216,"byte_end":301228,"line_start":135,"line_end":135,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1191}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":301323,"byte_end":301335,"line_start":141,"line_end":141,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":301640,"byte_end":301652,"line_start":154,"line_end":154,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1195}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":301860,"byte_end":301875,"line_start":164,"line_end":164,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1197},{"krate":0,"index":1199},{"krate":0,"index":1200},{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":308390,"byte_end":308407,"line_start":342,"line_end":342,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1238}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":312562,"byte_end":312574,"line_start":450,"line_end":450,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":314701,"byte_end":314718,"line_start":523,"line_end":523,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1267}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/jumptable.rs","byte_start":322592,"byte_end":322605,"line_start":20,"line_end":20,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/jumptable.rs","byte_start":323875,"byte_end":323888,"line_start":69,"line_end":69,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1292}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":326768,"byte_end":326774,"line_start":46,"line_end":46,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1312}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":329085,"byte_end":329091,"line_start":119,"line_end":119,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1319},{"krate":0,"index":1322}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":329590,"byte_end":329596,"line_start":139,"line_end":139,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1324},{"krate":0,"index":1326},{"krate":0,"index":1328},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":337482,"byte_end":337488,"line_start":344,"line_end":344,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":342186,"byte_end":342192,"line_start":490,"line_end":490,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1352},{"krate":0,"index":1353}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":342855,"byte_end":342861,"line_start":518,"line_end":518,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":350111,"byte_end":350116,"line_start":734,"line_end":734,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1380},{"krate":0,"index":1381}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":350525,"byte_end":350530,"line_start":751,"line_end":751,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1384}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":367611,"byte_end":367618,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1405}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":367739,"byte_end":367746,"line_start":57,"line_end":57,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1407},{"krate":0,"index":1408}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":368441,"byte_end":368448,"line_start":79,"line_end":79,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1410}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":373491,"byte_end":373499,"line_start":23,"line_end":23,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1442}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":376138,"byte_end":376146,"line_start":108,"line_end":108,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1444}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":376887,"byte_end":376899,"line_start":19,"line_end":19,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1455}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":377083,"byte_end":377095,"line_start":27,"line_end":27,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1457}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":377289,"byte_end":377301,"line_start":35,"line_end":35,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1459}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":377771,"byte_end":377791,"line_start":54,"line_end":54,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1461}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":378034,"byte_end":378054,"line_start":64,"line_end":64,"column_start":21,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":378146,"byte_end":378166,"line_start":70,"line_end":70,"column_start":22,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1465}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":378265,"byte_end":378285,"line_start":76,"line_end":76,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1467}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":378501,"byte_end":378521,"line_start":85,"line_end":85,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1469}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":378749,"byte_end":378769,"line_start":95,"line_end":95,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1471}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":378993,"byte_end":379005,"line_start":104,"line_end":104,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1473}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":379171,"byte_end":379191,"line_start":111,"line_end":111,"column_start":21,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1475}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":379334,"byte_end":379346,"line_start":117,"line_end":117,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1477}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/sourceloc.rs","byte_start":381712,"byte_end":381721,"line_start":21,"line_end":21,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1488}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/sourceloc.rs","byte_start":382088,"byte_end":382097,"line_start":38,"line_end":38,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1490}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/sourceloc.rs","byte_start":382175,"byte_end":382184,"line_start":44,"line_end":44,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1492}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":385769,"byte_end":385782,"line_start":83,"line_end":83,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1516},{"krate":0,"index":1517}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":386259,"byte_end":386272,"line_start":100,"line_end":100,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1520}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":387444,"byte_end":387457,"line_start":134,"line_end":134,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1523},{"krate":0,"index":1524}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":388180,"byte_end":388193,"line_start":155,"line_end":155,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1526}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":389742,"byte_end":389752,"line_start":202,"line_end":202,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1528},{"krate":0,"index":1529},{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1532},{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1537}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":391674,"byte_end":391684,"line_start":267,"line_end":267,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1539},{"krate":0,"index":1540}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":391838,"byte_end":391848,"line_start":275,"line_end":275,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1542}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":392013,"byte_end":392023,"line_start":282,"line_end":282,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1548}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/table.rs","byte_start":398731,"byte_end":398740,"line_start":27,"line_end":27,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":400740,"byte_end":400748,"line_start":59,"line_end":59,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1568}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":401480,"byte_end":401488,"line_start":80,"line_end":80,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1571},{"krate":0,"index":1572}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":404692,"byte_end":404696,"line_start":34,"line_end":34,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1588},{"krate":0,"index":1589},{"krate":0,"index":1590},{"krate":0,"index":1591},{"krate":0,"index":1592},{"krate":0,"index":1593},{"krate":0,"index":1594},{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1602},{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1605},{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1608},{"krate":0,"index":1609},{"krate":0,"index":1610},{"krate":0,"index":1611},{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1614},{"krate":0,"index":1615}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":412894,"byte_end":412898,"line_start":306,"line_end":306,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1617}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":413675,"byte_end":413679,"line_start":329,"line_end":329,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1619}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":414504,"byte_end":414508,"line_start":352,"line_end":352,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1621}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":421110,"byte_end":421118,"line_start":25,"line_end":25,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1629}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":421187,"byte_end":421195,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1631},{"krate":0,"index":1632},{"krate":0,"index":1633},{"krate":0,"index":1634}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":422456,"byte_end":422471,"line_start":69,"line_end":69,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1644}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":424220,"byte_end":424231,"line_start":110,"line_end":110,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1646}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":424300,"byte_end":424311,"line_start":116,"line_end":116,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1650},{"krate":0,"index":1651}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":425470,"byte_end":425488,"line_start":154,"line_end":154,"column_start":27,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1661}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/x86/abi.rs","byte_start":448292,"byte_end":448296,"line_start":81,"line_end":81,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1847}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/x86/abi.rs","byte_start":449078,"byte_end":449082,"line_start":112,"line_end":112,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1849}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/x86/fde.rs","byte_start":543446,"byte_end":543455,"line_start":27,"line_end":27,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2083},{"krate":0,"index":2084}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/x86/fde.rs","byte_start":543727,"byte_end":543736,"line_start":39,"line_end":39,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2086},{"krate":0,"index":2087},{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2090},{"krate":0,"index":2091}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/registers-x86.rs","byte_start":11304765,"byte_end":11304767,"line_start":164,"line_end":164,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7828}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings-x86.rs","byte_start":11304920,"byte_end":11304925,"line_start":6,"line_end":6,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7933}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings-x86.rs","byte_start":11306859,"byte_end":11306864,"line_start":71,"line_end":71,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7936},{"krate":0,"index":7937},{"krate":0,"index":7938},{"krate":0,"index":7939},{"krate":0,"index":7940},{"krate":0,"index":7941},{"krate":0,"index":7942},{"krate":0,"index":7943},{"krate":0,"index":7944},{"krate":0,"index":7945},{"krate":0,"index":7946},{"krate":0,"index":7947},{"krate":0,"index":7948},{"krate":0,"index":7949},{"krate":0,"index":7950},{"krate":0,"index":7951},{"krate":0,"index":7952},{"krate":0,"index":7953},{"krate":0,"index":7954},{"krate":0,"index":7955},{"krate":0,"index":7956},{"krate":0,"index":7957},{"krate":0,"index":7958},{"krate":0,"index":7959}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings-x86.rs","byte_start":11313754,"byte_end":11313759,"line_start":330,"line_end":330,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7971}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/x86/unwind.rs","byte_start":562350,"byte_end":562360,"line_start":43,"line_end":43,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2139},{"krate":0,"index":2149}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/x86/unwind.rs","byte_start":564843,"byte_end":564853,"line_start":118,"line_end":118,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2151},{"krate":0,"index":2152},{"krate":0,"index":2153},{"krate":0,"index":2155}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/x86/mod.rs","byte_start":442278,"byte_end":442281,"line_start":66,"line_end":66,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2192},{"krate":0,"index":2193},{"krate":0,"index":2194},{"krate":0,"index":2195},{"krate":0,"index":2196},{"krate":0,"index":2197},{"krate":0,"index":2198},{"krate":0,"index":2199},{"krate":0,"index":2201},{"krate":0,"index":2202},{"krate":0,"index":2203},{"krate":0,"index":2204},{"krate":0,"index":2205},{"krate":0,"index":2206},{"krate":0,"index":2207},{"krate":0,"index":2208}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/x86/mod.rs","byte_start":445147,"byte_end":445150,"line_start":175,"line_end":175,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2210}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/call_conv.rs","byte_start":580669,"byte_end":580677,"line_start":26,"line_end":26,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2220},{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2223}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/call_conv.rs","byte_start":582419,"byte_end":582427,"line_start":69,"line_end":69,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2225}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/call_conv.rs","byte_start":582896,"byte_end":582904,"line_start":83,"line_end":83,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2227},{"krate":0,"index":2228}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":584369,"byte_end":584386,"line_start":27,"line_end":27,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2240}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":588164,"byte_end":588181,"line_start":123,"line_end":123,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2242}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":590153,"byte_end":590164,"line_start":173,"line_end":173,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2244}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/enc_tables.rs","byte_start":593262,"byte_end":593273,"line_start":52,"line_end":52,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2270}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/enc_tables.rs","byte_start":597744,"byte_end":597753,"line_start":188,"line_end":188,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2304},{"krate":0,"index":2305},{"krate":0,"index":2306},{"krate":0,"index":2307}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/enc_tables.rs","byte_start":599673,"byte_end":599682,"line_start":247,"line_end":247,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2310},{"krate":0,"index":2311}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":601876,"byte_end":601884,"line_start":21,"line_end":21,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2323},{"krate":0,"index":2324},{"krate":0,"index":2325},{"krate":0,"index":2326}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":602457,"byte_end":602465,"line_start":44,"line_end":44,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2328}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":602604,"byte_end":602612,"line_start":51,"line_end":51,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2330}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":603091,"byte_end":603106,"line_start":68,"line_end":68,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2335}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":604857,"byte_end":604864,"line_start":127,"line_end":127,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2343},{"krate":0,"index":2344},{"krate":0,"index":2345},{"krate":0,"index":2347}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":608465,"byte_end":608472,"line_start":62,"line_end":62,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2366},{"krate":0,"index":2367},{"krate":0,"index":2370}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":611639,"byte_end":611651,"line_start":156,"line_end":156,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2384},{"krate":0,"index":2385},{"krate":0,"index":2387},{"krate":0,"index":2389},{"krate":0,"index":2390},{"krate":0,"index":2391},{"krate":0,"index":2392}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":613749,"byte_end":613761,"line_start":212,"line_end":212,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2395}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":613883,"byte_end":613895,"line_start":218,"line_end":218,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2397}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":614092,"byte_end":614104,"line_start":225,"line_end":225,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2399}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":614494,"byte_end":614507,"line_start":238,"line_end":238,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2401},{"krate":0,"index":2402}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":614665,"byte_end":614678,"line_start":248,"line_end":248,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2404}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":614771,"byte_end":614784,"line_start":254,"line_end":254,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2406}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":615863,"byte_end":615870,"line_start":284,"line_end":284,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2409},{"krate":0,"index":2411},{"krate":0,"index":2413},{"krate":0,"index":2414},{"krate":0,"index":2415}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":617167,"byte_end":617181,"line_start":324,"line_end":324,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2422}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":618909,"byte_end":618917,"line_start":24,"line_end":24,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2430},{"krate":0,"index":2431}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":621251,"byte_end":621264,"line_start":90,"line_end":90,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2433}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":430714,"byte_end":430721,"line_start":145,"line_end":145,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2443}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":431061,"byte_end":431068,"line_start":153,"line_end":153,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2445},{"krate":0,"index":2446}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":431941,"byte_end":431961,"line_start":181,"line_end":181,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2449},{"krate":0,"index":2450},{"krate":0,"index":2451}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":622454,"byte_end":622462,"line_start":34,"line_end":34,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2507}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":622764,"byte_end":622776,"line_start":45,"line_end":45,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2509},{"krate":0,"index":2510},{"krate":0,"index":2511},{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":2514}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":624570,"byte_end":624582,"line_start":101,"line_end":101,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2516},{"krate":0,"index":2517},{"krate":0,"index":2518},{"krate":0,"index":2519},{"krate":0,"index":2520}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/print_errors.rs","byte_start":636452,"byte_end":636471,"line_start":49,"line_end":49,"column_start":25,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2556},{"krate":0,"index":2557},{"krate":0,"index":2558}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":642884,"byte_end":642891,"line_start":54,"line_end":54,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2581},{"krate":0,"index":2582},{"krate":0,"index":2583},{"krate":0,"index":2584},{"krate":0,"index":2585}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":645298,"byte_end":645305,"line_start":128,"line_end":128,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2590},{"krate":0,"index":2592}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":647546,"byte_end":647559,"line_start":194,"line_end":194,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2599},{"krate":0,"index":2600}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":648741,"byte_end":648749,"line_start":232,"line_end":232,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2612},{"krate":0,"index":2613}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":650122,"byte_end":650130,"line_start":266,"line_end":266,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2616},{"krate":0,"index":2617}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":651814,"byte_end":651820,"line_start":322,"line_end":322,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2623}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11377066,"byte_end":11377071,"line_start":6,"line_end":6,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8286}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11377632,"byte_end":11377640,"line_start":27,"line_end":27,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8289}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11377899,"byte_end":11377907,"line_start":36,"line_end":36,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8291},{"krate":0,"index":8292}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11378638,"byte_end":11378653,"line_start":67,"line_end":67,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8294}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11379168,"byte_end":11379183,"line_start":81,"line_end":81,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8296},{"krate":0,"index":8297}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11379783,"byte_end":11379788,"line_start":99,"line_end":99,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8299},{"krate":0,"index":8300},{"krate":0,"index":8301},{"krate":0,"index":8302},{"krate":0,"index":8303},{"krate":0,"index":8304},{"krate":0,"index":8305},{"krate":0,"index":8306},{"krate":0,"index":8307},{"krate":0,"index":8308},{"krate":0,"index":8309},{"krate":0,"index":8310},{"krate":0,"index":8311},{"krate":0,"index":8312},{"krate":0,"index":8313},{"krate":0,"index":8314},{"krate":0,"index":8315},{"krate":0,"index":8316},{"krate":0,"index":8317},{"krate":0,"index":8318},{"krate":0,"index":8319}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11390836,"byte_end":11390841,"line_start":448,"line_end":448,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8331}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":652891,"byte_end":652901,"line_start":352,"line_end":352,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2626}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":653040,"byte_end":653050,"line_start":358,"line_end":358,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2629}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":658309,"byte_end":658313,"line_start":82,"line_end":82,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2639}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":658401,"byte_end":658405,"line_start":88,"line_end":88,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2641}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":660132,"byte_end":660141,"line_start":142,"line_end":142,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2664}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":660307,"byte_end":660316,"line_start":150,"line_end":150,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2667}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":662302,"byte_end":662313,"line_start":199,"line_end":199,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2672}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/cssa.rs","byte_start":741847,"byte_end":741859,"line_start":61,"line_end":61,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2762},{"krate":0,"index":2763}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/flags.rs","byte_start":748184,"byte_end":748197,"line_start":49,"line_end":49,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2789},{"krate":0,"index":2790}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/liveness.rs","byte_start":754846,"byte_end":754862,"line_start":50,"line_end":50,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2820},{"krate":0,"index":2821},{"krate":0,"index":2822}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/locations.rs","byte_start":763623,"byte_end":763639,"line_start":51,"line_end":51,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2844},{"krate":0,"index":2845},{"krate":0,"index":2846},{"krate":0,"index":2847},{"krate":0,"index":2848},{"krate":0,"index":2849},{"krate":0,"index":2850},{"krate":0,"index":2851}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":669000,"byte_end":669013,"line_start":124,"line_end":124,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2858}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":669471,"byte_end":669484,"line_start":143,"line_end":143,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2862}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":670679,"byte_end":670693,"line_start":180,"line_end":180,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2868},{"krate":0,"index":2869},{"krate":0,"index":2870},{"krate":0,"index":2871},{"krate":0,"index":2872},{"krate":0,"index":2874},{"krate":0,"index":2876}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":671962,"byte_end":671976,"line_start":228,"line_end":228,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2879}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":672083,"byte_end":672097,"line_start":234,"line_end":234,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2881}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":672200,"byte_end":672214,"line_start":240,"line_end":240,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2883}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":672382,"byte_end":672396,"line_start":250,"line_end":250,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2885}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":673745,"byte_end":673753,"line_start":303,"line_end":303,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2900},{"krate":0,"index":2901},{"krate":0,"index":2902},{"krate":0,"index":2903},{"krate":0,"index":2904},{"krate":0,"index":2905},{"krate":0,"index":2906},{"krate":0,"index":2907},{"krate":0,"index":2908},{"krate":0,"index":2910},{"krate":0,"index":2912},{"krate":0,"index":2914},{"krate":0,"index":2915},{"krate":0,"index":2916},{"krate":0,"index":2917},{"krate":0,"index":2918},{"krate":0,"index":2919},{"krate":0,"index":2920},{"krate":0,"index":2921},{"krate":0,"index":2922},{"krate":0,"index":2923},{"krate":0,"index":2924},{"krate":0,"index":2925},{"krate":0,"index":2926},{"krate":0,"index":2927},{"krate":0,"index":2928},{"krate":0,"index":2929},{"krate":0,"index":2930},{"krate":0,"index":2931},{"krate":0,"index":2935},{"krate":0,"index":2937},{"krate":0,"index":2939},{"krate":0,"index":2940},{"krate":0,"index":2941},{"krate":0,"index":2942},{"krate":0,"index":2945},{"krate":0,"index":2947},{"krate":0,"index":2948},{"krate":0,"index":2949},{"krate":0,"index":2954}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":779965,"byte_end":779976,"line_start":135,"line_end":135,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2990},{"krate":0,"index":2991}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":798434,"byte_end":798447,"line_start":729,"line_end":729,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3015}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":798823,"byte_end":798849,"line_start":744,"line_end":744,"column_start":27,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3023}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/abi.rs","byte_start":803347,"byte_end":803356,"line_start":28,"line_end":28,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3035}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/abi.rs","byte_start":803461,"byte_end":803470,"line_start":34,"line_end":34,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3037}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/abi.rs","byte_start":804129,"byte_end":804144,"line_start":59,"line_end":59,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3039},{"krate":0,"index":3040}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/bitset.rs","byte_start":811182,"byte_end":811188,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3058},{"krate":0,"index":3059},{"krate":0,"index":3060},{"krate":0,"index":3061},{"krate":0,"index":3062},{"krate":0,"index":3063}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":819613,"byte_end":819620,"line_start":60,"line_end":60,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3123},{"krate":0,"index":3124},{"krate":0,"index":3125},{"krate":0,"index":3126},{"krate":0,"index":3127},{"krate":0,"index":3128},{"krate":0,"index":3129},{"krate":0,"index":3130},{"krate":0,"index":3133},{"krate":0,"index":3136},{"krate":0,"index":3137},{"krate":0,"index":3138},{"krate":0,"index":3141},{"krate":0,"index":3142},{"krate":0,"index":3143},{"krate":0,"index":3144},{"krate":0,"index":3145},{"krate":0,"index":3146},{"krate":0,"index":3147},{"krate":0,"index":3148},{"krate":0,"index":3149},{"krate":0,"index":3152},{"krate":0,"index":3153},{"krate":0,"index":3156},{"krate":0,"index":3157},{"krate":0,"index":3158},{"krate":0,"index":3159},{"krate":0,"index":3160},{"krate":0,"index":3161}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/fx.rs","byte_start":872720,"byte_end":872728,"line_start":51,"line_end":51,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3209}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/fx.rs","byte_start":872811,"byte_end":872819,"line_start":58,"line_end":58,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3211}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/fx.rs","byte_start":872975,"byte_end":872983,"line_start":65,"line_end":65,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3213},{"krate":0,"index":3214},{"krate":0,"index":3215},{"krate":0,"index":3216},{"krate":0,"index":3217},{"krate":0,"index":3218},{"krate":0,"index":3219}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/iterators.rs","byte_start":874345,"byte_end":874346,"line_start":16,"line_end":16,"column_start":28,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/iterators.rs","byte_start":874657,"byte_end":874670,"line_start":30,"line_end":30,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3231},{"krate":0,"index":3232}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/redundant_reload_remover.rs","byte_start":1021573,"byte_end":1021595,"line_start":303,"line_end":303,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3661},{"krate":0,"index":3662}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/redundant_reload_remover.rs","byte_start":1024038,"byte_end":1024046,"line_start":349,"line_end":349,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3664},{"krate":0,"index":3665},{"krate":0,"index":3666},{"krate":0,"index":3667},{"krate":0,"index":3668},{"krate":0,"index":3669},{"krate":0,"index":3670},{"krate":0,"index":3671},{"krate":0,"index":3672}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/redundant_reload_remover.rs","byte_start":1029237,"byte_end":1029259,"line_start":483,"line_end":483,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3675}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/redundant_reload_remover.rs","byte_start":1037828,"byte_end":1037850,"line_start":654,"line_end":654,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3687},{"krate":0,"index":3688},{"krate":0,"index":3689}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/redundant_reload_remover.rs","byte_start":1043457,"byte_end":1043479,"line_start":764,"line_end":764,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3692},{"krate":0,"index":3693},{"krate":0,"index":3694},{"krate":0,"index":3695},{"krate":0,"index":3696}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/redundant_reload_remover.rs","byte_start":1047694,"byte_end":1047716,"line_start":879,"line_end":879,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3704}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/coloring.rs","byte_start":1053884,"byte_end":1053892,"line_start":113,"line_end":113,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3774},{"krate":0,"index":3775},{"krate":0,"index":3776}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/coloring.rs","byte_start":1055107,"byte_end":1055114,"line_start":156,"line_end":156,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3779},{"krate":0,"index":3780},{"krate":0,"index":3781},{"krate":0,"index":3783},{"krate":0,"index":3784},{"krate":0,"index":3786},{"krate":0,"index":3787},{"krate":0,"index":3788},{"krate":0,"index":3792},{"krate":0,"index":3794},{"krate":0,"index":3795},{"krate":0,"index":3797},{"krate":0,"index":3798},{"krate":0,"index":3800},{"krate":0,"index":3801},{"krate":0,"index":3802},{"krate":0,"index":3803},{"krate":0,"index":3804},{"krate":0,"index":3805},{"krate":0,"index":3806},{"krate":0,"index":3807},{"krate":0,"index":3811},{"krate":0,"index":3814},{"krate":0,"index":3815},{"krate":0,"index":3816}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/coloring.rs","byte_start":1104349,"byte_end":1104362,"line_start":1302,"line_end":1302,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3821},{"krate":0,"index":3822},{"krate":0,"index":3823}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/live_value_tracker.rs","byte_start":1107490,"byte_end":1107502,"line_start":68,"line_end":68,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3851},{"krate":0,"index":3852},{"krate":0,"index":3853},{"krate":0,"index":3854},{"krate":0,"index":3856},{"krate":0,"index":3857}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/live_value_tracker.rs","byte_start":1109358,"byte_end":1109374,"line_start":126,"line_end":126,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3860},{"krate":0,"index":3861},{"krate":0,"index":3862},{"krate":0,"index":3863},{"krate":0,"index":3864},{"krate":0,"index":3865},{"krate":0,"index":3866},{"krate":0,"index":3867},{"krate":0,"index":3868},{"krate":0,"index":3869},{"krate":0,"index":3871}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1133299,"byte_end":1133307,"line_start":300,"line_end":300,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3908},{"krate":0,"index":3909},{"krate":0,"index":3910},{"krate":0,"index":3911},{"krate":0,"index":3912},{"krate":0,"index":3914},{"krate":0,"index":3916},{"krate":0,"index":3917},{"krate":0,"index":3918}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1138994,"byte_end":1139002,"line_start":436,"line_end":436,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3921},{"krate":0,"index":3922}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1149372,"byte_end":1149388,"line_start":210,"line_end":210,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3954},{"krate":0,"index":3955},{"krate":0,"index":3958},{"krate":0,"index":3961},{"krate":0,"index":3962},{"krate":0,"index":3963},{"krate":0,"index":3964},{"krate":0,"index":3965},{"krate":0,"index":3966},{"krate":0,"index":3968},{"krate":0,"index":3969},{"krate":0,"index":3973},{"krate":0,"index":3974},{"krate":0,"index":3975}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1160029,"byte_end":1160045,"line_start":467,"line_end":467,"column_start":50,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3978}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1170276,"byte_end":1170287,"line_start":35,"line_end":35,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3991},{"krate":0,"index":3993},{"krate":0,"index":3995},{"krate":0,"index":3996},{"krate":0,"index":3997},{"krate":0,"index":3998},{"krate":0,"index":3999},{"krate":0,"index":4001},{"krate":0,"index":4002}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1173868,"byte_end":1173878,"line_start":134,"line_end":134,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4006},{"krate":0,"index":4007},{"krate":0,"index":4008}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1174816,"byte_end":1174826,"line_start":165,"line_end":165,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4011}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1175586,"byte_end":1175596,"line_start":190,"line_end":190,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1175794,"byte_end":1175812,"line_start":195,"line_end":195,"column_start":27,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4020}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1177944,"byte_end":1177955,"line_start":248,"line_end":248,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4023}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1184036,"byte_end":1184044,"line_start":59,"line_end":59,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4053},{"krate":0,"index":4054},{"krate":0,"index":4055},{"krate":0,"index":4056},{"krate":0,"index":4057},{"krate":0,"index":4058},{"krate":0,"index":4063},{"krate":0,"index":4064},{"krate":0,"index":4066},{"krate":0,"index":4069},{"krate":0,"index":4070},{"krate":0,"index":4072}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1189709,"byte_end":1189717,"line_start":230,"line_end":230,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4074}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1190677,"byte_end":1190684,"line_start":258,"line_end":258,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4083},{"krate":0,"index":4084}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1191986,"byte_end":1191994,"line_start":292,"line_end":292,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4086},{"krate":0,"index":4088},{"krate":0,"index":4089}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1200995,"byte_end":1201003,"line_start":31,"line_end":31,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4103}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1201072,"byte_end":1201080,"line_start":37,"line_end":37,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4105},{"krate":0,"index":4106},{"krate":0,"index":4107},{"krate":0,"index":4108},{"krate":0,"index":4109},{"krate":0,"index":4110},{"krate":0,"index":4111}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1203825,"byte_end":1203840,"line_start":115,"line_end":115,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4121}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/branch_splitting.rs","byte_start":1205447,"byte_end":1205454,"line_start":44,"line_end":44,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4149},{"krate":0,"index":4150},{"krate":0,"index":4151},{"krate":0,"index":4152}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/coalescing.rs","byte_start":1214237,"byte_end":1214247,"line_start":86,"line_end":86,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4213},{"krate":0,"index":4214},{"krate":0,"index":4215}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/coalescing.rs","byte_start":1216242,"byte_end":1216249,"line_start":151,"line_end":151,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4218},{"krate":0,"index":4219},{"krate":0,"index":4220},{"krate":0,"index":4221},{"krate":0,"index":4222},{"krate":0,"index":4223}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/coalescing.rs","byte_start":1225292,"byte_end":1225299,"line_start":390,"line_end":390,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4226},{"krate":0,"index":4227},{"krate":0,"index":4228},{"krate":0,"index":4229},{"krate":0,"index":4230},{"krate":0,"index":4233},{"krate":0,"index":4234}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/coalescing.rs","byte_start":1237603,"byte_end":1237607,"line_start":697,"line_end":697,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":4240},{"krate":0,"index":4241},{"krate":0,"index":4242}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/coalescing.rs","byte_start":1238428,"byte_end":1238432,"line_start":730,"line_end":730,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4244}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/coalescing.rs","byte_start":1238711,"byte_end":1238720,"line_start":740,"line_end":740,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4246},{"krate":0,"index":4247},{"krate":0,"index":4248},{"krate":0,"index":4249}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/coalescing.rs","byte_start":1244692,"byte_end":1244705,"line_start":882,"line_end":882,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4255},{"krate":0,"index":4256},{"krate":0,"index":4257},{"krate":0,"index":4259},{"krate":0,"index":4260},{"krate":0,"index":4262},{"krate":0,"index":4264},{"krate":0,"index":4265}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/coalescing.rs","byte_start":1250566,"byte_end":1250575,"line_start":1038,"line_end":1038,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4274},{"krate":0,"index":4275}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/coalescing.rs","byte_start":1251345,"byte_end":1251355,"line_start":1066,"line_end":1066,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4288}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/coalescing.rs","byte_start":1251718,"byte_end":1251728,"line_start":1081,"line_end":1081,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4293},{"krate":0,"index":4294}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/context.rs","byte_start":1253842,"byte_end":1253849,"line_start":39,"line_end":39,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4329},{"krate":0,"index":4330},{"krate":0,"index":4331},{"krate":0,"index":4332}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1261387,"byte_end":1261396,"line_start":33,"line_end":33,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4355}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1262022,"byte_end":1262035,"line_start":59,"line_end":59,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4359},{"krate":0,"index":4360},{"krate":0,"index":4361},{"krate":0,"index":4362},{"krate":0,"index":4363},{"krate":0,"index":4364},{"krate":0,"index":4365},{"krate":0,"index":4366},{"krate":0,"index":4367},{"krate":0,"index":4368},{"krate":0,"index":4369},{"krate":0,"index":4370},{"krate":0,"index":4371},{"krate":0,"index":4372},{"krate":0,"index":4374},{"krate":0,"index":4375},{"krate":0,"index":4376},{"krate":0,"index":4377}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1268272,"byte_end":1268290,"line_start":237,"line_end":237,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4381},{"krate":0,"index":4382}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1268556,"byte_end":1268574,"line_start":250,"line_end":250,"column_start":16,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4384}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1268961,"byte_end":1268984,"line_start":263,"line_end":263,"column_start":32,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4386}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1269189,"byte_end":1269206,"line_start":272,"line_end":272,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4394}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/pressure.rs","byte_start":1273228,"byte_end":1273233,"line_start":68,"line_end":68,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4406}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/pressure.rs","byte_start":1273666,"byte_end":1273674,"line_start":83,"line_end":83,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4412},{"krate":0,"index":4414},{"krate":0,"index":4415},{"krate":0,"index":4416},{"krate":0,"index":4417},{"krate":0,"index":4418},{"krate":0,"index":4419},{"krate":0,"index":4420},{"krate":0,"index":4421}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/pressure.rs","byte_start":1280034,"byte_end":1280042,"line_start":261,"line_end":261,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4423}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/reload.rs","byte_start":1285951,"byte_end":1285957,"line_start":50,"line_end":50,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4473},{"krate":0,"index":4474},{"krate":0,"index":4475}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/reload.rs","byte_start":1287404,"byte_end":1287417,"line_start":108,"line_end":108,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4484}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/reload.rs","byte_start":1287486,"byte_end":1287493,"line_start":114,"line_end":114,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4487},{"krate":0,"index":4488},{"krate":0,"index":4489},{"krate":0,"index":4490},{"krate":0,"index":4491},{"krate":0,"index":4492},{"krate":0,"index":4493},{"krate":0,"index":4494},{"krate":0,"index":4495},{"krate":0,"index":4496}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/solver.rs","byte_start":1312101,"byte_end":1312109,"line_start":154,"line_end":154,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4545},{"krate":0,"index":4546},{"krate":0,"index":4547},{"krate":0,"index":4548}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/solver.rs","byte_start":1313634,"byte_end":1313642,"line_start":206,"line_end":206,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4550}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/solver.rs","byte_start":1314464,"byte_end":1314474,"line_start":239,"line_end":239,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4552}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/solver.rs","byte_start":1314556,"byte_end":1314566,"line_start":245,"line_end":245,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4554}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/solver.rs","byte_start":1315398,"byte_end":1315402,"line_start":283,"line_end":283,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":4556},{"krate":0,"index":4557},{"krate":0,"index":4558},{"krate":0,"index":4559},{"krate":0,"index":4560},{"krate":0,"index":4561},{"krate":0,"index":4562}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/solver.rs","byte_start":1317841,"byte_end":1317845,"line_start":362,"line_end":362,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4564}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/solver.rs","byte_start":1318962,"byte_end":1318966,"line_start":408,"line_end":408,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4566}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/solver.rs","byte_start":1322465,"byte_end":1322471,"line_start":489,"line_end":489,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4576},{"krate":0,"index":4577},{"krate":0,"index":4578},{"krate":0,"index":4579},{"krate":0,"index":4581},{"krate":0,"index":4582},{"krate":0,"index":4583},{"krate":0,"index":4584},{"krate":0,"index":4586},{"krate":0,"index":4587},{"krate":0,"index":4588},{"krate":0,"index":4589},{"krate":0,"index":4591},{"krate":0,"index":4593},{"krate":0,"index":4594},{"krate":0,"index":4595}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/solver.rs","byte_start":1336370,"byte_end":1336376,"line_start":839,"line_end":839,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4604},{"krate":0,"index":4605},{"krate":0,"index":4607},{"krate":0,"index":4608},{"krate":0,"index":4609}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/solver.rs","byte_start":1341503,"byte_end":1341509,"line_start":977,"line_end":977,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4612},{"krate":0,"index":4613},{"krate":0,"index":4616}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/solver.rs","byte_start":1347915,"byte_end":1347921,"line_start":1129,"line_end":1129,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4618}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/spilling.rs","byte_start":1359576,"byte_end":1359584,"line_start":76,"line_end":76,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4675},{"krate":0,"index":4676},{"krate":0,"index":4677}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/spilling.rs","byte_start":1360863,"byte_end":1360870,"line_start":122,"line_end":122,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4680},{"krate":0,"index":4681},{"krate":0,"index":4682},{"krate":0,"index":4683},{"krate":0,"index":4684},{"krate":0,"index":4685},{"krate":0,"index":4686},{"krate":0,"index":4687},{"krate":0,"index":4688},{"krate":0,"index":4689},{"krate":0,"index":4693},{"krate":0,"index":4698},{"krate":0,"index":4699},{"krate":0,"index":4701}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/spilling.rs","byte_start":1380740,"byte_end":1380746,"line_start":609,"line_end":609,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4703}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/spilling.rs","byte_start":1381018,"byte_end":1381024,"line_start":622,"line_end":622,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4705}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/scoped_hash_map.rs","byte_start":1383635,"byte_end":1383648,"line_start":30,"line_end":30,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4736}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/scoped_hash_map.rs","byte_start":1384166,"byte_end":1384177,"line_start":47,"line_end":47,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4748}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/scoped_hash_map.rs","byte_start":1385112,"byte_end":1385125,"line_start":77,"line_end":77,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4768},{"krate":0,"index":4769},{"krate":0,"index":4771},{"krate":0,"index":4772}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/simple_gvn.rs","byte_start":1391636,"byte_end":1391643,"line_start":41,"line_end":41,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4799}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/simple_gvn.rs","byte_start":1391866,"byte_end":1391873,"line_start":48,"line_end":48,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4804}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/simple_gvn.rs","byte_start":1392080,"byte_end":1392087,"line_start":54,"line_end":54,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/topo_order.rs","byte_start":1441906,"byte_end":1441915,"line_start":28,"line_end":28,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4907},{"krate":0,"index":4908},{"krate":0,"index":4909},{"krate":0,"index":4911}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/value_label.rs","byte_start":1456115,"byte_end":1456134,"line_start":246,"line_end":246,"column_start":26,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4953}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/value_label.rs","byte_start":1456213,"byte_end":1456232,"line_start":252,"line_end":252,"column_start":16,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4955},{"krate":0,"index":4956}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/value_label.rs","byte_start":1456345,"byte_end":1456364,"line_start":259,"line_end":259,"column_start":21,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4958}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/value_label.rs","byte_start":1456481,"byte_end":1456500,"line_start":265,"line_end":265,"column_start":14,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4960}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/value_label.rs","byte_start":1456620,"byte_end":1456639,"line_start":271,"line_end":271,"column_start":20,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4962}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":2269,"byte_end":2276,"line_start":65,"line_end":65,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":19}},{"kind":"Mod","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":2286,"byte_end":2297,"line_start":66,"line_end":66,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":203}},{"kind":"Mod","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":2307,"byte_end":2313,"line_start":67,"line_end":67,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":232}},{"kind":"Mod","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":2323,"byte_end":2326,"line_start":68,"line_end":68,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":326}},{"kind":"Mod","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":2336,"byte_end":2350,"line_start":69,"line_end":69,"column_start":9,"column_end":23},"ref_id":{"krate":0,"index":338}},{"kind":"Mod","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":2360,"byte_end":2369,"line_start":70,"line_end":70,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":415}},{"kind":"Mod","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":2379,"byte_end":2381,"line_start":71,"line_end":71,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":456}},{"kind":"Mod","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":118363,"byte_end":118371,"line_start":4,"line_end":4,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":528}},{"kind":"Mod","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":118381,"byte_end":118384,"line_start":5,"line_end":5,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":589}},{"kind":"Mod","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":118394,"byte_end":118402,"line_start":6,"line_end":6,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":736}},{"kind":"Mod","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":118455,"byte_end":118463,"line_start":10,"line_end":10,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":886}},{"kind":"Mod","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":118500,"byte_end":118510,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":1016}},{"kind":"Mod","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":118520,"byte_end":118532,"line_start":14,"line_end":14,"column_start":9,"column_end":21},"ref_id":{"krate":0,"index":1142}},{"kind":"Mod","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":118542,"byte_end":118551,"line_start":15,"line_end":15,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1270}},{"kind":"Mod","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":118561,"byte_end":118567,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1293}},{"kind":"Mod","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":118645,"byte_end":118654,"line_start":21,"line_end":21,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1493}},{"kind":"Mod","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/mod.rs","byte_start":118689,"byte_end":118694,"line_start":24,"line_end":24,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1575}},{"kind":"Mod","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":2391,"byte_end":2394,"line_start":72,"line_end":72,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1747}},{"kind":"Mod","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":428658,"byte_end":428667,"line_start":86,"line_end":86,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":2349}},{"kind":"Mod","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":2404,"byte_end":2417,"line_start":73,"line_end":73,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":2482}},{"kind":"Mod","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":2427,"byte_end":2439,"line_start":74,"line_end":74,"column_start":9,"column_end":21},"ref_id":{"krate":0,"index":2521}},{"kind":"Mod","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":2449,"byte_end":2457,"line_start":75,"line_end":75,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2565}},{"kind":"Mod","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":2467,"byte_end":2473,"line_start":76,"line_end":76,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2630}},{"kind":"Mod","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":2483,"byte_end":2491,"line_start":77,"line_end":77,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2679}},{"kind":"Mod","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/lib.rs","byte_start":2501,"byte_end":2506,"line_start":78,"line_end":78,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2955}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":13217,"byte_end":13231,"line_start":46,"line_end":46,"column_start":10,"column_end":24},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":38},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":15029,"byte_end":15043,"line_start":99,"line_end":99,"column_start":10,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":38},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":15364,"byte_end":15378,"line_start":109,"line_end":109,"column_start":23,"column_end":37},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":38},"to":{"krate":0,"index":177}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":17348,"byte_end":17361,"line_start":179,"line_end":179,"column_start":20,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":76},"to":{"krate":0,"index":49}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":17831,"byte_end":17843,"line_start":190,"line_end":190,"column_start":19,"column_end":31},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":82},"to":{"krate":0,"index":54}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/memorysink.rs","byte_start":18259,"byte_end":18275,"line_start":203,"line_end":203,"column_start":23,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":87},"to":{"krate":0,"index":85}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/stackmap.rs","byte_start":37420,"byte_end":37428,"line_start":24,"line_end":24,"column_start":6,"column_end":14},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":4967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":4840,"byte_end":4845,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":4974},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/binemit/mod.rs","byte_start":6326,"byte_end":6334,"line_start":98,"line_end":98,"column_start":6,"column_end":14},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":5006},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cfg_printer.rs","byte_start":42036,"byte_end":42046,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cfg_printer.rs","byte_start":44000,"byte_end":44010,"line_start":79,"line_end":79,"column_start":22,"column_end":32},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":218},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":64824,"byte_end":64834,"line_start":581,"line_end":581,"column_start":10,"column_end":20},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":65477,"byte_end":65487,"line_start":602,"line_end":602,"column_start":21,"column_end":31},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":274},"to":{"krate":0,"index":235}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":68025,"byte_end":68034,"line_start":685,"line_end":685,"column_start":10,"column_end":19},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/cursor.rs","byte_start":69443,"byte_end":69452,"line_start":727,"line_end":727,"column_start":21,"column_end":30},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":298},"to":{"krate":0,"index":235}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dbg.rs","byte_start":72365,"byte_end":72376,"line_start":12,"line_end":12,"column_start":30,"column_end":41},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":329},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":74586,"byte_end":74599,"line_start":53,"line_end":53,"column_start":6,"column_end":19},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":80772,"byte_end":80785,"line_start":217,"line_end":217,"column_start":6,"column_end":19},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":92392,"byte_end":92413,"line_start":488,"line_end":488,"column_start":6,"column_end":27},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":94803,"byte_end":94812,"line_start":552,"line_end":552,"column_start":23,"column_end":32},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":398},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/dominator_tree.rs","byte_start":95098,"byte_end":95119,"line_start":565,"line_end":565,"column_start":6,"column_end":27},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":106800,"byte_end":106816,"line_start":42,"line_end":42,"column_start":6,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":5071},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":108438,"byte_end":108454,"line_start":81,"line_end":81,"column_start":6,"column_end":22},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/flowgraph.rs","byte_start":112909,"byte_end":112917,"line_start":201,"line_end":201,"column_start":23,"column_end":31},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":445},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":122566,"byte_end":122571,"line_start":20,"line_end":20,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":1,"index":1857},"to":{"krate":0,"index":469}},{"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/inst_builder.rs","byte_start":10073162,"byte_end":10073177,"line_start":14,"line_end":14,"column_start":28,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":469},"to":{"krate":0,"index":5090}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":123690,"byte_end":123691,"line_start":42,"line_end":42,"column_start":54,"column_end":55},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":476},"to":{"krate":0,"index":5090}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":124144,"byte_end":124149,"line_start":51,"line_end":51,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":1,"index":1857},"to":{"krate":0,"index":477}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":124996,"byte_end":125009,"line_start":74,"line_end":74,"column_start":37,"column_end":50},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":483},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":126657,"byte_end":126670,"line_start":116,"line_end":116,"column_start":61,"column_end":74},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":483},"to":{"krate":0,"index":469}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":127593,"byte_end":127611,"line_start":147,"line_end":147,"column_start":46,"column_end":64},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":502},"to":{"krate":0,"index":469}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":128984,"byte_end":128998,"line_start":186,"line_end":186,"column_start":10,"column_end":24},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/builder.rs","byte_start":129201,"byte_end":129215,"line_start":193,"line_end":193,"column_start":34,"column_end":48},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":516},"to":{"krate":0,"index":469}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":132770,"byte_end":132782,"line_start":30,"line_end":30,"column_start":27,"column_end":39},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":5469},"to":{"krate":1,"index":4620}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":132941,"byte_end":132953,"line_start":37,"line_end":37,"column_start":24,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":5469},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":133036,"byte_end":133048,"line_start":43,"line_end":43,"column_start":22,"column_end":34},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":5469},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":133140,"byte_end":133152,"line_start":49,"line_end":49,"column_start":24,"column_end":36},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":5469},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":133228,"byte_end":133240,"line_start":55,"line_end":55,"column_start":6,"column_end":18},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":5469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":134240,"byte_end":134252,"line_start":92,"line_end":92,"column_start":23,"column_end":35},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":5469},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":135164,"byte_end":135176,"line_start":117,"line_end":117,"column_start":18,"column_end":30},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":5469},"to":{"krate":1,"index":7368}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":137482,"byte_end":137499,"line_start":175,"line_end":175,"column_start":6,"column_end":23},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":5488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/constant.rs","byte_start":138470,"byte_end":138482,"line_start":204,"line_end":204,"column_start":6,"column_end":18},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":5493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":151369,"byte_end":151382,"line_start":82,"line_end":82,"column_start":6,"column_end":19},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":5498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":154790,"byte_end":154796,"line_start":203,"line_end":203,"column_start":23,"column_end":29},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":155091,"byte_end":155104,"line_start":217,"line_end":217,"column_start":6,"column_end":19},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":5498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":160947,"byte_end":160955,"line_start":383,"line_end":383,"column_start":6,"column_end":14},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":5512},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":162478,"byte_end":162491,"line_start":433,"line_end":433,"column_start":6,"column_end":19},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":5498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":174852,"byte_end":174865,"line_start":748,"line_end":748,"column_start":22,"column_end":35},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":5498},"to":{"krate":1,"index":2099}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":175072,"byte_end":175085,"line_start":757,"line_end":757,"column_start":25,"column_end":38},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":5498},"to":{"krate":1,"index":2103}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":175216,"byte_end":175229,"line_start":764,"line_end":764,"column_start":6,"column_end":19},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":5498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":181607,"byte_end":181616,"line_start":932,"line_end":932,"column_start":6,"column_end":15},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":5549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":181865,"byte_end":181876,"line_start":943,"line_end":943,"column_start":27,"column_end":38},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":717},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/dfg.rs","byte_start":182608,"byte_end":182621,"line_start":968,"line_end":968,"column_start":6,"column_end":19},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":5498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":196933,"byte_end":196938,"line_start":39,"line_end":39,"column_start":6,"column_end":11},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":5553},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":198085,"byte_end":198090,"line_start":71,"line_end":71,"column_start":6,"column_end":11},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":5589},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":200170,"byte_end":200179,"line_start":122,"line_end":122,"column_start":6,"column_end":15},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":5661},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":201706,"byte_end":201717,"line_start":158,"line_end":158,"column_start":6,"column_end":17},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":5697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":202517,"byte_end":202525,"line_start":183,"line_end":183,"column_start":6,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":5733},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":203325,"byte_end":203334,"line_start":208,"line_end":208,"column_start":6,"column_end":15},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":5769},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":204490,"byte_end":204499,"line_start":238,"line_end":238,"column_start":6,"column_end":15},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":5805},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":206049,"byte_end":206056,"line_start":273,"line_end":273,"column_start":6,"column_end":13},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":5841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":207364,"byte_end":207370,"line_start":304,"line_end":304,"column_start":6,"column_end":12},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":5877},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":208199,"byte_end":208203,"line_start":329,"line_end":329,"column_start":6,"column_end":10},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":5913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":209205,"byte_end":209210,"line_start":355,"line_end":355,"column_start":6,"column_end":11},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":5949},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":210167,"byte_end":210176,"line_start":395,"line_end":395,"column_start":23,"column_end":32},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":5985},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":210767,"byte_end":210776,"line_start":413,"line_end":413,"column_start":21,"column_end":30},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":5985},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":210911,"byte_end":210920,"line_start":419,"line_end":419,"column_start":22,"column_end":31},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":5985},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":211007,"byte_end":211016,"line_start":425,"line_end":425,"column_start":21,"column_end":30},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":5985},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":211102,"byte_end":211111,"line_start":431,"line_end":431,"column_start":22,"column_end":31},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":5985},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":211203,"byte_end":211212,"line_start":437,"line_end":437,"column_start":26,"column_end":35},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":5985},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":211314,"byte_end":211323,"line_start":443,"line_end":443,"column_start":28,"column_end":37},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":5985},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":211427,"byte_end":211436,"line_start":449,"line_end":449,"column_start":26,"column_end":35},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":5985},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":211534,"byte_end":211543,"line_start":455,"line_end":455,"column_start":24,"column_end":33},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":5985},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":211636,"byte_end":211645,"line_start":461,"line_end":461,"column_start":23,"column_end":32},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":5985},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":211734,"byte_end":211743,"line_start":467,"line_end":467,"column_start":21,"column_end":30},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":5985},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/entities.rs","byte_start":211829,"byte_end":211838,"line_start":473,"line_end":473,"column_start":22,"column_end":31},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":5985},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":213891,"byte_end":213900,"line_start":32,"line_end":32,"column_start":6,"column_end":15},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":6039},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":216960,"byte_end":216976,"line_start":123,"line_end":123,"column_start":27,"column_end":43},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":818},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":217349,"byte_end":217358,"line_start":136,"line_end":136,"column_start":23,"column_end":32},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":6039},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":218123,"byte_end":218131,"line_start":160,"line_end":160,"column_start":6,"column_end":14},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":6057},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":220028,"byte_end":220043,"line_start":218,"line_end":218,"column_start":27,"column_end":42},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":838},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":220638,"byte_end":220646,"line_start":238,"line_end":238,"column_start":23,"column_end":31},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":6057},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":224024,"byte_end":224039,"line_start":334,"line_end":334,"column_start":23,"column_end":38},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":6098},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":224178,"byte_end":224193,"line_start":340,"line_end":340,"column_start":18,"column_end":33},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":6098},"to":{"krate":1,"index":7368}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extfunc.rs","byte_start":225300,"byte_end":225311,"line_start":372,"line_end":372,"column_start":23,"column_end":34},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":6129},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":229505,"byte_end":229517,"line_start":47,"line_end":47,"column_start":6,"column_end":18},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":6137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":230725,"byte_end":230737,"line_start":85,"line_end":85,"column_start":18,"column_end":30},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":6137},"to":{"krate":1,"index":1843}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":230823,"byte_end":230835,"line_start":91,"line_end":91,"column_start":23,"column_end":35},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":6137},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/extname.rs","byte_start":231352,"byte_end":231364,"line_start":107,"line_end":107,"column_start":18,"column_end":30},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":6137},"to":{"krate":1,"index":7368}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/framelayout.rs","byte_start":234624,"byte_end":234635,"line_start":56,"line_end":56,"column_start":6,"column_end":17},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":6188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":238668,"byte_end":238676,"line_start":101,"line_end":101,"column_start":6,"column_end":14},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":6195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":246740,"byte_end":246766,"line_start":313,"line_end":313,"column_start":46,"column_end":72},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":6216},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":247141,"byte_end":247156,"line_start":325,"line_end":325,"column_start":27,"column_end":42},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":968},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":247300,"byte_end":247308,"line_start":331,"line_end":331,"column_start":23,"column_end":31},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":6195},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":247475,"byte_end":247483,"line_start":337,"line_end":337,"column_start":21,"column_end":29},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":6195},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/function.rs","byte_start":247929,"byte_end":247943,"line_start":353,"line_end":353,"column_start":23,"column_end":37},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":980},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/globalvalue.rs","byte_start":250774,"byte_end":250789,"line_start":69,"line_end":69,"column_start":6,"column_end":21},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":6223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/globalvalue.rs","byte_start":251402,"byte_end":251417,"line_start":87,"line_end":87,"column_start":23,"column_end":38},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":6223},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/heap.rs","byte_start":253960,"byte_end":253968,"line_start":44,"line_end":44,"column_start":23,"column_end":31},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":6241},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":255624,"byte_end":255627,"line_start":37,"line_end":37,"column_start":20,"column_end":23},"kind":{"Impl":{"id":99}},"from":{"krate":4,"index":3899},"to":{"krate":0,"index":1026}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":255949,"byte_end":255954,"line_start":50,"line_end":50,"column_start":6,"column_end":11},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":6256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":256211,"byte_end":256216,"line_start":62,"line_end":62,"column_start":20,"column_end":25},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":6256},"to":{"krate":1,"index":1773}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":256289,"byte_end":256294,"line_start":68,"line_end":68,"column_start":20,"column_end":25},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":6256},"to":{"krate":0,"index":1026}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":256400,"byte_end":256405,"line_start":74,"line_end":74,"column_start":20,"column_end":25},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":6256},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":256480,"byte_end":256485,"line_start":80,"line_end":80,"column_start":18,"column_end":23},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":6256},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":257350,"byte_end":257355,"line_start":114,"line_end":114,"column_start":18,"column_end":23},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":6256},"to":{"krate":1,"index":7368}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":257816,"byte_end":257822,"line_start":130,"line_end":130,"column_start":6,"column_end":12},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":6274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":258082,"byte_end":258088,"line_start":142,"line_end":142,"column_start":20,"column_end":26},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":6274},"to":{"krate":1,"index":1773}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":258161,"byte_end":258167,"line_start":148,"line_end":148,"column_start":20,"column_end":26},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":6274},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":258647,"byte_end":258653,"line_start":170,"line_end":170,"column_start":18,"column_end":24},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":6274},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":260877,"byte_end":260883,"line_start":241,"line_end":241,"column_start":18,"column_end":24},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":6274},"to":{"krate":1,"index":7368}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":261414,"byte_end":261420,"line_start":261,"line_end":261,"column_start":20,"column_end":26},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":6292},"to":{"krate":1,"index":1773}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":261493,"byte_end":261499,"line_start":267,"line_end":267,"column_start":20,"column_end":26},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":6292},"to":{"krate":1,"index":1773}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":261583,"byte_end":261589,"line_start":273,"line_end":273,"column_start":20,"column_end":26},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":6292},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":261664,"byte_end":261670,"line_start":279,"line_end":279,"column_start":18,"column_end":24},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":6292},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":261889,"byte_end":261895,"line_start":289,"line_end":289,"column_start":18,"column_end":24},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":6292},"to":{"krate":1,"index":7368}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":262463,"byte_end":262470,"line_start":310,"line_end":310,"column_start":6,"column_end":13},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":6310},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":262850,"byte_end":262857,"line_start":327,"line_end":327,"column_start":22,"column_end":29},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":6310},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":263314,"byte_end":263322,"line_start":343,"line_end":343,"column_start":6,"column_end":14},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":6331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":264023,"byte_end":264031,"line_start":370,"line_end":370,"column_start":20,"column_end":28},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":6331},"to":{"krate":1,"index":1773}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":264104,"byte_end":264112,"line_start":376,"line_end":376,"column_start":20,"column_end":28},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":6331},"to":{"krate":1,"index":1773}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":264196,"byte_end":264204,"line_start":382,"line_end":382,"column_start":20,"column_end":28},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":6331},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":264279,"byte_end":264287,"line_start":388,"line_end":388,"column_start":18,"column_end":26},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":6331},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":264738,"byte_end":264746,"line_start":407,"line_end":407,"column_start":18,"column_end":26},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":6331},"to":{"krate":1,"index":7368}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":273518,"byte_end":273524,"line_start":676,"line_end":676,"column_start":6,"column_end":12},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":6349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":274797,"byte_end":274803,"line_start":719,"line_end":719,"column_start":18,"column_end":24},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":6349},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":274966,"byte_end":274972,"line_start":726,"line_end":726,"column_start":18,"column_end":24},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":6349},"to":{"krate":1,"index":7368}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":275209,"byte_end":275215,"line_start":737,"line_end":737,"column_start":20,"column_end":26},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":6349},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":275304,"byte_end":275310,"line_start":743,"line_end":743,"column_start":20,"column_end":26},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":6349},"to":{"krate":0,"index":1026}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":275402,"byte_end":275408,"line_start":749,"line_end":749,"column_start":6,"column_end":12},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":6367},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":276682,"byte_end":276688,"line_start":792,"line_end":792,"column_start":18,"column_end":24},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":6367},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":276841,"byte_end":276847,"line_start":799,"line_end":799,"column_start":18,"column_end":24},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":6367},"to":{"krate":1,"index":7368}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":277078,"byte_end":277084,"line_start":810,"line_end":810,"column_start":20,"column_end":26},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":6367},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":277173,"byte_end":277179,"line_start":816,"line_end":816,"column_start":20,"column_end":26},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":6367},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/immediates.rs","byte_start":277284,"byte_end":277290,"line_start":822,"line_end":822,"column_start":20,"column_end":26},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":6367},"to":{"krate":0,"index":1026}},{"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10266428,"byte_end":10266445,"line_start":110,"line_end":110,"column_start":40,"column_end":57},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":6423},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10276840,"byte_end":10276855,"line_start":524,"line_end":524,"column_start":6,"column_end":21},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":6535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/opcodes.rs","byte_start":10340311,"byte_end":10340317,"line_start":2026,"line_end":2026,"column_start":6,"column_end":12},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":6751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":298585,"byte_end":298591,"line_start":47,"line_end":47,"column_start":18,"column_end":24},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":6751},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":298706,"byte_end":298712,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":6751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":299413,"byte_end":299419,"line_start":70,"line_end":70,"column_start":18,"column_end":24},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":6751},"to":{"krate":1,"index":7368}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":300389,"byte_end":300401,"line_start":101,"line_end":101,"column_start":6,"column_end":18},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":7211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":301096,"byte_end":301108,"line_start":127,"line_end":127,"column_start":16,"column_end":28},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":7211},"to":{"krate":1,"index":2023}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":301216,"byte_end":301228,"line_start":135,"line_end":135,"column_start":19,"column_end":31},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":7211},"to":{"krate":1,"index":2034}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":301323,"byte_end":301335,"line_start":141,"line_end":141,"column_start":18,"column_end":30},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":7211},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":301640,"byte_end":301652,"line_start":154,"line_end":154,"column_start":18,"column_end":30},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":7211},"to":{"krate":1,"index":1843}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":301860,"byte_end":301875,"line_start":164,"line_end":164,"column_start":6,"column_end":21},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":6535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":308390,"byte_end":308407,"line_start":342,"line_end":342,"column_start":6,"column_end":23},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":7218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":312562,"byte_end":312574,"line_start":450,"line_end":450,"column_start":6,"column_end":18},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":7225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/instructions.rs","byte_start":314701,"byte_end":314718,"line_start":523,"line_end":523,"column_start":6,"column_end":23},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/jumptable.rs","byte_start":322592,"byte_end":322605,"line_start":20,"line_end":20,"column_start":6,"column_end":19},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":7262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/jumptable.rs","byte_start":323875,"byte_end":323888,"line_start":69,"line_end":69,"column_start":18,"column_end":31},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":7262},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":326768,"byte_end":326774,"line_start":46,"line_end":46,"column_start":6,"column_end":12},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":7266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":329085,"byte_end":329091,"line_start":119,"line_end":119,"column_start":23,"column_end":29},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":7266},"to":{"krate":0,"index":1478}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":329590,"byte_end":329596,"line_start":139,"line_end":139,"column_start":6,"column_end":12},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":7266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":337482,"byte_end":337488,"line_start":344,"line_end":344,"column_start":6,"column_end":12},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":7266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":342186,"byte_end":342192,"line_start":490,"line_end":490,"column_start":23,"column_end":29},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1346},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":342855,"byte_end":342861,"line_start":518,"line_end":518,"column_start":6,"column_end":12},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":7266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":350111,"byte_end":350116,"line_start":734,"line_end":734,"column_start":23,"column_end":28},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1373},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/layout.rs","byte_start":350525,"byte_end":350530,"line_start":751,"line_end":751,"column_start":34,"column_end":39},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1373},"to":{"krate":1,"index":4643}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":367611,"byte_end":367618,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":7296},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":367739,"byte_end":367746,"line_start":57,"line_end":57,"column_start":18,"column_end":25},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":7296},"to":{"krate":1,"index":7368}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/libcall.rs","byte_start":368441,"byte_end":368448,"line_start":79,"line_end":79,"column_start":6,"column_end":13},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":7296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":373491,"byte_end":373499,"line_start":23,"line_end":23,"column_start":6,"column_end":14},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":7335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/memflags.rs","byte_start":376138,"byte_end":376146,"line_start":108,"line_end":108,"column_start":23,"column_end":31},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":7335},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":376887,"byte_end":376899,"line_start":19,"line_end":19,"column_start":21,"column_end":33},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":7352},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":377083,"byte_end":377095,"line_start":27,"line_end":27,"column_start":22,"column_end":34},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":7352},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":377289,"byte_end":377301,"line_start":35,"line_end":35,"column_start":25,"column_end":37},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":7352},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":377771,"byte_end":377791,"line_start":54,"line_end":54,"column_start":6,"column_end":26},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":7365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":378034,"byte_end":378054,"line_start":64,"line_end":64,"column_start":21,"column_end":41},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":7365},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":378146,"byte_end":378166,"line_start":70,"line_end":70,"column_start":22,"column_end":42},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":7365},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":378265,"byte_end":378285,"line_start":76,"line_end":76,"column_start":25,"column_end":45},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":7365},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":378501,"byte_end":378521,"line_start":85,"line_end":85,"column_start":29,"column_end":49},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":7365},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":378749,"byte_end":378769,"line_start":95,"line_end":95,"column_start":23,"column_end":43},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":7365},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":378993,"byte_end":379005,"line_start":104,"line_end":104,"column_start":23,"column_end":35},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":7352},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":379171,"byte_end":379191,"line_start":111,"line_end":111,"column_start":21,"column_end":41},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":7365},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/progpoint.rs","byte_start":379334,"byte_end":379346,"line_start":117,"line_end":117,"column_start":21,"column_end":33},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":7352},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/sourceloc.rs","byte_start":381712,"byte_end":381721,"line_start":21,"line_end":21,"column_start":6,"column_end":15},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":7382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/sourceloc.rs","byte_start":382088,"byte_end":382097,"line_start":38,"line_end":38,"column_start":18,"column_end":27},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":7382},"to":{"krate":1,"index":1843}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/sourceloc.rs","byte_start":382175,"byte_end":382184,"line_start":44,"line_end":44,"column_start":23,"column_end":32},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":7382},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":385769,"byte_end":385782,"line_start":83,"line_end":83,"column_start":18,"column_end":31},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":7397},"to":{"krate":1,"index":7368}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":386259,"byte_end":386272,"line_start":100,"line_end":100,"column_start":23,"column_end":36},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":7397},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":387444,"byte_end":387457,"line_start":134,"line_end":134,"column_start":6,"column_end":19},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":7421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":388180,"byte_end":388193,"line_start":155,"line_end":155,"column_start":23,"column_end":36},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":7421},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":389742,"byte_end":389752,"line_start":202,"line_end":202,"column_start":6,"column_end":16},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":7451},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":391674,"byte_end":391684,"line_start":267,"line_end":267,"column_start":27,"column_end":37},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":7451},"to":{"krate":1,"index":2099}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":391838,"byte_end":391848,"line_start":275,"line_end":275,"column_start":30,"column_end":40},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":7451},"to":{"krate":1,"index":2103}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/stackslot.rs","byte_start":392013,"byte_end":392023,"line_start":282,"line_end":282,"column_start":6,"column_end":16},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":7451},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/table.rs","byte_start":398731,"byte_end":398740,"line_start":27,"line_end":27,"column_start":23,"column_end":32},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":7467},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":400740,"byte_end":400748,"line_start":59,"line_end":59,"column_start":18,"column_end":26},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":7475},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/trapcode.rs","byte_start":401480,"byte_end":401488,"line_start":80,"line_end":80,"column_start":18,"column_end":26},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":7475},"to":{"krate":1,"index":7368}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":404692,"byte_end":404696,"line_start":34,"line_end":34,"column_start":6,"column_end":10},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":7516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":412894,"byte_end":412898,"line_start":306,"line_end":306,"column_start":18,"column_end":22},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":7516},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":413675,"byte_end":413679,"line_start":329,"line_end":329,"column_start":16,"column_end":20},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":7516},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/types.rs","byte_start":414504,"byte_end":414508,"line_start":352,"line_end":352,"column_start":18,"column_end":22},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":7516},"to":{"krate":1,"index":1843}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":421110,"byte_end":421118,"line_start":25,"line_end":25,"column_start":18,"column_end":26},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":7590},"to":{"krate":1,"index":1843}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":421187,"byte_end":421195,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":7590},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":422456,"byte_end":422471,"line_start":69,"line_end":69,"column_start":27,"column_end":42},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":1637},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":424220,"byte_end":424231,"line_start":110,"line_end":110,"column_start":18,"column_end":29},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":7611},"to":{"krate":1,"index":1843}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":424300,"byte_end":424311,"line_start":116,"line_end":116,"column_start":6,"column_end":17},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":7611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/ir/valueloc.rs","byte_start":425470,"byte_end":425488,"line_start":154,"line_end":154,"column_start":27,"column_end":45},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":1654},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/x86/abi.rs","byte_start":448292,"byte_end":448296,"line_start":81,"line_end":81,"column_start":6,"column_end":10},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":7681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/x86/abi.rs","byte_start":449078,"byte_end":449082,"line_start":112,"line_end":112,"column_start":22,"column_end":26},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":7681},"to":{"krate":0,"index":3041}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/x86/fde.rs","byte_start":543446,"byte_end":543455,"line_start":27,"line_end":27,"column_start":6,"column_end":15},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":7809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/x86/fde.rs","byte_start":543727,"byte_end":543736,"line_start":39,"line_end":39,"column_start":17,"column_end":26},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":7809},"to":{"krate":23,"index":130}},{"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/registers-x86.rs","byte_start":11304765,"byte_end":11304767,"line_start":164,"line_end":164,"column_start":24,"column_end":26},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":7829},"to":{"krate":1,"index":1773}},{"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings-x86.rs","byte_start":11304920,"byte_end":11304925,"line_start":6,"line_end":6,"column_start":6,"column_end":11},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":7972},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings-x86.rs","byte_start":11306859,"byte_end":11306864,"line_start":71,"line_end":71,"column_start":6,"column_end":11},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":7972},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings-x86.rs","byte_start":11313754,"byte_end":11313759,"line_start":330,"line_end":330,"column_start":23,"column_end":28},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":7972},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/x86/unwind.rs","byte_start":562350,"byte_end":562360,"line_start":43,"line_end":43,"column_start":6,"column_end":16},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":7977},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/x86/unwind.rs","byte_start":564843,"byte_end":564853,"line_start":118,"line_end":118,"column_start":6,"column_end":16},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":7996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/x86/mod.rs","byte_start":442278,"byte_end":442281,"line_start":66,"line_end":66,"column_start":20,"column_end":23},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":2184},"to":{"krate":0,"index":2452}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/x86/mod.rs","byte_start":445147,"byte_end":445150,"line_start":175,"line_end":175,"column_start":23,"column_end":26},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":2184},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/call_conv.rs","byte_start":580669,"byte_end":580677,"line_start":26,"line_end":26,"column_start":6,"column_end":14},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":8011},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/call_conv.rs","byte_start":582419,"byte_end":582427,"line_start":69,"line_end":69,"column_start":23,"column_end":31},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":8011},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/call_conv.rs","byte_start":582896,"byte_end":582904,"line_start":83,"line_end":83,"column_start":23,"column_end":31},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":8011},"to":{"krate":1,"index":7368}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":584369,"byte_end":584386,"line_start":27,"line_end":27,"column_start":6,"column_end":23},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":8040},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":588164,"byte_end":588181,"line_start":123,"line_end":123,"column_start":6,"column_end":23},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":8075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/constraints.rs","byte_start":590153,"byte_end":590164,"line_start":173,"line_end":173,"column_start":6,"column_end":17},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":8088},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/enc_tables.rs","byte_start":593262,"byte_end":593273,"line_start":52,"line_end":52,"column_start":30,"column_end":41},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":2262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/enc_tables.rs","byte_start":597744,"byte_end":597753,"line_start":188,"line_end":188,"column_start":10,"column_end":19},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":2291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/enc_tables.rs","byte_start":599673,"byte_end":599682,"line_start":247,"line_end":247,"column_start":23,"column_end":32},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":2291},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":601876,"byte_end":601884,"line_start":21,"line_end":21,"column_start":6,"column_end":14},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":8096},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":602457,"byte_end":602465,"line_start":44,"line_end":44,"column_start":18,"column_end":26},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":8096},"to":{"krate":1,"index":1843}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":602604,"byte_end":602612,"line_start":51,"line_end":51,"column_start":23,"column_end":31},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":8096},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":603091,"byte_end":603106,"line_start":68,"line_end":68,"column_start":23,"column_end":38},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":2331},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/encoding.rs","byte_start":604857,"byte_end":604864,"line_start":127,"line_end":127,"column_start":6,"column_end":13},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":8111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":608465,"byte_end":608472,"line_start":62,"line_end":62,"column_start":6,"column_end":13},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":611639,"byte_end":611651,"line_start":156,"line_end":156,"column_start":6,"column_end":18},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":2372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":613749,"byte_end":613761,"line_start":212,"line_end":212,"column_start":23,"column_end":35},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":2372},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":613883,"byte_end":613895,"line_start":218,"line_end":218,"column_start":21,"column_end":33},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":2372},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":614092,"byte_end":614104,"line_start":225,"line_end":225,"column_start":20,"column_end":32},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":2372},"to":{"krate":1,"index":1588}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":614494,"byte_end":614507,"line_start":238,"line_end":238,"column_start":20,"column_end":33},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":8117},"to":{"krate":16,"index":6}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":614665,"byte_end":614678,"line_start":248,"line_end":248,"column_start":25,"column_end":38},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":8117},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":614771,"byte_end":614784,"line_start":254,"line_end":254,"column_start":23,"column_end":36},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":8117},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":615863,"byte_end":615870,"line_start":284,"line_end":284,"column_start":6,"column_end":13},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":8132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/registers.rs","byte_start":617167,"byte_end":617181,"line_start":324,"line_end":324,"column_start":27,"column_end":41},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2416},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":618909,"byte_end":618917,"line_start":24,"line_end":24,"column_start":6,"column_end":14},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":8137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/stack.rs","byte_start":621251,"byte_end":621264,"line_start":90,"line_end":90,"column_start":6,"column_end":19},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":8166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":430714,"byte_end":430721,"line_start":145,"line_end":145,"column_start":6,"column_end":13},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":2438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":431061,"byte_end":431068,"line_start":153,"line_end":153,"column_start":33,"column_end":40},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":2438},"to":{"krate":0,"index":2577}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":431941,"byte_end":431961,"line_start":181,"line_end":181,"column_start":6,"column_end":26},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":8200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":432590,"byte_end":432597,"line_start":200,"line_end":200,"column_start":27,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":5921},"to":{"krate":0,"index":2452}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":432600,"byte_end":432604,"line_start":200,"line_end":200,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":1,"index":1852},"to":{"krate":0,"index":2452}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/isa/mod.rs","byte_start":432607,"byte_end":432611,"line_start":200,"line_end":200,"column_start":44,"column_end":48},"kind":"SuperTrait","from":{"krate":1,"index":1864},"to":{"krate":0,"index":2452}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":622454,"byte_end":622462,"line_start":34,"line_end":34,"column_start":6,"column_end":14},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":2503},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":622764,"byte_end":622776,"line_start":45,"line_end":45,"column_start":6,"column_end":18},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":2499},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/loop_analysis.rs","byte_start":624570,"byte_end":624582,"line_start":101,"line_end":101,"column_start":6,"column_end":18},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":2499},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/print_errors.rs","byte_start":636452,"byte_end":636471,"line_start":49,"line_end":49,"column_start":25,"column_end":44},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":2549},"to":{"krate":0,"index":2980}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":642884,"byte_end":642891,"line_start":54,"line_end":54,"column_start":6,"column_end":13},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":8234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":645298,"byte_end":645305,"line_start":128,"line_end":128,"column_start":23,"column_end":30},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":8234},"to":{"krate":0,"index":2577}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":647546,"byte_end":647559,"line_start":194,"line_end":194,"column_start":10,"column_end":23},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":8263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":648741,"byte_end":648749,"line_start":232,"line_end":232,"column_start":10,"column_end":18},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":2604},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":650122,"byte_end":650130,"line_start":266,"line_end":266,"column_start":48,"column_end":56},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":2604},"to":{"krate":0,"index":3066}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":651814,"byte_end":651820,"line_start":322,"line_end":322,"column_start":10,"column_end":16},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":8272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11377066,"byte_end":11377071,"line_start":6,"line_end":6,"column_start":6,"column_end":11},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":8332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11377632,"byte_end":11377640,"line_start":27,"line_end":27,"column_start":23,"column_end":31},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":8337},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11377899,"byte_end":11377907,"line_start":36,"line_end":36,"column_start":23,"column_end":31},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":8337},"to":{"krate":1,"index":7368}},{"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11378638,"byte_end":11378653,"line_start":67,"line_end":67,"column_start":23,"column_end":38},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":8358},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11379168,"byte_end":11379183,"line_start":81,"line_end":81,"column_start":23,"column_end":38},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":8358},"to":{"krate":1,"index":7368}},{"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11379783,"byte_end":11379788,"line_start":99,"line_end":99,"column_start":6,"column_end":11},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":8332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/build/cranelift-codegen-6da12963a5509153/out/settings.rs","byte_start":11390836,"byte_end":11390841,"line_start":448,"line_end":448,"column_start":23,"column_end":28},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":8332},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":652891,"byte_end":652901,"line_start":352,"line_end":352,"column_start":30,"column_end":40},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":8389},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/settings.rs","byte_start":653040,"byte_end":653050,"line_start":358,"line_end":358,"column_start":38,"column_end":48},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":8389},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":658309,"byte_end":658313,"line_start":82,"line_end":82,"column_start":6,"column_end":10},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":8433},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":658401,"byte_end":658405,"line_start":88,"line_end":88,"column_start":23,"column_end":27},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":8433},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":660132,"byte_end":660141,"line_start":142,"line_end":142,"column_start":22,"column_end":31},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":2660},"to":{"krate":1,"index":1843}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":660307,"byte_end":660316,"line_start":150,"line_end":150,"column_start":27,"column_end":36},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":2660},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/timing.rs","byte_start":662302,"byte_end":662313,"line_start":199,"line_end":199,"column_start":19,"column_end":30},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":2656},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/cssa.rs","byte_start":741847,"byte_end":741859,"line_start":61,"line_end":61,"column_start":10,"column_end":22},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":2752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/flags.rs","byte_start":748184,"byte_end":748197,"line_start":49,"line_end":49,"column_start":10,"column_end":23},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":2781},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/liveness.rs","byte_start":754846,"byte_end":754862,"line_start":50,"line_end":50,"column_start":10,"column_end":26},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":2812},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/locations.rs","byte_start":763623,"byte_end":763639,"line_start":51,"line_end":51,"column_start":10,"column_end":26},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":2834},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":669000,"byte_end":669013,"line_start":124,"line_end":124,"column_start":35,"column_end":48},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":8527},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":669471,"byte_end":669484,"line_start":143,"line_end":143,"column_start":29,"column_end":42},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":8527},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":670679,"byte_end":670693,"line_start":180,"line_end":180,"column_start":6,"column_end":20},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":8545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":671962,"byte_end":671976,"line_start":228,"line_end":228,"column_start":35,"column_end":49},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":8545},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":672083,"byte_end":672097,"line_start":234,"line_end":234,"column_start":35,"column_end":49},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":8545},"to":{"krate":1,"index":1773}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":672200,"byte_end":672214,"line_start":240,"line_end":240,"column_start":35,"column_end":49},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":8545},"to":{"krate":1,"index":1773}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":672382,"byte_end":672396,"line_start":250,"line_end":250,"column_start":18,"column_end":32},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":8545},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/verifier/mod.rs","byte_start":673745,"byte_end":673753,"line_start":303,"line_end":303,"column_start":10,"column_end":18},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":2892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":779965,"byte_end":779976,"line_start":135,"line_end":135,"column_start":21,"column_end":32},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":2987},"to":{"krate":0,"index":2980}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":798434,"byte_end":798447,"line_start":729,"line_end":729,"column_start":27,"column_end":40},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":3009},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/write.rs","byte_start":798823,"byte_end":798849,"line_start":744,"line_end":744,"column_start":27,"column_end":53},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":3016},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/abi.rs","byte_start":803347,"byte_end":803356,"line_start":28,"line_end":28,"column_start":28,"column_end":37},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":8562},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/abi.rs","byte_start":803461,"byte_end":803470,"line_start":34,"line_end":34,"column_start":32,"column_end":41},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":8562},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/abi.rs","byte_start":804129,"byte_end":804144,"line_start":59,"line_end":59,"column_start":6,"column_end":21},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":8574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/bitset.rs","byte_start":811182,"byte_end":811188,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":8599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/context.rs","byte_start":819613,"byte_end":819620,"line_start":60,"line_end":60,"column_start":6,"column_end":13},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":3115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/fx.rs","byte_start":872720,"byte_end":872728,"line_start":51,"line_end":51,"column_start":18,"column_end":26},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":3205},"to":{"krate":1,"index":1843}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/fx.rs","byte_start":872811,"byte_end":872819,"line_start":58,"line_end":58,"column_start":6,"column_end":14},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":3205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/fx.rs","byte_start":872975,"byte_end":872983,"line_start":65,"line_end":65,"column_start":17,"column_end":25},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":3205},"to":{"krate":1,"index":6115}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/iterators.rs","byte_start":874017,"byte_end":874025,"line_start":4,"line_end":4,"column_start":27,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":4716},"to":{"krate":0,"index":3221}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/iterators.rs","byte_start":874345,"byte_end":874346,"line_start":16,"line_end":16,"column_start":28,"column_end":29},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":3224},"to":{"krate":0,"index":3221}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/iterators.rs","byte_start":874657,"byte_end":874670,"line_start":30,"line_end":30,"column_start":22,"column_end":35},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":3225},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/redundant_reload_remover.rs","byte_start":1021573,"byte_end":1021595,"line_start":303,"line_end":303,"column_start":6,"column_end":28},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":3647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/redundant_reload_remover.rs","byte_start":1024038,"byte_end":1024046,"line_start":349,"line_end":349,"column_start":6,"column_end":14},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":8708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/redundant_reload_remover.rs","byte_start":1029237,"byte_end":1029259,"line_start":483,"line_end":483,"column_start":6,"column_end":28},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":3647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/redundant_reload_remover.rs","byte_start":1037828,"byte_end":1037850,"line_start":654,"line_end":654,"column_start":6,"column_end":28},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":3647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/redundant_reload_remover.rs","byte_start":1043457,"byte_end":1043479,"line_start":764,"line_end":764,"column_start":6,"column_end":28},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":3647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/redundant_reload_remover.rs","byte_start":1047694,"byte_end":1047716,"line_start":879,"line_end":879,"column_start":6,"column_end":28},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":3647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/coloring.rs","byte_start":1053884,"byte_end":1053892,"line_start":113,"line_end":113,"column_start":6,"column_end":14},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":3752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/coloring.rs","byte_start":1055107,"byte_end":1055114,"line_start":156,"line_end":156,"column_start":10,"column_end":17},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":3761},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/coloring.rs","byte_start":1104349,"byte_end":1104362,"line_start":1302,"line_end":1302,"column_start":6,"column_end":19},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":3817},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/live_value_tracker.rs","byte_start":1107490,"byte_end":1107502,"line_start":68,"line_end":68,"column_start":6,"column_end":18},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":3847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/live_value_tracker.rs","byte_start":1109358,"byte_end":1109374,"line_start":126,"line_end":126,"column_start":6,"column_end":22},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":3843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1133299,"byte_end":1133307,"line_start":300,"line_end":300,"column_start":6,"column_end":14},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":3904},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liveness.rs","byte_start":1138994,"byte_end":1139002,"line_start":436,"line_end":436,"column_start":23,"column_end":31},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":3904},"to":{"krate":1,"index":2099}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1149372,"byte_end":1149388,"line_start":210,"line_end":210,"column_start":24,"column_end":40},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":3942},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/liverange.rs","byte_start":1160029,"byte_end":1160045,"line_start":467,"line_end":467,"column_start":50,"column_end":66},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":3942},"to":{"krate":16,"index":364}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1170276,"byte_end":1170287,"line_start":35,"line_end":35,"column_start":6,"column_end":17},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":8720},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1173868,"byte_end":1173878,"line_start":134,"line_end":134,"column_start":19,"column_end":29},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":8724},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1174816,"byte_end":1174826,"line_start":165,"line_end":165,"column_start":6,"column_end":16},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":8724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1175586,"byte_end":1175596,"line_start":190,"line_end":190,"column_start":28,"column_end":38},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":8724},"to":{"krate":1,"index":4672}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1175794,"byte_end":1175812,"line_start":195,"line_end":195,"column_start":27,"column_end":45},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":4013},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/register_set.rs","byte_start":1177944,"byte_end":1177955,"line_start":248,"line_end":248,"column_start":23,"column_end":34},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":8720},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1184036,"byte_end":1184044,"line_start":59,"line_end":59,"column_start":6,"column_end":14},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":4045},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1189709,"byte_end":1189717,"line_start":230,"line_end":230,"column_start":23,"column_end":31},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":4045},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1190677,"byte_end":1190684,"line_start":258,"line_end":258,"column_start":6,"column_end":13},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":4075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/virtregs.rs","byte_start":1191986,"byte_end":1191994,"line_start":292,"line_end":292,"column_start":6,"column_end":14},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":4045},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1200995,"byte_end":1201003,"line_start":31,"line_end":31,"column_start":18,"column_end":26},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":8767},"to":{"krate":1,"index":1843}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1201072,"byte_end":1201080,"line_start":37,"line_end":37,"column_start":6,"column_end":14},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":8767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/affinity.rs","byte_start":1203825,"byte_end":1203840,"line_start":115,"line_end":115,"column_start":27,"column_end":42},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":4114},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/branch_splitting.rs","byte_start":1205447,"byte_end":1205454,"line_start":44,"line_end":44,"column_start":10,"column_end":17},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":4140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/coalescing.rs","byte_start":1214237,"byte_end":1214247,"line_start":86,"line_end":86,"column_start":6,"column_end":16},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":4190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/coalescing.rs","byte_start":1216242,"byte_end":1216249,"line_start":151,"line_end":151,"column_start":10,"column_end":17},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":4197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/coalescing.rs","byte_start":1225292,"byte_end":1225299,"line_start":390,"line_end":390,"column_start":10,"column_end":17},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":4197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/coalescing.rs","byte_start":1237603,"byte_end":1237607,"line_start":697,"line_end":697,"column_start":6,"column_end":10},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":8780},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/coalescing.rs","byte_start":1238428,"byte_end":1238432,"line_start":730,"line_end":730,"column_start":23,"column_end":27},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":8780},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/coalescing.rs","byte_start":1238711,"byte_end":1238720,"line_start":740,"line_end":740,"column_start":6,"column_end":15},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":4237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/coalescing.rs","byte_start":1244692,"byte_end":1244705,"line_start":882,"line_end":882,"column_start":6,"column_end":19},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":4250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/coalescing.rs","byte_start":1250566,"byte_end":1250575,"line_start":1038,"line_end":1038,"column_start":23,"column_end":32},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":4267},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/coalescing.rs","byte_start":1251345,"byte_end":1251355,"line_start":1066,"line_end":1066,"column_start":18,"column_end":28},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":4276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/coalescing.rs","byte_start":1251718,"byte_end":1251728,"line_start":1081,"line_end":1081,"column_start":31,"column_end":41},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":4276},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/context.rs","byte_start":1253842,"byte_end":1253849,"line_start":39,"line_end":39,"column_start":6,"column_end":13},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1261387,"byte_end":1261396,"line_start":33,"line_end":33,"column_start":6,"column_end":15},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":8791},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1262022,"byte_end":1262035,"line_start":59,"line_end":59,"column_start":6,"column_end":19},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":8806},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1268272,"byte_end":1268290,"line_start":237,"line_end":237,"column_start":6,"column_end":24},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":4356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1268556,"byte_end":1268574,"line_start":250,"line_end":250,"column_start":16,"column_end":34},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":4356},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1268961,"byte_end":1268984,"line_start":263,"line_end":263,"column_start":32,"column_end":55},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":8810},"to":{"krate":16,"index":364}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/diversion.rs","byte_start":1269189,"byte_end":1269206,"line_start":272,"line_end":272,"column_start":27,"column_end":44},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":4387},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/pressure.rs","byte_start":1273228,"byte_end":1273233,"line_start":68,"line_end":68,"column_start":6,"column_end":11},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":8815},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/pressure.rs","byte_start":1273666,"byte_end":1273674,"line_start":83,"line_end":83,"column_start":6,"column_end":14},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":4407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/pressure.rs","byte_start":1280034,"byte_end":1280042,"line_start":261,"line_end":261,"column_start":23,"column_end":31},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":4407},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/reload.rs","byte_start":1285951,"byte_end":1285957,"line_start":50,"line_end":50,"column_start":6,"column_end":12},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":4460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/reload.rs","byte_start":1287404,"byte_end":1287417,"line_start":108,"line_end":108,"column_start":32,"column_end":45},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":4480},"to":{"krate":16,"index":364}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/reload.rs","byte_start":1287486,"byte_end":1287493,"line_start":114,"line_end":114,"column_start":10,"column_end":17},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":4463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/solver.rs","byte_start":1312101,"byte_end":1312109,"line_start":154,"line_end":154,"column_start":6,"column_end":14},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":4535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/solver.rs","byte_start":1313634,"byte_end":1313642,"line_start":206,"line_end":206,"column_start":23,"column_end":31},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":4535},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/solver.rs","byte_start":1314464,"byte_end":1314474,"line_start":239,"line_end":239,"column_start":32,"column_end":42},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":8824},"to":{"krate":16,"index":364}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/solver.rs","byte_start":1314556,"byte_end":1314566,"line_start":245,"line_end":245,"column_start":23,"column_end":33},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":8824},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/solver.rs","byte_start":1315398,"byte_end":1315402,"line_start":283,"line_end":283,"column_start":6,"column_end":10},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":8833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/solver.rs","byte_start":1317841,"byte_end":1317845,"line_start":362,"line_end":362,"column_start":23,"column_end":27},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":8833},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/solver.rs","byte_start":1318962,"byte_end":1318966,"line_start":408,"line_end":408,"column_start":21,"column_end":25},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":8833},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/solver.rs","byte_start":1322465,"byte_end":1322471,"line_start":489,"line_end":489,"column_start":6,"column_end":12},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":4567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/solver.rs","byte_start":1336370,"byte_end":1336376,"line_start":839,"line_end":839,"column_start":6,"column_end":12},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":4567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/solver.rs","byte_start":1341503,"byte_end":1341509,"line_start":977,"line_end":977,"column_start":6,"column_end":12},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":4567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/solver.rs","byte_start":1347915,"byte_end":1347921,"line_start":1129,"line_end":1129,"column_start":23,"column_end":29},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":4567},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/spilling.rs","byte_start":1359576,"byte_end":1359584,"line_start":76,"line_end":76,"column_start":6,"column_end":14},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":4659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/spilling.rs","byte_start":1360863,"byte_end":1360870,"line_start":122,"line_end":122,"column_start":10,"column_end":17},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":4662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/spilling.rs","byte_start":1380740,"byte_end":1380746,"line_start":609,"line_end":609,"column_start":6,"column_end":12},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":8855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/regalloc/spilling.rs","byte_start":1381018,"byte_end":1381024,"line_start":622,"line_end":622,"column_start":23,"column_end":29},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":8855},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/scoped_hash_map.rs","byte_start":1383635,"byte_end":1383648,"line_start":30,"line_end":30,"column_start":16,"column_end":29},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":4727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/scoped_hash_map.rs","byte_start":1384166,"byte_end":1384177,"line_start":47,"line_end":47,"column_start":22,"column_end":33},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":4737},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/scoped_hash_map.rs","byte_start":1385112,"byte_end":1385125,"line_start":77,"line_end":77,"column_start":12,"column_end":25},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":4759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/simple_gvn.rs","byte_start":1391636,"byte_end":1391643,"line_start":41,"line_end":41,"column_start":27,"column_end":34},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":8889},"to":{"krate":1,"index":6107}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/simple_gvn.rs","byte_start":1391866,"byte_end":1391873,"line_start":48,"line_end":48,"column_start":32,"column_end":39},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":8889},"to":{"krate":1,"index":1588}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/simple_gvn.rs","byte_start":1392080,"byte_end":1392087,"line_start":54,"line_end":54,"column_start":25,"column_end":32},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":8889},"to":{"krate":1,"index":1593}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/topo_order.rs","byte_start":1441906,"byte_end":1441915,"line_start":28,"line_end":28,"column_start":6,"column_end":15},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":4901},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/value_label.rs","byte_start":1456115,"byte_end":1456134,"line_start":246,"line_end":246,"column_start":26,"column_end":45},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":8950},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/value_label.rs","byte_start":1456213,"byte_end":1456232,"line_start":252,"line_end":252,"column_start":16,"column_end":35},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":8950},"to":{"krate":1,"index":2023}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/value_label.rs","byte_start":1456345,"byte_end":1456364,"line_start":259,"line_end":259,"column_start":21,"column_end":40},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":8950},"to":{"krate":1,"index":1625}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/value_label.rs","byte_start":1456481,"byte_end":1456500,"line_start":265,"line_end":265,"column_start":14,"column_end":33},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":8950},"to":{"krate":1,"index":1614}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.59.0/src/value_label.rs","byte_start":1456620,"byte_end":1456639,"line_start":271,"line_end":271,"column_start":20,"column_end":39},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":8950},"to":{"krate":1,"index":1588}}]}