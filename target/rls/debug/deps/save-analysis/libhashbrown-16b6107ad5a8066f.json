{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3","program":"/Users/william/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","hashbrown","--edition=2018","/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"ahash\"","--cfg","feature=\"ahash-compile-time-rng\"","--cfg","feature=\"default\"","--cfg","feature=\"inline-more\"","-C","metadata=16b6107ad5a8066f","-C","extra-filename=-16b6107ad5a8066f","--out-dir","/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/deps","-L","dependency=/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/deps","--extern","ahash=/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/deps/libahash-85b2ffbd0ceb06cf.rmeta","--cap-lints","allow","--cfg","has_extern_crate_alloc","--error-format=json","--sysroot","/Users/william/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/william/terra/cosmwasm-contracts/contracts/luna-flip/target/rls/debug/deps/libhashbrown-16b6107ad5a8066f.rmeta"},"prelude":{"crate_id":{"name":"hashbrown","disambiguator":[5970580951982313793,4557519412320744766]},"crate_root":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src","external_crates":[{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[17187672715010298091,8744209918715530773]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[15887813922859449425,14244592339943736272]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[6807992320260993406,9894278173044996986]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[17858480672457447890,14967053264370168355]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","num":5,"id":{"name":"ahash","disambiguator":[6983248852915162198,3238821230219733860]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","num":6,"id":{"name":"const_random","disambiguator":[1251716104785735547,10153393585558081322]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","num":7,"id":{"name":"proc_macro_hack","disambiguator":[15260283162016249445,12127011552314439639]}},{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","num":8,"id":{"name":"const_random_macro","disambiguator":[2460826744623124190,10776919632564767386]}}],"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","byte_start":0,"byte_end":3353,"line_start":1,"line_end":121,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","byte_start":1559,"byte_end":1560,"line_start":58,"line_end":58,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1230}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","byte_start":1559,"byte_end":1560,"line_start":58,"line_end":58,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1232}},{"kind":"Use","ref_id":{"krate":0,"index":1282},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","byte_start":2889,"byte_end":2896,"line_start":107,"line_end":107,"column_start":21,"column_end":28},"alias_span":null,"name":"HashMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1293},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","byte_start":2918,"byte_end":2925,"line_start":108,"line_end":108,"column_start":21,"column_end":28},"alias_span":null,"name":"HashSet","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","byte_start":0,"byte_end":3353,"line_start":1,"line_end":121,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":7},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":887},{"krate":0,"index":912},{"krate":0,"index":1230},{"krate":0,"index":1232},{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1301},{"krate":0,"index":1315},{"krate":0,"index":1311},{"krate":0,"index":1312},{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1306}],"decl_id":null,"docs":" This crate is a Rust port of Google's high-performance [SwissTable] hash\n map, adapted to make it a drop-in replacement for Rust's standard `HashMap`\n and `HashSet` types.","sig":null,"attributes":[{"value":"! This crate is a Rust port of Google's high-performance [SwissTable] hash","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","byte_start":0,"byte_end":76,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"! map, adapted to make it a drop-in replacement for Rust's standard `HashMap`","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","byte_start":77,"byte_end":156,"line_start":2,"line_end":2,"column_start":1,"column_end":80}},{"value":"! and `HashSet` types.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","byte_start":157,"byte_end":181,"line_start":3,"line_end":3,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","byte_start":182,"byte_end":185,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! The original C++ version of [SwissTable] can be found [here], and this","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","byte_start":186,"byte_end":260,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"! [CppCon talk] gives an overview of how the algorithm works.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","byte_start":261,"byte_end":324,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","byte_start":325,"byte_end":328,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! [SwissTable]: https://abseil.io/blog/20180927-swisstables","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","byte_start":329,"byte_end":390,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"! [here]: https://github.com/abseil/abseil-cpp/blob/master/absl/container/internal/raw_hash_set.h","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","byte_start":391,"byte_end":490,"line_start":9,"line_end":9,"column_start":1,"column_end":100}},{"value":"! [CppCon talk]: https://www.youtube.com/watch?v=ncHmEUmJZf4","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","byte_start":491,"byte_end":553,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"no_std","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","byte_start":555,"byte_end":565,"line_start":12,"line_end":12,"column_start":1,"column_end":11}},{"value":"allow(clippy :: doc_markdown, clippy :: module_name_repetitions, clippy ::\n        must_use_candidate)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","byte_start":787,"byte_end":893,"line_start":25,"line_end":29,"column_start":1,"column_end":3}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","byte_start":894,"byte_end":916,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","byte_start":917,"byte_end":943,"line_start":31,"line_end":31,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":284},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":59832,"byte_end":59850,"line_start":13,"line_end":13,"column_start":10,"column_end":28},"name":"DefaultHashBuilder","qualname":"::map::DefaultHashBuilder","value":"ahash::ABuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Default hasher for `HashMap`.\n","sig":null,"attributes":[{"value":"/ Default hasher for `HashMap`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":59763,"byte_end":59796,"line_start":11,"line_end":11,"column_start":1,"column_end":34}},{"value":"cfg(feature = \"ahash\")","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":59797,"byte_end":59822,"line_start":12,"line_end":12,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1282},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":66318,"byte_end":66325,"line_start":194,"line_end":194,"column_start":12,"column_end":19},"name":"HashMap","qualname":"::map::HashMap","value":"HashMap {  }","parent":null,"children":[{"krate":0,"index":1286},{"krate":0,"index":1287}],"decl_id":null,"docs":" A hash map implemented with quadratic probing and SIMD lookup.","sig":null,"attributes":[{"value":"/ A hash map implemented with quadratic probing and SIMD lookup.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":59978,"byte_end":60044,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":60045,"byte_end":60048,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The default hashing algorithm is currently [`AHash`], though this is","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":60049,"byte_end":60121,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ subject to change at any point in the future. This hash function is very","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":60122,"byte_end":60198,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ fast for all types of keys, but this algorithm will typically *not* protect","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":60199,"byte_end":60278,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ against attacks such as HashDoS.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":60279,"byte_end":60315,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":60316,"byte_end":60319,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The hashing algorithm can be replaced on a per-`HashMap` basis using the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":60320,"byte_end":60396,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ [`default`], [`with_hasher`], and [`with_capacity_and_hasher`] methods. Many","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":60397,"byte_end":60477,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ alternative algorithms are available on crates.io, such as the [`fnv`] crate.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":60478,"byte_end":60559,"line_start":28,"line_end":28,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":60560,"byte_end":60563,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ It is required that the keys implement the [`Eq`] and [`Hash`] traits, although","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":60564,"byte_end":60647,"line_start":30,"line_end":30,"column_start":1,"column_end":84}},{"value":"/ this can frequently be achieved by using `#[derive(PartialEq, Eq, Hash)]`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":60648,"byte_end":60726,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/ If you implement these yourself, it is important that the following","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":60727,"byte_end":60798,"line_start":32,"line_end":32,"column_start":1,"column_end":72}},{"value":"/ property holds:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":60799,"byte_end":60818,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":60819,"byte_end":60822,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":60823,"byte_end":60834,"line_start":35,"line_end":35,"column_start":1,"column_end":12}},{"value":"/ k1 == k2 -> hash(k1) == hash(k2)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":60835,"byte_end":60871,"line_start":36,"line_end":36,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":60872,"byte_end":60879,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":60880,"byte_end":60883,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ In other words, if two keys are equal, their hashes must be equal.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":60884,"byte_end":60954,"line_start":39,"line_end":39,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":60955,"byte_end":60958,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ It is a logic error for a key to be modified in such a way that the key's","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":60959,"byte_end":61036,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ hash, as determined by the [`Hash`] trait, or its equality, as determined by","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":61037,"byte_end":61117,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ the [`Eq`] trait, changes while it is in the map. This is normally only","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":61118,"byte_end":61193,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/ possible through [`Cell`], [`RefCell`], global state, I/O, or unsafe code.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":61194,"byte_end":61272,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":61273,"byte_end":61276,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ It is also a logic error for the [`Hash`] implementation of a key to panic.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":61277,"byte_end":61356,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ This is generally only possible if the trait is implemented manually. If a","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":61357,"byte_end":61435,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/ panic does occur then the contents of the `HashMap` may become corrupted and","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":61436,"byte_end":61516,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"/ some items may be dropped from the table.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":61517,"byte_end":61562,"line_start":49,"line_end":49,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":61563,"byte_end":61566,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":61567,"byte_end":61581,"line_start":51,"line_end":51,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":61582,"byte_end":61585,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":61586,"byte_end":61593,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":61594,"byte_end":61621,"line_start":54,"line_end":54,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":61622,"byte_end":61625,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Type inference lets us omit an explicit type signature (which","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":61626,"byte_end":61694,"line_start":56,"line_end":56,"column_start":1,"column_end":69}},{"value":"/ // would be `HashMap<String, String>` in this example).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":61695,"byte_end":61754,"line_start":57,"line_end":57,"column_start":1,"column_end":60}},{"value":"/ let mut book_reviews = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":61755,"byte_end":61797,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":61798,"byte_end":61801,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ // Review some books.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":61802,"byte_end":61827,"line_start":60,"line_end":60,"column_start":1,"column_end":26}},{"value":"/ book_reviews.insert(","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":61828,"byte_end":61852,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/     \"Adventures of Huckleberry Finn\".to_string(),","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":61853,"byte_end":61906,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"/     \"My favorite book.\".to_string(),","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":61907,"byte_end":61947,"line_start":63,"line_end":63,"column_start":1,"column_end":41}},{"value":"/ );","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":61948,"byte_end":61954,"line_start":64,"line_end":64,"column_start":1,"column_end":7}},{"value":"/ book_reviews.insert(","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":61955,"byte_end":61979,"line_start":65,"line_end":65,"column_start":1,"column_end":25}},{"value":"/     \"Grimms' Fairy Tales\".to_string(),","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":61980,"byte_end":62022,"line_start":66,"line_end":66,"column_start":1,"column_end":43}},{"value":"/     \"Masterpiece.\".to_string(),","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":62023,"byte_end":62058,"line_start":67,"line_end":67,"column_start":1,"column_end":36}},{"value":"/ );","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":62059,"byte_end":62065,"line_start":68,"line_end":68,"column_start":1,"column_end":7}},{"value":"/ book_reviews.insert(","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":62066,"byte_end":62090,"line_start":69,"line_end":69,"column_start":1,"column_end":25}},{"value":"/     \"Pride and Prejudice\".to_string(),","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":62091,"byte_end":62133,"line_start":70,"line_end":70,"column_start":1,"column_end":43}},{"value":"/     \"Very enjoyable.\".to_string(),","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":62134,"byte_end":62172,"line_start":71,"line_end":71,"column_start":1,"column_end":39}},{"value":"/ );","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":62173,"byte_end":62179,"line_start":72,"line_end":72,"column_start":1,"column_end":7}},{"value":"/ book_reviews.insert(","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":62180,"byte_end":62204,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/     \"The Adventures of Sherlock Holmes\".to_string(),","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":62205,"byte_end":62261,"line_start":74,"line_end":74,"column_start":1,"column_end":57}},{"value":"/     \"Eye lyked it alot.\".to_string(),","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":62262,"byte_end":62303,"line_start":75,"line_end":75,"column_start":1,"column_end":42}},{"value":"/ );","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":62304,"byte_end":62310,"line_start":76,"line_end":76,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":62311,"byte_end":62314,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ // Check for a specific one.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":62315,"byte_end":62347,"line_start":78,"line_end":78,"column_start":1,"column_end":33}},{"value":"/ // When collections store owned values (String), they can still be","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":62348,"byte_end":62418,"line_start":79,"line_end":79,"column_start":1,"column_end":71}},{"value":"/ // queried using references (&str).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":62419,"byte_end":62458,"line_start":80,"line_end":80,"column_start":1,"column_end":40}},{"value":"/ if !book_reviews.contains_key(\"Les Misérables\") {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":62459,"byte_end":62513,"line_start":81,"line_end":81,"column_start":1,"column_end":54}},{"value":"/     println!(\"We've got {} reviews, but Les Misérables ain't one.\",","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":62514,"byte_end":62586,"line_start":82,"line_end":82,"column_start":1,"column_end":72}},{"value":"/              book_reviews.len());","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":62587,"byte_end":62624,"line_start":83,"line_end":83,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":62625,"byte_end":62630,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":62631,"byte_end":62634,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ // oops, this review has a lot of spelling mistakes, let's delete it.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":62635,"byte_end":62708,"line_start":86,"line_end":86,"column_start":1,"column_end":74}},{"value":"/ book_reviews.remove(\"The Adventures of Sherlock Holmes\");","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":62709,"byte_end":62770,"line_start":87,"line_end":87,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":62771,"byte_end":62774,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ // Look up the values associated with some keys.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":62775,"byte_end":62827,"line_start":89,"line_end":89,"column_start":1,"column_end":53}},{"value":"/ let to_find = [\"Pride and Prejudice\", \"Alice's Adventure in Wonderland\"];","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":62828,"byte_end":62905,"line_start":90,"line_end":90,"column_start":1,"column_end":78}},{"value":"/ for &book in &to_find {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":62906,"byte_end":62933,"line_start":91,"line_end":91,"column_start":1,"column_end":28}},{"value":"/     match book_reviews.get(book) {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":62934,"byte_end":62972,"line_start":92,"line_end":92,"column_start":1,"column_end":39}},{"value":"/         Some(review) => println!(\"{}: {}\", book, review),","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":62973,"byte_end":63034,"line_start":93,"line_end":93,"column_start":1,"column_end":62}},{"value":"/         None => println!(\"{} is unreviewed.\", book)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":63035,"byte_end":63090,"line_start":94,"line_end":94,"column_start":1,"column_end":56}},{"value":"/     }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":63091,"byte_end":63100,"line_start":95,"line_end":95,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":63101,"byte_end":63106,"line_start":96,"line_end":96,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":63107,"byte_end":63110,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ // Look up the value for a key (will panic if the key is not found).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":63111,"byte_end":63183,"line_start":98,"line_end":98,"column_start":1,"column_end":73}},{"value":"/ println!(\"Review for Jane: {}\", book_reviews[\"Pride and Prejudice\"]);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":63184,"byte_end":63257,"line_start":99,"line_end":99,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":63258,"byte_end":63261,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ // Iterate over everything.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":63262,"byte_end":63293,"line_start":101,"line_end":101,"column_start":1,"column_end":32}},{"value":"/ for (book, review) in &book_reviews {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":63294,"byte_end":63335,"line_start":102,"line_end":102,"column_start":1,"column_end":42}},{"value":"/     println!(\"{}: \\\"{}\\\"\", book, review);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":63336,"byte_end":63381,"line_start":103,"line_end":103,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":63382,"byte_end":63387,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":63388,"byte_end":63395,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":63396,"byte_end":63399,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ `HashMap` also implements an [`Entry API`](#method.entry), which allows","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":63400,"byte_end":63475,"line_start":107,"line_end":107,"column_start":1,"column_end":76}},{"value":"/ for more complex methods of getting, setting, updating and removing keys and","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":63476,"byte_end":63556,"line_start":108,"line_end":108,"column_start":1,"column_end":81}},{"value":"/ their values:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":63557,"byte_end":63574,"line_start":109,"line_end":109,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":63575,"byte_end":63578,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":63579,"byte_end":63586,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":63587,"byte_end":63614,"line_start":112,"line_end":112,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":63615,"byte_end":63618,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ // type inference lets us omit an explicit type signature (which","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":63619,"byte_end":63687,"line_start":114,"line_end":114,"column_start":1,"column_end":69}},{"value":"/ // would be `HashMap<&str, u8>` in this example).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":63688,"byte_end":63741,"line_start":115,"line_end":115,"column_start":1,"column_end":54}},{"value":"/ let mut player_stats = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":63742,"byte_end":63784,"line_start":116,"line_end":116,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":63785,"byte_end":63788,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ fn random_stat_buff() -> u8 {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":63789,"byte_end":63822,"line_start":118,"line_end":118,"column_start":1,"column_end":34}},{"value":"/     // could actually return some random value here - let's just return","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":63823,"byte_end":63898,"line_start":119,"line_end":119,"column_start":1,"column_end":76}},{"value":"/     // some fixed value for now","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":63899,"byte_end":63934,"line_start":120,"line_end":120,"column_start":1,"column_end":36}},{"value":"/     42","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":63935,"byte_end":63945,"line_start":121,"line_end":121,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":63946,"byte_end":63951,"line_start":122,"line_end":122,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":63952,"byte_end":63955,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ // insert a key only if it doesn't already exist","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":63956,"byte_end":64008,"line_start":124,"line_end":124,"column_start":1,"column_end":53}},{"value":"/ player_stats.entry(\"health\").or_insert(100);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":64009,"byte_end":64057,"line_start":125,"line_end":125,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":64058,"byte_end":64061,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ // insert a key using a function that provides a new value only if it","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":64062,"byte_end":64135,"line_start":127,"line_end":127,"column_start":1,"column_end":74}},{"value":"/ // doesn't already exist","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":64136,"byte_end":64164,"line_start":128,"line_end":128,"column_start":1,"column_end":29}},{"value":"/ player_stats.entry(\"defence\").or_insert_with(random_stat_buff);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":64165,"byte_end":64232,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":64233,"byte_end":64236,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ // update a key, guarding against the key possibly not being set","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":64237,"byte_end":64305,"line_start":131,"line_end":131,"column_start":1,"column_end":69}},{"value":"/ let stat = player_stats.entry(\"attack\").or_insert(100);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":64306,"byte_end":64365,"line_start":132,"line_end":132,"column_start":1,"column_end":60}},{"value":"/ *stat += random_stat_buff();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":64366,"byte_end":64398,"line_start":133,"line_end":133,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":64399,"byte_end":64406,"line_start":134,"line_end":134,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":64407,"byte_end":64410,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ The easiest way to use `HashMap` with a custom key type is to derive [`Eq`] and [`Hash`].","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":64411,"byte_end":64504,"line_start":136,"line_end":136,"column_start":1,"column_end":94}},{"value":"/ We must also derive [`PartialEq`].","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":64505,"byte_end":64543,"line_start":137,"line_end":137,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":64544,"byte_end":64547,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":64548,"byte_end":64607,"line_start":139,"line_end":139,"column_start":1,"column_end":60}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":64608,"byte_end":64672,"line_start":140,"line_end":140,"column_start":1,"column_end":65}},{"value":"/ [`PartialEq`]: https://doc.rust-lang.org/std/cmp/trait.PartialEq.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":64673,"byte_end":64746,"line_start":141,"line_end":141,"column_start":1,"column_end":74}},{"value":"/ [`RefCell`]: https://doc.rust-lang.org/std/cell/struct.RefCell.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":64747,"byte_end":64818,"line_start":142,"line_end":142,"column_start":1,"column_end":72}},{"value":"/ [`Cell`]: https://doc.rust-lang.org/std/cell/struct.Cell.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":64819,"byte_end":64884,"line_start":143,"line_end":143,"column_start":1,"column_end":66}},{"value":"/ [`default`]: #method.default","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":64885,"byte_end":64917,"line_start":144,"line_end":144,"column_start":1,"column_end":33}},{"value":"/ [`with_hasher`]: #method.with_hasher","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":64918,"byte_end":64958,"line_start":145,"line_end":145,"column_start":1,"column_end":41}},{"value":"/ [`with_capacity_and_hasher`]: #method.with_capacity_and_hasher","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":64959,"byte_end":65025,"line_start":146,"line_end":146,"column_start":1,"column_end":67}},{"value":"/ [`fnv`]: https://crates.io/crates/fnv","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":65026,"byte_end":65067,"line_start":147,"line_end":147,"column_start":1,"column_end":42}},{"value":"/ [`AHash`]: https://crates.io/crates/ahash","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":65068,"byte_end":65113,"line_start":148,"line_end":148,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":65114,"byte_end":65117,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":65118,"byte_end":65125,"line_start":150,"line_end":150,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":65126,"byte_end":65153,"line_start":151,"line_end":151,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":65154,"byte_end":65157,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ #[derive(Hash, Eq, PartialEq, Debug)]","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":65158,"byte_end":65199,"line_start":153,"line_end":153,"column_start":1,"column_end":42}},{"value":"/ struct Viking {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":65200,"byte_end":65219,"line_start":154,"line_end":154,"column_start":1,"column_end":20}},{"value":"/     name: String,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":65220,"byte_end":65241,"line_start":155,"line_end":155,"column_start":1,"column_end":22}},{"value":"/     country: String,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":65242,"byte_end":65266,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":65267,"byte_end":65272,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":65273,"byte_end":65276,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ impl Viking {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":65277,"byte_end":65294,"line_start":159,"line_end":159,"column_start":1,"column_end":18}},{"value":"/     /// Creates a new Viking.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":65295,"byte_end":65328,"line_start":160,"line_end":160,"column_start":1,"column_end":34}},{"value":"/     fn new(name: &str, country: &str) -> Viking {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":65329,"byte_end":65382,"line_start":161,"line_end":161,"column_start":1,"column_end":54}},{"value":"/         Viking { name: name.to_string(), country: country.to_string() }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":65383,"byte_end":65458,"line_start":162,"line_end":162,"column_start":1,"column_end":76}},{"value":"/     }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":65459,"byte_end":65468,"line_start":163,"line_end":163,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":65469,"byte_end":65474,"line_start":164,"line_end":164,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":65475,"byte_end":65478,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ // Use a HashMap to store the vikings' health points.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":65479,"byte_end":65536,"line_start":166,"line_end":166,"column_start":1,"column_end":58}},{"value":"/ let mut vikings = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":65537,"byte_end":65574,"line_start":167,"line_end":167,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":65575,"byte_end":65578,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ vikings.insert(Viking::new(\"Einar\", \"Norway\"), 25);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":65579,"byte_end":65634,"line_start":169,"line_end":169,"column_start":1,"column_end":56}},{"value":"/ vikings.insert(Viking::new(\"Olaf\", \"Denmark\"), 24);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":65635,"byte_end":65690,"line_start":170,"line_end":170,"column_start":1,"column_end":56}},{"value":"/ vikings.insert(Viking::new(\"Harald\", \"Iceland\"), 12);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":65691,"byte_end":65748,"line_start":171,"line_end":171,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":65749,"byte_end":65752,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ // Use derived implementation to print the status of the vikings.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":65753,"byte_end":65822,"line_start":173,"line_end":173,"column_start":1,"column_end":70}},{"value":"/ for (viking, health) in &vikings {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":65823,"byte_end":65861,"line_start":174,"line_end":174,"column_start":1,"column_end":39}},{"value":"/     println!(\"{:?} has {} hp\", viking, health);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":65862,"byte_end":65913,"line_start":175,"line_end":175,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":65914,"byte_end":65919,"line_start":176,"line_end":176,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":65920,"byte_end":65927,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":65928,"byte_end":65931,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ A `HashMap` with fixed list of elements can be initialized from an array:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":65932,"byte_end":66009,"line_start":179,"line_end":179,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":66010,"byte_end":66013,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":66014,"byte_end":66021,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":66022,"byte_end":66049,"line_start":182,"line_end":182,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":66050,"byte_end":66053,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":66054,"byte_end":66069,"line_start":184,"line_end":184,"column_start":1,"column_end":16}},{"value":"/     let timber_resources: HashMap<&str, i32> =","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":66070,"byte_end":66120,"line_start":185,"line_end":185,"column_start":1,"column_end":51}},{"value":"/     [(\"Norway\", 100),","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":66121,"byte_end":66146,"line_start":186,"line_end":186,"column_start":1,"column_end":26}},{"value":"/      (\"Denmark\", 50),","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":66147,"byte_end":66172,"line_start":187,"line_end":187,"column_start":1,"column_end":26}},{"value":"/      (\"Iceland\", 10)]","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":66173,"byte_end":66198,"line_start":188,"line_end":188,"column_start":1,"column_end":26}},{"value":"/      .iter().cloned().collect();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":66199,"byte_end":66235,"line_start":189,"line_end":189,"column_start":1,"column_end":37}},{"value":"/     // use the values stored in map","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":66236,"byte_end":66275,"line_start":190,"line_end":190,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":66276,"byte_end":66281,"line_start":191,"line_end":191,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":66282,"byte_end":66289,"line_start":192,"line_end":192,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":67123,"byte_end":67126,"line_start":220,"line_end":220,"column_start":12,"column_end":15},"name":"new","qualname":"<HashMap<K, V, DefaultHashBuilder>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap`.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":66745,"byte_end":66776,"line_start":208,"line_end":208,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":66781,"byte_end":66784,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The hash map is initially created with a capacity of 0, so it will not allocate until it","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":66789,"byte_end":66881,"line_start":210,"line_end":210,"column_start":5,"column_end":97}},{"value":"/ is first inserted into.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":66886,"byte_end":66913,"line_start":211,"line_end":211,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":66918,"byte_end":66921,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":66926,"byte_end":66940,"line_start":213,"line_end":213,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":66945,"byte_end":66948,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":66953,"byte_end":66960,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":66965,"byte_end":66992,"line_start":216,"line_end":216,"column_start":5,"column_end":32}},{"value":"/ let mut map: HashMap<&str, i32> = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":66997,"byte_end":67050,"line_start":217,"line_end":217,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":67055,"byte_end":67062,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":67103,"byte_end":67109,"line_start":219,"line_end":219,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":67616,"byte_end":67629,"line_start":236,"line_end":236,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<HashMap<K, V, DefaultHashBuilder>>::with_capacity","value":"fn (capacity: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap` with the specified capacity.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":67174,"byte_end":67233,"line_start":224,"line_end":224,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":67238,"byte_end":67241,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ The hash map will be able to hold at least `capacity` elements without","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":67246,"byte_end":67320,"line_start":226,"line_end":226,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash map will not allocate.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":67325,"byte_end":67394,"line_start":227,"line_end":227,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":67399,"byte_end":67402,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":67407,"byte_end":67421,"line_start":229,"line_end":229,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":67426,"byte_end":67429,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":67434,"byte_end":67441,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":67446,"byte_end":67473,"line_start":232,"line_end":232,"column_start":5,"column_end":32}},{"value":"/ let mut map: HashMap<&str, i32> = HashMap::with_capacity(10);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":67478,"byte_end":67543,"line_start":233,"line_end":233,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":67548,"byte_end":67555,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":67596,"byte_end":67602,"line_start":235,"line_end":235,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":68555,"byte_end":68566,"line_start":263,"line_end":263,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<HashMap<K, V, S>>::with_hasher","value":"fn (hash_builder: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` which will use the given hash builder to hash\n keys.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap` which will use the given hash builder to hash","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":67783,"byte_end":67859,"line_start":242,"line_end":242,"column_start":5,"column_end":81}},{"value":"/ keys.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":67864,"byte_end":67873,"line_start":243,"line_end":243,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":67878,"byte_end":67881,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ The created map has the default initial capacity.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":67886,"byte_end":67939,"line_start":245,"line_end":245,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":67944,"byte_end":67947,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ Warning: `hash_builder` is normally randomly generated, and","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":67952,"byte_end":68015,"line_start":247,"line_end":247,"column_start":5,"column_end":68}},{"value":"/ is designed to allow HashMaps to be resistant to attacks that","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":68020,"byte_end":68085,"line_start":248,"line_end":248,"column_start":5,"column_end":70}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":68090,"byte_end":68153,"line_start":249,"line_end":249,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":68158,"byte_end":68222,"line_start":250,"line_end":250,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":68227,"byte_end":68230,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":68235,"byte_end":68249,"line_start":252,"line_end":252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":68254,"byte_end":68257,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":68262,"byte_end":68269,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":68274,"byte_end":68301,"line_start":255,"line_end":255,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":68306,"byte_end":68354,"line_start":256,"line_end":256,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":68359,"byte_end":68362,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":68367,"byte_end":68409,"line_start":258,"line_end":258,"column_start":5,"column_end":47}},{"value":"/ let mut map = HashMap::with_hasher(s);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":68414,"byte_end":68456,"line_start":259,"line_end":259,"column_start":5,"column_end":47}},{"value":"/ map.insert(1, 2);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":68461,"byte_end":68482,"line_start":260,"line_end":260,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":68487,"byte_end":68494,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":68535,"byte_end":68541,"line_start":262,"line_end":262,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":69592,"byte_end":69616,"line_start":292,"line_end":292,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<HashMap<K, V, S>>::with_capacity_and_hasher","value":"fn (capacity: usize, hash_builder: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` with the specified capacity, using `hash_builder`\n to hash the keys.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap` with the specified capacity, using `hash_builder`","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":68692,"byte_end":68772,"line_start":270,"line_end":270,"column_start":5,"column_end":85}},{"value":"/ to hash the keys.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":68777,"byte_end":68798,"line_start":271,"line_end":271,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":68803,"byte_end":68806,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ The hash map will be able to hold at least `capacity` elements without","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":68811,"byte_end":68885,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash map will not allocate.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":68890,"byte_end":68959,"line_start":274,"line_end":274,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":68964,"byte_end":68967,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Warning: `hash_builder` is normally randomly generated, and","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":68972,"byte_end":69035,"line_start":276,"line_end":276,"column_start":5,"column_end":68}},{"value":"/ is designed to allow HashMaps to be resistant to attacks that","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":69040,"byte_end":69105,"line_start":277,"line_end":277,"column_start":5,"column_end":70}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":69110,"byte_end":69173,"line_start":278,"line_end":278,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":69178,"byte_end":69242,"line_start":279,"line_end":279,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":69247,"byte_end":69250,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":69255,"byte_end":69269,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":69274,"byte_end":69277,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":69282,"byte_end":69289,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":69294,"byte_end":69321,"line_start":284,"line_end":284,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":69326,"byte_end":69374,"line_start":285,"line_end":285,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":69379,"byte_end":69382,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":69387,"byte_end":69429,"line_start":287,"line_end":287,"column_start":5,"column_end":47}},{"value":"/ let mut map = HashMap::with_capacity_and_hasher(10, s);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":69434,"byte_end":69493,"line_start":288,"line_end":288,"column_start":5,"column_end":64}},{"value":"/ map.insert(1, 2);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":69498,"byte_end":69519,"line_start":289,"line_end":289,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":69524,"byte_end":69531,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":69572,"byte_end":69578,"line_start":291,"line_end":291,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":70309,"byte_end":70315,"line_start":314,"line_end":314,"column_start":12,"column_end":18},"name":"hasher","qualname":"<HashMap<K, V, S>>::hasher","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the map's [`BuildHasher`].","sig":null,"attributes":[{"value":"/ Returns a reference to the map's [`BuildHasher`].","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":69777,"byte_end":69830,"line_start":299,"line_end":299,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":69835,"byte_end":69838,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":69843,"byte_end":69921,"line_start":301,"line_end":301,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":69926,"byte_end":69929,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":69934,"byte_end":69948,"line_start":303,"line_end":303,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":69953,"byte_end":69956,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":69961,"byte_end":69968,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":69973,"byte_end":70000,"line_start":306,"line_end":306,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":70005,"byte_end":70053,"line_start":307,"line_end":307,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":70058,"byte_end":70061,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let hasher = DefaultHashBuilder::default();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":70066,"byte_end":70113,"line_start":309,"line_end":309,"column_start":5,"column_end":52}},{"value":"/ let map: HashMap<i32, i32> = HashMap::with_hasher(hasher);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":70118,"byte_end":70180,"line_start":310,"line_end":310,"column_start":5,"column_end":67}},{"value":"/ let hasher: &DefaultHashBuilder = map.hasher();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":70185,"byte_end":70236,"line_start":311,"line_end":311,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":70241,"byte_end":70248,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":70289,"byte_end":70295,"line_start":313,"line_end":313,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":70859,"byte_end":70867,"line_start":331,"line_end":331,"column_start":12,"column_end":20},"name":"capacity","qualname":"<HashMap<K, V, S>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the map can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the map can hold without reallocating.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":70369,"byte_end":70442,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":70447,"byte_end":70450,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ This number is a lower bound; the `HashMap<K, V>` might be able to hold","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":70455,"byte_end":70530,"line_start":320,"line_end":320,"column_start":5,"column_end":80}},{"value":"/ more, but is guaranteed to be able to hold at least this many.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":70535,"byte_end":70601,"line_start":321,"line_end":321,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":70606,"byte_end":70609,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":70614,"byte_end":70628,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":70633,"byte_end":70636,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":70641,"byte_end":70648,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":70653,"byte_end":70680,"line_start":326,"line_end":326,"column_start":5,"column_end":32}},{"value":"/ let map: HashMap<i32, i32> = HashMap::with_capacity(100);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":70685,"byte_end":70746,"line_start":327,"line_end":327,"column_start":5,"column_end":66}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":70751,"byte_end":70786,"line_start":328,"line_end":328,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":70791,"byte_end":70798,"line_start":329,"line_end":329,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":70839,"byte_end":70845,"line_start":330,"line_end":330,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71391,"byte_end":71395,"line_start":353,"line_end":353,"column_start":12,"column_end":16},"name":"keys","qualname":"<HashMap<K, V, S>>::keys","value":"fn (&self) -> Keys<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all keys in arbitrary order.\n The iterator element type is `&'a K`.","sig":null,"attributes":[{"value":"/ An iterator visiting all keys in arbitrary order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":70927,"byte_end":70980,"line_start":335,"line_end":335,"column_start":5,"column_end":58}},{"value":"/ The iterator element type is `&'a K`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":70985,"byte_end":71026,"line_start":336,"line_end":336,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71031,"byte_end":71034,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71039,"byte_end":71053,"line_start":338,"line_end":338,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71058,"byte_end":71061,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71066,"byte_end":71073,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71078,"byte_end":71105,"line_start":341,"line_end":341,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71110,"byte_end":71113,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71118,"byte_end":71151,"line_start":343,"line_end":343,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71156,"byte_end":71179,"line_start":344,"line_end":344,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71184,"byte_end":71207,"line_start":345,"line_end":345,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71212,"byte_end":71235,"line_start":346,"line_end":346,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71240,"byte_end":71243,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71248,"byte_end":71275,"line_start":348,"line_end":348,"column_start":5,"column_end":32}},{"value":"/     println!(\"{}\", key);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71280,"byte_end":71308,"line_start":349,"line_end":349,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71313,"byte_end":71318,"line_start":350,"line_end":350,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71323,"byte_end":71330,"line_start":351,"line_end":351,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71371,"byte_end":71377,"line_start":352,"line_end":352,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71938,"byte_end":71944,"line_start":375,"line_end":375,"column_start":12,"column_end":18},"name":"values","qualname":"<HashMap<K, V, S>>::values","value":"fn (&self) -> Values<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values in arbitrary order.\n The iterator element type is `&'a V`.","sig":null,"attributes":[{"value":"/ An iterator visiting all values in arbitrary order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71470,"byte_end":71525,"line_start":357,"line_end":357,"column_start":5,"column_end":60}},{"value":"/ The iterator element type is `&'a V`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71530,"byte_end":71571,"line_start":358,"line_end":358,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71576,"byte_end":71579,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71584,"byte_end":71598,"line_start":360,"line_end":360,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71603,"byte_end":71606,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71611,"byte_end":71618,"line_start":362,"line_end":362,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71623,"byte_end":71650,"line_start":363,"line_end":363,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71655,"byte_end":71658,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71663,"byte_end":71696,"line_start":365,"line_end":365,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71701,"byte_end":71724,"line_start":366,"line_end":366,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71729,"byte_end":71752,"line_start":367,"line_end":367,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71757,"byte_end":71780,"line_start":368,"line_end":368,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71785,"byte_end":71788,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ for val in map.values() {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71793,"byte_end":71822,"line_start":370,"line_end":370,"column_start":5,"column_end":34}},{"value":"/     println!(\"{}\", val);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71827,"byte_end":71855,"line_start":371,"line_end":371,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71860,"byte_end":71865,"line_start":372,"line_end":372,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71870,"byte_end":71877,"line_start":373,"line_end":373,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":71918,"byte_end":71924,"line_start":374,"line_end":374,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72597,"byte_end":72607,"line_start":402,"line_end":402,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<HashMap<K, V, S>>::values_mut","value":"fn (&mut self) -> ValuesMut<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably in arbitrary order.\n The iterator element type is `&'a mut V`.","sig":null,"attributes":[{"value":"/ An iterator visiting all values mutably in arbitrary order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72023,"byte_end":72086,"line_start":379,"line_end":379,"column_start":5,"column_end":68}},{"value":"/ The iterator element type is `&'a mut V`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72091,"byte_end":72136,"line_start":380,"line_end":380,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72141,"byte_end":72144,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72149,"byte_end":72163,"line_start":382,"line_end":382,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72168,"byte_end":72171,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72176,"byte_end":72183,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72188,"byte_end":72215,"line_start":385,"line_end":385,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72220,"byte_end":72223,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72228,"byte_end":72261,"line_start":387,"line_end":387,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72266,"byte_end":72269,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72274,"byte_end":72297,"line_start":389,"line_end":389,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72302,"byte_end":72325,"line_start":390,"line_end":390,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72330,"byte_end":72353,"line_start":391,"line_end":391,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72358,"byte_end":72361,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ for val in map.values_mut() {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72366,"byte_end":72399,"line_start":393,"line_end":393,"column_start":5,"column_end":38}},{"value":"/     *val = *val + 10;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72404,"byte_end":72429,"line_start":394,"line_end":394,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72434,"byte_end":72439,"line_start":395,"line_end":395,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72444,"byte_end":72447,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ for val in map.values() {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72452,"byte_end":72481,"line_start":397,"line_end":397,"column_start":5,"column_end":34}},{"value":"/     println!(\"{}\", val);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72486,"byte_end":72514,"line_start":398,"line_end":398,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72519,"byte_end":72524,"line_start":399,"line_end":399,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72529,"byte_end":72536,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72577,"byte_end":72583,"line_start":401,"line_end":401,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":73230,"byte_end":73234,"line_start":426,"line_end":426,"column_start":12,"column_end":16},"name":"iter","qualname":"<HashMap<K, V, S>>::iter","value":"fn (&self) -> Iter<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs in arbitrary order.\n The iterator element type is `(&'a K, &'a V)`.","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs in arbitrary order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72721,"byte_end":72785,"line_start":408,"line_end":408,"column_start":5,"column_end":69}},{"value":"/ The iterator element type is `(&'a K, &'a V)`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72790,"byte_end":72840,"line_start":409,"line_end":409,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72845,"byte_end":72848,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72853,"byte_end":72867,"line_start":411,"line_end":411,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72872,"byte_end":72875,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72880,"byte_end":72887,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72892,"byte_end":72919,"line_start":414,"line_end":414,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72924,"byte_end":72927,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72932,"byte_end":72965,"line_start":416,"line_end":416,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72970,"byte_end":72993,"line_start":417,"line_end":417,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":72998,"byte_end":73021,"line_start":418,"line_end":418,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":73026,"byte_end":73049,"line_start":419,"line_end":419,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":73054,"byte_end":73057,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ for (key, val) in map.iter() {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":73062,"byte_end":73096,"line_start":421,"line_end":421,"column_start":5,"column_end":39}},{"value":"/     println!(\"key: {} val: {}\", key, val);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":73101,"byte_end":73147,"line_start":422,"line_end":422,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":73152,"byte_end":73157,"line_start":423,"line_end":423,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":73162,"byte_end":73169,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":73210,"byte_end":73216,"line_start":425,"line_end":425,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":74134,"byte_end":74142,"line_start":460,"line_end":460,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<HashMap<K, V, S>>::iter_mut","value":"fn (&mut self) -> IterMut<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs in arbitrary order,\n with mutable references to the values.\n The iterator element type is `(&'a K, &'a mut V)`.","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs in arbitrary order,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":73469,"byte_end":73533,"line_start":436,"line_end":436,"column_start":5,"column_end":69}},{"value":"/ with mutable references to the values.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":73538,"byte_end":73580,"line_start":437,"line_end":437,"column_start":5,"column_end":47}},{"value":"/ The iterator element type is `(&'a K, &'a mut V)`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":73585,"byte_end":73639,"line_start":438,"line_end":438,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":73644,"byte_end":73647,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":73652,"byte_end":73666,"line_start":440,"line_end":440,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":73671,"byte_end":73674,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":73679,"byte_end":73686,"line_start":442,"line_end":442,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":73691,"byte_end":73718,"line_start":443,"line_end":443,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":73723,"byte_end":73726,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":73731,"byte_end":73764,"line_start":445,"line_end":445,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":73769,"byte_end":73792,"line_start":446,"line_end":446,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":73797,"byte_end":73820,"line_start":447,"line_end":447,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":73825,"byte_end":73848,"line_start":448,"line_end":448,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":73853,"byte_end":73856,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ // Update all values","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":73861,"byte_end":73885,"line_start":450,"line_end":450,"column_start":5,"column_end":29}},{"value":"/ for (_, val) in map.iter_mut() {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":73890,"byte_end":73926,"line_start":451,"line_end":451,"column_start":5,"column_end":41}},{"value":"/     *val *= 2;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":73931,"byte_end":73949,"line_start":452,"line_end":452,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":73954,"byte_end":73959,"line_start":453,"line_end":453,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":73964,"byte_end":73967,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ for (key, val) in &map {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":73972,"byte_end":74000,"line_start":455,"line_end":455,"column_start":5,"column_end":33}},{"value":"/     println!(\"key: {} val: {}\", key, val);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":74005,"byte_end":74051,"line_start":456,"line_end":456,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":74056,"byte_end":74061,"line_start":457,"line_end":457,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":74066,"byte_end":74073,"line_start":458,"line_end":458,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":74114,"byte_end":74120,"line_start":459,"line_end":459,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":74859,"byte_end":74862,"line_start":489,"line_end":489,"column_start":12,"column_end":15},"name":"len","qualname":"<HashMap<K, V, S>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the map.","sig":null,"attributes":[{"value":"/ Returns the number of elements in the map.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":74527,"byte_end":74573,"line_start":476,"line_end":476,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":74578,"byte_end":74581,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":74586,"byte_end":74600,"line_start":478,"line_end":478,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":74605,"byte_end":74608,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":74613,"byte_end":74620,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":74625,"byte_end":74652,"line_start":481,"line_end":481,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":74657,"byte_end":74660,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":74665,"byte_end":74696,"line_start":483,"line_end":483,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(a.len(), 0);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":74701,"byte_end":74728,"line_start":484,"line_end":484,"column_start":5,"column_end":32}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":74733,"byte_end":74754,"line_start":485,"line_end":485,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(a.len(), 1);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":74759,"byte_end":74786,"line_start":486,"line_end":486,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":74791,"byte_end":74798,"line_start":487,"line_end":487,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":74839,"byte_end":74845,"line_start":488,"line_end":488,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":75253,"byte_end":75261,"line_start":506,"line_end":506,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<HashMap<K, V, S>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains no elements.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":74917,"byte_end":74968,"line_start":493,"line_end":493,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":74973,"byte_end":74976,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":74981,"byte_end":74995,"line_start":495,"line_end":495,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":75000,"byte_end":75003,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":75008,"byte_end":75015,"line_start":497,"line_end":497,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":75020,"byte_end":75047,"line_start":498,"line_end":498,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":75052,"byte_end":75055,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":75060,"byte_end":75091,"line_start":500,"line_end":500,"column_start":5,"column_end":36}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":75096,"byte_end":75122,"line_start":501,"line_end":501,"column_start":5,"column_end":31}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":75127,"byte_end":75148,"line_start":502,"line_end":502,"column_start":5,"column_end":26}},{"value":"/ assert!(!a.is_empty());","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":75153,"byte_end":75180,"line_start":503,"line_end":503,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":75185,"byte_end":75192,"line_start":504,"line_end":504,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":75233,"byte_end":75239,"line_start":505,"line_end":505,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":75854,"byte_end":75859,"line_start":530,"line_end":530,"column_start":12,"column_end":17},"name":"drain","qualname":"<HashMap<K, V, S>>::drain","value":"fn (&mut self) -> Drain<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, returning all key-value pairs as an iterator. Keeps the\n allocated memory for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, returning all key-value pairs as an iterator. Keeps the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":75314,"byte_end":75389,"line_start":510,"line_end":510,"column_start":5,"column_end":80}},{"value":"/ allocated memory for reuse.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":75394,"byte_end":75425,"line_start":511,"line_end":511,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":75430,"byte_end":75433,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":75438,"byte_end":75452,"line_start":513,"line_end":513,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":75457,"byte_end":75460,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":75465,"byte_end":75472,"line_start":515,"line_end":515,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":75477,"byte_end":75504,"line_start":516,"line_end":516,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":75509,"byte_end":75512,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":75517,"byte_end":75548,"line_start":518,"line_end":518,"column_start":5,"column_end":36}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":75553,"byte_end":75574,"line_start":519,"line_end":519,"column_start":5,"column_end":26}},{"value":"/ a.insert(2, \"b\");","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":75579,"byte_end":75600,"line_start":520,"line_end":520,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":75605,"byte_end":75608,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ for (k, v) in a.drain().take(1) {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":75613,"byte_end":75650,"line_start":522,"line_end":522,"column_start":5,"column_end":42}},{"value":"/     assert!(k == 1 || k == 2);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":75655,"byte_end":75689,"line_start":523,"line_end":523,"column_start":5,"column_end":39}},{"value":"/     assert!(v == \"a\" || v == \"b\");","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":75694,"byte_end":75732,"line_start":524,"line_end":524,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":75737,"byte_end":75742,"line_start":525,"line_end":525,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":75747,"byte_end":75750,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":75755,"byte_end":75781,"line_start":527,"line_end":527,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":75786,"byte_end":75793,"line_start":528,"line_end":528,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":75834,"byte_end":75840,"line_start":529,"line_end":529,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":76431,"byte_end":76436,"line_start":553,"line_end":553,"column_start":12,"column_end":17},"name":"clear","qualname":"<HashMap<K, V, S>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-value pairs. Keeps the allocated memory\n for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, removing all key-value pairs. Keeps the allocated memory","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":76064,"byte_end":76140,"line_start":539,"line_end":539,"column_start":5,"column_end":81}},{"value":"/ for reuse.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":76145,"byte_end":76159,"line_start":540,"line_end":540,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":76164,"byte_end":76167,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":76172,"byte_end":76186,"line_start":542,"line_end":542,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":76191,"byte_end":76194,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":76199,"byte_end":76206,"line_start":544,"line_end":544,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":76211,"byte_end":76238,"line_start":545,"line_end":545,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":76243,"byte_end":76246,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":76251,"byte_end":76282,"line_start":547,"line_end":547,"column_start":5,"column_end":36}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":76287,"byte_end":76308,"line_start":548,"line_end":548,"column_start":5,"column_end":26}},{"value":"/ a.clear();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":76313,"byte_end":76327,"line_start":549,"line_end":549,"column_start":5,"column_end":19}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":76332,"byte_end":76358,"line_start":550,"line_end":550,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":76363,"byte_end":76370,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":76411,"byte_end":76417,"line_start":552,"line_end":552,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":77158,"byte_end":77165,"line_start":581,"line_end":581,"column_start":12,"column_end":19},"name":"reserve","qualname":"<HashMap<K, V, S>>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more elements to be inserted\n in the `HashMap`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more elements to be inserted","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":76568,"byte_end":76644,"line_start":563,"line_end":563,"column_start":5,"column_end":81}},{"value":"/ in the `HashMap`. The collection may reserve more space to avoid","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":76649,"byte_end":76717,"line_start":564,"line_end":564,"column_start":5,"column_end":73}},{"value":"/ frequent reallocations.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":76722,"byte_end":76749,"line_start":565,"line_end":565,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":76754,"byte_end":76757,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":76762,"byte_end":76774,"line_start":567,"line_end":567,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":76779,"byte_end":76782,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ Panics if the new allocation size overflows [`usize`].","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":76787,"byte_end":76845,"line_start":569,"line_end":569,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":76850,"byte_end":76853,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ [`usize`]: https://doc.rust-lang.org/std/primitive.usize.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":76858,"byte_end":76923,"line_start":571,"line_end":571,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":76928,"byte_end":76931,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":76936,"byte_end":76950,"line_start":573,"line_end":573,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":76955,"byte_end":76958,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":76963,"byte_end":76970,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":76975,"byte_end":77002,"line_start":576,"line_end":576,"column_start":5,"column_end":32}},{"value":"/ let mut map: HashMap<&str, i32> = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":77007,"byte_end":77060,"line_start":577,"line_end":577,"column_start":5,"column_end":58}},{"value":"/ map.reserve(10);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":77065,"byte_end":77085,"line_start":578,"line_end":578,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":77090,"byte_end":77097,"line_start":579,"line_end":579,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":77138,"byte_end":77144,"line_start":580,"line_end":580,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":77978,"byte_end":77989,"line_start":604,"line_end":604,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<HashMap<K, V, S>>::try_reserve","value":"fn (&mut self, additional: usize) -> Result<(), CollectionAllocErr>","parent":null,"children":[],"decl_id":null,"docs":" Tries to reserve capacity for at least `additional` more elements to be inserted\n in the given `HashMap<K,V>`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"/ Tries to reserve capacity for at least `additional` more elements to be inserted","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":77344,"byte_end":77428,"line_start":587,"line_end":587,"column_start":5,"column_end":89}},{"value":"/ in the given `HashMap<K,V>`. The collection may reserve more space to avoid","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":77433,"byte_end":77512,"line_start":588,"line_end":588,"column_start":5,"column_end":84}},{"value":"/ frequent reallocations.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":77517,"byte_end":77544,"line_start":589,"line_end":589,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":77549,"byte_end":77552,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":77557,"byte_end":77569,"line_start":591,"line_end":591,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":77574,"byte_end":77577,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ If the capacity overflows, or the allocator reports a failure, then an error","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":77582,"byte_end":77662,"line_start":593,"line_end":593,"column_start":5,"column_end":85}},{"value":"/ is returned.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":77667,"byte_end":77683,"line_start":594,"line_end":594,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":77688,"byte_end":77691,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":77696,"byte_end":77710,"line_start":596,"line_end":596,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":77715,"byte_end":77718,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":77723,"byte_end":77730,"line_start":598,"line_end":598,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":77735,"byte_end":77762,"line_start":599,"line_end":599,"column_start":5,"column_end":32}},{"value":"/ let mut map: HashMap<&str, isize> = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":77767,"byte_end":77822,"line_start":600,"line_end":600,"column_start":5,"column_end":60}},{"value":"/ map.try_reserve(10).expect(\"why is the test harness OOMing on 10 bytes?\");","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":77827,"byte_end":77905,"line_start":601,"line_end":601,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":77910,"byte_end":77917,"line_start":602,"line_end":602,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":77958,"byte_end":77964,"line_start":603,"line_end":603,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":78811,"byte_end":78824,"line_start":627,"line_end":627,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<HashMap<K, V, S>>::shrink_to_fit","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the map as much as possible. It will drop\n down as much as possible while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the map as much as possible. It will drop","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":78205,"byte_end":78274,"line_start":610,"line_end":610,"column_start":5,"column_end":74}},{"value":"/ down as much as possible while maintaining the internal rules","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":78279,"byte_end":78344,"line_start":611,"line_end":611,"column_start":5,"column_end":70}},{"value":"/ and possibly leaving some space in accordance with the resize policy.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":78349,"byte_end":78422,"line_start":612,"line_end":612,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":78427,"byte_end":78430,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":78435,"byte_end":78449,"line_start":614,"line_end":614,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":78454,"byte_end":78457,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":78462,"byte_end":78469,"line_start":616,"line_end":616,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":78474,"byte_end":78501,"line_start":617,"line_end":617,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":78506,"byte_end":78509,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<i32, i32> = HashMap::with_capacity(100);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":78514,"byte_end":78579,"line_start":619,"line_end":619,"column_start":5,"column_end":70}},{"value":"/ map.insert(1, 2);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":78584,"byte_end":78605,"line_start":620,"line_end":620,"column_start":5,"column_end":26}},{"value":"/ map.insert(3, 4);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":78610,"byte_end":78631,"line_start":621,"line_end":621,"column_start":5,"column_end":26}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":78636,"byte_end":78671,"line_start":622,"line_end":622,"column_start":5,"column_end":40}},{"value":"/ map.shrink_to_fit();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":78676,"byte_end":78700,"line_start":623,"line_end":623,"column_start":5,"column_end":29}},{"value":"/ assert!(map.capacity() >= 2);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":78705,"byte_end":78738,"line_start":624,"line_end":624,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":78743,"byte_end":78750,"line_start":625,"line_end":625,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":78791,"byte_end":78797,"line_start":626,"line_end":626,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":79832,"byte_end":79841,"line_start":656,"line_end":656,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<HashMap<K, V, S>>::shrink_to","value":"fn (&mut self, min_capacity: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the map with a lower limit. It will drop\n down no lower than the supplied limit while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the map with a lower limit. It will drop","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":78964,"byte_end":79032,"line_start":632,"line_end":632,"column_start":5,"column_end":73}},{"value":"/ down no lower than the supplied limit while maintaining the internal rules","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":79037,"byte_end":79115,"line_start":633,"line_end":633,"column_start":5,"column_end":83}},{"value":"/ and possibly leaving some space in accordance with the resize policy.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":79120,"byte_end":79193,"line_start":634,"line_end":634,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":79198,"byte_end":79201,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ This function does nothing if the current capacity is smaller than the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":79206,"byte_end":79280,"line_start":636,"line_end":636,"column_start":5,"column_end":79}},{"value":"/ supplied minimum capacity.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":79285,"byte_end":79315,"line_start":637,"line_end":637,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":79320,"byte_end":79323,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":79328,"byte_end":79342,"line_start":639,"line_end":639,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":79347,"byte_end":79350,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":79355,"byte_end":79362,"line_start":641,"line_end":641,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":79367,"byte_end":79394,"line_start":642,"line_end":642,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":79399,"byte_end":79402,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<i32, i32> = HashMap::with_capacity(100);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":79407,"byte_end":79472,"line_start":644,"line_end":644,"column_start":5,"column_end":70}},{"value":"/ map.insert(1, 2);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":79477,"byte_end":79498,"line_start":645,"line_end":645,"column_start":5,"column_end":26}},{"value":"/ map.insert(3, 4);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":79503,"byte_end":79524,"line_start":646,"line_end":646,"column_start":5,"column_end":26}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":79529,"byte_end":79564,"line_start":647,"line_end":647,"column_start":5,"column_end":40}},{"value":"/ map.shrink_to(10);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":79569,"byte_end":79591,"line_start":648,"line_end":648,"column_start":5,"column_end":27}},{"value":"/ assert!(map.capacity() >= 10);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":79596,"byte_end":79630,"line_start":649,"line_end":649,"column_start":5,"column_end":39}},{"value":"/ map.shrink_to(0);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":79635,"byte_end":79656,"line_start":650,"line_end":650,"column_start":5,"column_end":26}},{"value":"/ assert!(map.capacity() >= 2);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":79661,"byte_end":79694,"line_start":651,"line_end":651,"column_start":5,"column_end":38}},{"value":"/ map.shrink_to(10);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":79699,"byte_end":79721,"line_start":652,"line_end":652,"column_start":5,"column_end":27}},{"value":"/ assert!(map.capacity() >= 2);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":79726,"byte_end":79759,"line_start":653,"line_end":653,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":79764,"byte_end":79771,"line_start":654,"line_end":654,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":79812,"byte_end":79818,"line_start":655,"line_end":655,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":80636,"byte_end":80641,"line_start":682,"line_end":682,"column_start":12,"column_end":17},"name":"entry","qualname":"<HashMap<K, V, S>>::entry","value":"fn (&mut self, key: K) -> Entry<'_, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given key's corresponding entry in the map for in-place manipulation.","sig":null,"attributes":[{"value":"/ Gets the given key's corresponding entry in the map for in-place manipulation.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":80026,"byte_end":80108,"line_start":662,"line_end":662,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":80113,"byte_end":80116,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":80121,"byte_end":80135,"line_start":664,"line_end":664,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":80140,"byte_end":80143,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":80148,"byte_end":80155,"line_start":666,"line_end":666,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":80160,"byte_end":80187,"line_start":667,"line_end":667,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":80192,"byte_end":80195,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ let mut letters = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":80200,"byte_end":80237,"line_start":669,"line_end":669,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":80242,"byte_end":80245,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ for ch in \"a short treatise on fungi\".chars() {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":80250,"byte_end":80301,"line_start":671,"line_end":671,"column_start":5,"column_end":56}},{"value":"/     let counter = letters.entry(ch).or_insert(0);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":80306,"byte_end":80359,"line_start":672,"line_end":672,"column_start":5,"column_end":58}},{"value":"/     *counter += 1;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":80364,"byte_end":80386,"line_start":673,"line_end":673,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":80391,"byte_end":80396,"line_start":674,"line_end":674,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":80401,"byte_end":80404,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(letters[&'s'], 2);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":80409,"byte_end":80442,"line_start":676,"line_end":676,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(letters[&'t'], 3);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":80447,"byte_end":80480,"line_start":677,"line_end":677,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(letters[&'u'], 1);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":80485,"byte_end":80518,"line_start":678,"line_end":678,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(letters.get(&'y'), None);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":80523,"byte_end":80563,"line_start":679,"line_end":679,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":80568,"byte_end":80575,"line_start":680,"line_end":680,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":80616,"byte_end":80622,"line_start":681,"line_end":681,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":81766,"byte_end":81769,"line_start":719,"line_end":719,"column_start":12,"column_end":15},"name":"get","qualname":"<HashMap<K, V, S>>::get","value":"fn <Q> (&self, k: &Q) -> Option<&V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a reference to the value corresponding to the key.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":81118,"byte_end":81180,"line_start":699,"line_end":699,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":81185,"byte_end":81188,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":81193,"byte_end":81256,"line_start":701,"line_end":701,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":81261,"byte_end":81328,"line_start":702,"line_end":702,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":81333,"byte_end":81350,"line_start":703,"line_end":703,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":81355,"byte_end":81358,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":81363,"byte_end":81422,"line_start":705,"line_end":705,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":81427,"byte_end":81491,"line_start":706,"line_end":706,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":81496,"byte_end":81499,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":81504,"byte_end":81518,"line_start":708,"line_end":708,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":81523,"byte_end":81526,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":81531,"byte_end":81538,"line_start":710,"line_end":710,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":81543,"byte_end":81570,"line_start":711,"line_end":711,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":81575,"byte_end":81578,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":81583,"byte_end":81616,"line_start":713,"line_end":713,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":81621,"byte_end":81644,"line_start":714,"line_end":714,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.get(&1), Some(&\"a\"));","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":81649,"byte_end":81689,"line_start":715,"line_end":715,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(map.get(&2), None);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":81694,"byte_end":81728,"line_start":716,"line_end":716,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":81733,"byte_end":81740,"line_start":717,"line_end":717,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":81745,"byte_end":81754,"line_start":718,"line_end":718,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":82612,"byte_end":82625,"line_start":747,"line_end":747,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<HashMap<K, V, S>>::get_key_value","value":"fn <Q> (&self, k: &Q) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the key-value pair corresponding to the supplied key.","sig":null,"attributes":[{"value":"/ Returns the key-value pair corresponding to the supplied key.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":81926,"byte_end":81991,"line_start":727,"line_end":727,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":81996,"byte_end":81999,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ The supplied key may be any borrowed form of the map's key type, but","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":82004,"byte_end":82076,"line_start":729,"line_end":729,"column_start":5,"column_end":77}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":82081,"byte_end":82148,"line_start":730,"line_end":730,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":82153,"byte_end":82170,"line_start":731,"line_end":731,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":82175,"byte_end":82178,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":82183,"byte_end":82242,"line_start":733,"line_end":733,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":82247,"byte_end":82311,"line_start":734,"line_end":734,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":82316,"byte_end":82319,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":82324,"byte_end":82338,"line_start":736,"line_end":736,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":82343,"byte_end":82346,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":82351,"byte_end":82358,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":82363,"byte_end":82390,"line_start":739,"line_end":739,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":82395,"byte_end":82398,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":82403,"byte_end":82436,"line_start":741,"line_end":741,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":82441,"byte_end":82464,"line_start":742,"line_end":742,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.get_key_value(&1), Some((&1, &\"a\")));","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":82469,"byte_end":82525,"line_start":743,"line_end":743,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(map.get_key_value(&2), None);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":82530,"byte_end":82574,"line_start":744,"line_end":744,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":82579,"byte_end":82586,"line_start":745,"line_end":745,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":82591,"byte_end":82600,"line_start":746,"line_end":746,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":83701,"byte_end":83713,"line_start":781,"line_end":781,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<HashMap<K, V, S>>::contains_key","value":"fn <Q> (&self, k: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains a value for the specified key.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains a value for the specified key.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":82998,"byte_end":83067,"line_start":761,"line_end":761,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":83072,"byte_end":83075,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":83080,"byte_end":83143,"line_start":763,"line_end":763,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":83148,"byte_end":83215,"line_start":764,"line_end":764,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":83220,"byte_end":83237,"line_start":765,"line_end":765,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":83242,"byte_end":83245,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":83250,"byte_end":83309,"line_start":767,"line_end":767,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":83314,"byte_end":83378,"line_start":768,"line_end":768,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":83383,"byte_end":83386,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":83391,"byte_end":83405,"line_start":770,"line_end":770,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":83410,"byte_end":83413,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":83418,"byte_end":83425,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":83430,"byte_end":83457,"line_start":773,"line_end":773,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":83462,"byte_end":83465,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":83470,"byte_end":83503,"line_start":775,"line_end":775,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":83508,"byte_end":83531,"line_start":776,"line_end":776,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.contains_key(&1), true);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":83536,"byte_end":83579,"line_start":777,"line_end":777,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(map.contains_key(&2), false);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":83584,"byte_end":83628,"line_start":778,"line_end":778,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":83633,"byte_end":83640,"line_start":779,"line_end":779,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":83681,"byte_end":83687,"line_start":780,"line_end":780,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":84564,"byte_end":84571,"line_start":811,"line_end":811,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<HashMap<K, V, S>>::get_mut","value":"fn <Q> (&mut self, k: &Q) -> Option<&mut V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value corresponding to the key.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":83848,"byte_end":83918,"line_start":789,"line_end":789,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":83923,"byte_end":83926,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":83931,"byte_end":83994,"line_start":791,"line_end":791,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":83999,"byte_end":84066,"line_start":792,"line_end":792,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":84071,"byte_end":84088,"line_start":793,"line_end":793,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":84093,"byte_end":84096,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":84101,"byte_end":84160,"line_start":795,"line_end":795,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":84165,"byte_end":84229,"line_start":796,"line_end":796,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":84234,"byte_end":84237,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":84242,"byte_end":84256,"line_start":798,"line_end":798,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":84261,"byte_end":84264,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":84269,"byte_end":84276,"line_start":800,"line_end":800,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":84281,"byte_end":84308,"line_start":801,"line_end":801,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":84313,"byte_end":84316,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":84321,"byte_end":84354,"line_start":803,"line_end":803,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":84359,"byte_end":84382,"line_start":804,"line_end":804,"column_start":5,"column_end":28}},{"value":"/ if let Some(x) = map.get_mut(&1) {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":84387,"byte_end":84425,"line_start":805,"line_end":805,"column_start":5,"column_end":43}},{"value":"/     *x = \"b\";","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":84430,"byte_end":84447,"line_start":806,"line_end":806,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":84452,"byte_end":84457,"line_start":807,"line_end":807,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[&1], \"b\");","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":84462,"byte_end":84491,"line_start":808,"line_end":808,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":84496,"byte_end":84503,"line_start":809,"line_end":809,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":84544,"byte_end":84550,"line_start":810,"line_end":810,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":85842,"byte_end":85848,"line_start":848,"line_end":848,"column_start":12,"column_end":18},"name":"insert","qualname":"<HashMap<K, V, S>>::insert","value":"fn (&mut self, k: K, v: V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the map.","sig":null,"attributes":[{"value":"/ Inserts a key-value pair into the map.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":84867,"byte_end":84909,"line_start":822,"line_end":822,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":84914,"byte_end":84917,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, [`None`] is returned.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":84922,"byte_end":84989,"line_start":824,"line_end":824,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":84994,"byte_end":84997,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the value is updated, and the old","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":85002,"byte_end":85077,"line_start":826,"line_end":826,"column_start":5,"column_end":80}},{"value":"/ value is returned. The key is not updated, though; this matters for","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":85082,"byte_end":85153,"line_start":827,"line_end":827,"column_start":5,"column_end":76}},{"value":"/ types that can be `==` without being identical. See the [module-level","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":85158,"byte_end":85231,"line_start":828,"line_end":828,"column_start":5,"column_end":78}},{"value":"/ documentation] for more.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":85236,"byte_end":85264,"line_start":829,"line_end":829,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":85269,"byte_end":85272,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":85277,"byte_end":85357,"line_start":831,"line_end":831,"column_start":5,"column_end":85}},{"value":"/ [module-level documentation]: index.html#insert-and-complex-keys","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":85362,"byte_end":85430,"line_start":832,"line_end":832,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":85435,"byte_end":85438,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":85443,"byte_end":85457,"line_start":834,"line_end":834,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":85462,"byte_end":85465,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":85470,"byte_end":85477,"line_start":836,"line_end":836,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":85482,"byte_end":85509,"line_start":837,"line_end":837,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":85514,"byte_end":85517,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":85522,"byte_end":85555,"line_start":839,"line_end":839,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(map.insert(37, \"a\"), None);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":85560,"byte_end":85602,"line_start":840,"line_end":840,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map.is_empty(), false);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":85607,"byte_end":85645,"line_start":841,"line_end":841,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":85650,"byte_end":85653,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ map.insert(37, \"b\");","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":85658,"byte_end":85682,"line_start":843,"line_end":843,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(map.insert(37, \"c\"), Some(\"b\"));","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":85687,"byte_end":85734,"line_start":844,"line_end":844,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(map[&37], \"c\");","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":85739,"byte_end":85769,"line_start":845,"line_end":845,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":85774,"byte_end":85781,"line_start":846,"line_end":846,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":85822,"byte_end":85828,"line_start":847,"line_end":847,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":87065,"byte_end":87071,"line_start":883,"line_end":883,"column_start":12,"column_end":18},"name":"remove","qualname":"<HashMap<K, V, S>>::remove","value":"fn <Q> (&mut self, k: &Q) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the value at the key if the key\n was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the value at the key if the key","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":86331,"byte_end":86404,"line_start":862,"line_end":862,"column_start":5,"column_end":78}},{"value":"/ was previously in the map.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":86409,"byte_end":86439,"line_start":863,"line_end":863,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":86444,"byte_end":86447,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":86452,"byte_end":86515,"line_start":865,"line_end":865,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":86520,"byte_end":86587,"line_start":866,"line_end":866,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":86592,"byte_end":86609,"line_start":867,"line_end":867,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":86614,"byte_end":86617,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":86622,"byte_end":86681,"line_start":869,"line_end":869,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":86686,"byte_end":86750,"line_start":870,"line_end":870,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":86755,"byte_end":86758,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":86763,"byte_end":86777,"line_start":872,"line_end":872,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":86782,"byte_end":86785,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":86790,"byte_end":86797,"line_start":874,"line_end":874,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":86802,"byte_end":86829,"line_start":875,"line_end":875,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":86834,"byte_end":86837,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":86842,"byte_end":86875,"line_start":877,"line_end":877,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":86880,"byte_end":86903,"line_start":878,"line_end":878,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.remove(&1), Some(\"a\"));","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":86908,"byte_end":86950,"line_start":879,"line_end":879,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map.remove(&1), None);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":86955,"byte_end":86992,"line_start":880,"line_end":880,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":86997,"byte_end":87004,"line_start":881,"line_end":881,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":87045,"byte_end":87051,"line_start":882,"line_end":882,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":88013,"byte_end":88025,"line_start":914,"line_end":914,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<HashMap<K, V, S>>::remove_entry","value":"fn <Q> (&mut self, k: &Q) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the stored key and value if the\n key was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the stored key and value if the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":87230,"byte_end":87303,"line_start":891,"line_end":891,"column_start":5,"column_end":78}},{"value":"/ key was previously in the map.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":87308,"byte_end":87342,"line_start":892,"line_end":892,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":87347,"byte_end":87350,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":87355,"byte_end":87418,"line_start":894,"line_end":894,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":87423,"byte_end":87490,"line_start":895,"line_end":895,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":87495,"byte_end":87512,"line_start":896,"line_end":896,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":87517,"byte_end":87520,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":87525,"byte_end":87584,"line_start":898,"line_end":898,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":87589,"byte_end":87653,"line_start":899,"line_end":899,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":87658,"byte_end":87661,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":87666,"byte_end":87680,"line_start":901,"line_end":901,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":87685,"byte_end":87688,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":87693,"byte_end":87700,"line_start":903,"line_end":903,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":87705,"byte_end":87732,"line_start":904,"line_end":904,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":87737,"byte_end":87740,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":87745,"byte_end":87762,"line_start":906,"line_end":906,"column_start":5,"column_end":22}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":87767,"byte_end":87800,"line_start":907,"line_end":907,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":87805,"byte_end":87828,"line_start":908,"line_end":908,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.remove_entry(&1), Some((1, \"a\")));","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":87833,"byte_end":87886,"line_start":909,"line_end":909,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(map.remove(&1), None);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":87891,"byte_end":87928,"line_start":910,"line_end":910,"column_start":5,"column_end":42}},{"value":"/ # }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":87933,"byte_end":87940,"line_start":911,"line_end":911,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":87945,"byte_end":87952,"line_start":912,"line_end":912,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":87993,"byte_end":87999,"line_start":913,"line_end":913,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":88867,"byte_end":88873,"line_start":943,"line_end":943,"column_start":12,"column_end":18},"name":"retain","qualname":"<HashMap<K, V, S>>::retain","value":"fn <F> (&mut self, mut f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Retains only the elements specified by the predicate.","sig":null,"attributes":[{"value":"/ Retains only the elements specified by the predicate.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":88448,"byte_end":88505,"line_start":930,"line_end":930,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":88510,"byte_end":88513,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ In other words, remove all pairs `(k, v)` such that `f(&k,&mut v)` returns `false`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":88518,"byte_end":88605,"line_start":932,"line_end":932,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":88610,"byte_end":88613,"line_start":933,"line_end":933,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":88618,"byte_end":88632,"line_start":934,"line_end":934,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":88637,"byte_end":88640,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":88645,"byte_end":88652,"line_start":936,"line_end":936,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":88657,"byte_end":88684,"line_start":937,"line_end":937,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":88689,"byte_end":88692,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<i32, i32> = (0..8).map(|x|(x, x*10)).collect();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":88697,"byte_end":88769,"line_start":939,"line_end":939,"column_start":5,"column_end":77}},{"value":"/ map.retain(|&k, _| k % 2 == 0);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":88774,"byte_end":88809,"line_start":940,"line_end":940,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(map.len(), 4);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":88814,"byte_end":88843,"line_start":941,"line_end":941,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":88848,"byte_end":88855,"line_start":942,"line_end":942,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":91419,"byte_end":91432,"line_start":997,"line_end":997,"column_start":12,"column_end":25},"name":"raw_entry_mut","qualname":"<HashMap<K, V, S>>::raw_entry_mut","value":"fn (&mut self) -> RawEntryBuilderMut<'_, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a raw entry builder for the HashMap.","sig":null,"attributes":[{"value":"/ Creates a raw entry builder for the HashMap.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":89479,"byte_end":89527,"line_start":965,"line_end":965,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":89532,"byte_end":89535,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ Raw entries provide the lowest level of control for searching and","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":89540,"byte_end":89609,"line_start":967,"line_end":967,"column_start":5,"column_end":74}},{"value":"/ manipulating a map. They must be manually initialized with a hash and","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":89614,"byte_end":89687,"line_start":968,"line_end":968,"column_start":5,"column_end":78}},{"value":"/ then manually searched. After this, insertions into a vacant entry","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":89692,"byte_end":89762,"line_start":969,"line_end":969,"column_start":5,"column_end":75}},{"value":"/ still require an owned key to be provided.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":89767,"byte_end":89813,"line_start":970,"line_end":970,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":89818,"byte_end":89821,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ Raw entries are useful for such exotic situations as:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":89826,"byte_end":89883,"line_start":972,"line_end":972,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":89888,"byte_end":89891,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ * Hash memoization","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":89896,"byte_end":89918,"line_start":974,"line_end":974,"column_start":5,"column_end":27}},{"value":"/ * Deferring the creation of an owned key until it is known to be required","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":89923,"byte_end":90000,"line_start":975,"line_end":975,"column_start":5,"column_end":82}},{"value":"/ * Using a search key that doesn't work with the Borrow trait","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":90005,"byte_end":90069,"line_start":976,"line_end":976,"column_start":5,"column_end":69}},{"value":"/ * Using custom comparison logic without newtype wrappers","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":90074,"byte_end":90134,"line_start":977,"line_end":977,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":90139,"byte_end":90142,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ Because raw entries provide much more low-level control, it's much easier","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":90147,"byte_end":90224,"line_start":979,"line_end":979,"column_start":5,"column_end":82}},{"value":"/ to put the HashMap into an inconsistent state which, while memory-safe,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":90229,"byte_end":90304,"line_start":980,"line_end":980,"column_start":5,"column_end":80}},{"value":"/ will cause the map to produce seemingly random results. Higher-level and","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":90309,"byte_end":90385,"line_start":981,"line_end":981,"column_start":5,"column_end":81}},{"value":"/ more foolproof APIs like `entry` should be preferred when possible.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":90390,"byte_end":90461,"line_start":982,"line_end":982,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":90466,"byte_end":90469,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ In particular, the hash used to initialized the raw entry must still be","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":90474,"byte_end":90549,"line_start":984,"line_end":984,"column_start":5,"column_end":80}},{"value":"/ consistent with the hash of the key that is ultimately stored in the entry.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":90554,"byte_end":90633,"line_start":985,"line_end":985,"column_start":5,"column_end":84}},{"value":"/ This is because implementations of HashMap may need to recompute hashes","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":90638,"byte_end":90713,"line_start":986,"line_end":986,"column_start":5,"column_end":80}},{"value":"/ when resizing, at which point only the keys are available.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":90718,"byte_end":90780,"line_start":987,"line_end":987,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":90785,"byte_end":90788,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ Raw entries give mutable access to the keys. This must not be used","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":90793,"byte_end":90863,"line_start":989,"line_end":989,"column_start":5,"column_end":75}},{"value":"/ to modify how the key would compare or hash, as the map will not re-evaluate","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":90868,"byte_end":90948,"line_start":990,"line_end":990,"column_start":5,"column_end":85}},{"value":"/ where the key should go, meaning the keys may become \"lost\" if their","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":90953,"byte_end":91025,"line_start":991,"line_end":991,"column_start":5,"column_end":77}},{"value":"/ location does not reflect their state. For instance, if you change a key","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":91030,"byte_end":91106,"line_start":992,"line_end":992,"column_start":5,"column_end":81}},{"value":"/ so that the map now contains keys which compare equal, search may start","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":91111,"byte_end":91186,"line_start":993,"line_end":993,"column_start":5,"column_end":80}},{"value":"/ acting erratically, with two keys randomly masking each other. Implementations","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":91191,"byte_end":91273,"line_start":994,"line_end":994,"column_start":5,"column_end":87}},{"value":"/ are free to assume this doesn't happen (within the limits of memory-safety).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":91278,"byte_end":91358,"line_start":995,"line_end":995,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":91399,"byte_end":91405,"line_start":996,"line_end":996,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":92270,"byte_end":92279,"line_start":1017,"line_end":1017,"column_start":12,"column_end":21},"name":"raw_entry","qualname":"<HashMap<K, V, S>>::raw_entry","value":"fn (&self) -> RawEntryBuilder<'_, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a raw immutable entry builder for the HashMap.","sig":null,"attributes":[{"value":"/ Creates a raw immutable entry builder for the HashMap.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":91533,"byte_end":91591,"line_start":1001,"line_end":1001,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":91596,"byte_end":91599,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ Raw entries provide the lowest level of control for searching and","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":91604,"byte_end":91673,"line_start":1003,"line_end":1003,"column_start":5,"column_end":74}},{"value":"/ manipulating a map. They must be manually initialized with a hash and","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":91678,"byte_end":91751,"line_start":1004,"line_end":1004,"column_start":5,"column_end":78}},{"value":"/ then manually searched.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":91756,"byte_end":91783,"line_start":1005,"line_end":1005,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":91788,"byte_end":91791,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ This is useful for","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":91796,"byte_end":91818,"line_start":1007,"line_end":1007,"column_start":5,"column_end":27}},{"value":"/ * Hash memoization","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":91823,"byte_end":91845,"line_start":1008,"line_end":1008,"column_start":5,"column_end":27}},{"value":"/ * Using a search key that doesn't work with the Borrow trait","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":91850,"byte_end":91914,"line_start":1009,"line_end":1009,"column_start":5,"column_end":69}},{"value":"/ * Using custom comparison logic without newtype wrappers","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":91919,"byte_end":91979,"line_start":1010,"line_end":1010,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":91984,"byte_end":91987,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ Unless you are in such a situation, higher-level and more foolproof APIs like","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":91992,"byte_end":92073,"line_start":1012,"line_end":1012,"column_start":5,"column_end":86}},{"value":"/ `get` should be preferred.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":92078,"byte_end":92108,"line_start":1013,"line_end":1013,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":92113,"byte_end":92116,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ Immutable raw entries have very limited use; you might instead want `raw_entry_mut`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":92121,"byte_end":92209,"line_start":1015,"line_end":1015,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":92250,"byte_end":92256,"line_start":1016,"line_end":1016,"column_start":41,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":382},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":94047,"byte_end":94051,"line_start":1094,"line_end":1094,"column_start":12,"column_end":16},"name":"Iter","qualname":"::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387}],"decl_id":null,"docs":" An iterator over the entries of a `HashMap`.","sig":null,"attributes":[{"value":"/ An iterator over the entries of a `HashMap`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":93792,"byte_end":93840,"line_start":1087,"line_end":1087,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":93841,"byte_end":93844,"line_start":1088,"line_end":1088,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`HashMap`]. See its","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":93845,"byte_end":93920,"line_start":1089,"line_end":1089,"column_start":1,"column_end":76}},{"value":"/ documentation for more.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":93921,"byte_end":93948,"line_start":1090,"line_end":1090,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":93949,"byte_end":93952,"line_start":1091,"line_end":1091,"column_start":1,"column_end":4}},{"value":"/ [`iter`]: struct.HashMap.html#method.iter","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":93953,"byte_end":93998,"line_start":1092,"line_end":1092,"column_start":1,"column_end":46}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":93999,"byte_end":94035,"line_start":1093,"line_end":1093,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":396},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":94871,"byte_end":94878,"line_start":1123,"line_end":1123,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401}],"decl_id":null,"docs":" A mutable iterator over the entries of a `HashMap`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the entries of a `HashMap`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":94597,"byte_end":94652,"line_start":1116,"line_end":1116,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":94653,"byte_end":94656,"line_start":1117,"line_end":1117,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter_mut`] method on [`HashMap`]. See its","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":94657,"byte_end":94736,"line_start":1118,"line_end":1118,"column_start":1,"column_end":80}},{"value":"/ documentation for more.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":94737,"byte_end":94764,"line_start":1119,"line_end":1119,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":94765,"byte_end":94768,"line_start":1120,"line_end":1120,"column_start":1,"column_end":4}},{"value":"/ [`iter_mut`]: struct.HashMap.html#method.iter_mut","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":94769,"byte_end":94822,"line_start":1121,"line_end":1121,"column_start":1,"column_end":54}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":94823,"byte_end":94859,"line_start":1122,"line_end":1122,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":409},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":95888,"byte_end":95896,"line_start":1152,"line_end":1152,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":412}],"decl_id":null,"docs":" An owning iterator over the entries of a `HashMap`.","sig":null,"attributes":[{"value":"/ An owning iterator over the entries of a `HashMap`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":95561,"byte_end":95616,"line_start":1145,"line_end":1145,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":95617,"byte_end":95620,"line_start":1146,"line_end":1146,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`HashMap`][`HashMap`]","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":95621,"byte_end":95703,"line_start":1147,"line_end":1147,"column_start":1,"column_end":83}},{"value":"/ (provided by the `IntoIterator` trait). See its documentation for more.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":95704,"byte_end":95779,"line_start":1148,"line_end":1148,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":95780,"byte_end":95783,"line_start":1149,"line_end":1149,"column_start":1,"column_end":4}},{"value":"/ [`into_iter`]: struct.HashMap.html#method.into_iter","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":95784,"byte_end":95839,"line_start":1150,"line_end":1150,"column_start":1,"column_end":56}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":95840,"byte_end":95876,"line_start":1151,"line_end":1151,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":417},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":96491,"byte_end":96495,"line_start":1174,"line_end":1174,"column_start":12,"column_end":16},"name":"Keys","qualname":"::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":421}],"decl_id":null,"docs":" An iterator over the keys of a `HashMap`.","sig":null,"attributes":[{"value":"/ An iterator over the keys of a `HashMap`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":96239,"byte_end":96284,"line_start":1167,"line_end":1167,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":96285,"byte_end":96288,"line_start":1168,"line_end":1168,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`keys`] method on [`HashMap`]. See its","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":96289,"byte_end":96364,"line_start":1169,"line_end":1169,"column_start":1,"column_end":76}},{"value":"/ documentation for more.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":96365,"byte_end":96392,"line_start":1170,"line_end":1170,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":96393,"byte_end":96396,"line_start":1171,"line_end":1171,"column_start":1,"column_end":4}},{"value":"/ [`keys`]: struct.HashMap.html#method.keys","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":96397,"byte_end":96442,"line_start":1172,"line_end":1172,"column_start":1,"column_end":46}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":96443,"byte_end":96479,"line_start":1173,"line_end":1173,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":430},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":97219,"byte_end":97225,"line_start":1201,"line_end":1201,"column_start":12,"column_end":18},"name":"Values","qualname":"::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":434}],"decl_id":null,"docs":" An iterator over the values of a `HashMap`.","sig":null,"attributes":[{"value":"/ An iterator over the values of a `HashMap`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":96959,"byte_end":97006,"line_start":1194,"line_end":1194,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":97007,"byte_end":97010,"line_start":1195,"line_end":1195,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values`] method on [`HashMap`]. See its","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":97011,"byte_end":97088,"line_start":1196,"line_end":1196,"column_start":1,"column_end":78}},{"value":"/ documentation for more.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":97089,"byte_end":97116,"line_start":1197,"line_end":1197,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":97117,"byte_end":97120,"line_start":1198,"line_end":1198,"column_start":1,"column_end":4}},{"value":"/ [`values`]: struct.HashMap.html#method.values","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":97121,"byte_end":97170,"line_start":1199,"line_end":1199,"column_start":1,"column_end":50}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":97171,"byte_end":97207,"line_start":1200,"line_end":1200,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":443},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":97961,"byte_end":97966,"line_start":1228,"line_end":1228,"column_start":12,"column_end":17},"name":"Drain","qualname":"::map::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":447}],"decl_id":null,"docs":" A draining iterator over the entries of a `HashMap`.","sig":null,"attributes":[{"value":"/ A draining iterator over the entries of a `HashMap`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":97695,"byte_end":97751,"line_start":1221,"line_end":1221,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":97752,"byte_end":97755,"line_start":1222,"line_end":1222,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`HashMap`]. See its","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":97756,"byte_end":97832,"line_start":1223,"line_end":1223,"column_start":1,"column_end":77}},{"value":"/ documentation for more.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":97833,"byte_end":97860,"line_start":1224,"line_end":1224,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":97861,"byte_end":97864,"line_start":1225,"line_end":1225,"column_start":1,"column_end":4}},{"value":"/ [`drain`]: struct.HashMap.html#method.drain","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":97865,"byte_end":97912,"line_start":1226,"line_end":1226,"column_start":1,"column_end":48}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":97913,"byte_end":97949,"line_start":1227,"line_end":1227,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":452},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":98594,"byte_end":98603,"line_start":1250,"line_end":1250,"column_start":12,"column_end":21},"name":"ValuesMut","qualname":"::map::ValuesMut","value":"ValuesMut {  }","parent":null,"children":[{"krate":0,"index":456}],"decl_id":null,"docs":" A mutable iterator over the values of a `HashMap`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the values of a `HashMap`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":98315,"byte_end":98369,"line_start":1243,"line_end":1243,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":98370,"byte_end":98373,"line_start":1244,"line_end":1244,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values_mut`] method on [`HashMap`]. See its","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":98374,"byte_end":98455,"line_start":1245,"line_end":1245,"column_start":1,"column_end":82}},{"value":"/ documentation for more.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":98456,"byte_end":98483,"line_start":1246,"line_end":1246,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":98484,"byte_end":98487,"line_start":1247,"line_end":1247,"column_start":1,"column_end":4}},{"value":"/ [`values_mut`]: struct.HashMap.html#method.values_mut","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":98488,"byte_end":98545,"line_start":1248,"line_end":1248,"column_start":1,"column_end":58}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":98546,"byte_end":98582,"line_start":1249,"line_end":1249,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":457},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":98890,"byte_end":98908,"line_start":1259,"line_end":1259,"column_start":12,"column_end":30},"name":"RawEntryBuilderMut","qualname":"::map::RawEntryBuilderMut","value":"RawEntryBuilderMut {  }","parent":null,"children":[{"krate":0,"index":462}],"decl_id":null,"docs":" A builder for computing where in a [`HashMap`] a key-value pair would be stored.","sig":null,"attributes":[{"value":"/ A builder for computing where in a [`HashMap`] a key-value pair would be stored.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":98649,"byte_end":98733,"line_start":1254,"line_end":1254,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":98734,"byte_end":98737,"line_start":1255,"line_end":1255,"column_start":1,"column_end":4}},{"value":"/ See the [`HashMap::raw_entry_mut`] docs for usage examples.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":98738,"byte_end":98801,"line_start":1256,"line_end":1256,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":98802,"byte_end":98805,"line_start":1257,"line_end":1257,"column_start":1,"column_end":4}},{"value":"/ [`HashMap::raw_entry_mut`]: struct.HashMap.html#method.raw_entry_mut","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":98806,"byte_end":98878,"line_start":1258,"line_end":1258,"column_start":1,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":468},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":99513,"byte_end":99521,"line_start":1276,"line_end":1276,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::RawEntryMut::Occupied","value":"RawEntryMut::Occupied(RawOccupiedEntryMut<'a, K, V>)","parent":{"krate":0,"index":463},"children":[],"decl_id":null,"docs":" An occupied entry.\n","sig":null,"attributes":[{"value":"/ An occupied entry.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":99486,"byte_end":99508,"line_start":1275,"line_end":1275,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":471},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":99582,"byte_end":99588,"line_start":1278,"line_end":1278,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::RawEntryMut::Vacant","value":"RawEntryMut::Vacant(RawVacantEntryMut<'a, K, V, S>)","parent":{"krate":0,"index":463},"children":[],"decl_id":null,"docs":" A vacant entry.\n","sig":null,"attributes":[{"value":"/ A vacant entry.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":99558,"byte_end":99577,"line_start":1277,"line_end":1277,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":463},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":99455,"byte_end":99466,"line_start":1274,"line_end":1274,"column_start":10,"column_end":21},"name":"RawEntryMut","qualname":"::map::RawEntryMut","value":"RawEntryMut::{Occupied, Vacant}","parent":null,"children":[{"krate":0,"index":468},{"krate":0,"index":471}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.","sig":null,"attributes":[{"value":"/ A view into a single entry in a map, which may either be vacant or occupied.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":98962,"byte_end":99042,"line_start":1263,"line_end":1263,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":99043,"byte_end":99046,"line_start":1264,"line_end":1264,"column_start":1,"column_end":4}},{"value":"/ This is a lower-level version of [`Entry`].","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":99047,"byte_end":99094,"line_start":1265,"line_end":1265,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":99095,"byte_end":99098,"line_start":1266,"line_end":1266,"column_start":1,"column_end":4}},{"value":"/ This `enum` is constructed through the [`raw_entry_mut`] method on [`HashMap`],","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":99099,"byte_end":99182,"line_start":1267,"line_end":1267,"column_start":1,"column_end":84}},{"value":"/ then calling one of the methods of that [`RawEntryBuilderMut`].","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":99183,"byte_end":99250,"line_start":1268,"line_end":1268,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":99251,"byte_end":99254,"line_start":1269,"line_end":1269,"column_start":1,"column_end":4}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":99255,"byte_end":99291,"line_start":1270,"line_end":1270,"column_start":1,"column_end":37}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":99292,"byte_end":99322,"line_start":1271,"line_end":1271,"column_start":1,"column_end":31}},{"value":"/ [`raw_entry_mut`]: struct.HashMap.html#method.raw_entry_mut","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":99323,"byte_end":99386,"line_start":1272,"line_end":1272,"column_start":1,"column_end":64}},{"value":"/ [`RawEntryBuilderMut`]: struct.RawEntryBuilderMut.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":99387,"byte_end":99445,"line_start":1273,"line_end":1273,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":474},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":99777,"byte_end":99796,"line_start":1285,"line_end":1285,"column_start":12,"column_end":31},"name":"RawOccupiedEntryMut","qualname":"::map::RawOccupiedEntryMut","value":"RawOccupiedEntryMut {  }","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":479}],"decl_id":null,"docs":" A view into an occupied entry in a `HashMap`.\n It is part of the [`RawEntryMut`] enum.","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `HashMap`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":99625,"byte_end":99674,"line_start":1281,"line_end":1281,"column_start":1,"column_end":50}},{"value":"/ It is part of the [`RawEntryMut`] enum.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":99675,"byte_end":99718,"line_start":1282,"line_end":1282,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":99719,"byte_end":99722,"line_start":1283,"line_end":1283,"column_start":1,"column_end":4}},{"value":"/ [`RawEntryMut`]: enum.RawEntryMut.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":99723,"byte_end":99765,"line_start":1284,"line_end":1284,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":486},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":100211,"byte_end":100228,"line_start":1307,"line_end":1307,"column_start":12,"column_end":29},"name":"RawVacantEntryMut","qualname":"::map::RawVacantEntryMut","value":"RawVacantEntryMut {  }","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":492}],"decl_id":null,"docs":" A view into a vacant entry in a `HashMap`.\n It is part of the [`RawEntryMut`] enum.","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `HashMap`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":100062,"byte_end":100108,"line_start":1303,"line_end":1303,"column_start":1,"column_end":47}},{"value":"/ It is part of the [`RawEntryMut`] enum.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":100109,"byte_end":100152,"line_start":1304,"line_end":1304,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":100153,"byte_end":100156,"line_start":1305,"line_end":1305,"column_start":1,"column_end":4}},{"value":"/ [`RawEntryMut`]: enum.RawEntryMut.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":100157,"byte_end":100199,"line_start":1306,"line_end":1306,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":493},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":100538,"byte_end":100553,"line_start":1317,"line_end":1317,"column_start":12,"column_end":27},"name":"RawEntryBuilder","qualname":"::map::RawEntryBuilder","value":"RawEntryBuilder {  }","parent":null,"children":[{"krate":0,"index":498}],"decl_id":null,"docs":" A builder for computing where in a [`HashMap`] a key-value pair would be stored.","sig":null,"attributes":[{"value":"/ A builder for computing where in a [`HashMap`] a key-value pair would be stored.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":100309,"byte_end":100393,"line_start":1312,"line_end":1312,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":100394,"byte_end":100397,"line_start":1313,"line_end":1313,"column_start":1,"column_end":4}},{"value":"/ See the [`HashMap::raw_entry`] docs for usage examples.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":100398,"byte_end":100457,"line_start":1314,"line_end":1314,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":100458,"byte_end":100461,"line_start":1315,"line_end":1315,"column_start":1,"column_end":4}},{"value":"/ [`HashMap::raw_entry`]: struct.HashMap.html#method.raw_entry","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":100462,"byte_end":100526,"line_start":1316,"line_end":1316,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":100837,"byte_end":100845,"line_start":1328,"line_end":1328,"column_start":12,"column_end":20},"name":"from_key","qualname":"<RawEntryBuilderMut>::from_key","value":"fn <Q> (self, k: &Q) -> RawEntryMut<'a, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `RawEntryMut` from the given key.\n","sig":null,"attributes":[{"value":"/ Creates a `RawEntryMut` from the given key.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":100685,"byte_end":100732,"line_start":1325,"line_end":1325,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":100773,"byte_end":100779,"line_start":1326,"line_end":1326,"column_start":41,"column_end":47}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":100786,"byte_end":100825,"line_start":1327,"line_end":1327,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":101248,"byte_end":101271,"line_start":1341,"line_end":1341,"column_start":12,"column_end":35},"name":"from_key_hashed_nocheck","qualname":"<RawEntryBuilderMut>::from_key_hashed_nocheck","value":"fn <Q> (self, hash: u64, k: &Q) -> RawEntryMut<'a, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `RawEntryMut` from the given key and its hash.\n","sig":null,"attributes":[{"value":"/ Creates a `RawEntryMut` from the given key and its hash.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":101118,"byte_end":101178,"line_start":1338,"line_end":1338,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":101183,"byte_end":101192,"line_start":1339,"line_end":1339,"column_start":5,"column_end":14}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":101197,"byte_end":101236,"line_start":1340,"line_end":1340,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":101683,"byte_end":101692,"line_start":1357,"line_end":1357,"column_start":12,"column_end":21},"name":"from_hash","qualname":"<RawEntryBuilderMut>::from_hash","value":"fn <F> (self, hash: u64, is_match: F) -> RawEntryMut<'a, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `RawEntryMut` from the given hash.\n","sig":null,"attributes":[{"value":"/ Creates a `RawEntryMut` from the given hash.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":101530,"byte_end":101578,"line_start":1354,"line_end":1354,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":101619,"byte_end":101625,"line_start":1355,"line_end":1355,"column_start":41,"column_end":47}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":101632,"byte_end":101671,"line_start":1356,"line_end":1356,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":102659,"byte_end":102667,"line_start":1389,"line_end":1389,"column_start":12,"column_end":20},"name":"from_key","qualname":"<RawEntryBuilder>::from_key","value":"fn <Q> (self, k: &Q) -> Option<(&'a K, &'a V)>","parent":null,"children":[],"decl_id":null,"docs":" Access an entry by key.\n","sig":null,"attributes":[{"value":"/ Access an entry by key.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":102527,"byte_end":102554,"line_start":1386,"line_end":1386,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":102595,"byte_end":102601,"line_start":1387,"line_end":1387,"column_start":41,"column_end":47}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":102608,"byte_end":102647,"line_start":1388,"line_end":1388,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":103085,"byte_end":103108,"line_start":1402,"line_end":1402,"column_start":12,"column_end":35},"name":"from_key_hashed_nocheck","qualname":"<RawEntryBuilder>::from_key_hashed_nocheck","value":"fn <Q> (self, hash: u64, k: &Q) -> Option<(&'a K, &'a V)>","parent":null,"children":[],"decl_id":null,"docs":" Access an entry by a key and its hash.\n","sig":null,"attributes":[{"value":"/ Access an entry by a key and its hash.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":102938,"byte_end":102980,"line_start":1399,"line_end":1399,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":103021,"byte_end":103027,"line_start":1400,"line_end":1400,"column_start":41,"column_end":47}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":103034,"byte_end":103073,"line_start":1401,"line_end":1401,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":103822,"byte_end":103831,"line_start":1427,"line_end":1427,"column_start":12,"column_end":21},"name":"from_hash","qualname":"<RawEntryBuilder>::from_hash","value":"fn <F> (self, hash: u64, is_match: F) -> Option<(&'a K, &'a V)>","parent":null,"children":[],"decl_id":null,"docs":" Access an entry by hash.\n","sig":null,"attributes":[{"value":"/ Access an entry by hash.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":103689,"byte_end":103717,"line_start":1424,"line_end":1424,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":103758,"byte_end":103764,"line_start":1425,"line_end":1425,"column_start":41,"column_end":47}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":103771,"byte_end":103810,"line_start":1426,"line_end":1426,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":104475,"byte_end":104481,"line_start":1449,"line_end":1449,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawEntryMut>::insert","value":"fn (self, key: K, value: V) -> RawOccupiedEntryMut<'a, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns a RawOccupiedEntryMut.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns a RawOccupiedEntryMut.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":104031,"byte_end":104098,"line_start":1436,"line_end":1436,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":104103,"byte_end":104106,"line_start":1437,"line_end":1437,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":104111,"byte_end":104125,"line_start":1438,"line_end":1438,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":104130,"byte_end":104133,"line_start":1439,"line_end":1439,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":104138,"byte_end":104145,"line_start":1440,"line_end":1440,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":104150,"byte_end":104177,"line_start":1441,"line_end":1441,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":104182,"byte_end":104185,"line_start":1442,"line_end":1442,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":104190,"byte_end":104243,"line_start":1443,"line_end":1443,"column_start":5,"column_end":58}},{"value":"/ let entry = map.raw_entry_mut().from_key(\"horseyland\").insert(\"horseyland\", 37);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":104248,"byte_end":104332,"line_start":1444,"line_end":1444,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":104337,"byte_end":104340,"line_start":1445,"line_end":1445,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(entry.remove_entry(), (\"horseyland\", 37));","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":104345,"byte_end":104402,"line_start":1446,"line_end":1446,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":104407,"byte_end":104414,"line_start":1447,"line_end":1447,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":104455,"byte_end":104461,"line_start":1448,"line_end":1448,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":105458,"byte_end":105467,"line_start":1480,"line_end":1480,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<RawEntryMut>::or_insert","value":"fn (self, default_key: K, default_val: V) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n mutable references to the key and value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and returns","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":104835,"byte_end":104917,"line_start":1463,"line_end":1463,"column_start":5,"column_end":87}},{"value":"/ mutable references to the key and value in the entry.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":104922,"byte_end":104979,"line_start":1464,"line_end":1464,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":104984,"byte_end":104987,"line_start":1465,"line_end":1465,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":104992,"byte_end":105006,"line_start":1466,"line_end":1466,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":105011,"byte_end":105014,"line_start":1467,"line_end":1467,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":105019,"byte_end":105026,"line_start":1468,"line_end":1468,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":105031,"byte_end":105058,"line_start":1469,"line_end":1469,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":105063,"byte_end":105066,"line_start":1470,"line_end":1470,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":105071,"byte_end":105124,"line_start":1471,"line_end":1471,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":105129,"byte_end":105132,"line_start":1472,"line_end":1472,"column_start":5,"column_end":8}},{"value":"/ map.raw_entry_mut().from_key(\"poneyland\").or_insert(\"poneyland\", 3);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":105137,"byte_end":105209,"line_start":1473,"line_end":1473,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(map[\"poneyland\"], 3);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":105214,"byte_end":105250,"line_start":1474,"line_end":1474,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":105255,"byte_end":105258,"line_start":1475,"line_end":1475,"column_start":5,"column_end":8}},{"value":"/ *map.raw_entry_mut().from_key(\"poneyland\").or_insert(\"poneyland\", 10).1 *= 2;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":105263,"byte_end":105344,"line_start":1476,"line_end":1476,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(map[\"poneyland\"], 6);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":105349,"byte_end":105385,"line_start":1477,"line_end":1477,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":105390,"byte_end":105397,"line_start":1478,"line_end":1478,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":105438,"byte_end":105444,"line_start":1479,"line_end":1479,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":106371,"byte_end":106385,"line_start":1508,"line_end":1508,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<RawEntryMut>::or_insert_with","value":"fn <F> (self, default: F) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns mutable references to the key and value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default function if empty,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":105781,"byte_end":105874,"line_start":1491,"line_end":1491,"column_start":5,"column_end":98}},{"value":"/ and returns mutable references to the key and value in the entry.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":105879,"byte_end":105948,"line_start":1492,"line_end":1492,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":105953,"byte_end":105956,"line_start":1493,"line_end":1493,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":105961,"byte_end":105975,"line_start":1494,"line_end":1494,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":105980,"byte_end":105983,"line_start":1495,"line_end":1495,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":105988,"byte_end":105995,"line_start":1496,"line_end":1496,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":106000,"byte_end":106027,"line_start":1497,"line_end":1497,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":106032,"byte_end":106035,"line_start":1498,"line_end":1498,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, String> = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":106040,"byte_end":106096,"line_start":1499,"line_end":1499,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":106101,"byte_end":106104,"line_start":1500,"line_end":1500,"column_start":5,"column_end":8}},{"value":"/ map.raw_entry_mut().from_key(\"poneyland\").or_insert_with(|| {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":106109,"byte_end":106174,"line_start":1501,"line_end":1501,"column_start":5,"column_end":70}},{"value":"/     (\"poneyland\", \"hoho\".to_string())","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":106179,"byte_end":106220,"line_start":1502,"line_end":1502,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":106225,"byte_end":106232,"line_start":1503,"line_end":1503,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":106237,"byte_end":106240,"line_start":1504,"line_end":1504,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], \"hoho\".to_string());","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":106245,"byte_end":106298,"line_start":1505,"line_end":1505,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":106303,"byte_end":106310,"line_start":1506,"line_end":1506,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":106351,"byte_end":106357,"line_start":1507,"line_end":1507,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":107481,"byte_end":107491,"line_start":1546,"line_end":1546,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<RawEntryMut>::and_modify","value":"fn <F> (self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Provides in-place mutable access to an occupied entry before any\n potential inserts into the map.","sig":null,"attributes":[{"value":"/ Provides in-place mutable access to an occupied entry before any","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":106764,"byte_end":106832,"line_start":1523,"line_end":1523,"column_start":5,"column_end":73}},{"value":"/ potential inserts into the map.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":106837,"byte_end":106872,"line_start":1524,"line_end":1524,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":106877,"byte_end":106880,"line_start":1525,"line_end":1525,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":106885,"byte_end":106899,"line_start":1526,"line_end":1526,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":106904,"byte_end":106907,"line_start":1527,"line_end":1527,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":106912,"byte_end":106919,"line_start":1528,"line_end":1528,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":106924,"byte_end":106951,"line_start":1529,"line_end":1529,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":106956,"byte_end":106959,"line_start":1530,"line_end":1530,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":106964,"byte_end":107017,"line_start":1531,"line_end":1531,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":107022,"byte_end":107025,"line_start":1532,"line_end":1532,"column_start":5,"column_end":8}},{"value":"/ map.raw_entry_mut()","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":107030,"byte_end":107053,"line_start":1533,"line_end":1533,"column_start":5,"column_end":28}},{"value":"/    .from_key(\"poneyland\")","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":107058,"byte_end":107087,"line_start":1534,"line_end":1534,"column_start":5,"column_end":34}},{"value":"/    .and_modify(|_k, v| { *v += 1 })","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":107092,"byte_end":107131,"line_start":1535,"line_end":1535,"column_start":5,"column_end":44}},{"value":"/    .or_insert(\"poneyland\", 42);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":107136,"byte_end":107171,"line_start":1536,"line_end":1536,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(map[\"poneyland\"], 42);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":107176,"byte_end":107213,"line_start":1537,"line_end":1537,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":107218,"byte_end":107221,"line_start":1538,"line_end":1538,"column_start":5,"column_end":8}},{"value":"/ map.raw_entry_mut()","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":107226,"byte_end":107249,"line_start":1539,"line_end":1539,"column_start":5,"column_end":28}},{"value":"/    .from_key(\"poneyland\")","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":107254,"byte_end":107283,"line_start":1540,"line_end":1540,"column_start":5,"column_end":34}},{"value":"/    .and_modify(|_k, v| { *v += 1 })","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":107288,"byte_end":107327,"line_start":1541,"line_end":1541,"column_start":5,"column_end":44}},{"value":"/    .or_insert(\"poneyland\", 0);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":107332,"byte_end":107366,"line_start":1542,"line_end":1542,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":107371,"byte_end":107408,"line_start":1543,"line_end":1543,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":107413,"byte_end":107420,"line_start":1544,"line_end":1544,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":107461,"byte_end":107467,"line_start":1545,"line_end":1545,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":108067,"byte_end":108070,"line_start":1566,"line_end":1566,"column_start":12,"column_end":15},"name":"key","qualname":"<RawOccupiedEntryMut>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the key in the entry.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":107961,"byte_end":108006,"line_start":1564,"line_end":1564,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":108047,"byte_end":108053,"line_start":1565,"line_end":1565,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":108252,"byte_end":108259,"line_start":1572,"line_end":1572,"column_start":12,"column_end":19},"name":"key_mut","qualname":"<RawOccupiedEntryMut>::key_mut","value":"fn (&mut self) -> &mut K","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the key in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the key in the entry.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":108138,"byte_end":108191,"line_start":1570,"line_end":1570,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":108232,"byte_end":108238,"line_start":1571,"line_end":1571,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":108520,"byte_end":108528,"line_start":1579,"line_end":1579,"column_start":12,"column_end":20},"name":"into_key","qualname":"<RawOccupiedEntryMut>::into_key","value":"fn (self) -> &'a mut K","parent":null,"children":[],"decl_id":null,"docs":" Converts the entry into a mutable reference to the key in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"/ Converts the entry into a mutable reference to the key in the entry","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":108339,"byte_end":108410,"line_start":1576,"line_end":1576,"column_start":5,"column_end":76}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":108415,"byte_end":108459,"line_start":1577,"line_end":1577,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":108500,"byte_end":108506,"line_start":1578,"line_end":1578,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":108714,"byte_end":108717,"line_start":1585,"line_end":1585,"column_start":12,"column_end":15},"name":"get","qualname":"<RawOccupiedEntryMut>::get","value":"fn (&self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":108606,"byte_end":108653,"line_start":1583,"line_end":1583,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":108694,"byte_end":108700,"line_start":1584,"line_end":1584,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":108976,"byte_end":108984,"line_start":1592,"line_end":1592,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<RawOccupiedEntryMut>::into_mut","value":"fn (self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the value in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"/ Converts the OccupiedEntry into a mutable reference to the value in the entry","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":108785,"byte_end":108866,"line_start":1589,"line_end":1589,"column_start":5,"column_end":86}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":108871,"byte_end":108915,"line_start":1590,"line_end":1590,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":108956,"byte_end":108962,"line_start":1591,"line_end":1591,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":109178,"byte_end":109185,"line_start":1598,"line_end":1598,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RawOccupiedEntryMut>::get_mut","value":"fn (&mut self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the value in the entry.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":109062,"byte_end":109117,"line_start":1596,"line_end":1596,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":109158,"byte_end":109164,"line_start":1597,"line_end":1597,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":109381,"byte_end":109394,"line_start":1604,"line_end":1604,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<RawOccupiedEntryMut>::get_key_value","value":"fn (&mut self) -> (&K, &V)","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key and value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the key and value in the entry.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":109265,"byte_end":109320,"line_start":1602,"line_end":1602,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":109361,"byte_end":109367,"line_start":1603,"line_end":1603,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":109667,"byte_end":109684,"line_start":1613,"line_end":1613,"column_start":12,"column_end":29},"name":"get_key_value_mut","qualname":"<RawOccupiedEntryMut>::get_key_value_mut","value":"fn (&mut self) -> (&mut K, &mut V)","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the key and value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the key and value in the entry.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":109543,"byte_end":109606,"line_start":1611,"line_end":1611,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":109647,"byte_end":109653,"line_start":1612,"line_end":1612,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":110052,"byte_end":110066,"line_start":1623,"line_end":1623,"column_start":12,"column_end":26},"name":"into_key_value","qualname":"<RawOccupiedEntryMut>::into_key_value","value":"fn (self) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the key and value in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"/ Converts the OccupiedEntry into a mutable reference to the key and value in the entry","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":109853,"byte_end":109942,"line_start":1620,"line_end":1620,"column_start":5,"column_end":94}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":109947,"byte_end":109991,"line_start":1621,"line_end":1621,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":110032,"byte_end":110038,"line_start":1622,"line_end":1622,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":110364,"byte_end":110370,"line_start":1632,"line_end":1632,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawOccupiedEntryMut>::insert","value":"fn (&mut self, value: V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":110236,"byte_end":110303,"line_start":1630,"line_end":1630,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":110344,"byte_end":110350,"line_start":1631,"line_end":1631,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":110582,"byte_end":110592,"line_start":1638,"line_end":1638,"column_start":12,"column_end":22},"name":"insert_key","qualname":"<RawOccupiedEntryMut>::insert_key","value":"fn (&mut self, key: K) -> K","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":110454,"byte_end":110521,"line_start":1636,"line_end":1636,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":110562,"byte_end":110568,"line_start":1637,"line_end":1637,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":110786,"byte_end":110792,"line_start":1644,"line_end":1644,"column_start":12,"column_end":18},"name":"remove","qualname":"<RawOccupiedEntryMut>::remove","value":"fn (self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.\n","sig":null,"attributes":[{"value":"/ Takes the value out of the entry, and returns it.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":110672,"byte_end":110725,"line_start":1642,"line_end":1642,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":110766,"byte_end":110772,"line_start":1643,"line_end":1643,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":110965,"byte_end":110977,"line_start":1650,"line_end":1650,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<RawOccupiedEntryMut>::remove_entry","value":"fn (self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Take the ownership of the key and value from the map.\n","sig":null,"attributes":[{"value":"/ Take the ownership of the key and value from the map.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":110847,"byte_end":110904,"line_start":1648,"line_end":1648,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":110945,"byte_end":110951,"line_start":1649,"line_end":1649,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":111333,"byte_end":111339,"line_start":1662,"line_end":1662,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawVacantEntryMut>::insert","value":"fn (self, key: K, value: V) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's key,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":111166,"byte_end":111225,"line_start":1659,"line_end":1659,"column_start":5,"column_end":64}},{"value":"/ and returns a mutable reference to it.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":111230,"byte_end":111272,"line_start":1660,"line_end":1660,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":111313,"byte_end":111319,"line_start":1661,"line_end":1661,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":111818,"byte_end":111839,"line_start":1676,"line_end":1676,"column_start":12,"column_end":33},"name":"insert_hashed_nocheck","qualname":"<RawVacantEntryMut>::insert_hashed_nocheck","value":"fn (self, hash: u64, key: K, value: V) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's key,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":111612,"byte_end":111671,"line_start":1672,"line_end":1672,"column_start":5,"column_end":64}},{"value":"/ and returns a mutable reference to it.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":111676,"byte_end":111718,"line_start":1673,"line_end":1673,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":111759,"byte_end":111765,"line_start":1674,"line_end":1674,"column_start":41,"column_end":47}},{"value":"allow(clippy :: shadow_unrelated)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":111772,"byte_end":111806,"line_start":1675,"line_end":1675,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":112218,"byte_end":112236,"line_start":1687,"line_end":1687,"column_start":12,"column_end":30},"name":"insert_with_hasher","qualname":"<RawVacantEntryMut>::insert_with_hasher","value":"fn <H> (self, hash: u64, key: K, value: V, hasher: H) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Set the value of an entry with a custom hasher function.\n","sig":null,"attributes":[{"value":"/ Set the value of an entry with a custom hasher function.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":112097,"byte_end":112157,"line_start":1685,"line_end":1685,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":112198,"byte_end":112204,"line_start":1686,"line_end":1686,"column_start":41,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":607},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":114644,"byte_end":114652,"line_start":1769,"line_end":1769,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry<'a, K, V, S>)","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":" An occupied entry.\n","sig":null,"attributes":[{"value":"/ An occupied entry.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":114617,"byte_end":114639,"line_start":1768,"line_end":1768,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":610},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":114711,"byte_end":114717,"line_start":1772,"line_end":1772,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::Entry::Vacant","value":"Entry::Vacant(VacantEntry<'a, K, V, S>)","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":" A vacant entry.\n","sig":null,"attributes":[{"value":"/ A vacant entry.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":114687,"byte_end":114706,"line_start":1771,"line_end":1771,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":602},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":114592,"byte_end":114597,"line_start":1767,"line_end":1767,"column_start":10,"column_end":15},"name":"Entry","qualname":"::map::Entry","value":"Entry::{Occupied, Vacant}","parent":null,"children":[{"krate":0,"index":607},{"krate":0,"index":610}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.","sig":null,"attributes":[{"value":"/ A view into a single entry in a map, which may either be vacant or occupied.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":114336,"byte_end":114416,"line_start":1761,"line_end":1761,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":114417,"byte_end":114420,"line_start":1762,"line_end":1762,"column_start":1,"column_end":4}},{"value":"/ This `enum` is constructed from the [`entry`] method on [`HashMap`].","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":114421,"byte_end":114493,"line_start":1763,"line_end":1763,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":114494,"byte_end":114497,"line_start":1764,"line_end":1764,"column_start":1,"column_end":4}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":114498,"byte_end":114534,"line_start":1765,"line_end":1765,"column_start":1,"column_end":37}},{"value":"/ [`entry`]: struct.HashMap.html#method.entry","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":114535,"byte_end":114582,"line_start":1766,"line_end":1766,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":618},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":115203,"byte_end":115216,"line_start":1788,"line_end":1788,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::map::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625}],"decl_id":null,"docs":" A view into an occupied entry in a `HashMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `HashMap`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":115069,"byte_end":115118,"line_start":1784,"line_end":1784,"column_start":1,"column_end":50}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":115119,"byte_end":115156,"line_start":1785,"line_end":1785,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":115157,"byte_end":115160,"line_start":1786,"line_end":1786,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":115161,"byte_end":115191,"line_start":1787,"line_end":1787,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":639},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":115941,"byte_end":115952,"line_start":1822,"line_end":1822,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::map::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646}],"decl_id":null,"docs":" A view into a vacant entry in a `HashMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `HashMap`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":115810,"byte_end":115856,"line_start":1818,"line_end":1818,"column_start":1,"column_end":47}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":115857,"byte_end":115894,"line_start":1819,"line_end":1819,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":115895,"byte_end":115898,"line_start":1820,"line_end":1820,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":115899,"byte_end":115929,"line_start":1821,"line_end":1821,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":122901,"byte_end":122907,"line_start":2080,"line_end":2080,"column_start":12,"column_end":18},"name":"insert","qualname":"<Entry>::insert","value":"fn (self, value: V) -> OccupiedEntry<'a, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns an OccupiedEntry.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns an OccupiedEntry.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":122509,"byte_end":122571,"line_start":2067,"line_end":2067,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":122576,"byte_end":122579,"line_start":2068,"line_end":2068,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":122584,"byte_end":122598,"line_start":2069,"line_end":2069,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":122603,"byte_end":122606,"line_start":2070,"line_end":2070,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":122611,"byte_end":122618,"line_start":2071,"line_end":2071,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":122623,"byte_end":122650,"line_start":2072,"line_end":2072,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":122655,"byte_end":122658,"line_start":2073,"line_end":2073,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":122663,"byte_end":122716,"line_start":2074,"line_end":2074,"column_start":5,"column_end":58}},{"value":"/ let entry = map.entry(\"horseyland\").insert(37);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":122721,"byte_end":122772,"line_start":2075,"line_end":2075,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":122777,"byte_end":122780,"line_start":2076,"line_end":2076,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(entry.key(), &\"horseyland\");","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":122785,"byte_end":122828,"line_start":2077,"line_end":2077,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":122833,"byte_end":122840,"line_start":2078,"line_end":2078,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":122881,"byte_end":122887,"line_start":2079,"line_end":2079,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":123783,"byte_end":123792,"line_start":2111,"line_end":2111,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"fn (self, default: V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and returns","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":123233,"byte_end":123315,"line_start":2094,"line_end":2094,"column_start":5,"column_end":87}},{"value":"/ a mutable reference to the value in the entry.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":123320,"byte_end":123370,"line_start":2095,"line_end":2095,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":123375,"byte_end":123378,"line_start":2096,"line_end":2096,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":123383,"byte_end":123397,"line_start":2097,"line_end":2097,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":123402,"byte_end":123405,"line_start":2098,"line_end":2098,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":123410,"byte_end":123417,"line_start":2099,"line_end":2099,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":123422,"byte_end":123449,"line_start":2100,"line_end":2100,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":123454,"byte_end":123457,"line_start":2101,"line_end":2101,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":123462,"byte_end":123515,"line_start":2102,"line_end":2102,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":123520,"byte_end":123523,"line_start":2103,"line_end":2103,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\").or_insert(3);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":123528,"byte_end":123568,"line_start":2104,"line_end":2104,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(map[\"poneyland\"], 3);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":123573,"byte_end":123609,"line_start":2105,"line_end":2105,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":123614,"byte_end":123617,"line_start":2106,"line_end":2106,"column_start":5,"column_end":8}},{"value":"/ *map.entry(\"poneyland\").or_insert(10) *= 2;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":123622,"byte_end":123669,"line_start":2107,"line_end":2107,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(map[\"poneyland\"], 6);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":123674,"byte_end":123710,"line_start":2108,"line_end":2108,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":123715,"byte_end":123722,"line_start":2109,"line_end":2109,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":123763,"byte_end":123769,"line_start":2110,"line_end":2110,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":124582,"byte_end":124596,"line_start":2138,"line_end":2138,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"fn <F> (self, default: F) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default function if empty,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":124038,"byte_end":124131,"line_start":2122,"line_end":2122,"column_start":5,"column_end":98}},{"value":"/ and returns a mutable reference to the value in the entry.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":124136,"byte_end":124198,"line_start":2123,"line_end":2123,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":124203,"byte_end":124206,"line_start":2124,"line_end":2124,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":124211,"byte_end":124225,"line_start":2125,"line_end":2125,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":124230,"byte_end":124233,"line_start":2126,"line_end":2126,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":124238,"byte_end":124245,"line_start":2127,"line_end":2127,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":124250,"byte_end":124277,"line_start":2128,"line_end":2128,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":124282,"byte_end":124285,"line_start":2129,"line_end":2129,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, String> = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":124290,"byte_end":124346,"line_start":2130,"line_end":2130,"column_start":5,"column_end":61}},{"value":"/ let s = \"hoho\".to_string();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":124351,"byte_end":124382,"line_start":2131,"line_end":2131,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":124387,"byte_end":124390,"line_start":2132,"line_end":2132,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\").or_insert_with(|| s);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":124395,"byte_end":124443,"line_start":2133,"line_end":2133,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":124448,"byte_end":124451,"line_start":2134,"line_end":2134,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], \"hoho\".to_string());","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":124456,"byte_end":124509,"line_start":2135,"line_end":2135,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":124514,"byte_end":124521,"line_start":2136,"line_end":2136,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":124562,"byte_end":124568,"line_start":2137,"line_end":2137,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":125188,"byte_end":125191,"line_start":2160,"line_end":2160,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to this entry's key.","sig":null,"attributes":[{"value":"/ Returns a reference to this entry's key.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":124862,"byte_end":124906,"line_start":2149,"line_end":2149,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":124911,"byte_end":124914,"line_start":2150,"line_end":2150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":124919,"byte_end":124933,"line_start":2151,"line_end":2151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":124938,"byte_end":124941,"line_start":2152,"line_end":2152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":124946,"byte_end":124953,"line_start":2153,"line_end":2153,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":124958,"byte_end":124985,"line_start":2154,"line_end":2154,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":124990,"byte_end":124993,"line_start":2155,"line_end":2155,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":124998,"byte_end":125051,"line_start":2156,"line_end":2156,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(map.entry(\"poneyland\").key(), &\"poneyland\");","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":125056,"byte_end":125115,"line_start":2157,"line_end":2157,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":125120,"byte_end":125127,"line_start":2158,"line_end":2158,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":125168,"byte_end":125174,"line_start":2159,"line_end":2159,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":125980,"byte_end":125990,"line_start":2188,"line_end":2188,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<Entry>::and_modify","value":"fn <F> (self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Provides in-place mutable access to an occupied entry before any\n potential inserts into the map.","sig":null,"attributes":[{"value":"/ Provides in-place mutable access to an occupied entry before any","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":125358,"byte_end":125426,"line_start":2167,"line_end":2167,"column_start":5,"column_end":73}},{"value":"/ potential inserts into the map.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":125431,"byte_end":125466,"line_start":2168,"line_end":2168,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":125471,"byte_end":125474,"line_start":2169,"line_end":2169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":125479,"byte_end":125493,"line_start":2170,"line_end":2170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":125498,"byte_end":125501,"line_start":2171,"line_end":2171,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":125506,"byte_end":125513,"line_start":2172,"line_end":2172,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":125518,"byte_end":125545,"line_start":2173,"line_end":2173,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":125550,"byte_end":125553,"line_start":2174,"line_end":2174,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":125558,"byte_end":125611,"line_start":2175,"line_end":2175,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":125616,"byte_end":125619,"line_start":2176,"line_end":2176,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\")","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":125624,"byte_end":125650,"line_start":2177,"line_end":2177,"column_start":5,"column_end":31}},{"value":"/    .and_modify(|e| { *e += 1 })","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":125655,"byte_end":125690,"line_start":2178,"line_end":2178,"column_start":5,"column_end":40}},{"value":"/    .or_insert(42);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":125695,"byte_end":125717,"line_start":2179,"line_end":2179,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(map[\"poneyland\"], 42);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":125722,"byte_end":125759,"line_start":2180,"line_end":2180,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":125764,"byte_end":125767,"line_start":2181,"line_end":2181,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\")","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":125772,"byte_end":125798,"line_start":2182,"line_end":2182,"column_start":5,"column_end":31}},{"value":"/    .and_modify(|e| { *e += 1 })","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":125803,"byte_end":125838,"line_start":2183,"line_end":2183,"column_start":5,"column_end":40}},{"value":"/    .or_insert(42);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":125843,"byte_end":125865,"line_start":2184,"line_end":2184,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":125870,"byte_end":125907,"line_start":2185,"line_end":2185,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":125912,"byte_end":125919,"line_start":2186,"line_end":2186,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":125960,"byte_end":125966,"line_start":2187,"line_end":2187,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":126840,"byte_end":126850,"line_start":2219,"line_end":2219,"column_start":12,"column_end":22},"name":"or_default","qualname":"<Entry>::or_default","value":"fn (self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default value if empty,\n and returns a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default value if empty,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":126340,"byte_end":126416,"line_start":2203,"line_end":2203,"column_start":5,"column_end":81}},{"value":"/ and returns a mutable reference to the value in the entry.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":126421,"byte_end":126483,"line_start":2204,"line_end":2204,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":126488,"byte_end":126491,"line_start":2205,"line_end":2205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":126496,"byte_end":126510,"line_start":2206,"line_end":2206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":126515,"byte_end":126518,"line_start":2207,"line_end":2207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":126523,"byte_end":126530,"line_start":2208,"line_end":2208,"column_start":5,"column_end":12}},{"value":"/ # fn main() {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":126535,"byte_end":126552,"line_start":2209,"line_end":2209,"column_start":5,"column_end":22}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":126557,"byte_end":126584,"line_start":2210,"line_end":2210,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":126589,"byte_end":126592,"line_start":2211,"line_end":2211,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, Option<u32>> = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":126597,"byte_end":126658,"line_start":2212,"line_end":2212,"column_start":5,"column_end":66}},{"value":"/ map.entry(\"poneyland\").or_default();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":126663,"byte_end":126703,"line_start":2213,"line_end":2213,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":126708,"byte_end":126711,"line_start":2214,"line_end":2214,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], None);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":126716,"byte_end":126755,"line_start":2215,"line_end":2215,"column_start":5,"column_end":44}},{"value":"/ # }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":126760,"byte_end":126767,"line_start":2216,"line_end":2216,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":126772,"byte_end":126779,"line_start":2217,"line_end":2217,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":126820,"byte_end":126826,"line_start":2218,"line_end":2218,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":127517,"byte_end":127520,"line_start":2244,"line_end":2244,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.","sig":null,"attributes":[{"value":"/ Gets a reference to the key in the entry.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":127144,"byte_end":127189,"line_start":2232,"line_end":2232,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":127194,"byte_end":127197,"line_start":2233,"line_end":2233,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":127202,"byte_end":127216,"line_start":2234,"line_end":2234,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":127221,"byte_end":127224,"line_start":2235,"line_end":2235,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":127229,"byte_end":127236,"line_start":2236,"line_end":2236,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":127241,"byte_end":127268,"line_start":2237,"line_end":2237,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":127273,"byte_end":127276,"line_start":2238,"line_end":2238,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":127281,"byte_end":127334,"line_start":2239,"line_end":2239,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":127339,"byte_end":127380,"line_start":2240,"line_end":2240,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(map.entry(\"poneyland\").key(), &\"poneyland\");","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":127385,"byte_end":127444,"line_start":2241,"line_end":2241,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":127449,"byte_end":127456,"line_start":2242,"line_end":2242,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":127497,"byte_end":127503,"line_start":2243,"line_end":2243,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":128173,"byte_end":128185,"line_start":2267,"line_end":2267,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"fn (self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Take the ownership of the key and value from the map.","sig":null,"attributes":[{"value":"/ Take the ownership of the key and value from the map.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":127588,"byte_end":127645,"line_start":2248,"line_end":2248,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":127650,"byte_end":127653,"line_start":2249,"line_end":2249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":127658,"byte_end":127672,"line_start":2250,"line_end":2250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":127677,"byte_end":127680,"line_start":2251,"line_end":2251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":127685,"byte_end":127692,"line_start":2252,"line_end":2252,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":127697,"byte_end":127724,"line_start":2253,"line_end":2253,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":127729,"byte_end":127764,"line_start":2254,"line_end":2254,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":127769,"byte_end":127772,"line_start":2255,"line_end":2255,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":127777,"byte_end":127830,"line_start":2256,"line_end":2256,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":127835,"byte_end":127876,"line_start":2257,"line_end":2257,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":127881,"byte_end":127884,"line_start":2258,"line_end":2258,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(o) = map.entry(\"poneyland\") {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":127889,"byte_end":127945,"line_start":2259,"line_end":2259,"column_start":5,"column_end":61}},{"value":"/     // We delete the entry from the map.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":127950,"byte_end":127994,"line_start":2260,"line_end":2260,"column_start":5,"column_end":49}},{"value":"/     o.remove_entry();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":127999,"byte_end":128024,"line_start":2261,"line_end":2261,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":128029,"byte_end":128034,"line_start":2262,"line_end":2262,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":128039,"byte_end":128042,"line_start":2263,"line_end":2263,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.contains_key(\"poneyland\"), false);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":128047,"byte_end":128100,"line_start":2264,"line_end":2264,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":128105,"byte_end":128112,"line_start":2265,"line_end":2265,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":128153,"byte_end":128159,"line_start":2266,"line_end":2266,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":128795,"byte_end":128798,"line_start":2290,"line_end":2290,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"fn (&self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":128327,"byte_end":128374,"line_start":2274,"line_end":2274,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":128379,"byte_end":128382,"line_start":2275,"line_end":2275,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":128387,"byte_end":128401,"line_start":2276,"line_end":2276,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":128406,"byte_end":128409,"line_start":2277,"line_end":2277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":128414,"byte_end":128421,"line_start":2278,"line_end":2278,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":128426,"byte_end":128453,"line_start":2279,"line_end":2279,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":128458,"byte_end":128493,"line_start":2280,"line_end":2280,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":128498,"byte_end":128501,"line_start":2281,"line_end":2281,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":128506,"byte_end":128559,"line_start":2282,"line_end":2282,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":128564,"byte_end":128605,"line_start":2283,"line_end":2283,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":128610,"byte_end":128613,"line_start":2284,"line_end":2284,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(o) = map.entry(\"poneyland\") {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":128618,"byte_end":128674,"line_start":2285,"line_end":2285,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(o.get(), &12);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":128679,"byte_end":128712,"line_start":2286,"line_end":2286,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":128717,"byte_end":128722,"line_start":2287,"line_end":2287,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":128727,"byte_end":128734,"line_start":2288,"line_end":2288,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":128775,"byte_end":128781,"line_start":2289,"line_end":2289,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":819},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":129758,"byte_end":129765,"line_start":2322,"line_end":2322,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"fn (&mut self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the value in the entry.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":128866,"byte_end":128921,"line_start":2294,"line_end":2294,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":128926,"byte_end":128929,"line_start":2295,"line_end":2295,"column_start":5,"column_end":8}},{"value":"/ If you need a reference to the `OccupiedEntry` which may outlive the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":128934,"byte_end":129006,"line_start":2296,"line_end":2296,"column_start":5,"column_end":77}},{"value":"/ destruction of the `Entry` value, see [`into_mut`].","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":129011,"byte_end":129066,"line_start":2297,"line_end":2297,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":129071,"byte_end":129074,"line_start":2298,"line_end":2298,"column_start":5,"column_end":8}},{"value":"/ [`into_mut`]: #method.into_mut","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":129079,"byte_end":129113,"line_start":2299,"line_end":2299,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":129118,"byte_end":129121,"line_start":2300,"line_end":2300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":129126,"byte_end":129140,"line_start":2301,"line_end":2301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":129145,"byte_end":129148,"line_start":2302,"line_end":2302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":129153,"byte_end":129160,"line_start":2303,"line_end":2303,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":129165,"byte_end":129192,"line_start":2304,"line_end":2304,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":129197,"byte_end":129232,"line_start":2305,"line_end":2305,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":129237,"byte_end":129240,"line_start":2306,"line_end":2306,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":129245,"byte_end":129298,"line_start":2307,"line_end":2307,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":129303,"byte_end":129344,"line_start":2308,"line_end":2308,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":129349,"byte_end":129352,"line_start":2309,"line_end":2309,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 12);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":129357,"byte_end":129394,"line_start":2310,"line_end":2310,"column_start":5,"column_end":42}},{"value":"/ if let Entry::Occupied(mut o) = map.entry(\"poneyland\") {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":129399,"byte_end":129459,"line_start":2311,"line_end":2311,"column_start":5,"column_end":65}},{"value":"/     *o.get_mut() += 10;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":129464,"byte_end":129491,"line_start":2312,"line_end":2312,"column_start":5,"column_end":32}},{"value":"/     assert_eq!(*o.get(), 22);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":129496,"byte_end":129529,"line_start":2313,"line_end":2313,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":129534,"byte_end":129537,"line_start":2314,"line_end":2314,"column_start":5,"column_end":8}},{"value":"/     // We can use the same Entry multiple times.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":129542,"byte_end":129594,"line_start":2315,"line_end":2315,"column_start":5,"column_end":57}},{"value":"/     *o.get_mut() += 2;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":129599,"byte_end":129625,"line_start":2316,"line_end":2316,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":129630,"byte_end":129635,"line_start":2317,"line_end":2317,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":129640,"byte_end":129643,"line_start":2318,"line_end":2318,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 24);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":129648,"byte_end":129685,"line_start":2319,"line_end":2319,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":129690,"byte_end":129697,"line_start":2320,"line_end":2320,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":129738,"byte_end":129744,"line_start":2321,"line_end":2321,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":130617,"byte_end":130625,"line_start":2350,"line_end":2350,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"fn (self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the value in the entry\n with a lifetime bound to the map itself.","sig":null,"attributes":[{"value":"/ Converts the OccupiedEntry into a mutable reference to the value in the entry","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":129845,"byte_end":129926,"line_start":2326,"line_end":2326,"column_start":5,"column_end":86}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":129931,"byte_end":129975,"line_start":2327,"line_end":2327,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":129980,"byte_end":129983,"line_start":2328,"line_end":2328,"column_start":5,"column_end":8}},{"value":"/ If you need multiple references to the `OccupiedEntry`, see [`get_mut`].","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":129988,"byte_end":130064,"line_start":2329,"line_end":2329,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":130069,"byte_end":130072,"line_start":2330,"line_end":2330,"column_start":5,"column_end":8}},{"value":"/ [`get_mut`]: #method.get_mut","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":130077,"byte_end":130109,"line_start":2331,"line_end":2331,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":130114,"byte_end":130117,"line_start":2332,"line_end":2332,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":130122,"byte_end":130136,"line_start":2333,"line_end":2333,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":130141,"byte_end":130144,"line_start":2334,"line_end":2334,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":130149,"byte_end":130156,"line_start":2335,"line_end":2335,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":130161,"byte_end":130188,"line_start":2336,"line_end":2336,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":130193,"byte_end":130228,"line_start":2337,"line_end":2337,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":130233,"byte_end":130236,"line_start":2338,"line_end":2338,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":130241,"byte_end":130294,"line_start":2339,"line_end":2339,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":130299,"byte_end":130340,"line_start":2340,"line_end":2340,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":130345,"byte_end":130348,"line_start":2341,"line_end":2341,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 12);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":130353,"byte_end":130390,"line_start":2342,"line_end":2342,"column_start":5,"column_end":42}},{"value":"/ if let Entry::Occupied(o) = map.entry(\"poneyland\") {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":130395,"byte_end":130451,"line_start":2343,"line_end":2343,"column_start":5,"column_end":61}},{"value":"/     *o.into_mut() += 10;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":130456,"byte_end":130484,"line_start":2344,"line_end":2344,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":130489,"byte_end":130494,"line_start":2345,"line_end":2345,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":130499,"byte_end":130502,"line_start":2346,"line_end":2346,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 22);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":130507,"byte_end":130544,"line_start":2347,"line_end":2347,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":130549,"byte_end":130556,"line_start":2348,"line_end":2348,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":130597,"byte_end":130603,"line_start":2349,"line_end":2349,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":131249,"byte_end":131255,"line_start":2372,"line_end":2372,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"fn (&mut self, mut value: V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":130703,"byte_end":130770,"line_start":2354,"line_end":2354,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":130775,"byte_end":130778,"line_start":2355,"line_end":2355,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":130783,"byte_end":130797,"line_start":2356,"line_end":2356,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":130802,"byte_end":130805,"line_start":2357,"line_end":2357,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":130810,"byte_end":130817,"line_start":2358,"line_end":2358,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":130822,"byte_end":130849,"line_start":2359,"line_end":2359,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":130854,"byte_end":130889,"line_start":2360,"line_end":2360,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":130894,"byte_end":130897,"line_start":2361,"line_end":2361,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":130902,"byte_end":130955,"line_start":2362,"line_end":2362,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":130960,"byte_end":131001,"line_start":2363,"line_end":2363,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":131006,"byte_end":131009,"line_start":2364,"line_end":2364,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut o) = map.entry(\"poneyland\") {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":131014,"byte_end":131074,"line_start":2365,"line_end":2365,"column_start":5,"column_end":65}},{"value":"/     assert_eq!(o.insert(15), 12);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":131079,"byte_end":131116,"line_start":2366,"line_end":2366,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":131121,"byte_end":131126,"line_start":2367,"line_end":2367,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":131131,"byte_end":131134,"line_start":2368,"line_end":2368,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 15);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":131139,"byte_end":131176,"line_start":2369,"line_end":2369,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":131181,"byte_end":131188,"line_start":2370,"line_end":2370,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":131229,"byte_end":131235,"line_start":2371,"line_end":2371,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":131937,"byte_end":131943,"line_start":2396,"line_end":2396,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"fn (self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.","sig":null,"attributes":[{"value":"/ Takes the value out of the entry, and returns it.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":131395,"byte_end":131448,"line_start":2378,"line_end":2378,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":131453,"byte_end":131456,"line_start":2379,"line_end":2379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":131461,"byte_end":131475,"line_start":2380,"line_end":2380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":131480,"byte_end":131483,"line_start":2381,"line_end":2381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":131488,"byte_end":131495,"line_start":2382,"line_end":2382,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":131500,"byte_end":131527,"line_start":2383,"line_end":2383,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":131532,"byte_end":131567,"line_start":2384,"line_end":2384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":131572,"byte_end":131575,"line_start":2385,"line_end":2385,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":131580,"byte_end":131633,"line_start":2386,"line_end":2386,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":131638,"byte_end":131679,"line_start":2387,"line_end":2387,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":131684,"byte_end":131687,"line_start":2388,"line_end":2388,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(o) = map.entry(\"poneyland\") {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":131692,"byte_end":131748,"line_start":2389,"line_end":2389,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(o.remove(), 12);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":131753,"byte_end":131788,"line_start":2390,"line_end":2390,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":131793,"byte_end":131798,"line_start":2391,"line_end":2391,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":131803,"byte_end":131806,"line_start":2392,"line_end":2392,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.contains_key(\"poneyland\"), false);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":131811,"byte_end":131864,"line_start":2393,"line_end":2393,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":131869,"byte_end":131876,"line_start":2394,"line_end":2394,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":131917,"byte_end":131923,"line_start":2395,"line_end":2395,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":132763,"byte_end":132776,"line_start":2421,"line_end":2421,"column_start":12,"column_end":25},"name":"replace_entry","qualname":"<OccupiedEntry>::replace_entry","value":"fn (self, value: V) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Replaces the entry, returning the old key and value. The new key in the hash map will be\n the key used to create this entry.","sig":null,"attributes":[{"value":"/ Replaces the entry, returning the old key and value. The new key in the hash map will be","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":131998,"byte_end":132090,"line_start":2400,"line_end":2400,"column_start":5,"column_end":97}},{"value":"/ the key used to create this entry.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":132095,"byte_end":132133,"line_start":2401,"line_end":2401,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":132138,"byte_end":132141,"line_start":2402,"line_end":2402,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":132146,"byte_end":132160,"line_start":2403,"line_end":2403,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":132165,"byte_end":132168,"line_start":2404,"line_end":2404,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":132173,"byte_end":132180,"line_start":2405,"line_end":2405,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{Entry, HashMap};","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":132185,"byte_end":132231,"line_start":2406,"line_end":2406,"column_start":5,"column_end":51}},{"value":"/ use std::rc::Rc;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":132236,"byte_end":132256,"line_start":2407,"line_end":2407,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":132261,"byte_end":132264,"line_start":2408,"line_end":2408,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<Rc<String>, u32> = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":132269,"byte_end":132328,"line_start":2409,"line_end":2409,"column_start":5,"column_end":64}},{"value":"/ map.insert(Rc::new(\"Stringthing\".to_string()), 15);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":132333,"byte_end":132388,"line_start":2410,"line_end":2410,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":132393,"byte_end":132396,"line_start":2411,"line_end":2411,"column_start":5,"column_end":8}},{"value":"/ let my_key = Rc::new(\"Stringthing\".to_string());","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":132401,"byte_end":132453,"line_start":2412,"line_end":2412,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":132458,"byte_end":132461,"line_start":2413,"line_end":2413,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(entry) = map.entry(my_key) {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":132466,"byte_end":132521,"line_start":2414,"line_end":2414,"column_start":5,"column_end":60}},{"value":"/     // Also replace the key with a handle to our other key.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":132526,"byte_end":132589,"line_start":2415,"line_end":2415,"column_start":5,"column_end":68}},{"value":"/     let (old_key, old_value): (Rc<String>, u32) = entry.replace_entry(16);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":132594,"byte_end":132672,"line_start":2416,"line_end":2416,"column_start":5,"column_end":83}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":132677,"byte_end":132682,"line_start":2417,"line_end":2417,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":132687,"byte_end":132690,"line_start":2418,"line_end":2418,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":132695,"byte_end":132702,"line_start":2419,"line_end":2419,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":132743,"byte_end":132749,"line_start":2420,"line_end":2420,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":133937,"byte_end":133948,"line_start":2455,"line_end":2455,"column_start":12,"column_end":23},"name":"replace_key","qualname":"<OccupiedEntry>::replace_key","value":"fn (self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Replaces the key in the hash map with the key used to create this entry.","sig":null,"attributes":[{"value":"/ Replaces the key in the hash map with the key used to create this entry.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":133026,"byte_end":133102,"line_start":2430,"line_end":2430,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":133107,"byte_end":133110,"line_start":2431,"line_end":2431,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":133115,"byte_end":133129,"line_start":2432,"line_end":2432,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":133134,"byte_end":133137,"line_start":2433,"line_end":2433,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":133142,"byte_end":133149,"line_start":2434,"line_end":2434,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{Entry, HashMap};","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":133154,"byte_end":133200,"line_start":2435,"line_end":2435,"column_start":5,"column_end":51}},{"value":"/ use std::rc::Rc;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":133205,"byte_end":133225,"line_start":2436,"line_end":2436,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":133230,"byte_end":133233,"line_start":2437,"line_end":2437,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<Rc<String>, u32> = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":133238,"byte_end":133297,"line_start":2438,"line_end":2438,"column_start":5,"column_end":64}},{"value":"/ let mut known_strings: Vec<Rc<String>> = Vec::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":133302,"byte_end":133358,"line_start":2439,"line_end":2439,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":133363,"byte_end":133366,"line_start":2440,"line_end":2440,"column_start":5,"column_end":8}},{"value":"/ // Initialise known strings, run program, etc.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":133371,"byte_end":133421,"line_start":2441,"line_end":2441,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":133426,"byte_end":133429,"line_start":2442,"line_end":2442,"column_start":5,"column_end":8}},{"value":"/ reclaim_memory(&mut map, &known_strings);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":133434,"byte_end":133479,"line_start":2443,"line_end":2443,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":133484,"byte_end":133487,"line_start":2444,"line_end":2444,"column_start":5,"column_end":8}},{"value":"/ fn reclaim_memory(map: &mut HashMap<Rc<String>, u32>, known_strings: &[Rc<String>] ) {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":133492,"byte_end":133582,"line_start":2445,"line_end":2445,"column_start":5,"column_end":95}},{"value":"/     for s in known_strings {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":133587,"byte_end":133619,"line_start":2446,"line_end":2446,"column_start":5,"column_end":37}},{"value":"/         if let Entry::Occupied(entry) = map.entry(s.clone()) {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":133624,"byte_end":133690,"line_start":2447,"line_end":2447,"column_start":5,"column_end":71}},{"value":"/             // Replaces the entry's key with our version of it in `known_strings`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":133695,"byte_end":133781,"line_start":2448,"line_end":2448,"column_start":5,"column_end":91}},{"value":"/             entry.replace_key();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":133786,"byte_end":133822,"line_start":2449,"line_end":2449,"column_start":5,"column_end":41}},{"value":"/         }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":133827,"byte_end":133840,"line_start":2450,"line_end":2450,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":133845,"byte_end":133854,"line_start":2451,"line_end":2451,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":133859,"byte_end":133864,"line_start":2452,"line_end":2452,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":133869,"byte_end":133876,"line_start":2453,"line_end":2453,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":133917,"byte_end":133923,"line_start":2454,"line_end":2454,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":134515,"byte_end":134518,"line_start":2474,"line_end":2474,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key that would be used when inserting a value\n through the `VacantEntry`.","sig":null,"attributes":[{"value":"/ Gets a reference to the key that would be used when inserting a value","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":134125,"byte_end":134198,"line_start":2462,"line_end":2462,"column_start":5,"column_end":78}},{"value":"/ through the `VacantEntry`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":134203,"byte_end":134233,"line_start":2463,"line_end":2463,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":134238,"byte_end":134241,"line_start":2464,"line_end":2464,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":134246,"byte_end":134260,"line_start":2465,"line_end":2465,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":134265,"byte_end":134268,"line_start":2466,"line_end":2466,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":134273,"byte_end":134280,"line_start":2467,"line_end":2467,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":134285,"byte_end":134312,"line_start":2468,"line_end":2468,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":134317,"byte_end":134320,"line_start":2469,"line_end":2469,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":134325,"byte_end":134378,"line_start":2470,"line_end":2470,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(map.entry(\"poneyland\").key(), &\"poneyland\");","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":134383,"byte_end":134442,"line_start":2471,"line_end":2471,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":134447,"byte_end":134454,"line_start":2472,"line_end":2472,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":134495,"byte_end":134501,"line_start":2473,"line_end":2473,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":134954,"byte_end":134962,"line_start":2493,"line_end":2493,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"fn (self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Take ownership of the key.","sig":null,"attributes":[{"value":"/ Take ownership of the key.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":134563,"byte_end":134593,"line_start":2478,"line_end":2478,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":134598,"byte_end":134601,"line_start":2479,"line_end":2479,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":134606,"byte_end":134620,"line_start":2480,"line_end":2480,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":134625,"byte_end":134628,"line_start":2481,"line_end":2481,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":134633,"byte_end":134640,"line_start":2482,"line_end":2482,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":134645,"byte_end":134672,"line_start":2483,"line_end":2483,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":134677,"byte_end":134712,"line_start":2484,"line_end":2484,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":134717,"byte_end":134720,"line_start":2485,"line_end":2485,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":134725,"byte_end":134778,"line_start":2486,"line_end":2486,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":134783,"byte_end":134786,"line_start":2487,"line_end":2487,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Vacant(v) = map.entry(\"poneyland\") {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":134791,"byte_end":134845,"line_start":2488,"line_end":2488,"column_start":5,"column_end":59}},{"value":"/     v.into_key();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":134850,"byte_end":134871,"line_start":2489,"line_end":2489,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":134876,"byte_end":134881,"line_start":2490,"line_end":2490,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":134886,"byte_end":134893,"line_start":2491,"line_end":2491,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":134934,"byte_end":134940,"line_start":2492,"line_end":2492,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":135513,"byte_end":135519,"line_start":2514,"line_end":2514,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"fn (self, value: V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's key,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":135004,"byte_end":135063,"line_start":2497,"line_end":2497,"column_start":5,"column_end":64}},{"value":"/ and returns a mutable reference to it.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":135068,"byte_end":135110,"line_start":2498,"line_end":2498,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":135115,"byte_end":135118,"line_start":2499,"line_end":2499,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":135123,"byte_end":135137,"line_start":2500,"line_end":2500,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":135142,"byte_end":135145,"line_start":2501,"line_end":2501,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":135150,"byte_end":135157,"line_start":2502,"line_end":2502,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":135162,"byte_end":135189,"line_start":2503,"line_end":2503,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":135194,"byte_end":135229,"line_start":2504,"line_end":2504,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":135234,"byte_end":135237,"line_start":2505,"line_end":2505,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":135242,"byte_end":135295,"line_start":2506,"line_end":2506,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":135300,"byte_end":135303,"line_start":2507,"line_end":2507,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Vacant(o) = map.entry(\"poneyland\") {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":135308,"byte_end":135362,"line_start":2508,"line_end":2508,"column_start":5,"column_end":59}},{"value":"/     o.insert(37);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":135367,"byte_end":135388,"line_start":2509,"line_end":2509,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":135393,"byte_end":135398,"line_start":2510,"line_end":2510,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[\"poneyland\"], 37);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":135403,"byte_end":135440,"line_start":2511,"line_end":2511,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":135445,"byte_end":135452,"line_start":2512,"line_end":2512,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":135493,"byte_end":135499,"line_start":2513,"line_end":2513,"column_start":41,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1293},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":172951,"byte_end":172958,"line_start":115,"line_end":115,"column_start":12,"column_end":19},"name":"HashSet","qualname":"::set::HashSet","value":"HashSet {  }","parent":null,"children":[{"krate":0,"index":1296}],"decl_id":null,"docs":" A hash set implemented as a `HashMap` where the value is `()`.","sig":null,"attributes":[{"value":"/ A hash set implemented as a `HashMap` where the value is `()`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":169528,"byte_end":169594,"line_start":17,"line_end":17,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":169595,"byte_end":169598,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ As with the [`HashMap`] type, a `HashSet` requires that the elements","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":169599,"byte_end":169671,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/ implement the [`Eq`] and [`Hash`] traits. This can frequently be achieved by","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":169672,"byte_end":169752,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ using `#[derive(PartialEq, Eq, Hash)]`. If you implement these yourself,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":169753,"byte_end":169829,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/ it is important that the following property holds:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":169830,"byte_end":169884,"line_start":22,"line_end":22,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":169885,"byte_end":169888,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":169889,"byte_end":169900,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/ k1 == k2 -> hash(k1) == hash(k2)","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":169901,"byte_end":169937,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":169938,"byte_end":169945,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":169946,"byte_end":169949,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In other words, if two keys are equal, their hashes must be equal.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":169950,"byte_end":170020,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":170021,"byte_end":170024,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":170025,"byte_end":170028,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ It is a logic error for an item to be modified in such a way that the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":170029,"byte_end":170102,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ item's hash, as determined by the [`Hash`] trait, or its equality, as","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":170103,"byte_end":170176,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/ determined by the [`Eq`] trait, changes while it is in the set. This is","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":170177,"byte_end":170252,"line_start":33,"line_end":33,"column_start":1,"column_end":76}},{"value":"/ normally only possible through [`Cell`], [`RefCell`], global state, I/O, or","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":170253,"byte_end":170332,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ unsafe code.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":170333,"byte_end":170349,"line_start":35,"line_end":35,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":170350,"byte_end":170353,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ It is also a logic error for the [`Hash`] implementation of a key to panic.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":170354,"byte_end":170433,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"/ This is generally only possible if the trait is implemented manually. If a","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":170434,"byte_end":170512,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ panic does occur then the contents of the `HashSet` may become corrupted and","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":170513,"byte_end":170593,"line_start":39,"line_end":39,"column_start":1,"column_end":81}},{"value":"/ some items may be dropped from the table.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":170594,"byte_end":170639,"line_start":40,"line_end":40,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":170640,"byte_end":170643,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":170644,"byte_end":170658,"line_start":42,"line_end":42,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":170659,"byte_end":170662,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":170663,"byte_end":170670,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":170671,"byte_end":170698,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ // Type inference lets us omit an explicit type signature (which","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":170699,"byte_end":170767,"line_start":46,"line_end":46,"column_start":1,"column_end":69}},{"value":"/ // would be `HashSet<String>` in this example).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":170768,"byte_end":170819,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/ let mut books = HashSet::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":170820,"byte_end":170855,"line_start":48,"line_end":48,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":170856,"byte_end":170859,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Add some books.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":170860,"byte_end":170882,"line_start":50,"line_end":50,"column_start":1,"column_end":23}},{"value":"/ books.insert(\"A Dance With Dragons\".to_string());","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":170883,"byte_end":170936,"line_start":51,"line_end":51,"column_start":1,"column_end":54}},{"value":"/ books.insert(\"To Kill a Mockingbird\".to_string());","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":170937,"byte_end":170991,"line_start":52,"line_end":52,"column_start":1,"column_end":55}},{"value":"/ books.insert(\"The Odyssey\".to_string());","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":170992,"byte_end":171036,"line_start":53,"line_end":53,"column_start":1,"column_end":45}},{"value":"/ books.insert(\"The Great Gatsby\".to_string());","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171037,"byte_end":171086,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171087,"byte_end":171090,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Check for a specific one.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171091,"byte_end":171123,"line_start":56,"line_end":56,"column_start":1,"column_end":33}},{"value":"/ if !books.contains(\"The Winds of Winter\") {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171124,"byte_end":171171,"line_start":57,"line_end":57,"column_start":1,"column_end":48}},{"value":"/     println!(\"We have {} books, but The Winds of Winter ain't one.\",","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171172,"byte_end":171244,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/              books.len());","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171245,"byte_end":171275,"line_start":59,"line_end":59,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171276,"byte_end":171281,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171282,"byte_end":171285,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // Remove a book.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171286,"byte_end":171307,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/ books.remove(\"The Odyssey\");","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171308,"byte_end":171340,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171341,"byte_end":171344,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ // Iterate over everything.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171345,"byte_end":171376,"line_start":65,"line_end":65,"column_start":1,"column_end":32}},{"value":"/ for book in &books {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171377,"byte_end":171401,"line_start":66,"line_end":66,"column_start":1,"column_end":25}},{"value":"/     println!(\"{}\", book);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171402,"byte_end":171431,"line_start":67,"line_end":67,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171432,"byte_end":171437,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171438,"byte_end":171445,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171446,"byte_end":171449,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ The easiest way to use `HashSet` with a custom type is to derive","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171450,"byte_end":171518,"line_start":71,"line_end":71,"column_start":1,"column_end":69}},{"value":"/ [`Eq`] and [`Hash`]. We must also derive [`PartialEq`], this will in the","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171519,"byte_end":171595,"line_start":72,"line_end":72,"column_start":1,"column_end":77}},{"value":"/ future be implied by [`Eq`].","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171596,"byte_end":171628,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171629,"byte_end":171632,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171633,"byte_end":171640,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171641,"byte_end":171668,"line_start":76,"line_end":76,"column_start":1,"column_end":28}},{"value":"/ #[derive(Hash, Eq, PartialEq, Debug)]","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171669,"byte_end":171710,"line_start":77,"line_end":77,"column_start":1,"column_end":42}},{"value":"/ struct Viking {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171711,"byte_end":171730,"line_start":78,"line_end":78,"column_start":1,"column_end":20}},{"value":"/     name: String,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171731,"byte_end":171752,"line_start":79,"line_end":79,"column_start":1,"column_end":22}},{"value":"/     power: usize,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171753,"byte_end":171774,"line_start":80,"line_end":80,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171775,"byte_end":171780,"line_start":81,"line_end":81,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171781,"byte_end":171784,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ let mut vikings = HashSet::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171785,"byte_end":171822,"line_start":83,"line_end":83,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171823,"byte_end":171826,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ vikings.insert(Viking { name: \"Einar\".to_string(), power: 9 });","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171827,"byte_end":171894,"line_start":85,"line_end":85,"column_start":1,"column_end":68}},{"value":"/ vikings.insert(Viking { name: \"Einar\".to_string(), power: 9 });","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171895,"byte_end":171962,"line_start":86,"line_end":86,"column_start":1,"column_end":68}},{"value":"/ vikings.insert(Viking { name: \"Olaf\".to_string(), power: 4 });","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":171963,"byte_end":172029,"line_start":87,"line_end":87,"column_start":1,"column_end":67}},{"value":"/ vikings.insert(Viking { name: \"Harald\".to_string(), power: 8 });","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":172030,"byte_end":172098,"line_start":88,"line_end":88,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":172099,"byte_end":172102,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ // Use derived implementation to print the vikings.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":172103,"byte_end":172158,"line_start":90,"line_end":90,"column_start":1,"column_end":56}},{"value":"/ for x in &vikings {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":172159,"byte_end":172182,"line_start":91,"line_end":91,"column_start":1,"column_end":24}},{"value":"/     println!(\"{:?}\", x);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":172183,"byte_end":172211,"line_start":92,"line_end":92,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":172212,"byte_end":172217,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":172218,"byte_end":172225,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":172226,"byte_end":172229,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ A `HashSet` with fixed list of elements can be initialized from an array:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":172230,"byte_end":172307,"line_start":96,"line_end":96,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":172308,"byte_end":172311,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":172312,"byte_end":172319,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":172320,"byte_end":172347,"line_start":99,"line_end":99,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":172348,"byte_end":172351,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":172352,"byte_end":172367,"line_start":101,"line_end":101,"column_start":1,"column_end":16}},{"value":"/     let viking_names: HashSet<&'static str> =","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":172368,"byte_end":172417,"line_start":102,"line_end":102,"column_start":1,"column_end":50}},{"value":"/         [ \"Einar\", \"Olaf\", \"Harald\" ].iter().cloned().collect();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":172418,"byte_end":172486,"line_start":103,"line_end":103,"column_start":1,"column_end":69}},{"value":"/     // use the values stored in the set","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":172487,"byte_end":172530,"line_start":104,"line_end":104,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":172531,"byte_end":172536,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":172537,"byte_end":172544,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":172545,"byte_end":172548,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`Cell`]: https://doc.rust-lang.org/std/cell/struct.Cell.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":172549,"byte_end":172614,"line_start":108,"line_end":108,"column_start":1,"column_end":66}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":172615,"byte_end":172674,"line_start":109,"line_end":109,"column_start":1,"column_end":60}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":172675,"byte_end":172739,"line_start":110,"line_end":110,"column_start":1,"column_end":65}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":172740,"byte_end":172776,"line_start":111,"line_end":111,"column_start":1,"column_end":37}},{"value":"/ [`PartialEq`]: https://doc.rust-lang.org/std/cmp/trait.PartialEq.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":172777,"byte_end":172850,"line_start":112,"line_end":112,"column_start":1,"column_end":74}},{"value":"/ [`RefCell`]: https://doc.rust-lang.org/std/cell/struct.RefCell.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":172851,"byte_end":172922,"line_start":113,"line_end":113,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":173480,"byte_end":173483,"line_start":133,"line_end":133,"column_start":12,"column_end":15},"name":"new","qualname":"<HashSet<T, DefaultHashBuilder>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet`.","sig":null,"attributes":[{"value":"/ Creates an empty `HashSet`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":173112,"byte_end":173143,"line_start":121,"line_end":121,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":173148,"byte_end":173151,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ The hash set is initially created with a capacity of 0, so it will not allocate until it","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":173156,"byte_end":173248,"line_start":123,"line_end":123,"column_start":5,"column_end":97}},{"value":"/ is first inserted into.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":173253,"byte_end":173280,"line_start":124,"line_end":124,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":173285,"byte_end":173288,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":173293,"byte_end":173307,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":173312,"byte_end":173315,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":173320,"byte_end":173327,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":173332,"byte_end":173359,"line_start":129,"line_end":129,"column_start":5,"column_end":32}},{"value":"/ let set: HashSet<i32> = HashSet::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":173364,"byte_end":173407,"line_start":130,"line_end":130,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":173412,"byte_end":173419,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":173460,"byte_end":173466,"line_start":132,"line_end":132,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":174036,"byte_end":174049,"line_start":152,"line_end":152,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<HashSet<T, DefaultHashBuilder>>::with_capacity","value":"fn (capacity: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates an empty `HashSet` with the specified capacity.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":173565,"byte_end":173624,"line_start":139,"line_end":139,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":173629,"byte_end":173632,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ The hash set will be able to hold at least `capacity` elements without","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":173637,"byte_end":173711,"line_start":141,"line_end":141,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash set will not allocate.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":173716,"byte_end":173785,"line_start":142,"line_end":142,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":173790,"byte_end":173793,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":173798,"byte_end":173812,"line_start":144,"line_end":144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":173817,"byte_end":173820,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":173825,"byte_end":173832,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":173837,"byte_end":173864,"line_start":147,"line_end":147,"column_start":5,"column_end":32}},{"value":"/ let set: HashSet<i32> = HashSet::with_capacity(10);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":173869,"byte_end":173924,"line_start":148,"line_end":148,"column_start":5,"column_end":60}},{"value":"/ assert!(set.capacity() >= 10);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":173929,"byte_end":173963,"line_start":149,"line_end":149,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":173968,"byte_end":173975,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":174016,"byte_end":174022,"line_start":151,"line_end":151,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":174519,"byte_end":174527,"line_start":170,"line_end":170,"column_start":12,"column_end":20},"name":"capacity","qualname":"<HashSet<T, S>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the set can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the set can hold without reallocating.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":174193,"byte_end":174266,"line_start":160,"line_end":160,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":174271,"byte_end":174274,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":174279,"byte_end":174293,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":174298,"byte_end":174301,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":174306,"byte_end":174313,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":174318,"byte_end":174345,"line_start":165,"line_end":165,"column_start":5,"column_end":32}},{"value":"/ let set: HashSet<i32> = HashSet::with_capacity(100);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":174350,"byte_end":174406,"line_start":166,"line_end":166,"column_start":5,"column_end":61}},{"value":"/ assert!(set.capacity() >= 100);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":174411,"byte_end":174446,"line_start":167,"line_end":167,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":174451,"byte_end":174458,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":174499,"byte_end":174505,"line_start":169,"line_end":169,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":175052,"byte_end":175056,"line_start":191,"line_end":191,"column_start":12,"column_end":16},"name":"iter","qualname":"<HashSet<T, S>>::iter","value":"fn (&self) -> Iter<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all elements in arbitrary order.\n The iterator element type is `&'a T`.","sig":null,"attributes":[{"value":"/ An iterator visiting all elements in arbitrary order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":174585,"byte_end":174642,"line_start":174,"line_end":174,"column_start":5,"column_end":62}},{"value":"/ The iterator element type is `&'a T`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":174647,"byte_end":174688,"line_start":175,"line_end":175,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":174693,"byte_end":174696,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":174701,"byte_end":174715,"line_start":177,"line_end":177,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":174720,"byte_end":174723,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":174728,"byte_end":174735,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":174740,"byte_end":174767,"line_start":180,"line_end":180,"column_start":5,"column_end":32}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":174772,"byte_end":174805,"line_start":181,"line_end":181,"column_start":5,"column_end":38}},{"value":"/ set.insert(\"a\");","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":174810,"byte_end":174830,"line_start":182,"line_end":182,"column_start":5,"column_end":25}},{"value":"/ set.insert(\"b\");","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":174835,"byte_end":174855,"line_start":183,"line_end":183,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":174860,"byte_end":174863,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ // Will print in an arbitrary order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":174868,"byte_end":174908,"line_start":185,"line_end":185,"column_start":5,"column_end":45}},{"value":"/ for x in set.iter() {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":174913,"byte_end":174938,"line_start":186,"line_end":186,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":174943,"byte_end":174969,"line_start":187,"line_end":187,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":174974,"byte_end":174979,"line_start":188,"line_end":188,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":174984,"byte_end":174991,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":175032,"byte_end":175038,"line_start":190,"line_end":190,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":175479,"byte_end":175482,"line_start":210,"line_end":210,"column_start":12,"column_end":15},"name":"len","qualname":"<HashSet<T, S>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the set.","sig":null,"attributes":[{"value":"/ Returns the number of elements in the set.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":175152,"byte_end":175198,"line_start":197,"line_end":197,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":175203,"byte_end":175206,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":175211,"byte_end":175225,"line_start":199,"line_end":199,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":175230,"byte_end":175233,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":175238,"byte_end":175245,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":175250,"byte_end":175277,"line_start":202,"line_end":202,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":175282,"byte_end":175285,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ let mut v = HashSet::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":175290,"byte_end":175321,"line_start":204,"line_end":204,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(v.len(), 0);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":175326,"byte_end":175353,"line_start":205,"line_end":205,"column_start":5,"column_end":32}},{"value":"/ v.insert(1);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":175358,"byte_end":175374,"line_start":206,"line_end":206,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(v.len(), 1);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":175379,"byte_end":175406,"line_start":207,"line_end":207,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":175411,"byte_end":175418,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":175459,"byte_end":175465,"line_start":209,"line_end":209,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":175866,"byte_end":175874,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<HashSet<T, S>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no elements.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":175535,"byte_end":175586,"line_start":214,"line_end":214,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":175591,"byte_end":175594,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":175599,"byte_end":175613,"line_start":216,"line_end":216,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":175618,"byte_end":175621,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":175626,"byte_end":175633,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":175638,"byte_end":175665,"line_start":219,"line_end":219,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":175670,"byte_end":175673,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ let mut v = HashSet::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":175678,"byte_end":175709,"line_start":221,"line_end":221,"column_start":5,"column_end":36}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":175714,"byte_end":175740,"line_start":222,"line_end":222,"column_start":5,"column_end":31}},{"value":"/ v.insert(1);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":175745,"byte_end":175761,"line_start":223,"line_end":223,"column_start":5,"column_end":21}},{"value":"/ assert!(!v.is_empty());","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":175766,"byte_end":175793,"line_start":224,"line_end":224,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":175798,"byte_end":175805,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":175846,"byte_end":175852,"line_start":226,"line_end":226,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176422,"byte_end":176427,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"drain","qualname":"<HashSet<T, S>>::drain","value":"fn (&mut self) -> Drain<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, returning all elements in an iterator.","sig":null,"attributes":[{"value":"/ Clears the set, returning all elements in an iterator.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":175931,"byte_end":175989,"line_start":231,"line_end":231,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":175994,"byte_end":175997,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176002,"byte_end":176016,"line_start":233,"line_end":233,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176021,"byte_end":176024,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176029,"byte_end":176036,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176041,"byte_end":176068,"line_start":236,"line_end":236,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176073,"byte_end":176076,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176081,"byte_end":176147,"line_start":238,"line_end":238,"column_start":5,"column_end":71}},{"value":"/ assert!(!set.is_empty());","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176152,"byte_end":176181,"line_start":239,"line_end":239,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176186,"byte_end":176189,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ // print 1, 2, 3 in an arbitrary order","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176194,"byte_end":176236,"line_start":241,"line_end":241,"column_start":5,"column_end":47}},{"value":"/ for i in set.drain() {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176241,"byte_end":176267,"line_start":242,"line_end":242,"column_start":5,"column_end":31}},{"value":"/     println!(\"{}\", i);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176272,"byte_end":176298,"line_start":243,"line_end":243,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176303,"byte_end":176308,"line_start":244,"line_end":244,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176313,"byte_end":176316,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ assert!(set.is_empty());","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176321,"byte_end":176349,"line_start":246,"line_end":246,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176354,"byte_end":176361,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176402,"byte_end":176408,"line_start":248,"line_end":248,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176837,"byte_end":176842,"line_start":268,"line_end":268,"column_start":12,"column_end":17},"name":"clear","qualname":"<HashSet<T, S>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all values.","sig":null,"attributes":[{"value":"/ Clears the set, removing all values.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176530,"byte_end":176570,"line_start":255,"line_end":255,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176575,"byte_end":176578,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176583,"byte_end":176597,"line_start":257,"line_end":257,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176602,"byte_end":176605,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176610,"byte_end":176617,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176622,"byte_end":176649,"line_start":260,"line_end":260,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176654,"byte_end":176657,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ let mut v = HashSet::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176662,"byte_end":176693,"line_start":262,"line_end":262,"column_start":5,"column_end":36}},{"value":"/ v.insert(1);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176698,"byte_end":176714,"line_start":263,"line_end":263,"column_start":5,"column_end":21}},{"value":"/ v.clear();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176719,"byte_end":176733,"line_start":264,"line_end":264,"column_start":5,"column_end":19}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176738,"byte_end":176764,"line_start":265,"line_end":265,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176769,"byte_end":176776,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176817,"byte_end":176823,"line_start":267,"line_end":267,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":177740,"byte_end":177751,"line_start":299,"line_end":299,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<HashSet<T, S>>::with_hasher","value":"fn (hasher: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty hash set which will use the given hasher to hash\n keys.","sig":null,"attributes":[{"value":"/ Creates a new empty hash set which will use the given hasher to hash","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176965,"byte_end":177037,"line_start":278,"line_end":278,"column_start":5,"column_end":77}},{"value":"/ keys.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":177042,"byte_end":177051,"line_start":279,"line_end":279,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":177056,"byte_end":177059,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ The hash set is also created with the default initial capacity.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":177064,"byte_end":177131,"line_start":281,"line_end":281,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":177136,"byte_end":177139,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Warning: `hasher` is normally randomly generated, and","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":177144,"byte_end":177201,"line_start":283,"line_end":283,"column_start":5,"column_end":62}},{"value":"/ is designed to allow `HashSet`s to be resistant to attacks that","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":177206,"byte_end":177273,"line_start":284,"line_end":284,"column_start":5,"column_end":72}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":177278,"byte_end":177341,"line_start":285,"line_end":285,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":177346,"byte_end":177410,"line_start":286,"line_end":286,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":177415,"byte_end":177418,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":177423,"byte_end":177437,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":177442,"byte_end":177445,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":177450,"byte_end":177457,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":177462,"byte_end":177489,"line_start":291,"line_end":291,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":177494,"byte_end":177542,"line_start":292,"line_end":292,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":177547,"byte_end":177550,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":177555,"byte_end":177597,"line_start":294,"line_end":294,"column_start":5,"column_end":47}},{"value":"/ let mut set = HashSet::with_hasher(s);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":177602,"byte_end":177644,"line_start":295,"line_end":295,"column_start":5,"column_end":47}},{"value":"/ set.insert(2);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":177649,"byte_end":177667,"line_start":296,"line_end":296,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":177672,"byte_end":177679,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":177720,"byte_end":177726,"line_start":298,"line_end":298,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":178743,"byte_end":178767,"line_start":327,"line_end":327,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<HashSet<T, S>>::with_capacity_and_hasher","value":"fn (capacity: usize, hasher: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet` with the specified capacity, using\n `hasher` to hash the keys.","sig":null,"attributes":[{"value":"/ Creates an empty `HashSet` with the specified capacity, using","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":177856,"byte_end":177921,"line_start":305,"line_end":305,"column_start":5,"column_end":70}},{"value":"/ `hasher` to hash the keys.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":177926,"byte_end":177956,"line_start":306,"line_end":306,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":177961,"byte_end":177964,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ The hash set will be able to hold at least `capacity` elements without","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":177969,"byte_end":178043,"line_start":308,"line_end":308,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash set will not allocate.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":178048,"byte_end":178117,"line_start":309,"line_end":309,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":178122,"byte_end":178125,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ Warning: `hasher` is normally randomly generated, and","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":178130,"byte_end":178187,"line_start":311,"line_end":311,"column_start":5,"column_end":62}},{"value":"/ is designed to allow `HashSet`s to be resistant to attacks that","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":178192,"byte_end":178259,"line_start":312,"line_end":312,"column_start":5,"column_end":72}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":178264,"byte_end":178327,"line_start":313,"line_end":313,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":178332,"byte_end":178396,"line_start":314,"line_end":314,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":178401,"byte_end":178404,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":178409,"byte_end":178423,"line_start":316,"line_end":316,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":178428,"byte_end":178431,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":178436,"byte_end":178443,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":178448,"byte_end":178475,"line_start":319,"line_end":319,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":178480,"byte_end":178528,"line_start":320,"line_end":320,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":178533,"byte_end":178536,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":178541,"byte_end":178583,"line_start":322,"line_end":322,"column_start":5,"column_end":47}},{"value":"/ let mut set = HashSet::with_capacity_and_hasher(10, s);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":178588,"byte_end":178647,"line_start":323,"line_end":323,"column_start":5,"column_end":64}},{"value":"/ set.insert(1);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":178652,"byte_end":178670,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":178675,"byte_end":178682,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":178723,"byte_end":178729,"line_start":326,"line_end":326,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":179439,"byte_end":179445,"line_start":348,"line_end":348,"column_start":12,"column_end":18},"name":"hasher","qualname":"<HashSet<T, S>>::hasher","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the set's [`BuildHasher`].","sig":null,"attributes":[{"value":"/ Returns a reference to the set's [`BuildHasher`].","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":178912,"byte_end":178965,"line_start":333,"line_end":333,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":178970,"byte_end":178973,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":178978,"byte_end":179056,"line_start":335,"line_end":335,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":179061,"byte_end":179064,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":179069,"byte_end":179083,"line_start":337,"line_end":337,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":179088,"byte_end":179091,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":179096,"byte_end":179103,"line_start":339,"line_end":339,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":179108,"byte_end":179135,"line_start":340,"line_end":340,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":179140,"byte_end":179188,"line_start":341,"line_end":341,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":179193,"byte_end":179196,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ let hasher = DefaultHashBuilder::default();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":179201,"byte_end":179248,"line_start":343,"line_end":343,"column_start":5,"column_end":52}},{"value":"/ let set: HashSet<i32> = HashSet::with_hasher(hasher);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":179253,"byte_end":179310,"line_start":344,"line_end":344,"column_start":5,"column_end":62}},{"value":"/ let hasher: &DefaultHashBuilder = set.hasher();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":179315,"byte_end":179366,"line_start":345,"line_end":345,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":179371,"byte_end":179378,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":179419,"byte_end":179425,"line_start":347,"line_end":347,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":180041,"byte_end":180048,"line_start":369,"line_end":369,"column_start":12,"column_end":19},"name":"reserve","qualname":"<HashSet<T, S>>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more elements to be inserted\n in the `HashSet`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more elements to be inserted","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":179498,"byte_end":179574,"line_start":352,"line_end":352,"column_start":5,"column_end":81}},{"value":"/ in the `HashSet`. The collection may reserve more space to avoid","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":179579,"byte_end":179647,"line_start":353,"line_end":353,"column_start":5,"column_end":73}},{"value":"/ frequent reallocations.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":179652,"byte_end":179679,"line_start":354,"line_end":354,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":179684,"byte_end":179687,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":179692,"byte_end":179704,"line_start":356,"line_end":356,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":179709,"byte_end":179712,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ Panics if the new allocation size overflows `usize`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":179717,"byte_end":179773,"line_start":358,"line_end":358,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":179778,"byte_end":179781,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":179786,"byte_end":179800,"line_start":360,"line_end":360,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":179805,"byte_end":179808,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":179813,"byte_end":179820,"line_start":362,"line_end":362,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":179825,"byte_end":179852,"line_start":363,"line_end":363,"column_start":5,"column_end":32}},{"value":"/ let mut set: HashSet<i32> = HashSet::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":179857,"byte_end":179904,"line_start":364,"line_end":364,"column_start":5,"column_end":52}},{"value":"/ set.reserve(10);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":179909,"byte_end":179929,"line_start":365,"line_end":365,"column_start":5,"column_end":25}},{"value":"/ assert!(set.capacity() >= 10);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":179934,"byte_end":179968,"line_start":366,"line_end":366,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":179973,"byte_end":179980,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":180021,"byte_end":180027,"line_start":368,"line_end":368,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":180755,"byte_end":180766,"line_start":390,"line_end":390,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<HashSet<T, S>>::try_reserve","value":"fn (&mut self, additional: usize) -> Result<(), CollectionAllocErr>","parent":null,"children":[],"decl_id":null,"docs":" Tries to reserve capacity for at least `additional` more elements to be inserted\n in the given `HashSet<K,V>`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"/ Tries to reserve capacity for at least `additional` more elements to be inserted","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":180129,"byte_end":180213,"line_start":373,"line_end":373,"column_start":5,"column_end":89}},{"value":"/ in the given `HashSet<K,V>`. The collection may reserve more space to avoid","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":180218,"byte_end":180297,"line_start":374,"line_end":374,"column_start":5,"column_end":84}},{"value":"/ frequent reallocations.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":180302,"byte_end":180329,"line_start":375,"line_end":375,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":180334,"byte_end":180337,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":180342,"byte_end":180354,"line_start":377,"line_end":377,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":180359,"byte_end":180362,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ If the capacity overflows, or the allocator reports a failure, then an error","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":180367,"byte_end":180447,"line_start":379,"line_end":379,"column_start":5,"column_end":85}},{"value":"/ is returned.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":180452,"byte_end":180468,"line_start":380,"line_end":380,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":180473,"byte_end":180476,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":180481,"byte_end":180495,"line_start":382,"line_end":382,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":180500,"byte_end":180503,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":180508,"byte_end":180515,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":180520,"byte_end":180547,"line_start":385,"line_end":385,"column_start":5,"column_end":32}},{"value":"/ let mut set: HashSet<i32> = HashSet::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":180552,"byte_end":180599,"line_start":386,"line_end":386,"column_start":5,"column_end":52}},{"value":"/ set.try_reserve(10).expect(\"why is the test harness OOMing on 10 bytes?\");","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":180604,"byte_end":180682,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":180687,"byte_end":180694,"line_start":388,"line_end":388,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":180735,"byte_end":180741,"line_start":389,"line_end":389,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":181466,"byte_end":181479,"line_start":411,"line_end":411,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<HashSet<T, S>>::shrink_to_fit","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the set as much as possible. It will drop\n down as much as possible while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the set as much as possible. It will drop","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":180885,"byte_end":180954,"line_start":394,"line_end":394,"column_start":5,"column_end":74}},{"value":"/ down as much as possible while maintaining the internal rules","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":180959,"byte_end":181024,"line_start":395,"line_end":395,"column_start":5,"column_end":70}},{"value":"/ and possibly leaving some space in accordance with the resize policy.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":181029,"byte_end":181102,"line_start":396,"line_end":396,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":181107,"byte_end":181110,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":181115,"byte_end":181129,"line_start":398,"line_end":398,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":181134,"byte_end":181137,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":181142,"byte_end":181149,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":181154,"byte_end":181181,"line_start":401,"line_end":401,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":181186,"byte_end":181189,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::with_capacity(100);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":181194,"byte_end":181240,"line_start":403,"line_end":403,"column_start":5,"column_end":51}},{"value":"/ set.insert(1);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":181245,"byte_end":181263,"line_start":404,"line_end":404,"column_start":5,"column_end":23}},{"value":"/ set.insert(2);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":181268,"byte_end":181286,"line_start":405,"line_end":405,"column_start":5,"column_end":23}},{"value":"/ assert!(set.capacity() >= 100);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":181291,"byte_end":181326,"line_start":406,"line_end":406,"column_start":5,"column_end":40}},{"value":"/ set.shrink_to_fit();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":181331,"byte_end":181355,"line_start":407,"line_end":407,"column_start":5,"column_end":29}},{"value":"/ assert!(set.capacity() >= 2);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":181360,"byte_end":181393,"line_start":408,"line_end":408,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":181398,"byte_end":181405,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":181446,"byte_end":181452,"line_start":410,"line_end":410,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":182295,"byte_end":182304,"line_start":437,"line_end":437,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<HashSet<T, S>>::shrink_to","value":"fn (&mut self, min_capacity: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the set with a lower limit. It will drop\n down no lower than the supplied limit while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the set with a lower limit. It will drop","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":181537,"byte_end":181605,"line_start":415,"line_end":415,"column_start":5,"column_end":73}},{"value":"/ down no lower than the supplied limit while maintaining the internal rules","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":181610,"byte_end":181688,"line_start":416,"line_end":416,"column_start":5,"column_end":83}},{"value":"/ and possibly leaving some space in accordance with the resize policy.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":181693,"byte_end":181766,"line_start":417,"line_end":417,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":181771,"byte_end":181774,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ Panics if the current capacity is smaller than the supplied","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":181779,"byte_end":181842,"line_start":419,"line_end":419,"column_start":5,"column_end":68}},{"value":"/ minimum capacity.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":181847,"byte_end":181868,"line_start":420,"line_end":420,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":181873,"byte_end":181876,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":181881,"byte_end":181895,"line_start":422,"line_end":422,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":181900,"byte_end":181903,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":181908,"byte_end":181915,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":181920,"byte_end":181947,"line_start":425,"line_end":425,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":181952,"byte_end":181955,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::with_capacity(100);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":181960,"byte_end":182006,"line_start":427,"line_end":427,"column_start":5,"column_end":51}},{"value":"/ set.insert(1);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":182011,"byte_end":182029,"line_start":428,"line_end":428,"column_start":5,"column_end":23}},{"value":"/ set.insert(2);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":182034,"byte_end":182052,"line_start":429,"line_end":429,"column_start":5,"column_end":23}},{"value":"/ assert!(set.capacity() >= 100);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":182057,"byte_end":182092,"line_start":430,"line_end":430,"column_start":5,"column_end":40}},{"value":"/ set.shrink_to(10);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":182097,"byte_end":182119,"line_start":431,"line_end":431,"column_start":5,"column_end":27}},{"value":"/ assert!(set.capacity() >= 10);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":182124,"byte_end":182158,"line_start":432,"line_end":432,"column_start":5,"column_end":39}},{"value":"/ set.shrink_to(0);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":182163,"byte_end":182184,"line_start":433,"line_end":433,"column_start":5,"column_end":26}},{"value":"/ assert!(set.capacity() >= 2);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":182189,"byte_end":182222,"line_start":434,"line_end":434,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":182227,"byte_end":182234,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":182275,"byte_end":182281,"line_start":436,"line_end":436,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":183246,"byte_end":183256,"line_start":465,"line_end":465,"column_start":12,"column_end":22},"name":"difference","qualname":"<HashSet<T, S>>::difference","value":"fn <'a> (&'a self, other: &'a Self) -> Difference<'a, T, S>","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the difference,\n i.e., the values that are in `self` but not in `other`.","sig":null,"attributes":[{"value":"/ Visits the values representing the difference,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":182391,"byte_end":182441,"line_start":441,"line_end":441,"column_start":5,"column_end":55}},{"value":"/ i.e., the values that are in `self` but not in `other`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":182446,"byte_end":182505,"line_start":442,"line_end":442,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":182510,"byte_end":182513,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":182518,"byte_end":182532,"line_start":444,"line_end":444,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":182537,"byte_end":182540,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":182545,"byte_end":182552,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":182557,"byte_end":182584,"line_start":447,"line_end":447,"column_start":5,"column_end":32}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":182589,"byte_end":182649,"line_start":448,"line_end":448,"column_start":5,"column_end":65}},{"value":"/ let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":182654,"byte_end":182717,"line_start":449,"line_end":449,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":182722,"byte_end":182725,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ // Can be seen as `a - b`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":182730,"byte_end":182760,"line_start":451,"line_end":451,"column_start":5,"column_end":35}},{"value":"/ for x in a.difference(&b) {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":182765,"byte_end":182796,"line_start":452,"line_end":452,"column_start":5,"column_end":36}},{"value":"/     println!(\"{}\", x); // Print 1","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":182801,"byte_end":182838,"line_start":453,"line_end":453,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":182843,"byte_end":182848,"line_start":454,"line_end":454,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":182853,"byte_end":182856,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let diff: HashSet<_> = a.difference(&b).collect();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":182861,"byte_end":182915,"line_start":456,"line_end":456,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(diff, [1].iter().collect());","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":182920,"byte_end":182963,"line_start":457,"line_end":457,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":182968,"byte_end":182971,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ // Note that difference is not symmetric,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":182976,"byte_end":183021,"line_start":459,"line_end":459,"column_start":5,"column_end":50}},{"value":"/ // and `b - a` means something else:","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":183026,"byte_end":183066,"line_start":460,"line_end":460,"column_start":5,"column_end":45}},{"value":"/ let diff: HashSet<_> = b.difference(&a).collect();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":183071,"byte_end":183125,"line_start":461,"line_end":461,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(diff, [4].iter().collect());","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":183130,"byte_end":183173,"line_start":462,"line_end":462,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":183178,"byte_end":183185,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":183226,"byte_end":183232,"line_start":464,"line_end":464,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":184205,"byte_end":184225,"line_start":494,"line_end":494,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<HashSet<T, S>>::symmetric_difference","value":"fn <'a> (&'a self, other: &'a Self) -> SymmetricDifference<'a, T, S>","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the symmetric difference,\n i.e., the values that are in `self` or in `other` but not in both.","sig":null,"attributes":[{"value":"/ Visits the values representing the symmetric difference,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":183406,"byte_end":183466,"line_start":472,"line_end":472,"column_start":5,"column_end":65}},{"value":"/ i.e., the values that are in `self` or in `other` but not in both.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":183471,"byte_end":183541,"line_start":473,"line_end":473,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":183546,"byte_end":183549,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":183554,"byte_end":183568,"line_start":475,"line_end":475,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":183573,"byte_end":183576,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":183581,"byte_end":183588,"line_start":477,"line_end":477,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":183593,"byte_end":183620,"line_start":478,"line_end":478,"column_start":5,"column_end":32}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":183625,"byte_end":183685,"line_start":479,"line_end":479,"column_start":5,"column_end":65}},{"value":"/ let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":183690,"byte_end":183753,"line_start":480,"line_end":480,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":183758,"byte_end":183761,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ // Print 1, 4 in arbitrary order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":183766,"byte_end":183803,"line_start":482,"line_end":482,"column_start":5,"column_end":42}},{"value":"/ for x in a.symmetric_difference(&b) {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":183808,"byte_end":183849,"line_start":483,"line_end":483,"column_start":5,"column_end":46}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":183854,"byte_end":183880,"line_start":484,"line_end":484,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":183885,"byte_end":183890,"line_start":485,"line_end":485,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":183895,"byte_end":183898,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ let diff1: HashSet<_> = a.symmetric_difference(&b).collect();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":183903,"byte_end":183968,"line_start":487,"line_end":487,"column_start":5,"column_end":70}},{"value":"/ let diff2: HashSet<_> = b.symmetric_difference(&a).collect();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":183973,"byte_end":184038,"line_start":488,"line_end":488,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":184043,"byte_end":184046,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(diff1, diff2);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":184051,"byte_end":184080,"line_start":490,"line_end":490,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(diff1, [1, 4].iter().collect());","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":184085,"byte_end":184132,"line_start":491,"line_end":491,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":184137,"byte_end":184144,"line_start":492,"line_end":492,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":184185,"byte_end":184191,"line_start":493,"line_end":493,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":185079,"byte_end":185091,"line_start":519,"line_end":519,"column_start":12,"column_end":24},"name":"intersection","qualname":"<HashSet<T, S>>::intersection","value":"fn <'a> (&'a self, other: &'a Self) -> Intersection<'a, T, S>","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the intersection,\n i.e., the values that are both in `self` and `other`.","sig":null,"attributes":[{"value":"/ Visits the values representing the intersection,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":184415,"byte_end":184467,"line_start":500,"line_end":500,"column_start":5,"column_end":57}},{"value":"/ i.e., the values that are both in `self` and `other`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":184472,"byte_end":184529,"line_start":501,"line_end":501,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":184534,"byte_end":184537,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":184542,"byte_end":184556,"line_start":503,"line_end":503,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":184561,"byte_end":184564,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":184569,"byte_end":184576,"line_start":505,"line_end":505,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":184581,"byte_end":184608,"line_start":506,"line_end":506,"column_start":5,"column_end":32}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":184613,"byte_end":184673,"line_start":507,"line_end":507,"column_start":5,"column_end":65}},{"value":"/ let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":184678,"byte_end":184741,"line_start":508,"line_end":508,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":184746,"byte_end":184749,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ // Print 2, 3 in arbitrary order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":184754,"byte_end":184791,"line_start":510,"line_end":510,"column_start":5,"column_end":42}},{"value":"/ for x in a.intersection(&b) {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":184796,"byte_end":184829,"line_start":511,"line_end":511,"column_start":5,"column_end":38}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":184834,"byte_end":184860,"line_start":512,"line_end":512,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":184865,"byte_end":184870,"line_start":513,"line_end":513,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":184875,"byte_end":184878,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ let intersection: HashSet<_> = a.intersection(&b).collect();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":184883,"byte_end":184947,"line_start":515,"line_end":515,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(intersection, [2, 3].iter().collect());","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":184952,"byte_end":185006,"line_start":516,"line_end":516,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":185011,"byte_end":185018,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":185059,"byte_end":185065,"line_start":518,"line_end":518,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":185895,"byte_end":185900,"line_start":545,"line_end":545,"column_start":12,"column_end":17},"name":"union","qualname":"<HashSet<T, S>>::union","value":"fn <'a> (&'a self, other: &'a Self) -> Union<'a, T, S>","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the union,\n i.e., all the values in `self` or `other`, without duplicates.","sig":null,"attributes":[{"value":"/ Visits the values representing the union,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":185245,"byte_end":185290,"line_start":526,"line_end":526,"column_start":5,"column_end":50}},{"value":"/ i.e., all the values in `self` or `other`, without duplicates.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":185295,"byte_end":185361,"line_start":527,"line_end":527,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":185366,"byte_end":185369,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":185374,"byte_end":185388,"line_start":529,"line_end":529,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":185393,"byte_end":185396,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":185401,"byte_end":185408,"line_start":531,"line_end":531,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":185413,"byte_end":185440,"line_start":532,"line_end":532,"column_start":5,"column_end":32}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":185445,"byte_end":185505,"line_start":533,"line_end":533,"column_start":5,"column_end":65}},{"value":"/ let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":185510,"byte_end":185573,"line_start":534,"line_end":534,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":185578,"byte_end":185581,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ // Print 1, 2, 3, 4 in arbitrary order.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":185586,"byte_end":185629,"line_start":536,"line_end":536,"column_start":5,"column_end":48}},{"value":"/ for x in a.union(&b) {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":185634,"byte_end":185660,"line_start":537,"line_end":537,"column_start":5,"column_end":31}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":185665,"byte_end":185691,"line_start":538,"line_end":538,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":185696,"byte_end":185701,"line_start":539,"line_end":539,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":185706,"byte_end":185709,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ let union: HashSet<_> = a.union(&b).collect();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":185714,"byte_end":185764,"line_start":541,"line_end":541,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(union, [1, 2, 3, 4].iter().collect());","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":185769,"byte_end":185822,"line_start":542,"line_end":542,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":185827,"byte_end":185834,"line_start":543,"line_end":543,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":185875,"byte_end":185881,"line_start":544,"line_end":544,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":186731,"byte_end":186739,"line_start":570,"line_end":570,"column_start":12,"column_end":20},"name":"contains","qualname":"<HashSet<T, S>>::contains","value":"fn <Q> (&self, value: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains a value.","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains a value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":186051,"byte_end":186098,"line_start":551,"line_end":551,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":186103,"byte_end":186106,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":186111,"byte_end":186178,"line_start":553,"line_end":553,"column_start":5,"column_end":72}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":186183,"byte_end":186250,"line_start":554,"line_end":554,"column_start":5,"column_end":72}},{"value":"/ the value type.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":186255,"byte_end":186274,"line_start":555,"line_end":555,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":186279,"byte_end":186282,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":186287,"byte_end":186301,"line_start":557,"line_end":557,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":186306,"byte_end":186309,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":186314,"byte_end":186321,"line_start":559,"line_end":559,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":186326,"byte_end":186353,"line_start":560,"line_end":560,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":186358,"byte_end":186361,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ let set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":186366,"byte_end":186428,"line_start":562,"line_end":562,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(set.contains(&1), true);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":186433,"byte_end":186472,"line_start":563,"line_end":563,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(set.contains(&4), false);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":186477,"byte_end":186517,"line_start":564,"line_end":564,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":186522,"byte_end":186529,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":186534,"byte_end":186537,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":186542,"byte_end":186601,"line_start":567,"line_end":567,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":186606,"byte_end":186670,"line_start":568,"line_end":568,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":186711,"byte_end":186717,"line_start":569,"line_end":569,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":187601,"byte_end":187604,"line_start":597,"line_end":597,"column_start":12,"column_end":15},"name":"get","qualname":"<HashSet<T, S>>::get","value":"fn <Q> (&self, value: &Q) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value in the set, if any, that is equal to the given value.","sig":null,"attributes":[{"value":"/ Returns a reference to the value in the set, if any, that is equal to the given value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":186885,"byte_end":186975,"line_start":578,"line_end":578,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":186980,"byte_end":186983,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":186988,"byte_end":187055,"line_start":580,"line_end":580,"column_start":5,"column_end":72}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":187060,"byte_end":187127,"line_start":581,"line_end":581,"column_start":5,"column_end":72}},{"value":"/ the value type.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":187132,"byte_end":187151,"line_start":582,"line_end":582,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":187156,"byte_end":187159,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":187164,"byte_end":187178,"line_start":584,"line_end":584,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":187183,"byte_end":187186,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":187191,"byte_end":187198,"line_start":586,"line_end":586,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":187203,"byte_end":187230,"line_start":587,"line_end":587,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":187235,"byte_end":187238,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ let set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":187243,"byte_end":187305,"line_start":589,"line_end":589,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(set.get(&2), Some(&2));","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":187310,"byte_end":187348,"line_start":590,"line_end":590,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(set.get(&4), None);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":187353,"byte_end":187387,"line_start":591,"line_end":591,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":187392,"byte_end":187399,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":187404,"byte_end":187407,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":187412,"byte_end":187471,"line_start":594,"line_end":594,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":187476,"byte_end":187540,"line_start":595,"line_end":595,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":187581,"byte_end":187587,"line_start":596,"line_end":596,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":188310,"byte_end":188323,"line_start":620,"line_end":620,"column_start":12,"column_end":25},"name":"get_or_insert","qualname":"<HashSet<T, S>>::get_or_insert","value":"fn (&mut self, value: T) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Inserts the given `value` into the set if it is not present, then\n returns a reference to the value in the set.","sig":null,"attributes":[{"value":"/ Inserts the given `value` into the set if it is not present, then","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":187773,"byte_end":187842,"line_start":605,"line_end":605,"column_start":5,"column_end":74}},{"value":"/ returns a reference to the value in the set.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":187847,"byte_end":187895,"line_start":606,"line_end":606,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":187900,"byte_end":187903,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":187908,"byte_end":187922,"line_start":608,"line_end":608,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":187927,"byte_end":187930,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":187935,"byte_end":187942,"line_start":610,"line_end":610,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":187947,"byte_end":187974,"line_start":611,"line_end":611,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":187979,"byte_end":187982,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":187987,"byte_end":188053,"line_start":613,"line_end":613,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":188058,"byte_end":188087,"line_start":614,"line_end":614,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(set.get_or_insert(2), &2);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":188092,"byte_end":188133,"line_start":615,"line_end":615,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(set.get_or_insert(100), &100);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":188138,"byte_end":188183,"line_start":616,"line_end":616,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(set.len(), 4); // 100 was inserted","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":188188,"byte_end":188237,"line_start":617,"line_end":617,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":188242,"byte_end":188249,"line_start":618,"line_end":618,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":188290,"byte_end":188296,"line_start":619,"line_end":619,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":189369,"byte_end":189387,"line_start":649,"line_end":649,"column_start":12,"column_end":30},"name":"get_or_insert_with","qualname":"<HashSet<T, S>>::get_or_insert_with","value":"fn <Q, F> (&mut self, value: &Q, f: F) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Inserts a value computed from `f` into the set if the given `value` is\n not present, then returns a reference to the value in the set.","sig":null,"attributes":[{"value":"/ Inserts a value computed from `f` into the set if the given `value` is","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":188678,"byte_end":188752,"line_start":630,"line_end":630,"column_start":5,"column_end":79}},{"value":"/ not present, then returns a reference to the value in the set.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":188757,"byte_end":188823,"line_start":631,"line_end":631,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":188828,"byte_end":188831,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":188836,"byte_end":188850,"line_start":633,"line_end":633,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":188855,"byte_end":188858,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":188863,"byte_end":188870,"line_start":635,"line_end":635,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":188875,"byte_end":188902,"line_start":636,"line_end":636,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":188907,"byte_end":188910,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<String> = [\"cat\", \"dog\", \"horse\"]","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":188915,"byte_end":188973,"line_start":638,"line_end":638,"column_start":5,"column_end":63}},{"value":"/     .iter().map(|&pet| pet.to_owned()).collect();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":188978,"byte_end":189031,"line_start":639,"line_end":639,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":189036,"byte_end":189039,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":189044,"byte_end":189073,"line_start":641,"line_end":641,"column_start":5,"column_end":34}},{"value":"/ for &pet in &[\"cat\", \"dog\", \"fish\"] {","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":189078,"byte_end":189119,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/     let value = set.get_or_insert_with(pet, str::to_owned);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":189124,"byte_end":189187,"line_start":643,"line_end":643,"column_start":5,"column_end":68}},{"value":"/     assert_eq!(value, pet);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":189192,"byte_end":189223,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":189228,"byte_end":189233,"line_start":645,"line_end":645,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(set.len(), 4); // a new \"fish\" was inserted","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":189238,"byte_end":189296,"line_start":646,"line_end":646,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":189301,"byte_end":189308,"line_start":647,"line_end":647,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":189349,"byte_end":189355,"line_start":648,"line_end":648,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":190393,"byte_end":190404,"line_start":681,"line_end":681,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<HashSet<T, S>>::is_disjoint","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`.\n This is equivalent to checking for an empty intersection.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` has no elements in common with `other`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":189861,"byte_end":189929,"line_start":664,"line_end":664,"column_start":5,"column_end":73}},{"value":"/ This is equivalent to checking for an empty intersection.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":189934,"byte_end":189995,"line_start":665,"line_end":665,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":190000,"byte_end":190003,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":190008,"byte_end":190022,"line_start":667,"line_end":667,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":190027,"byte_end":190030,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":190035,"byte_end":190042,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":190047,"byte_end":190074,"line_start":670,"line_end":670,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":190079,"byte_end":190082,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":190087,"byte_end":190147,"line_start":672,"line_end":672,"column_start":5,"column_end":65}},{"value":"/ let mut b = HashSet::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":190152,"byte_end":190183,"line_start":673,"line_end":673,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":190188,"byte_end":190191,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.is_disjoint(&b), true);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":190196,"byte_end":190236,"line_start":675,"line_end":675,"column_start":5,"column_end":45}},{"value":"/ b.insert(4);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":190241,"byte_end":190257,"line_start":676,"line_end":676,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(a.is_disjoint(&b), true);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":190262,"byte_end":190302,"line_start":677,"line_end":677,"column_start":5,"column_end":45}},{"value":"/ b.insert(1);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":190307,"byte_end":190323,"line_start":678,"line_end":678,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(a.is_disjoint(&b), false);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":190328,"byte_end":190369,"line_start":679,"line_end":679,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":190374,"byte_end":190381,"line_start":680,"line_end":680,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":191026,"byte_end":191035,"line_start":702,"line_end":702,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<HashSet<T, S>>::is_subset","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a subset of another,\n i.e., `other` contains at least all the values in `self`.","sig":null,"attributes":[{"value":"/ Returns `true` if the set is a subset of another,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":190495,"byte_end":190548,"line_start":685,"line_end":685,"column_start":5,"column_end":58}},{"value":"/ i.e., `other` contains at least all the values in `self`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":190553,"byte_end":190614,"line_start":686,"line_end":686,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":190619,"byte_end":190622,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":190627,"byte_end":190641,"line_start":688,"line_end":688,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":190646,"byte_end":190649,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":190654,"byte_end":190661,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":190666,"byte_end":190693,"line_start":691,"line_end":691,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":190698,"byte_end":190701,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ let sup: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":190706,"byte_end":190768,"line_start":693,"line_end":693,"column_start":5,"column_end":67}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":190773,"byte_end":190806,"line_start":694,"line_end":694,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":190811,"byte_end":190814,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.is_subset(&sup), true);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":190819,"byte_end":190861,"line_start":696,"line_end":696,"column_start":5,"column_end":47}},{"value":"/ set.insert(2);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":190866,"byte_end":190884,"line_start":697,"line_end":697,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_subset(&sup), true);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":190889,"byte_end":190931,"line_start":698,"line_end":698,"column_start":5,"column_end":47}},{"value":"/ set.insert(4);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":190936,"byte_end":190954,"line_start":699,"line_end":699,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_subset(&sup), false);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":190959,"byte_end":191002,"line_start":700,"line_end":700,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":191007,"byte_end":191014,"line_start":701,"line_end":701,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":191838,"byte_end":191849,"line_start":731,"line_end":731,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<HashSet<T, S>>::is_superset","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a superset of another,\n i.e., `self` contains at least all the values in `other`.","sig":null,"attributes":[{"value":"/ Returns `true` if the set is a superset of another,","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":191213,"byte_end":191268,"line_start":710,"line_end":710,"column_start":5,"column_end":60}},{"value":"/ i.e., `self` contains at least all the values in `other`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":191273,"byte_end":191334,"line_start":711,"line_end":711,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":191339,"byte_end":191342,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":191347,"byte_end":191361,"line_start":713,"line_end":713,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":191366,"byte_end":191369,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":191374,"byte_end":191381,"line_start":715,"line_end":715,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":191386,"byte_end":191413,"line_start":716,"line_end":716,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":191418,"byte_end":191421,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ let sub: HashSet<_> = [1, 2].iter().cloned().collect();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":191426,"byte_end":191485,"line_start":718,"line_end":718,"column_start":5,"column_end":64}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":191490,"byte_end":191523,"line_start":719,"line_end":719,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":191528,"byte_end":191531,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.is_superset(&sub), false);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":191536,"byte_end":191581,"line_start":721,"line_end":721,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":191586,"byte_end":191589,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ set.insert(0);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":191594,"byte_end":191612,"line_start":723,"line_end":723,"column_start":5,"column_end":23}},{"value":"/ set.insert(1);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":191617,"byte_end":191635,"line_start":724,"line_end":724,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_superset(&sub), false);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":191640,"byte_end":191685,"line_start":725,"line_end":725,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":191690,"byte_end":191693,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ set.insert(2);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":191698,"byte_end":191716,"line_start":727,"line_end":727,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_superset(&sub), true);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":191721,"byte_end":191765,"line_start":728,"line_end":728,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":191770,"byte_end":191777,"line_start":729,"line_end":729,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":191818,"byte_end":191824,"line_start":730,"line_end":730,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":192430,"byte_end":192436,"line_start":753,"line_end":753,"column_start":12,"column_end":18},"name":"insert","qualname":"<HashSet<T, S>>::insert","value":"fn (&mut self, value: T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set.","sig":null,"attributes":[{"value":"/ Adds a value to the set.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":191922,"byte_end":191950,"line_start":735,"line_end":735,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":191955,"byte_end":191958,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ If the set did not have this value present, `true` is returned.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":191963,"byte_end":192030,"line_start":737,"line_end":737,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":192035,"byte_end":192038,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ If the set did have this value present, `false` is returned.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":192043,"byte_end":192107,"line_start":739,"line_end":739,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":192112,"byte_end":192115,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":192120,"byte_end":192134,"line_start":741,"line_end":741,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":192139,"byte_end":192142,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":192147,"byte_end":192154,"line_start":743,"line_end":743,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":192159,"byte_end":192186,"line_start":744,"line_end":744,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":192191,"byte_end":192194,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":192199,"byte_end":192232,"line_start":746,"line_end":746,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":192237,"byte_end":192240,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.insert(2), true);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":192245,"byte_end":192281,"line_start":748,"line_end":748,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(set.insert(2), false);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":192286,"byte_end":192323,"line_start":749,"line_end":749,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(set.len(), 1);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":192328,"byte_end":192357,"line_start":750,"line_end":750,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":192362,"byte_end":192369,"line_start":751,"line_end":751,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":192410,"byte_end":192416,"line_start":752,"line_end":752,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":193071,"byte_end":193078,"line_start":773,"line_end":773,"column_start":12,"column_end":19},"name":"replace","qualname":"<HashSet<T, S>>::replace","value":"fn (&mut self, value: T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set, replacing the existing value, if any, that is equal to the given\n one. Returns the replaced value.","sig":null,"attributes":[{"value":"/ Adds a value to the set, replacing the existing value, if any, that is equal to the given","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":192524,"byte_end":192617,"line_start":757,"line_end":757,"column_start":5,"column_end":98}},{"value":"/ one. Returns the replaced value.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":192622,"byte_end":192658,"line_start":758,"line_end":758,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":192663,"byte_end":192666,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":192671,"byte_end":192685,"line_start":760,"line_end":760,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":192690,"byte_end":192693,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":192698,"byte_end":192705,"line_start":762,"line_end":762,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":192710,"byte_end":192737,"line_start":763,"line_end":763,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":192742,"byte_end":192745,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":192750,"byte_end":192783,"line_start":765,"line_end":765,"column_start":5,"column_end":38}},{"value":"/ set.insert(Vec::<i32>::new());","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":192788,"byte_end":192822,"line_start":766,"line_end":766,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":192827,"byte_end":192830,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.get(&[][..]).unwrap().capacity(), 0);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":192835,"byte_end":192891,"line_start":768,"line_end":768,"column_start":5,"column_end":61}},{"value":"/ set.replace(Vec::with_capacity(10));","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":192896,"byte_end":192936,"line_start":769,"line_end":769,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(set.get(&[][..]).unwrap().capacity(), 10);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":192941,"byte_end":192998,"line_start":770,"line_end":770,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":193003,"byte_end":193010,"line_start":771,"line_end":771,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":193051,"byte_end":193057,"line_start":772,"line_end":772,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":194086,"byte_end":194092,"line_start":805,"line_end":805,"column_start":12,"column_end":18},"name":"remove","qualname":"<HashSet<T, S>>::remove","value":"fn <Q> (&mut self, value: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Removes a value from the set. Returns whether the value was\n present in the set.","sig":null,"attributes":[{"value":"/ Removes a value from the set. Returns whether the value was","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":193364,"byte_end":193427,"line_start":783,"line_end":783,"column_start":5,"column_end":68}},{"value":"/ present in the set.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":193432,"byte_end":193455,"line_start":784,"line_end":784,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":193460,"byte_end":193463,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":193468,"byte_end":193535,"line_start":786,"line_end":786,"column_start":5,"column_end":72}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":193540,"byte_end":193607,"line_start":787,"line_end":787,"column_start":5,"column_end":72}},{"value":"/ the value type.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":193612,"byte_end":193631,"line_start":788,"line_end":788,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":193636,"byte_end":193639,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":193644,"byte_end":193658,"line_start":790,"line_end":790,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":193663,"byte_end":193666,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":193671,"byte_end":193678,"line_start":792,"line_end":792,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":193683,"byte_end":193710,"line_start":793,"line_end":793,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":193715,"byte_end":193718,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":193723,"byte_end":193756,"line_start":795,"line_end":795,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":193761,"byte_end":193764,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ set.insert(2);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":193769,"byte_end":193787,"line_start":797,"line_end":797,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.remove(&2), true);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":193792,"byte_end":193829,"line_start":798,"line_end":798,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(set.remove(&2), false);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":193834,"byte_end":193872,"line_start":799,"line_end":799,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":193877,"byte_end":193884,"line_start":800,"line_end":800,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":193889,"byte_end":193892,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":193897,"byte_end":193956,"line_start":802,"line_end":802,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":193961,"byte_end":194025,"line_start":803,"line_end":803,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":194066,"byte_end":194072,"line_start":804,"line_end":804,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":194962,"byte_end":194966,"line_start":832,"line_end":832,"column_start":12,"column_end":16},"name":"take","qualname":"<HashSet<T, S>>::take","value":"fn <Q> (&mut self, value: &Q) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the given one.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":194246,"byte_end":194331,"line_start":813,"line_end":813,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":194336,"byte_end":194339,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":194344,"byte_end":194411,"line_start":815,"line_end":815,"column_start":5,"column_end":72}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":194416,"byte_end":194483,"line_start":816,"line_end":816,"column_start":5,"column_end":72}},{"value":"/ the value type.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":194488,"byte_end":194507,"line_start":817,"line_end":817,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":194512,"byte_end":194515,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":194520,"byte_end":194534,"line_start":819,"line_end":819,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":194539,"byte_end":194542,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":194547,"byte_end":194554,"line_start":821,"line_end":821,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":194559,"byte_end":194586,"line_start":822,"line_end":822,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":194591,"byte_end":194594,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":194599,"byte_end":194665,"line_start":824,"line_end":824,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(set.take(&2), Some(2));","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":194670,"byte_end":194708,"line_start":825,"line_end":825,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(set.take(&2), None);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":194713,"byte_end":194748,"line_start":826,"line_end":826,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":194753,"byte_end":194760,"line_start":827,"line_end":827,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":194765,"byte_end":194768,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":194773,"byte_end":194832,"line_start":829,"line_end":829,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":194837,"byte_end":194901,"line_start":830,"line_end":830,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":194942,"byte_end":194948,"line_start":831,"line_end":831,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":195565,"byte_end":195571,"line_start":854,"line_end":854,"column_start":12,"column_end":18},"name":"retain","qualname":"<HashSet<T, S>>::retain","value":"fn <F> (&mut self, mut f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Retains only the elements specified by the predicate.","sig":null,"attributes":[{"value":"/ Retains only the elements specified by the predicate.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":195137,"byte_end":195194,"line_start":840,"line_end":840,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":195199,"byte_end":195202,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ In other words, remove all elements `e` such that `f(&e)` returns `false`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":195207,"byte_end":195285,"line_start":842,"line_end":842,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":195290,"byte_end":195293,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":195298,"byte_end":195312,"line_start":844,"line_end":844,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":195317,"byte_end":195320,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":195325,"byte_end":195332,"line_start":846,"line_end":846,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":195337,"byte_end":195364,"line_start":847,"line_end":847,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":195369,"byte_end":195372,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ let xs = [1,2,3,4,5,6];","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":195377,"byte_end":195404,"line_start":849,"line_end":849,"column_start":5,"column_end":32}},{"value":"/ let mut set: HashSet<i32> = xs.iter().cloned().collect();","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":195409,"byte_end":195470,"line_start":850,"line_end":850,"column_start":5,"column_end":66}},{"value":"/ set.retain(|&k| k % 2 == 0);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":195475,"byte_end":195507,"line_start":851,"line_end":851,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":195512,"byte_end":195541,"line_start":852,"line_end":852,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":195546,"byte_end":195553,"line_start":853,"line_end":853,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1042},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":200944,"byte_end":200948,"line_start":1077,"line_end":1077,"column_start":12,"column_end":16},"name":"Iter","qualname":"::set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1045}],"decl_id":null,"docs":" An iterator over the items of a `HashSet`.","sig":null,"attributes":[{"value":"/ An iterator over the items of a `HashSet`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":200691,"byte_end":200737,"line_start":1070,"line_end":1070,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":200738,"byte_end":200741,"line_start":1071,"line_end":1071,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`HashSet`].","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":200742,"byte_end":200809,"line_start":1072,"line_end":1072,"column_start":1,"column_end":68}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":200810,"byte_end":200845,"line_start":1073,"line_end":1073,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":200846,"byte_end":200849,"line_start":1074,"line_end":1074,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":200850,"byte_end":200886,"line_start":1075,"line_end":1075,"column_start":1,"column_end":37}},{"value":"/ [`iter`]: struct.HashSet.html#method.iter","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":200887,"byte_end":200932,"line_start":1076,"line_end":1076,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1046},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":201313,"byte_end":201321,"line_start":1088,"line_end":1088,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":1048}],"decl_id":null,"docs":" An owning iterator over the items of a `HashSet`.","sig":null,"attributes":[{"value":"/ An owning iterator over the items of a `HashSet`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":200988,"byte_end":201041,"line_start":1081,"line_end":1081,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":201042,"byte_end":201045,"line_start":1082,"line_end":1082,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`HashSet`][`HashSet`]","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":201046,"byte_end":201128,"line_start":1083,"line_end":1083,"column_start":1,"column_end":83}},{"value":"/ (provided by the `IntoIterator` trait). See its documentation for more.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":201129,"byte_end":201204,"line_start":1084,"line_end":1084,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":201205,"byte_end":201208,"line_start":1085,"line_end":1085,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":201209,"byte_end":201245,"line_start":1086,"line_end":1086,"column_start":1,"column_end":37}},{"value":"/ [`into_iter`]: struct.HashSet.html#method.into_iter","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":201246,"byte_end":201301,"line_start":1087,"line_end":1087,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1049},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":201626,"byte_end":201631,"line_start":1099,"line_end":1099,"column_start":12,"column_end":17},"name":"Drain","qualname":"::set::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":1052}],"decl_id":null,"docs":" A draining iterator over the items of a `HashSet`.","sig":null,"attributes":[{"value":"/ A draining iterator over the items of a `HashSet`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":201362,"byte_end":201416,"line_start":1092,"line_end":1092,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":201417,"byte_end":201420,"line_start":1093,"line_end":1093,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`HashSet`].","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":201421,"byte_end":201489,"line_start":1094,"line_end":1094,"column_start":1,"column_end":69}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":201490,"byte_end":201525,"line_start":1095,"line_end":1095,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":201526,"byte_end":201529,"line_start":1096,"line_end":1096,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":201530,"byte_end":201566,"line_start":1097,"line_end":1097,"column_start":1,"column_end":37}},{"value":"/ [`drain`]: struct.HashSet.html#method.drain","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":201567,"byte_end":201614,"line_start":1098,"line_end":1098,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1053},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":201981,"byte_end":201993,"line_start":1110,"line_end":1110,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::set::Intersection","value":"Intersection {  }","parent":null,"children":[{"krate":0,"index":1057},{"krate":0,"index":1058}],"decl_id":null,"docs":" A lazy iterator producing elements in the intersection of `HashSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the intersection of `HashSet`s.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":201677,"byte_end":201750,"line_start":1103,"line_end":1103,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":201751,"byte_end":201754,"line_start":1104,"line_end":1104,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`intersection`] method on [`HashSet`].","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":201755,"byte_end":201830,"line_start":1105,"line_end":1105,"column_start":1,"column_end":76}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":201831,"byte_end":201866,"line_start":1106,"line_end":1106,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":201867,"byte_end":201870,"line_start":1107,"line_end":1107,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":201871,"byte_end":201907,"line_start":1108,"line_end":1108,"column_start":1,"column_end":37}},{"value":"/ [`intersection`]: struct.HashSet.html#method.intersection","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":201908,"byte_end":201969,"line_start":1109,"line_end":1109,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1059},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":202413,"byte_end":202423,"line_start":1124,"line_end":1124,"column_start":12,"column_end":22},"name":"Difference","qualname":"::set::Difference","value":"Difference {  }","parent":null,"children":[{"krate":0,"index":1063},{"krate":0,"index":1064}],"decl_id":null,"docs":" A lazy iterator producing elements in the difference of `HashSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the difference of `HashSet`s.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":202117,"byte_end":202188,"line_start":1117,"line_end":1117,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":202189,"byte_end":202192,"line_start":1118,"line_end":1118,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`difference`] method on [`HashSet`].","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":202193,"byte_end":202266,"line_start":1119,"line_end":1119,"column_start":1,"column_end":74}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":202267,"byte_end":202302,"line_start":1120,"line_end":1120,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":202303,"byte_end":202306,"line_start":1121,"line_end":1121,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":202307,"byte_end":202343,"line_start":1122,"line_end":1122,"column_start":1,"column_end":37}},{"value":"/ [`difference`]: struct.HashSet.html#method.difference","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":202344,"byte_end":202401,"line_start":1123,"line_end":1123,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1065},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":202883,"byte_end":202902,"line_start":1138,"line_end":1138,"column_start":12,"column_end":31},"name":"SymmetricDifference","qualname":"::set::SymmetricDifference","value":"SymmetricDifference {  }","parent":null,"children":[{"krate":0,"index":1069}],"decl_id":null,"docs":" A lazy iterator producing elements in the symmetric difference of `HashSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the symmetric difference of `HashSet`s.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":202547,"byte_end":202628,"line_start":1131,"line_end":1131,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":202629,"byte_end":202632,"line_start":1132,"line_end":1132,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`symmetric_difference`] method on","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":202633,"byte_end":202703,"line_start":1133,"line_end":1133,"column_start":1,"column_end":71}},{"value":"/ [`HashSet`]. See its documentation for more.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":202704,"byte_end":202752,"line_start":1134,"line_end":1134,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":202753,"byte_end":202756,"line_start":1135,"line_end":1135,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":202757,"byte_end":202793,"line_start":1136,"line_end":1136,"column_start":1,"column_end":37}},{"value":"/ [`symmetric_difference`]: struct.HashSet.html#method.symmetric_difference","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":202794,"byte_end":202871,"line_start":1137,"line_end":1137,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1070},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":203255,"byte_end":203260,"line_start":1149,"line_end":1149,"column_start":12,"column_end":17},"name":"Union","qualname":"::set::Union","value":"Union {  }","parent":null,"children":[{"krate":0,"index":1074}],"decl_id":null,"docs":" A lazy iterator producing elements in the union of `HashSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the union of `HashSet`s.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":202979,"byte_end":203045,"line_start":1142,"line_end":1142,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":203046,"byte_end":203049,"line_start":1143,"line_end":1143,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`union`] method on [`HashSet`].","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":203050,"byte_end":203118,"line_start":1144,"line_end":1144,"column_start":1,"column_end":69}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":203119,"byte_end":203154,"line_start":1145,"line_end":1145,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":203155,"byte_end":203158,"line_start":1146,"line_end":1146,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":203159,"byte_end":203195,"line_start":1147,"line_end":1147,"column_start":1,"column_end":37}},{"value":"/ [`union`]: struct.HashSet.html#method.union","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":203196,"byte_end":203243,"line_start":1148,"line_end":1148,"column_start":1,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":1230},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","byte_start":1845,"byte_end":1853,"line_start":75,"line_end":75,"column_start":9,"column_end":17},"name":"hash_map","qualname":"::hash_map","value":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1231}],"decl_id":null,"docs":" A hash map implemented with quadratic probing and SIMD lookup.\n","sig":null,"attributes":[{"value":"! A hash map implemented with quadratic probing and SIMD lookup.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","byte_start":1860,"byte_end":1926,"line_start":76,"line_end":76,"column_start":5,"column_end":71}}]},{"kind":"Mod","id":{"krate":0,"index":1232},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","byte_start":2400,"byte_end":2408,"line_start":92,"line_end":92,"column_start":9,"column_end":17},"name":"hash_set","qualname":"::hash_set","value":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1233}],"decl_id":null,"docs":" A hash set implemented as a `HashMap` where the value is `()`.\n","sig":null,"attributes":[{"value":"! A hash set implemented as a `HashMap` where the value is `()`.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","byte_start":2415,"byte_end":2481,"line_start":93,"line_end":93,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1302},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","byte_start":3176,"byte_end":3192,"line_start":115,"line_end":115,"column_start":5,"column_end":21},"name":"CapacityOverflow","qualname":"::CollectionAllocErr::CapacityOverflow","value":"CollectionAllocErr::CapacityOverflow","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":" Error due to the computed capacity exceeding the collection's maximum\n (usually `isize::MAX` bytes).\n","sig":null,"attributes":[{"value":"/ Error due to the computed capacity exceeding the collection's maximum","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","byte_start":3060,"byte_end":3133,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ (usually `isize::MAX` bytes).","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","byte_start":3138,"byte_end":3171,"line_start":114,"line_end":114,"column_start":5,"column_end":38}}]},{"kind":"StructVariant","id":{"krate":0,"index":1304},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","byte_start":3234,"byte_end":3242,"line_start":117,"line_end":117,"column_start":5,"column_end":13},"name":"AllocErr","qualname":"::CollectionAllocErr::AllocErr","value":"CollectionAllocErr::AllocErr { layout }","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":" Error due to the allocator.\n","sig":null,"attributes":[{"value":"/ Error due to the allocator.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","byte_start":3198,"byte_end":3229,"line_start":116,"line_end":116,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":1301},"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","byte_start":3035,"byte_end":3053,"line_start":112,"line_end":112,"column_start":10,"column_end":28},"name":"CollectionAllocErr","qualname":"::CollectionAllocErr","value":"CollectionAllocErr::{CapacityOverflow, AllocErr}","parent":null,"children":[{"krate":0,"index":1302},{"krate":0,"index":1304}],"decl_id":null,"docs":" Augments `AllocErr` with a `CapacityOverflow` variant.\n","sig":null,"attributes":[{"value":"/ Augments `AllocErr` with a `CapacityOverflow` variant.","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/lib.rs","byte_start":2928,"byte_end":2986,"line_start":110,"line_end":110,"column_start":1,"column_end":59}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/sse2.rs","byte_start":5549412,"byte_end":5549417,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/bitmask.rs","byte_start":56736,"byte_end":56743,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/bitmask.rs","byte_start":58856,"byte_end":58863,"line_start":85,"line_end":85,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/bitmask.rs","byte_start":59151,"byte_end":59162,"line_start":99,"line_end":99,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":7216,"byte_end":7227,"line_start":73,"line_end":73,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":9972,"byte_end":9980,"line_start":155,"line_end":155,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":14189,"byte_end":14195,"line_start":268,"line_end":268,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":14221,"byte_end":14227,"line_start":270,"line_end":270,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":14360,"byte_end":14366,"line_start":277,"line_end":277,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":16699,"byte_end":16707,"line_start":353,"line_end":353,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":42215,"byte_end":42223,"line_start":978,"line_end":978,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":42268,"byte_end":42276,"line_start":979,"line_end":979,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":42323,"byte_end":42331,"line_start":981,"line_end":981,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":44829,"byte_end":44837,"line_start":1050,"line_end":1050,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":45240,"byte_end":45248,"line_start":1066,"line_end":1066,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":46217,"byte_end":46229,"line_start":1102,"line_end":1102,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":48982,"byte_end":48994,"line_start":1168,"line_end":1168,"column_start":25,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":49025,"byte_end":49037,"line_start":1169,"line_end":1169,"column_start":25,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":49063,"byte_end":49075,"line_start":1171,"line_end":1171,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":49365,"byte_end":49377,"line_start":1183,"line_end":1183,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":50838,"byte_end":50850,"line_start":1221,"line_end":1221,"column_start":27,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":51035,"byte_end":51042,"line_start":1229,"line_end":1229,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":51250,"byte_end":51257,"line_start":1239,"line_end":1239,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":51942,"byte_end":51949,"line_start":1262,"line_end":1262,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":51982,"byte_end":51989,"line_start":1263,"line_end":1263,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":52186,"byte_end":52197,"line_start":1272,"line_end":1272,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":52350,"byte_end":52361,"line_start":1279,"line_end":1279,"column_start":25,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":52406,"byte_end":52417,"line_start":1280,"line_end":1280,"column_start":25,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":53033,"byte_end":53044,"line_start":1302,"line_end":1302,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":53533,"byte_end":53544,"line_start":1321,"line_end":1321,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":53884,"byte_end":53895,"line_start":1335,"line_end":1335,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":53928,"byte_end":53939,"line_start":1336,"line_end":1336,"column_start":27,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":54479,"byte_end":54487,"line_start":1353,"line_end":1353,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":54644,"byte_end":54652,"line_start":1360,"line_end":1360,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":54701,"byte_end":54709,"line_start":1361,"line_end":1361,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":54752,"byte_end":54760,"line_start":1363,"line_end":1363,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":55464,"byte_end":55472,"line_start":1386,"line_end":1386,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":55865,"byte_end":55873,"line_start":1403,"line_end":1403,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":55910,"byte_end":55918,"line_start":1404,"line_end":1404,"column_start":27,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":66705,"byte_end":66712,"line_start":207,"line_end":207,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":67760,"byte_end":67767,"line_start":241,"line_end":241,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":76501,"byte_end":76508,"line_start":558,"line_end":558,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":327},{"krate":0,"index":331},{"krate":0,"index":333},{"krate":0,"index":337},{"krate":0,"index":340},{"krate":0,"index":343},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":89430,"byte_end":89437,"line_start":961,"line_end":961,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":352},{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":92396,"byte_end":92403,"line_start":1022,"line_end":1022,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":92724,"byte_end":92731,"line_start":1038,"line_end":1038,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":92825,"byte_end":92832,"line_start":1046,"line_end":1046,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":93048,"byte_end":93055,"line_start":1057,"line_end":1057,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":93359,"byte_end":93366,"line_start":1068,"line_end":1068,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":94212,"byte_end":94216,"line_start":1100,"line_end":1100,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":94454,"byte_end":94458,"line_start":1110,"line_end":1110,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":95236,"byte_end":95243,"line_start":1132,"line_end":1132,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":95269,"byte_end":95276,"line_start":1134,"line_end":1134,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":95951,"byte_end":95959,"line_start":1156,"line_end":1156,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":96614,"byte_end":96618,"line_start":1179,"line_end":1179,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":96816,"byte_end":96820,"line_start":1188,"line_end":1188,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":97344,"byte_end":97350,"line_start":1206,"line_end":1206,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":97550,"byte_end":97556,"line_start":1215,"line_end":1215,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":98026,"byte_end":98031,"line_start":1232,"line_end":1232,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":99902,"byte_end":99921,"line_start":1290,"line_end":1290,"column_start":28,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":99995,"byte_end":100014,"line_start":1296,"line_end":1296,"column_start":28,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":100621,"byte_end":100639,"line_start":1321,"line_end":1321,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":101466,"byte_end":101484,"line_start":1350,"line_end":1350,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":102466,"byte_end":102481,"line_start":1382,"line_end":1382,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":526},{"krate":0,"index":528},{"krate":0,"index":531},{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":104000,"byte_end":104011,"line_start":1435,"line_end":1435,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":107925,"byte_end":107944,"line_start":1563,"line_end":1563,"column_start":16,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":111129,"byte_end":111146,"line_start":1658,"line_end":1658,"column_start":19,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":573},{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":113189,"byte_end":113207,"line_start":1725,"line_end":1725,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":113384,"byte_end":113395,"line_start":1731,"line_end":1731,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":113726,"byte_end":113745,"line_start":1740,"line_end":1740,"column_start":36,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":114000,"byte_end":114017,"line_start":1749,"line_end":1749,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":114182,"byte_end":114197,"line_start":1755,"line_end":1755,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":114786,"byte_end":114791,"line_start":1775,"line_end":1775,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":115348,"byte_end":115361,"line_start":1794,"line_end":1794,"column_start":31,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":115454,"byte_end":115467,"line_start":1801,"line_end":1801,"column_start":31,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":115569,"byte_end":115582,"line_start":1809,"line_end":1809,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":116066,"byte_end":116077,"line_start":1828,"line_end":1828,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":116774,"byte_end":116781,"line_start":1854,"line_end":1854,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":117560,"byte_end":117564,"line_start":1883,"line_end":1883,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":118000,"byte_end":118004,"line_start":1898,"line_end":1898,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":118158,"byte_end":118162,"line_start":1905,"line_end":1905,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":118205,"byte_end":118212,"line_start":1907,"line_end":1907,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":118660,"byte_end":118667,"line_start":1922,"line_end":1922,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":118820,"byte_end":118827,"line_start":1928,"line_end":1928,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":118868,"byte_end":118875,"line_start":1930,"line_end":1930,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":119081,"byte_end":119089,"line_start":1940,"line_end":1940,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":119420,"byte_end":119428,"line_start":1952,"line_end":1952,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":119577,"byte_end":119585,"line_start":1958,"line_end":1958,"column_start":30,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":119636,"byte_end":119644,"line_start":1960,"line_end":1960,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":119806,"byte_end":119810,"line_start":1966,"line_end":1966,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":120161,"byte_end":120165,"line_start":1978,"line_end":1978,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":120318,"byte_end":120322,"line_start":1984,"line_end":1984,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":120365,"byte_end":120371,"line_start":1986,"line_end":1986,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":120722,"byte_end":120728,"line_start":1998,"line_end":1998,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":120881,"byte_end":120887,"line_start":2004,"line_end":2004,"column_start":30,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":120930,"byte_end":120939,"line_start":2006,"line_end":2006,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":121298,"byte_end":121307,"line_start":2018,"line_end":2018,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":767}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":121460,"byte_end":121469,"line_start":2024,"line_end":2024,"column_start":30,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":121510,"byte_end":121519,"line_start":2026,"line_end":2026,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":121735,"byte_end":121740,"line_start":2036,"line_end":2036,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":122075,"byte_end":122080,"line_start":2048,"line_end":2048,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":122233,"byte_end":122238,"line_start":2054,"line_end":2054,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":122279,"byte_end":122284,"line_start":2056,"line_end":2056,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":122484,"byte_end":122489,"line_start":2066,"line_end":2066,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":802},{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":126315,"byte_end":126320,"line_start":2202,"line_end":2202,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":127111,"byte_end":127124,"line_start":2231,"line_end":2231,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":134094,"byte_end":134105,"line_start":2461,"line_end":2461,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":136355,"byte_end":136362,"line_start":2544,"line_end":2544,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":136799,"byte_end":136806,"line_start":2560,"line_end":2560,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":137593,"byte_end":137600,"line_start":2584,"line_end":2584,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/scopeguard.rs","byte_start":168468,"byte_end":168478,"line_start":20,"line_end":20,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":902},{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/scopeguard.rs","byte_start":168666,"byte_end":168676,"line_start":31,"line_end":31,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/scopeguard.rs","byte_start":168855,"byte_end":168865,"line_start":41,"line_end":41,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":173075,"byte_end":173082,"line_start":120,"line_end":120,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":935},{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":174173,"byte_end":174180,"line_start":159,"line_end":159,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176901,"byte_end":176908,"line_start":273,"line_end":273,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":958},{"krate":0,"index":960},{"krate":0,"index":962},{"krate":0,"index":964},{"krate":0,"index":966},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":974},{"krate":0,"index":976},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":983},{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":195714,"byte_end":195721,"line_start":862,"line_end":862,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":195969,"byte_end":195976,"line_start":876,"line_end":876,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":196058,"byte_end":196065,"line_start":883,"line_end":883,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":196286,"byte_end":196293,"line_start":893,"line_end":893,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":196601,"byte_end":196608,"line_start":906,"line_end":906,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":196875,"byte_end":196882,"line_start":917,"line_end":917,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1016}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":197143,"byte_end":197150,"line_start":928,"line_end":928,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":203583,"byte_end":203590,"line_start":1163,"line_end":1163,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":204465,"byte_end":204469,"line_start":1195,"line_end":1195,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":204653,"byte_end":204657,"line_start":1203,"line_end":1203,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":204986,"byte_end":204990,"line_start":1215,"line_end":1215,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":205136,"byte_end":205140,"line_start":1221,"line_end":1221,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":205187,"byte_end":205191,"line_start":1223,"line_end":1223,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1105}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":205348,"byte_end":205356,"line_start":1229,"line_end":1229,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":205685,"byte_end":205693,"line_start":1241,"line_end":1241,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1114}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":205835,"byte_end":205843,"line_start":1247,"line_end":1247,"column_start":27,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":205886,"byte_end":205894,"line_start":1249,"line_end":1249,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":206108,"byte_end":206113,"line_start":1256,"line_end":1256,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1126}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":206446,"byte_end":206451,"line_start":1268,"line_end":1268,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":206597,"byte_end":206602,"line_start":1274,"line_end":1274,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":206649,"byte_end":206654,"line_start":1276,"line_end":1276,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":206872,"byte_end":206884,"line_start":1283,"line_end":1283,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":207103,"byte_end":207115,"line_start":1293,"line_end":1293,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1144},{"krate":0,"index":1145},{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":207653,"byte_end":207665,"line_start":1317,"line_end":1317,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1150}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":207890,"byte_end":207902,"line_start":1327,"line_end":1327,"column_start":30,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":207983,"byte_end":207993,"line_start":1334,"line_end":1334,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1157}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":208210,"byte_end":208220,"line_start":1344,"line_end":1344,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":208762,"byte_end":208772,"line_start":1368,"line_end":1368,"column_start":30,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":208858,"byte_end":208868,"line_start":1375,"line_end":1375,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":209085,"byte_end":209104,"line_start":1385,"line_end":1385,"column_start":22,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":209310,"byte_end":209329,"line_start":1394,"line_end":1394,"column_start":29,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":209701,"byte_end":209720,"line_start":1411,"line_end":1411,"column_start":30,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":209806,"byte_end":209825,"line_start":1418,"line_end":1418,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1189}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":210042,"byte_end":210047,"line_start":1428,"line_end":1428,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":210240,"byte_end":210245,"line_start":1437,"line_end":1437,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":210331,"byte_end":210336,"line_start":1444,"line_end":1444,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":210560,"byte_end":210565,"line_start":1454,"line_end":1454,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1207}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/sse2.rs","byte_start":5549412,"byte_end":5549417,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/bitmask.rs","byte_start":56736,"byte_end":56743,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/bitmask.rs","byte_start":58856,"byte_end":58863,"line_start":85,"line_end":85,"column_start":23,"column_end":30},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1268},"to":{"krate":1,"index":4624}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/bitmask.rs","byte_start":59151,"byte_end":59162,"line_start":99,"line_end":99,"column_start":19,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":38},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":7216,"byte_end":7227,"line_start":73,"line_end":73,"column_start":6,"column_end":17},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":9972,"byte_end":9980,"line_start":155,"line_end":155,"column_start":19,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":62},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":14189,"byte_end":14195,"line_start":268,"line_end":268,"column_start":25,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":73},"to":{"krate":1,"index":1852}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":14221,"byte_end":14227,"line_start":270,"line_end":270,"column_start":19,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":73},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":14360,"byte_end":14366,"line_start":277,"line_end":277,"column_start":9,"column_end":15},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":73},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":16699,"byte_end":16707,"line_start":353,"line_end":353,"column_start":9,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":94},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":42215,"byte_end":42223,"line_start":978,"line_end":978,"column_start":25,"column_end":33},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":1852}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":42268,"byte_end":42276,"line_start":979,"line_end":979,"column_start":25,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":1864}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":42323,"byte_end":42331,"line_start":981,"line_end":981,"column_start":26,"column_end":34},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":44829,"byte_end":44837,"line_start":1050,"line_end":1050,"column_start":18,"column_end":26},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":45240,"byte_end":45248,"line_start":1066,"line_end":1066,"column_start":26,"column_end":34},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":4624}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":46217,"byte_end":46229,"line_start":1102,"line_end":1102,"column_start":9,"column_end":21},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":48982,"byte_end":48994,"line_start":1168,"line_end":1168,"column_start":25,"column_end":37},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":172},"to":{"krate":1,"index":1852}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":49025,"byte_end":49037,"line_start":1169,"line_end":1169,"column_start":25,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":172},"to":{"krate":1,"index":1864}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":49063,"byte_end":49075,"line_start":1171,"line_end":1171,"column_start":19,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":172},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":49365,"byte_end":49377,"line_start":1183,"line_end":1183,"column_start":22,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":172},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":50838,"byte_end":50850,"line_start":1221,"line_end":1221,"column_start":27,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":172},"to":{"krate":1,"index":4976}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":51035,"byte_end":51042,"line_start":1229,"line_end":1229,"column_start":19,"column_end":26},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":195},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":51250,"byte_end":51257,"line_start":1239,"line_end":1239,"column_start":22,"column_end":29},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":195},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":51942,"byte_end":51949,"line_start":1262,"line_end":1262,"column_start":31,"column_end":38},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":195},"to":{"krate":1,"index":4672}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":51982,"byte_end":51989,"line_start":1263,"line_end":1263,"column_start":27,"column_end":34},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":195},"to":{"krate":1,"index":4976}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":52186,"byte_end":52197,"line_start":1272,"line_end":1272,"column_start":9,"column_end":20},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":52350,"byte_end":52361,"line_start":1279,"line_end":1279,"column_start":25,"column_end":36},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":211},"to":{"krate":1,"index":1852}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":52406,"byte_end":52417,"line_start":1280,"line_end":1280,"column_start":25,"column_end":36},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":211},"to":{"krate":1,"index":1864}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":53033,"byte_end":53044,"line_start":1302,"line_end":1302,"column_start":18,"column_end":29},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":211},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":53533,"byte_end":53544,"line_start":1321,"line_end":1321,"column_start":22,"column_end":33},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":211},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":53884,"byte_end":53895,"line_start":1335,"line_end":1335,"column_start":31,"column_end":42},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":211},"to":{"krate":1,"index":4672}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":53928,"byte_end":53939,"line_start":1336,"line_end":1336,"column_start":27,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":211},"to":{"krate":1,"index":4976}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":54479,"byte_end":54487,"line_start":1353,"line_end":1353,"column_start":9,"column_end":17},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":54644,"byte_end":54652,"line_start":1360,"line_end":1360,"column_start":25,"column_end":33},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":235},"to":{"krate":1,"index":1852}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":54701,"byte_end":54709,"line_start":1361,"line_end":1361,"column_start":25,"column_end":33},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":235},"to":{"krate":1,"index":1864}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":54752,"byte_end":54760,"line_start":1363,"line_end":1363,"column_start":18,"column_end":26},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":235},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":55464,"byte_end":55472,"line_start":1386,"line_end":1386,"column_start":22,"column_end":30},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":235},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":55865,"byte_end":55873,"line_start":1403,"line_end":1403,"column_start":31,"column_end":39},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":235},"to":{"krate":1,"index":4672}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/raw/mod.rs","byte_start":55910,"byte_end":55918,"line_start":1404,"line_end":1404,"column_start":27,"column_end":35},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":235},"to":{"krate":1,"index":4976}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":66705,"byte_end":66712,"line_start":207,"line_end":207,"column_start":12,"column_end":19},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":67760,"byte_end":67767,"line_start":241,"line_end":241,"column_start":15,"column_end":22},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":76501,"byte_end":76508,"line_start":558,"line_end":558,"column_start":15,"column_end":22},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":89430,"byte_end":89437,"line_start":961,"line_end":961,"column_start":15,"column_end":22},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":92396,"byte_end":92403,"line_start":1022,"line_end":1022,"column_start":29,"column_end":36},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1282},"to":{"krate":1,"index":1588}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":92724,"byte_end":92731,"line_start":1038,"line_end":1038,"column_start":22,"column_end":29},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1282},"to":{"krate":1,"index":1593}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":92825,"byte_end":92832,"line_start":1046,"line_end":1046,"column_start":25,"column_end":32},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1282},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":93048,"byte_end":93055,"line_start":1057,"line_end":1057,"column_start":27,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1282},"to":{"krate":1,"index":1843}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":93359,"byte_end":93366,"line_start":1068,"line_end":1068,"column_start":40,"column_end":47},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1282},"to":{"krate":1,"index":2099}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":94212,"byte_end":94216,"line_start":1100,"line_end":1100,"column_start":22,"column_end":26},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":382},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":94454,"byte_end":94458,"line_start":1110,"line_end":1110,"column_start":41,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":382},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":95236,"byte_end":95243,"line_start":1132,"line_end":1132,"column_start":40,"column_end":47},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":396},"to":{"krate":1,"index":1852}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":95269,"byte_end":95276,"line_start":1134,"line_end":1134,"column_start":12,"column_end":19},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":396},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":95951,"byte_end":95959,"line_start":1156,"line_end":1156,"column_start":12,"column_end":20},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":96614,"byte_end":96618,"line_start":1179,"line_end":1179,"column_start":22,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":417},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":96816,"byte_end":96820,"line_start":1188,"line_end":1188,"column_start":34,"column_end":38},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":417},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":97344,"byte_end":97350,"line_start":1206,"line_end":1206,"column_start":22,"column_end":28},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":430},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":97550,"byte_end":97556,"line_start":1215,"line_end":1215,"column_start":34,"column_end":40},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":430},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":98026,"byte_end":98031,"line_start":1232,"line_end":1232,"column_start":12,"column_end":17},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":99902,"byte_end":99921,"line_start":1290,"line_end":1290,"column_start":28,"column_end":47},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":474},"to":{"krate":1,"index":1852}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":99995,"byte_end":100014,"line_start":1296,"line_end":1296,"column_start":28,"column_end":47},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":474},"to":{"krate":1,"index":1864}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":100621,"byte_end":100639,"line_start":1321,"line_end":1321,"column_start":19,"column_end":37},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":101466,"byte_end":101484,"line_start":1350,"line_end":1350,"column_start":19,"column_end":37},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":102466,"byte_end":102481,"line_start":1382,"line_end":1382,"column_start":19,"column_end":34},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":104000,"byte_end":104011,"line_start":1435,"line_end":1435,"column_start":19,"column_end":30},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":107925,"byte_end":107944,"line_start":1563,"line_end":1563,"column_start":16,"column_end":35},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":111129,"byte_end":111146,"line_start":1658,"line_end":1658,"column_start":19,"column_end":36},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":113189,"byte_end":113207,"line_start":1725,"line_end":1725,"column_start":25,"column_end":43},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":457},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":113384,"byte_end":113395,"line_start":1731,"line_end":1731,"column_start":39,"column_end":50},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":463},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":113726,"byte_end":113745,"line_start":1740,"line_end":1740,"column_start":36,"column_end":55},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":474},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":114000,"byte_end":114017,"line_start":1749,"line_end":1749,"column_start":25,"column_end":42},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":486},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":114182,"byte_end":114197,"line_start":1755,"line_end":1755,"column_start":25,"column_end":40},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":493},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":114786,"byte_end":114791,"line_start":1775,"line_end":1775,"column_start":39,"column_end":44},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":602},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":115348,"byte_end":115361,"line_start":1794,"line_end":1794,"column_start":31,"column_end":44},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":618},"to":{"krate":1,"index":1852}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":115454,"byte_end":115467,"line_start":1801,"line_end":1801,"column_start":31,"column_end":44},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":618},"to":{"krate":1,"index":1864}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":115569,"byte_end":115582,"line_start":1809,"line_end":1809,"column_start":39,"column_end":52},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":618},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":116066,"byte_end":116077,"line_start":1828,"line_end":1828,"column_start":32,"column_end":43},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":639},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":116774,"byte_end":116781,"line_start":1854,"line_end":1854,"column_start":32,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1282},"to":{"krate":1,"index":4624}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":117560,"byte_end":117564,"line_start":1883,"line_end":1883,"column_start":29,"column_end":33},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":382},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":118000,"byte_end":118004,"line_start":1898,"line_end":1898,"column_start":34,"column_end":38},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":382},"to":{"krate":1,"index":4672}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":118158,"byte_end":118162,"line_start":1905,"line_end":1905,"column_start":30,"column_end":34},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":382},"to":{"krate":1,"index":4976}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":118205,"byte_end":118212,"line_start":1907,"line_end":1907,"column_start":29,"column_end":36},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":396},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":118660,"byte_end":118667,"line_start":1922,"line_end":1922,"column_start":34,"column_end":41},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":396},"to":{"krate":1,"index":4672}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":118820,"byte_end":118827,"line_start":1928,"line_end":1928,"column_start":30,"column_end":37},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":396},"to":{"krate":1,"index":4976}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":118868,"byte_end":118875,"line_start":1930,"line_end":1930,"column_start":27,"column_end":34},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":396},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":119081,"byte_end":119089,"line_start":1940,"line_end":1940,"column_start":25,"column_end":33},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":119420,"byte_end":119428,"line_start":1952,"line_end":1952,"column_start":34,"column_end":42},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":4672}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":119577,"byte_end":119585,"line_start":1958,"line_end":1958,"column_start":30,"column_end":38},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":4976}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":119636,"byte_end":119644,"line_start":1960,"line_end":1960,"column_start":41,"column_end":49},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":119806,"byte_end":119810,"line_start":1966,"line_end":1966,"column_start":29,"column_end":33},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":417},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":120161,"byte_end":120165,"line_start":1978,"line_end":1978,"column_start":34,"column_end":38},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":417},"to":{"krate":1,"index":4672}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":120318,"byte_end":120322,"line_start":1984,"line_end":1984,"column_start":30,"column_end":34},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":417},"to":{"krate":1,"index":4976}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":120365,"byte_end":120371,"line_start":1986,"line_end":1986,"column_start":29,"column_end":35},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":430},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":120722,"byte_end":120728,"line_start":1998,"line_end":1998,"column_start":34,"column_end":40},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":430},"to":{"krate":1,"index":4672}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":120881,"byte_end":120887,"line_start":2004,"line_end":2004,"column_start":30,"column_end":36},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":430},"to":{"krate":1,"index":4976}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":120930,"byte_end":120939,"line_start":2006,"line_end":2006,"column_start":29,"column_end":38},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":452},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":121298,"byte_end":121307,"line_start":2018,"line_end":2018,"column_start":34,"column_end":43},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":452},"to":{"krate":1,"index":4672}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":121460,"byte_end":121469,"line_start":2024,"line_end":2024,"column_start":30,"column_end":39},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":452},"to":{"krate":1,"index":4976}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":121510,"byte_end":121519,"line_start":2026,"line_end":2026,"column_start":27,"column_end":36},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":452},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":121735,"byte_end":121740,"line_start":2036,"line_end":2036,"column_start":29,"column_end":34},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":443},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":122075,"byte_end":122080,"line_start":2048,"line_end":2048,"column_start":34,"column_end":39},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":443},"to":{"krate":1,"index":4672}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":122233,"byte_end":122238,"line_start":2054,"line_end":2054,"column_start":30,"column_end":35},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":443},"to":{"krate":1,"index":4976}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":122279,"byte_end":122284,"line_start":2056,"line_end":2056,"column_start":27,"column_end":32},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":443},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":122484,"byte_end":122489,"line_start":2066,"line_end":2066,"column_start":19,"column_end":24},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":126315,"byte_end":126320,"line_start":2202,"line_end":2202,"column_start":28,"column_end":33},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":127111,"byte_end":127124,"line_start":2231,"line_end":2231,"column_start":19,"column_end":32},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":618},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":134094,"byte_end":134105,"line_start":2461,"line_end":2461,"column_start":19,"column_end":30},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":639},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":136355,"byte_end":136362,"line_start":2544,"line_end":2544,"column_start":40,"column_end":47},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1282},"to":{"krate":1,"index":4620}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":136799,"byte_end":136806,"line_start":2560,"line_end":2560,"column_start":34,"column_end":41},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1282},"to":{"krate":1,"index":4633}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/map.rs","byte_start":137593,"byte_end":137600,"line_start":2584,"line_end":2584,"column_start":46,"column_end":53},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1282},"to":{"krate":1,"index":4633}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/scopeguard.rs","byte_start":168468,"byte_end":168478,"line_start":20,"line_end":20,"column_start":22,"column_end":32},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":891},"to":{"krate":1,"index":2023}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/scopeguard.rs","byte_start":168666,"byte_end":168676,"line_start":31,"line_end":31,"column_start":25,"column_end":35},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":891},"to":{"krate":1,"index":2034}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/scopeguard.rs","byte_start":168855,"byte_end":168865,"line_start":41,"line_end":41,"column_start":21,"column_end":31},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":891},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":173075,"byte_end":173082,"line_start":120,"line_end":120,"column_start":20,"column_end":27},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":174173,"byte_end":174180,"line_start":159,"line_end":159,"column_start":12,"column_end":19},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":176901,"byte_end":176908,"line_start":273,"line_end":273,"column_start":12,"column_end":19},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":195714,"byte_end":195721,"line_start":862,"line_end":862,"column_start":26,"column_end":33},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1293},"to":{"krate":1,"index":1588}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":195969,"byte_end":195976,"line_start":876,"line_end":876,"column_start":19,"column_end":26},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1293},"to":{"krate":1,"index":1593}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":196058,"byte_end":196065,"line_start":883,"line_end":883,"column_start":27,"column_end":34},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1293},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":196286,"byte_end":196293,"line_start":893,"line_end":893,"column_start":32,"column_end":39},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1293},"to":{"krate":1,"index":4620}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":196601,"byte_end":196608,"line_start":906,"line_end":906,"column_start":26,"column_end":33},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1293},"to":{"krate":1,"index":4633}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":196875,"byte_end":196882,"line_start":917,"line_end":917,"column_start":34,"column_end":41},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1293},"to":{"krate":1,"index":4633}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":197143,"byte_end":197150,"line_start":928,"line_end":928,"column_start":24,"column_end":31},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1293},"to":{"krate":1,"index":1843}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":203583,"byte_end":203590,"line_start":1163,"line_end":1163,"column_start":29,"column_end":36},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1293},"to":{"krate":1,"index":4624}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":204465,"byte_end":204469,"line_start":1195,"line_end":1195,"column_start":19,"column_end":23},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1042},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":204653,"byte_end":204657,"line_start":1203,"line_end":1203,"column_start":26,"column_end":30},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1042},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":204986,"byte_end":204990,"line_start":1215,"line_end":1215,"column_start":35,"column_end":39},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1042},"to":{"krate":1,"index":4672}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":205136,"byte_end":205140,"line_start":1221,"line_end":1221,"column_start":27,"column_end":31},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1042},"to":{"krate":1,"index":4976}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":205187,"byte_end":205191,"line_start":1223,"line_end":1223,"column_start":36,"column_end":40},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1042},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":205348,"byte_end":205356,"line_start":1229,"line_end":1229,"column_start":22,"column_end":30},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1046},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":205685,"byte_end":205693,"line_start":1241,"line_end":1241,"column_start":31,"column_end":39},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1046},"to":{"krate":1,"index":4672}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":205835,"byte_end":205843,"line_start":1247,"line_end":1247,"column_start":27,"column_end":35},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1046},"to":{"krate":1,"index":4976}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":205886,"byte_end":205894,"line_start":1249,"line_end":1249,"column_start":36,"column_end":44},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1046},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":206108,"byte_end":206113,"line_start":1256,"line_end":1256,"column_start":22,"column_end":27},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1049},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":206446,"byte_end":206451,"line_start":1268,"line_end":1268,"column_start":31,"column_end":36},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1049},"to":{"krate":1,"index":4672}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":206597,"byte_end":206602,"line_start":1274,"line_end":1274,"column_start":27,"column_end":32},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1049},"to":{"krate":1,"index":4976}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":206649,"byte_end":206654,"line_start":1276,"line_end":1276,"column_start":36,"column_end":41},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1049},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":206872,"byte_end":206884,"line_start":1283,"line_end":1283,"column_start":22,"column_end":34},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1053},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":207103,"byte_end":207115,"line_start":1293,"line_end":1293,"column_start":29,"column_end":41},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1053},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":207653,"byte_end":207665,"line_start":1317,"line_end":1317,"column_start":27,"column_end":39},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1053},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":207890,"byte_end":207902,"line_start":1327,"line_end":1327,"column_start":30,"column_end":42},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1053},"to":{"krate":1,"index":4976}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":207983,"byte_end":207993,"line_start":1334,"line_end":1334,"column_start":22,"column_end":32},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1059},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":208210,"byte_end":208220,"line_start":1344,"line_end":1344,"column_start":29,"column_end":39},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1059},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":208762,"byte_end":208772,"line_start":1368,"line_end":1368,"column_start":30,"column_end":40},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1059},"to":{"krate":1,"index":4976}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":208858,"byte_end":208868,"line_start":1375,"line_end":1375,"column_start":27,"column_end":37},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1059},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":209085,"byte_end":209104,"line_start":1385,"line_end":1385,"column_start":22,"column_end":41},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1065},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":209310,"byte_end":209329,"line_start":1394,"line_end":1394,"column_start":29,"column_end":48},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1065},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":209701,"byte_end":209720,"line_start":1411,"line_end":1411,"column_start":30,"column_end":49},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1065},"to":{"krate":1,"index":4976}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":209806,"byte_end":209825,"line_start":1418,"line_end":1418,"column_start":27,"column_end":46},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1065},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":210042,"byte_end":210047,"line_start":1428,"line_end":1428,"column_start":22,"column_end":27},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1070},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":210240,"byte_end":210245,"line_start":1437,"line_end":1437,"column_start":30,"column_end":35},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1070},"to":{"krate":1,"index":4976}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":210331,"byte_end":210336,"line_start":1444,"line_end":1444,"column_start":27,"column_end":32},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1070},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/Users/william/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.3/src/set.rs","byte_start":210560,"byte_end":210565,"line_start":1454,"line_end":1454,"column_start":29,"column_end":34},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1070},"to":{"krate":1,"index":4716}}]}